{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "determine_status_0800192c",
                "PTR_DAT_08001958": "result_pointer",
                "PTR_DAT_08001954": "data_pointer"
            },
            "code": "void determine_status_0800192c(void)\n{\n  bool is_bit_set = PTR_DAT_08001954[0x28] & 8;\n  if (!is_bit_set) {\n    *(int *)PTR_DAT_08001958 = 0;\n  }\n  else {\n    *(int *)PTR_DAT_08001958 = 1;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "determine_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "set_param_value_08006950",
                "*(uint *)(DAT_08006994 + 0xc)": "param_ptr",
                "param_1": "param_value",
                "uint": "uint",
                "masked_value": "masked_value",
                "shifted_value": "shifted_value"
            },
            "code": "void set_param_value_08006950(uint param_value) {\n  uint* *(uint *)(DAT_08006994 + 0xc) = (uint*)(DAT_08006994 + 0xc);\n  uint masked_value = **(uint *)(DAT_08006994 + 0xc) & 0xf8ff;\n  uint shifted_value = (param_value & 7) << 8;\n  **(uint *)(DAT_08006994 + 0xc) = masked_value | shifted_value | 0x5fa0000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": true,
            "current_name": "set_param_value_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "calculate_08008ba0",
                "iVar2": "shift_value",
                "uVar1": "quotient",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar3": "temp"
            },
            "code": "uint calculate_08008ba0(uint numerator, uint denominator)\n{\n  uint quotient;\n  int shift_value;\n  uint temp;\n  \n  shift_value = denominator * 2 + 0x200000;\n  if (denominator * 2 < 0xffe00000) {\n    if (-1 < shift_value) {\n      return 0;\n    }\n    quotient = shift_value >> 0x15;\n    temp = -quotient - 0x3e1;\n    if (quotient < 0xfffffc20 && temp != 0) {\n      quotient = (denominator << 0xb | 0x80000000 | numerator >> 0x15) >> (temp & 0xff);\n      if ((denominator & 0x80000000) != 0) {\n        quotient = -quotient;\n      }\n      return quotient;\n    }\n  }\n  else if ((numerator | denominator << 0xc) != 0) {\n    return 0;\n  }\n  denominator = denominator & 0x80000000;\n  if (denominator == 0) {\n    denominator = 0x7fffffff;\n  }\n  return denominator;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_080005b4",
                "FUN_0800a348",
                "FUN_08002c18",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_0800a5a0",
                "FUN_080095b8",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "calculate_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": true,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "uVar1": "result",
                "PTR_DAT_080059b0": "instance_pointer",
                "FUN_08005984": "initialize_function_08005984",
                "param_1": "input_param"
            },
            "code": "int initialize_function_08005984(int input_param){\n    int result;\n    if (*(int *)PTR_DAT_080059b0 == 0) {\n        result = create_instance(1, input_param, 0);\n    }\n    else {\n        result = 0;\n    }\n    return result;\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "initialize_function_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "DAT_08007a64": "data_flags_ptr",
                "param_1": "data_value",
                "FUN_08007a10": "update_data_flags_08007a10"
            },
            "code": "void update_data_flags_08007a10(int data_value) {\n  uint* DAT_08007a64 = (uint*)(DAT_08007a64 + 0x40);\n  if (data_value == 0x40000000) {\n    *DAT_08007a64 |= 1;\n  }\n  else if (data_value == DAT_08007a68) {\n    *DAT_08007a64 |= 2;\n  }\n  else if (data_value == DAT_08007a6c) {\n    *DAT_08007a64 |= 4;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007ad0",
                "FUN_08007d08"
            ],
            "imported": true,
            "current_name": "update_data_flags_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "uVar1": "shift_distance",
                "iVar4": "leading_zeroes",
                "param_1": "input",
                "FUN_0800856c": "calculate_0800856c",
                "uVar3": "shift_distance_2",
                "uVar2": "input_copy",
                "bVar9": "overflow",
                "uVar5": "shift_amount",
                "uVar6": "sign_bit",
                "in_r12": "unused",
                "bVar8": "is_zero",
                "bVar7": "is_negative"
            },
            "code": "ulonglong calculate_0800856c(uint number)\n{\n  uint mask = 0x80000000;\n  for (int i = 0; i < 32; i++) {\n    if ((number & mask) != 0) {\n      return i;\n    }\n    mask >>= 1;\n  }\n  return 32;\n}\n\nulonglong calculate_0800856c(uint input)\n{\n  uint sign_bit = input & 0x80000000;\n  if (input == 0) {\n    return 0;\n  }\n  uint absolute_value = (sign_bit < 0) ? -input : input;\n  uint shift_amount = calculate_0800856c(absolute_value) + 0x15;\n  if (shift_amount < 0x20) {\n    uint shift_distance = (shift_amount < 0xc) ? shift_amount + 1 : shift_amount;\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_result = shifted_input >> (0xc - shift_distance & 0xff);\n    return CONCAT44(shifted_input | (0x432 - shift_amount) * 0x100000 | sign_bit, shifted_result);\n  }\n  else {\n    uint shift_distance = 0x20 - shift_amount;\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_result = shifted_input >> (shift_distance & 0xff);\n    if (shift_distance > 0x1e) {\n      return CONCAT44(input, shifted_input >> (shift_distance - 0x1f & 0xff)) & 0x80000000ffffffff;\n    }\n    else {\n      int shift_amount_2 = shift_distance - 0x13;\n      if (shift_amount_2 == 0 || (shift_amount_2 < 0) != (shift_amount_2 + shift_amount < 0x20)) {\n        shift_distance++;\n        return CONCAT44(sign_bit | shifted_input >> (shift_distance & 0xff), input >> (0x20 - (0xc - shift_amount_2) & 0xff) | shifted_input << (0xc - shift_amount_2 & 0xff));\n      }\n      else {\n        return CONCAT44(input, input >> (0x20 - (0xcU - shift_amount_2) & 0xff) | shifted_input << (0xcU - shift_amount_2 & 0xff)) & 0x80000000ffffffff;\n      }\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08002c18",
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": true,
            "current_name": "calculate_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "param_1": "input_value",
                "FUN_08008a74": "initialize_program",
                "FUN_08008b00": "run_program_08008b00"
            },
            "code": "undefined4 run_program_08008b00(undefined4 input_value)\n{\n  initialize_program();\n  return input_value;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b10",
                "FUN_08008b24",
                "FUN_08008af0"
            ],
            "imported": true,
            "current_name": "run_program_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "set_to_three_if_second_element_is_two_0800585c",
                "PTR_DAT_08005878": "PTR_DATA"
            },
            "code": "void set_to_three_if_second_element_is_two_0800585c(void)\n{\n  if (PTR_DAT_08005878[1] == '\\x02') {\n    PTR_DAT_08005878[1] = 3;\n    FUN_08005790();\n  }\n  return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_080024c4",
                "FUN_08003a74",
                "FUN_08001e98"
            ],
            "imported": true,
            "current_name": "set_to_three_if_second_element_is_two_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "trigger_system_interrupt_0800597c"
            },
            "code": "void trigger_system_interrupt_0800597c(void)\n{\n  system_interrupt(0x3f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": true,
            "current_name": "trigger_system_interrupt_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "convert_to_double_08009798",
                "lVar3": "result",
                "uVar1": "exponent_offset",
                "mantissa_mask": "mantissa_mask",
                "param_1": "exponent",
                "param_2": "mantissa",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar2": "exponent_shifted"
            },
            "code": "long long convert_to_double_08009798(uint exponent, uint mantissa, undefined4 param_3, undefined4 param_4) {\n  uint exponent_shifted = (mantissa << 1) >> 0x15;\n  uint exponent_offset = exponent_shifted - 0x3ff;\n  if ((int)exponent_offset < 0x14) {\n    if ((int)exponent_offset < 0) {\n      return ((unsigned long long)mantissa & 0x80000000) << 0x20;\n    }\n    long long mantissa_masked = (unsigned long long)(mantissa & ~(mantissa_mask >> (exponent_offset & 0xff))) << 0x20;\n    return mantissa_masked;\n  }\n  else {\n    if ((int)exponent_offset < 0x34) {\n      return CONCAT44(mantissa, exponent & ~(0xffffffffU >> (exponent_shifted - 0x413 & 0xff)));\n    }\n    if (exponent_offset != 0x400) {\n      return CONCAT44(mantissa, exponent);\n    }\n    long long result = FUNC_080082d4(exponent, mantissa, exponent, mantissa, param_4);\n    return result;\n  }\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "convert_to_double_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002978",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "add_value_to_array_08007930",
                "iVar5": "array_size",
                "puVar1": "array",
                "uVar3": "current_array_state",
                "uVar2": "new_value",
                "uVar4": "previous_array_state"
            },
            "code": "void add_value_to_array_08007930() {\n  uint32_t *array = PTR_DAT_080079b8;\n  if (*(int *)PTR_DAT_080079bc != 0) {\n    int array_size = *(int *)(PTR_DAT_080079b8 + 0x14);\n    uint32_t new_value = get_new_value();\n    *(array + array_size * 4) = new_value;\n    int next_index = (*(int *)(array + 0x14) == 3) ? 0 : *(int *)(array + 0x14) + 1;\n    *(int *)(array + 0x14) = next_index;\n    uint32_t current_array_state = get_array_state();\n    if (current_array_state != *(uint *)(array + 0x10)) {\n      uint32_t previous_array_state = *(uint *)(array + 0x10);\n      uint32_t diff = (~previous_array_state & current_array_state);\n      if (diff != 0) {\n        set_bits_in_array(diff);\n      }\n      diff = (~current_array_state & previous_array_state);\n      if (diff != 0) {\n        clear_bits_in_array(diff);\n      }\n      *(uint *)(array + 0x10) = current_array_state;\n    }\n  }\n}",
            "called": [
                "FUN_08007884",
                "FUN_080074c8",
                "FUN_08007520",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": true,
            "current_name": "add_value_to_array_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "check_and_return_function_08000188",
                "param_1": "input_param",
                "*PTR_DAT_080001a0": "*flag_pointer",
                "PTR_FUN_080001a8": "function_pointer",
                "DAT_080001a4": "some_data"
            },
            "code": "undefined * check_and_return_function_08000188(undefined *input_param) {\\n  if (*PTR_DAT_080001a0 == \"\\0\") {\\n    if (DAT_080001a4 != 0) {\\n      input_param = PTR_FUN_080001a8;\\n    }\\n    *PTR_DAT_080001a0 = 1;\\n  }\\n  return input_param;\\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": true,
            "current_name": "check_and_return_function_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08004940",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800a5a0",
                "FUN_08003004",
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "lVar6": "final_result",
                "bVar4": "carry_flag",
                "DAT_0800940c": "some_data_4",
                "iVar1": "result_check",
                "param_1": "input1",
                "FUN_08009318": "calculate_result_08009318",
                "DAT_08009408": "some_data_3",
                "DAT_08009404": "some_data_2",
                "param_2": "input2",
                "DAT_08009400": "some_data_1",
                "uVar3": "shift_amount",
                "uVar2": "mask",
                "uVar5": "result"
            },
            "code": "longlong calculate_result_08009318(uint input1, uint input2, undefined4 param_3, undefined4 param_4)\n{\n  int iVar1;\n  uint shift_amount;\n  uint mask;\n  bool carry_flag;\n  undefined8 result;\n  longlong final_result;\n  shift_amount = (input2 << 1) >> 0x15;\n  mask = shift_amount - 0x3ff;\n  if ((int)mask < 0x14) {\n    if ((int)mask < 0) {\n      result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      iVar1 = FUN_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0);\n      final_result = CONCAT44(input2, input1);\n      if (iVar1 != 0) {\n        if ((int)input2 < 0) {\n          final_result = -0x8000000000000000;\n        }\n        else {\n          input1 = input1 | input2;\n          final_result = CONCAT44(input1, input1);\n          if (input1 != 0) {\n            final_result = (ulonglong)DAT_0800940c << 0x20;\n          }\n        }\n      }\n    }\n    else {\n      mask = DAT_08009408 >> (mask & 0xff);\n      final_result = CONCAT44(input2, input1);\n      if ((input2 & mask | input1) != 0) {\n        result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n        iVar1 = FUN_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0);\n        final_result = CONCAT44(input2, input1);\n        if (iVar1 != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (mask & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)mask < 0x34) {\n    mask = 0xffffffff >> (shift_amount - 0x413 & 0xff);\n    final_result = CONCAT44(input2, input1);\n    if ((mask & input1) != 0) {\n      result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param_4);\n      iVar1 = FUN_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0);\n      final_result = CONCAT44(input2, input1);\n      if (iVar1 != 0) {\n        if (0 < (int)input2) {\n          if (mask == 0x400) {\n            input2 = input2 + 1;\n          }\n          else {\n            mask = 1 << (0x34 - shift_amount & 0xff);\n            carry_flag = CARRY4(mask, input1);\n            input1 = mask + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2, input1 & ~mask);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2, input1);\n    if (mask == 0x400) {\n      final_result = FUNC_080082d4();\n    }\n  }\n  return final_result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "0xfffffaaf": "mask",
                "*(uint *)(DAT_080018f8 + 0x14)": "*value_ptr",
                "param_1": "new_value",
                "FUN_080018cc": "update_value_080018cc"
            },
            "code": "void update_value_080018cc(uint new_value)\n{\n  uint* value_ptr = (uint*)(DAT_080018f8 + 0x14);\n  uint mask = 0xfffffaaf;\n  *(uint *)(DAT_080018f8 + 0x14) = (new_value | (*(uint *)(DAT_080018f8 + 0x14) & mask));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": true,
            "current_name": "update_value_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "param_1": "bit_index",
                "FUN_080079e0": "set_bit_in_array_080079e0",
                "DAT_08007a0c": "array_start_address"
            },
            "code": "void set_bit_in_array_080079e0(uint8_t bit_index) {\n    uint32_t* array_ptr = (uint32_t*)(DAT_08007a0c + (bit_index >> 5) * 4);\n    uint8_t bit_offset = bit_index & 0x1f;\n    uint32_t bit_mask = 1 << bit_offset;\n    *array_ptr = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "DAT_08006a88": "array_start",
                "param_1": "bit_position",
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "PTR_DAT_08006a88": "array"
            },
            "code": "void set_bit_in_array_08006a58(byte bit_position) {\n    int* PTR_DAT_08006a88 = (int*)(DAT_08006a88 + (((uint)(int)(char)bit_position >> 5) + 0x40) * 4);\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *PTR_DAT_08006a88 = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "PTR_DAT_08005a94": "pointer_to_data",
                "FUN_08005a84": "get_value_from_pointer_08005a84"
            },
            "code": "get_value_from_pointer_08005a84() { return *(undefined4 *)PTR_DAT_08005a94; }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_08005cec",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08007756"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "in_ZR": "character",
                "FUN_08008b10": "is_character_null_08008b10",
                "FUN_08008b00": "execute_function"
            },
            "code": "bool is_character_null_08008b10(void)\\n{\\n  char character;\\n  execute_function();\\n  return character != \"\\0\";\\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": true,
            "current_name": "is_character_null_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = FUN_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = FUN_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_0800192c",
                "FUN_08009654",
                "FUN_08009214",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "bVar4": "is_result_zero",
                "uVar1": "sign_and_exponent",
                "param_1": "float_bits",
                "param_2": "shift_amount",
                "FUN_08008c30": "calculate_float_08008c30",
                "uVar3": "shifted_bits_plus_1500_million",
                "uVar2": "shifted_bits",
                "bVar5": "is_shifted_less_than_1875_million",
                "in_r12": "shifted_bits_plus_383_million"
            },
            "code": "uint calculate_float_08008c30(uint float_bits, uint shift_amount)\n{\n  uint shifted_bits = shift_amount * 2;\n  bool is_shifted_less_than_1875_million = shifted_bits < 0x70000000;\n  uint shifted_bits_plus_1500_million = shifted_bits + 0x90000000;\n  uint result = shifted_bits_plus_1500_million;\n  if (!is_shifted_less_than_1875_million) {\n    uint shifted_bits_plus_383_million = shifted_bits + 0x8fe00000;\n    result = shifted_bits_plus_383_million;\n  }\n  bool is_result_zero = result == 0;\n  if (!is_shifted_less_than_1875_million && shifted_bits_plus_1500_million >= 0x200000) {\n    is_result_zero = shifted_bits_plus_383_million == 0x1fc00000;\n  }\n  if (((is_shifted_less_than_1875_million || shifted_bits_plus_1500_million < 0x200000) || 0x1fc00000 < shifted_bits_plus_383_million) || is_result_zero) {\n    if ((shift_amount & 0x40000000) != 0) {\n      if (((int)shifted_bits >> 0x15 == -1) && ((float_bits | shift_amount << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return shift_amount & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shifted_bits + 0x92e00000) < 0 != SCARRY4(shifted_bits_plus_1500_million,0x2e00000)) {\n      return shift_amount & 0x80000000;\n    }\n    shifted_bits = 0x18 - (shifted_bits + 0x92e00000 >> 0x15);\n    uint shifted_float_bits = float_bits >> (shifted_bits & 0xff);\n    if (float_bits << (0x20 - shifted_bits & 0xff) != 0) {\n      shifted_float_bits = shifted_float_bits | 1;\n    }\n    uint shifted_fraction_bits = shift_amount & 0x1fffff | 0x100000;\n    float_bits = shifted_float_bits | shifted_fraction_bits << (0x20 - shifted_bits & 0xff);\n    shifted_fraction_bits = (shifted_fraction_bits >> (shifted_bits & 0xff)) << 1;\n  }\n  uint sign_and_exponent = (shift_amount & 0x80000000 | float_bits >> 0x1d) + shifted_fraction_bits * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    sign_and_exponent = sign_and_exponent & 0xfffffffe;\n  }\n  return sign_and_exponent;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080046d0",
                "FUN_08002638",
                "FUN_080044e8",
                "FUN_08001f00",
                "FUN_08002978",
                "FUN_0800056c",
                "FUN_08003004",
                "FUN_08004940"
            ],
            "imported": true,
            "current_name": "calculate_float_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009654",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08009798",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800a5a0",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_08009318",
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "param_1": "new_value",
                "_DAT_40000024": "max_value_ptr",
                "FUN_08007bf0": "update_data_08007bf0",
                "_DAT_4000002c": "data_ptr"
            },
            "code": "void update_data_08007bf0(uint new_value)\n{\n  const uint MAX_VALUE = *(uint*)0x40000024;\n  *(uint*)0x4000002c = new_value;\n  if (new_value <= MAX_VALUE) {\n    *(uint*)0x40000024 = new_value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": true,
            "current_name": "update_data_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "is_shifted_input_zero": "is_shifted_input_zero",
                "iVar6": "iVar6",
                "param_1": "input_value",
                "mask_2": "mask_2",
                "mask_1": "mask_1",
                "uVar3": "mask_result",
                "uVar2": "input_value_shifted",
                "uVar5": "shifted_input",
                "uVar4": "uVar4",
                "shifted_input": "shifted_input",
                "uVar7": "leading_zeroes_minus_0xb",
                "uVar6": "leading_zeroes_minus_0x2b",
                "in_r12": "in_r12",
                "uVar8": "uVar8",
                "bVar10": "is_uVar4_negative",
                "uVar1": "mask_1",
                "shift_1": "shift_1",
                "shift_2": "shift_2",
                "shift_3": "shift_3",
                "shift_4": "shift_4",
                "shifted_uVar5": "shifted_uVar5",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_08008590": "calculate_hash_08008590",
                "bVar9": "is_uVar6_negative",
                "is_param_4_zero": "is_param_4_zero",
                "bVar8": "is_uVar6_zero"
            },
            "code": "ulonglong calculate_hash_08008590(uint input_value, undefined4 param_2, undefined4 param_3, uint param_4)\n{\n  uint mask_1 = 0x80000000;\n  uint mask_2 = 0xff000000;\n  uint shift_1 = 0x1f;\n  uint shift_2 = 0x1d;\n  uint shift_3 = 0xc;\n  uint shift_4 = 0x20;\n  \n  uint shifted_input = input_value << 1;\n  bool is_shifted_input_zero = shifted_input == 0;\n  uint uVar4 = (uint)((int)shifted_input >> 3) >> 1;\n  uint mask_result = mask_1 | uVar4;\n  input_value = input_value << shift_2;\n  if (!is_shifted_input_zero) {\n    bool is_param_4_zero = (shifted_input & mask_2) == 0;\n    if (!is_param_4_zero) {\n      is_param_4_zero = (shifted_input & mask_2) == mask_2;\n    }\n    if (!is_param_4_zero) {\n      return CONCAT44(mask_result, input_value) ^ 0x3800000000000000;\n    }\n    if ((shifted_input & 0xffffff) == 0) {\n      return CONCAT44(mask_result, input_value);\n    }\n    if ((shifted_input & mask_2) == mask_2) {\n      return CONCAT44(mask_result, input_value) | 0x8000000000000;\n    }\n    uint uVar2 = input_value;\n    uint uVar5 = uVar4;\n    if (uVar4 == 0) {\n      uVar2 = 0;\n      uVar5 = input_value;\n    }\n    int leading_zeroes = count_leading_zeroes(uVar5);\n    if (uVar4 == 0) {\n      leading_zeroes = leading_zeroes + 0x20;\n    }\n    uint uVar7 = leading_zeroes - 0xb;\n    bool is_uVar4_negative = SBORROW4(uVar7,0x20);\n    uint uVar6 = leading_zeroes - 0x2b;\n    bool is_uVar6_negative = (int)uVar6 < 0;\n    bool is_uVar6_zero = uVar6 == 0;\n    if ((int)uVar7 < 0x20) {\n      is_uVar4_negative = SCARRY4(uVar6,0xc);\n      leading_zeroes = leading_zeroes + -0x1f;\n      is_uVar6_negative = leading_zeroes < 0;\n      is_uVar6_zero = leading_zeroes == 0;\n      uVar7 = uVar7;\n      if (!is_uVar6_zero && is_uVar6_negative == is_uVar4_negative) {\n        uint shifted_uVar5 = uVar5 << (uVar7 & 0xff);\n        uVar5 = uVar5 >> (shift_3 - leading_zeroes & 0xff);\n        goto LAB_08008458;\n      }\n    }\n    if (is_uVar6_zero || is_uVar6_negative != is_uVar4_negative) {\n      uint in_r12 = 0x20 - uVar7;\n    }\n    uint shifted_uVar5 = uVar5 << (uVar7 & 0xff);\n    if (is_uVar6_zero || is_uVar6_negative != is_uVar4_negative) {\n      shifted_uVar5 = shifted_uVar5 | uVar2 >> (in_r12 & 0xff);\n    }\n    if (is_uVar6_zero || is_uVar6_negative != is_uVar4_negative) {\n      uVar2 = uVar2 << (uVar7 & 0xff);\n    }\nLAB_08008458:\n    if ((int)uVar7 < 0x381) {\n      return CONCAT44(shifted_uVar5 + (0x380 - uVar7) * 0x100000 | mask_1, uVar2);\n    }\n    uint uVar8 = ~(0x380 - uVar7);\n    if (0x1e < (int)uVar8) {\n      return CONCAT44(mask_result, shifted_uVar5 >> (uVar8 - 0x1f & 0xff)) & 0x80000000ffffffff;\n    }\n    int iVar6 = uVar8 - 0x13;\n    if (iVar6 == 0 || iVar6 < 0 != SCARRY4(uVar8 - 0x1f,0xc)) {\n      uVar8 = uVar8 + 1;\n      return CONCAT44(mask_1 | shifted_uVar5 >> (uVar8 & 0xff), uVar2 >> (uVar8 & 0xff) | shifted_uVar5 << (0x20 - uVar8 & 0xff));\n    }\n    return CONCAT44(mask_result, uVar2 >> (0x20 - (0xcU - iVar6) & 0xff) | shifted_uVar5 << (0xcU - iVar6 & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080005b4",
                "FUN_08002c18",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002978",
                "FUN_0800056c",
                "FUN_08004940",
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080044e8",
                "FUN_08002408",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "calculate_hash_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "_DAT_40000018": "data_register_5",
                "_DAT_40000008": "data_register_2",
                "_DAT_40000038": "data_register_12",
                "_DAT_40000028": "data_register_9",
                "_DAT_40000010": "data_register_4",
                "_DAT_40000000": "data_register_0",
                "_DAT_40000020": "data_register_7",
                "_DAT_40000004": "data_register_1",
                "_DAT_40000048": "data_register_15",
                "_DAT_40000034": "data_register_11",
                "_DAT_40000024": "data_register_8",
                "PTR_DAT_08007b68": "data_pointer_1",
                "DAT_08007b6c": "data_1",
                "_DAT_40000040": "data_register_14",
                "_DAT_4000004c": "data_register_16",
                "_DAT_4000003c": "data_register_13",
                "FUN_08007ad0": "initialize_registers_08007ad0",
                "_DAT_4000000c": "data_register_3",
                "_DAT_4000002c": "data_register_10",
                "_DAT_4000001c": "data_register_6"
            },
            "code": "void initialize_registers_08007ad0(void)\n{\n  set_register(0x40000000);\n  uint32_t* data_registers[] = {\n    &_DAT_40000000,\n    &_DAT_40000004,\n    &_DAT_40000008,\n    &_DAT_4000000c,\n    &_DAT_40000010,\n    &_DAT_40000018,\n    &_DAT_4000001c,\n    &_DAT_40000020,\n    &_DAT_40000024,\n    &_DAT_40000028,\n    &_DAT_4000002c,\n    &_DAT_40000034,\n    &_DAT_40000038,\n    &_DAT_4000003c,\n    &_DAT_40000040,\n    &_DAT_40000048,\n    &_DAT_4000004c\n  };\n  uint32_t data_registers_count = sizeof(data_registers) / sizeof(data_registers[0]);\n  for (uint32_t i = 0; i < data_registers_count; ++i) {\n    *data_registers[i] = 0;\n  }\n  *data_registers[9] = (uint32_t)((uint64_t)DAT_08007b6c * (uint64_t)*(uint32_t *)PTR_DAT_08007b68 >> 0x38) - 1;\n  set_register(0x40000000, 0, 0);\n}\n",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": true,
            "current_name": "initialize_registers_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = FUN_08008590(local_58);\n      uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = FUN_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = FUNC_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = FUNC_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = FUNC_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUNC_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = FUNC_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUNC_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUNC_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = FUN_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = FUN_08008590(local_34);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = FUN_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_080098d0",
                "FUN_08000220",
                "FUN_08008894",
                "FUN_0800056c",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08002fd4",
                "FUN_08000478",
                "FUN_08001e98",
                "FUN_08008cdc",
                "FUN_080025e8",
                "FUN_08004bf4",
                "FUN_08002408",
                "FUN_0800525c",
                "FUN_0800981c",
                "FUN_0800184c",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_08001f00",
                "FUN_08008590",
                "FUN_0800b430",
                "FUN_08009214",
                "FUN_08004d7c",
                "FUN_08008bf0",
                "FUN_0800923c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_08003980": "initialize_first_module",
                "FUN_08004228": "initialize_second_module",
                "FUN_080039a0": "initialize_program_080039a0"
            },
            "code": "void initialize_program_080039a0(void)\n{\n  initialize_first_module();\n  initialize_second_module();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "initialize_program_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concatenate_integers_to_64_bit_value_08009204",
                "param_1": "first_integer",
                "FUN_0800919c": "call_function_to_initialize",
                "param_2": "second_integer"
            },
            "code": "undefined8 concatenate_integers_to_64_bit_value_08009204(undefined4 first_integer, undefined4 second_integer)\n{\n  call_function_to_initialize();\n  return CONCAT44(second_integer, first_integer);\n}",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08009228"
            ],
            "imported": true,
            "current_name": "concatenate_integers_to_64_bit_value_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "set_flag_if_param_not_null_080029d8",
                "iVar1": "result",
                "param_1": "flag",
                "param_2": "param1",
                "param_3": "param2",
                "uVar3": "param1_copy",
                "uVar2": "new_param",
                "PTR_DAT_08002a90": "data_ptr"
            },
            "code": "void set_flag_if_param_not_null_080029d8(int flag, int param1, int param2)\n{\n  int result = 0;\n  if (param1 != 0 && param2 != 0)\n  {\n    result = check_param(param1);\n    if (result == 0)\n    {\n      if (*(char *)(param1 + 0x25) == 0)\n      {\n        result = check_param(param2);\n        if (result != 0)\n        {\n          uint key = *(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000;\n          int new_param = transform_param(key, *(undefined4 *)(param2 + 0x18), *(undefined4 *)(param1 + 0x20));\n          result = check_param(new_param);\n          if (result == 0)\n          {\n            *(undefined4 *)(param1 + 0x18) = new_param;\n          }\n          else\n          {\n            *(undefined4 *)(param1 + 0x18) = *(undefined4 *)(param1 + 0x1c);\n          }\n        }\n        else\n        {\n          *(undefined4 *)(param1 + 0x18) = *(undefined4 *)(param1 + 0x1c);\n        }\n      }\n      *(undefined *)(param1 + 0x24) = 1;\n    }\n  }\n}\n",
            "called": [
                "FUN_08009214",
                "FUN_08002978",
                "FUN_08009264",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": true,
            "current_name": "set_flag_if_param_not_null_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "_DAT_40000038": "global_variable",
                "param_1": "value"
            },
            "code": "void set_global_variable_08007c5e(void* value) {\n  _DAT_40000038 = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": true,
            "current_name": "set_global_variable_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_080052ac": "print_value",
                "FUN_08005760": "print_value_at_address_08005760",
                "PTR_DAT_08005774": "memory_address"
            },
            "code": "void print_value_at_address_08005760(void)\n{\n  uint16_t *address_ptr = (uint16_t *)(PTR_DAT_08005774 + 0x18);\n  uint16_t value = *address_ptr;\n  print_value(value);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": true,
            "current_name": "print_value_at_address_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "in_CY": "current_char",
                "FUN_08008b24": "is_end_of_string_08008b24",
                "FUN_08008b00": "execute_function"
            },
            "code": "bool is_end_of_string_08008b24(char current_char)\n{\n  execute_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "imported": true,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_if_condition_met_0800587c",
                "PTR_DAT_0800589c": "data_array"
            },
            "code": "void update_data_if_condition_met_0800587c(void)\n{\n  if (PTR_DAT_0800589c[1] == 3) {\n    PTR_DAT_0800589c[1] = 4;\n    PTR_DAT_0800589c[16] = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": true,
            "current_name": "update_data_if_condition_met_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "LAB_08008838": "bit_not_set",
                "bVar4": "is_zero",
                "uVar1": "bit",
                "LAB_08008874": "bit_set",
                "param_1": "first_param",
                "unaff_r4": "is_zero",
                "param_2": "second_param",
                "param_3": "third_param",
                "FUN_08008a02": "calculate_value_08008a02",
                "param_4": "fourth_param",
                "uVar3": "result_second",
                "uVar2": "mask_shifted",
                "in_r12": "mask"
            },
            "code": "ulonglong calculate_value_08008a02(uint first_param, uint second_param, uint third_param, uint fourth_param) {\n  uint mask = 0x100000;\n  uint bit;\n  uint result_second = second_param;\n  uint result_first = first_param;\n  uint temp;\n  bool is_zero;\n  bool is_equal;\n  bool is_second_masked;\n  is_equal = fourth_param == third_param || (first_param | (second_param << 0xc)) == 0;\n  is_second_masked = (fourth_param >> 0x14) == fourth_param;\n  if (is_equal) {\n    if (!is_second_masked) {\n      return ((result_second ^ fourth_param) & 0x80000000 | 0x7ff00000) << 0x20;\n    }\n  }\n  else if ((third_param | (fourth_param << 0xc)) == 0) {\n    if (is_second_masked) {\n      return ((result_second ^ fourth_param) & 0x80000000) << 0x20;\n    }\n  }\n  else {\n    if (first_param | (second_param << 1) != 0 && third_param | (fourth_param << 1) != 0) {\n      if (fourth_param == 0) {\n        bit = second_param & 0x80000000;\n        do {\n          temp = result_first & 0x80000000;\n          result_first = result_first << 1;\n          result_second = result_second * 2 + (uint)(temp != 0);\n        } while ((result_second & mask) == 0);\n        result_second |= bit;\n        if (!is_second_masked) {\n          return CONCAT44(result_second, result_first);\n        }\n      }\n      do {\n        bit = third_param & 0x80000000;\n        third_param = third_param << 1;\n        fourth_param = fourth_param * 2 + (uint)(bit != 0);\n      } while ((fourth_param & mask) == 0);\n      return CONCAT44(result_second, result_first);\n    }\n    if (first_param | (second_param << 1) != 0) {\n      goto LAB_08008874;\n    }\n    if (third_param | (fourth_param << 1) != 0) {\n      goto LAB_08008838;\n    }\n  }\n  return CONCAT44(result_second, result_first) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": true,
            "current_name": "calculate_value_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "local_c": "currentChar",
                "param_1": "stringToConvert",
                "FUN_0800369c": "convertStringToUppercase_0800369c",
                "FUN_08008250": "convertCharToUppercase"
            },
            "code": "void convertStringToUppercase_0800369c(char *stringToConvert)\n{\n  char *currentChar;\n  currentChar = stringToConvert;\n  while (*currentChar != '\\0') {\n    convertCharToUppercase(*currentChar);\n    currentChar++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": true,
            "current_name": "convertStringToUppercase_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "iVar1": "current_sum",
                "param_1": "target_sum",
                "FUN_08005a84": "get_current_sum",
                "FUN_08005a98": "wait_until_sum_exceeds_08005a98",
                "uVar2": "random_sum"
            },
            "code": "void wait_until_sum_exceeds_08005a98(int target_sum) {\n  int current_sum = get_current_sum();\n  while (current_sum < target_sum + current_sum) {\n    current_sum = get_current_sum();\n  }\n  return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": true,
            "current_name": "wait_until_sum_exceeds_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_08002978",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "PTR_DAT_080046b8": "message_10",
                "iVar1": "index",
                "FUNC_08008640": "calculate_result_2",
                "auStack_18": "stack_values",
                "PTR_DAT_080046b0": "message_8",
                "calculate_result": "calculate_result",
                "PTR_DAT_080046b4": "message_9",
                "local_9": "counter",
                "DAT_08004690": "constant_1",
                "PTR_DAT_0800469c": "message_3",
                "DAT_08004694": "constant_2",
                "FUN_080044e8": "process_data_080044e8",
                "uVar3": "result2",
                "uVar2": "result1",
                "PTR_DAT_080046bc": "data_pointer_1",
                "PTR_DAT_080046a8": "message_6",
                "local_a": "i",
                "PTR_DAT_080046c0": "message_separator_1",
                "PTR_DAT_080046a0": "message_4",
                "PTR_DAT_080046c4": "message_separator_2",
                "PTR_s__G92__080046c8": "message_1",
                "PTR_DAT_080046a4": "message_5",
                "FUN_08008c30": "convert_result",
                "PTR_DAT_08004698": "message_2",
                "process_value": "process_value",
                "PTR_DAT_080046cc": "data_pointer_2",
                "FUN_080036c6": "print_message",
                "PTR_DAT_080046ac": "message_7"
            },
            "code": "void process_data_080044e8(void)\n{\n  int index;\n  undefined4 result1;\n  undefined8 result2;\n  undefined4 stack_values[3];\n  byte counter = 0;\n  while(counter < 8) {\n    if (counter == 8) {\n      print_message(PTR_s__G92__080046c8);\n      for (byte i = 0; i < 3; i++) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          process_value(*(undefined4 *)(PTR_DAT_080046cc + (i + 10) * 4 + 4));\n        }\n        else {\n          result2 = calculate_result(*(undefined4 *)(PTR_DAT_080046cc + (i + 10) * 4 + 4));\n          result2 = FUNC_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),DAT_08004690,DAT_08004694);\n          result1 = convert_result((int)result2,(int)((ulonglong)result2 >> 0x20));\n          process_value(result1);\n        }\n        if (i < 2) {\n          print_message(PTR_DAT_080046c0);\n        }\n        else {\n          print_message(PTR_DAT_080046c4);\n        }\n      }\n      return;\n    }\n    index = get_value(counter,stack_values);\n    if (index == 0) break;\n    print_message(PTR_DAT_08004698);\n    switch(counter) {\n    case 0:\n      print_message(PTR_DAT_0800469c);\n      break;\n    case 1:\n      print_message(PTR_DAT_080046a0);\n      break;\n    case 2:\n      print_message(PTR_DAT_080046a4);\n      break;\n    case 3:\n      print_message(PTR_DAT_080046a8);\n      break;\n    case 4:\n      print_message(PTR_DAT_080046ac);\n      break;\n    case 5:\n      print_message(PTR_DAT_080046b0);\n      break;\n    case 6:\n      print_message(PTR_DAT_080046b4);\n      break;\n    case 7:\n      print_message(PTR_DAT_080046b8);\n    }\n    for (byte i = 0; i < 3; i++) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        process_value(stack_values[i]);\n      }\n      else {\n        result2 = calculate_result(stack_values[i]);\n        result2 = FUNC_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),DAT_08004690,DAT_08004694);\n        result1 = convert_result((int)result2,(int)((ulonglong)result2 >> 0x20));\n        process_value(result1);\n      }\n      if (i < 2) {\n        print_message(PTR_DAT_080046c0);\n      }\n      else {\n        print_message(PTR_DAT_080046c4);\n      }\n    }\n    counter++;\n  }\n  process_data_080044e8(10);\n  return;\n}",
            "called": [
                "FUN_08008c30",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08008640",
                "FUN_08008590",
                "FUN_080036c6",
                "FUN_08003826"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "process_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "DAT_08006cdc": "ptr_dat_08006cdc",
                "bVar1": "is_valid",
                "param_1": "param",
                "FUN_08006c9c": "is_param_valid_08006c9c"
            },
            "code": "bool is_param_valid_08006c9c(unsigned int param) {\n  bool is_valid = param < 0x1000000;\n  if (is_valid) {\n    DAT_08006cdc[1] = param - 1;\n    call_function(0xffffffff, 0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return !is_valid;\n}",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": true,
            "current_name": "is_param_valid_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUN_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUN_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_08008b4c",
                "FUN_0800856c",
                "FUN_08008b10",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "PTR_DAT_08001990": "status_flags",
                "FUN_0800195c": "check_and_toggle_flag_0800195c"
            },
            "code": "void check_and_toggle_flag_0800195c(void)\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    trigger_alert();\n    PTR_DAT_08001990[2] = PTR_DAT_08001990[2] | 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": true,
            "current_name": "check_and_toggle_flag_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009204": "receive_character",
                "FUN_08009214": "is_character_input_received_08009214",
                "in_ZR": "input_character"
            },
            "code": "bool is_character_input_received_08009214(void)\\n{\\n  char input_character;\\n  receive_character();\\n  return input_character != \"\\0\";\\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002afc"
            ],
            "imported": true,
            "current_name": "is_character_input_received_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "bVar1": "device_type",
                "iVar2": "result",
                "FUN_08004dd2": "initialize_device_08004dd2",
                "FUN_080003ec": "initialize_device_memory",
                "FUN_08000310": "get_device_type",
                "FUN_08004c48": "initialize_device_settings",
                "PTR_DAT_08004e2c": "PTR_DEVICE_MEM_08004e2c"
            },
            "code": "int initialize_device_08004dd2(void)\n{\n  byte device_type = get_device_type(0);\n  if (device_type == 5) {\n    int result = initialize_device_08004dd2_memory(PTR_DAT_08004e2c, 1, 0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (device_type > 4) {\n      return 0;\n    }\n    int result = initialize_device_08004dd2_memory(PTR_DAT_08004e2c, 1, 0x28);\n    if (result == 0) {\n      return 0;\n    }\n    initialize_device_08004dd2_settings(0);\n  }\n  return 1;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080003ec",
                "FUN_08004c48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": true,
            "current_name": "initialize_device_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_080052ac": "call_function",
                "FUN_08005778": "execute_function_08005778",
                "undefined2": "parameter_value",
                "PTR_DAT_0800578c": "function_pointer"
            },
            "code": "void execute_function_08005778() {\n  int* parameter_value = *(int**)PTR_DAT_0800578c;\n  call_function(parameter_value);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": true,
            "current_name": "execute_function_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUNC_08009054": "add",
                "uVar1": "result1",
                "param_1": "num1",
                "FUN_080028bc": "calculateResult_080028bc",
                "param_2": "num2",
                "FUNC_08008cdc": "calculateSquare",
                "param_3": "num3",
                "FUNC_08008eec": "calculateSquare",
                "uVar2": "result2",
                "FUNC_08008cd8": "add"
            },
            "code": "undefined4 calculateResult_080028bc(undefined4 num1, undefined4 num2, undefined4 num3)\n{\n  undefined4 result1 = calculateSquare(num2);\n  undefined4 result2 = calculateSquare(num1);\n  undefined4 sum = add(result1, result2);\n  undefined4 result3 = calculateSquare(num3);\n  undefined4 finalResult = add(sum, result3);\n  return finalResult;\n}",
            "called": [
                "FUN_08008cdc",
                "FUN_08008eec",
                "FUN_08008cd8",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": true,
            "current_name": "calculateResult_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "uVar1": "result",
                "FUN_08006628": "calculate_result_08006628",
                "PTR_DAT_0800667c": "result_ptr",
                "DAT_08006674": "constant_data",
                "uVar2": "leading_zeroes",
                "PTR_DAT_08006678": "global_data"
            },
            "code": "uint32_t calculate_result_08006628(void)\n{\n  uint32_t result = get_input_value();\n  uint32_t leading_zeroes = count_leading_zeroes(0xf000000);\n  uint32_t shift_amount = (*(uint32_t *)(PTR_DAT_08006678 + 8) & 0xf0) >> (leading_zeroes & 0xff);\n  *(uint32_t *)PTR_DAT_0800667c = result >> shift_amount;\n  return *(uint32_t *)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_080066cc",
                "FUN_0800618c",
                "FUN_08006680"
            ],
            "imported": true,
            "current_name": "calculate_result_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "param_mask": "param_mask",
                "param_1": "new_param",
                "FUN_0800738e": "update_param_if_valid_0800738e",
                "DAT_080073bc": "data_block",
                "PTR_080073c0": "do_nothing_080073c0"
            },
            "code": "void update_param_if_valid_0800738e(ushort new_param)\n{\n  uint* param_mask = (uint*)(DAT_080073bc + 0x14);\n  if (((uint)new_param & *param_mask) != 0) {\n    *param_mask = (uint)new_param;\n    PTR_080073c0(new_param);\n  }\n  return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": true,
            "current_name": "update_param_if_valid_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": true,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_08005324",
                "FUN_08005360",
                "FUN_08002f74",
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08002f40"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "iVar1": "index",
                "PTR_DAT_08009304": "source_pointer_start",
                "puVar2": "destination_pointer",
                "UNRECOVERED_JUMPTABLE": "jump_table_pointer",
                "call_function_2": "call_function_2",
                "call_function_3": "call_function_3",
                "PTR_DAT_0800930c": "destination_pointer_start",
                "DAT_08009300": "source_data_start",
                "FUN_080092c4": "copy_and_clear_memory_080092c4",
                "call_function_1": "call_function_1",
                "PTR_DAT_08009308": "source_pointer_end"
            },
            "code": "void copy_and_clear_memory_080092c4(void)\n{\n  int index;\n  undefined4 *destination_pointer;\n  code *jump_table_pointer;\n  for (index = 0; PTR_DAT_08009304 + index < PTR_DAT_08009308; index += 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + index) = *(undefined4 *)(DAT_08009300 + index);\n  }\n  for (destination_pointer = (undefined4 *)PTR_DAT_0800930c; destination_pointer < PTR_DAT_08009310; destination_pointer++) {\n    *destination_pointer = 0;\n  }\n  call_function_1();\n  call_function_2();\n  jump_table_pointer = (code *)0x80092fa;\n  call_function_3();\n  (*jump_table_pointer)();\n  return;\n}",
            "called": [
                "FUN_0800b3e8",
                "FUN_0800756c",
                "FUN_08007540"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": true,
            "current_name": "copy_and_clear_memory_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "param_1": "parameter",
                "FUN_08007e1c": "call_function",
                "FUN_08008250": "call_function_with_param_08008250"
            },
            "code": "void call_function_with_param_08008250(void* parameter)\n{\n  call_function(parameter);\n  return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_08003778",
                "FUN_080036f0",
                "FUN_080037fc"
            ],
            "imported": true,
            "current_name": "call_function_with_param_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "iVar1": "check_result",
                "param_1": "output_buffer",
                "*PTR_DAT_080018c8": "*error_flag",
                "param_2": "param_2",
                "param_3": "lookup_table",
                "param_4": "input_buffer",
                "uVar2": "result",
                "FUN_0800184c": "check_character_and_increment_0800184c"
            },
            "code": "int check_character_and_increment_0800184c(byte *output_buffer, int lookup_table, int lookup_index, byte *input_buffer) {\n  int result = 0;\n  byte current_char = *(input_buffer + lookup_index);\n  if (*(char *)(lookup_table + (uint)current_char) == '\\0') {\n    result = 0;\n  }\n  else {\n    *output_buffer = *(byte *)(lookup_table + (uint)current_char);\n    if ((*output_buffer < 0x41) || (0x5a < *output_buffer)) {\n      *PTR_DAT_080018c8 = 2;\n      result = 0;\n    }\n    else {\n      *input_buffer = *input_buffer + 1;\n      int check_result = FUN_08002638(lookup_table, input_buffer, param_2);\n      if (check_result == 0) {\n        *PTR_DAT_080018c8 = 1;\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": true,
            "current_name": "check_character_and_increment_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = FUN_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = FUN_08008590(uVar1);\n  uVar5 = thunk_FUN_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = FUN_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = FUN_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = FUN_08008590(uVar1);\n  uVar6 = FUN_08008590(local_34 & 0x7fffffff);\n  uVar5 = FUN_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = FUN_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = FUN_08008590(uVar1);\n    uVar5 = FUN_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = FUN_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = FUN_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = FUN_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      FUN_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08008cd8",
                "FUN_080096e8",
                "FUN_08008c30",
                "FUN_08008590",
                "FUN_080082d4",
                "FUN_08009054",
                "FUN_08009410",
                "FUN_08001e98",
                "FUN_08008cdc",
                "FUN_08009214",
                "thunk_FUN_08009990",
                "FUN_08008bf0",
                "FUN_08009250",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_0800981c",
                "FUN_080094c0",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006950": "call_function",
                "FUN_08006ce0": "call_function_with_param_08006ce0",
                "param_1": "param"
            },
            "code": "void call_function_with_param_08006ce0(void* param){\n  call_function(param);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": true,
            "current_name": "call_function_with_param_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "print_character_08006d4a",
                "param_1": "character",
                "FUN_080069e4": "print_to_screen"
            },
            "code": "void print_character_08006d4a(char character)\n{\n  print_to_screen((int)character);\n  return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": true,
            "current_name": "print_character_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080098d0",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08003004",
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "PTR_DAT_080003e8": "input_start",
                "FUN_08000340": "transmit_byte",
                "FUN_08000374": "process_input_08000374",
                "param_1": "input_length",
                "local_1c": "output_length",
                "local_9": "checksum",
                "local_18": "output_buffer",
                "param_2": "input_buffer",
                "param_3": "output_start",
                "FUN_080002f0": "initialize",
                "local_14": "output_start"
            },
            "code": "void process_input_08000374(int input_length, char *input_buffer, int output_start){\n  int output_length = input_length;\n  char *output_buffer = input_buffer;\n  char checksum = '\\0';\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    initialize();\n    output_buffer = input_buffer;\n    output_start = PTR_DAT_080003e8;\n  }\n  for (; output_length != 0; output_length = output_length - 1) {\n    checksum = (checksum != '\\0') + *output_buffer;\n    transmit_byte(output_start, *output_buffer);\n    output_buffer = output_buffer + 1;\n    output_start = output_start + 1;\n  }\n  transmit_byte(output_start, checksum);\n  return;\n}",
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004c2a",
                "FUN_08004bc0"
            ],
            "imported": true,
            "current_name": "process_input_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "local_c": "absoluteValue",
                "FUN_080037fc": "printAbsoluteValue_080037fc",
                "param_1": "value",
                "FUN_08003778": "printInteger",
                "FUN_08008250": "printCharacter"
            },
            "code": "void printAbsoluteValue_080037fc(int value)\n{\n  int absoluteValue = value;\n  if (value < 0) {\n    printCharacter('-');\n    absoluteValue = -value;\n  }\n  printInteger(absoluteValue);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_080046d0",
                "FUN_08004250",
                "FUN_08004900"
            ],
            "imported": true,
            "current_name": "printAbsoluteValue_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "uVar10": "remainder",
                "uVar11": "bit_count",
                "uVar12": "temp_dividend",
                "uVar13": "temp_quotient",
                "LAB_0800a26a": "label",
                "iVar3": "shift",
                "uVar14": "temp",
                "uVar1": "quotient",
                "param_1": "dividend",
                "bit": "bit",
                "FUN_0800a1bc": "calculate_0800a1bc",
                "DAT_0800a340": "constant",
                "param_2": "divisor",
                "LAB_0800a1da": "label",
                "uVar2": "bit",
                "uVar5": "high",
                "uVar4": "sum",
                "uVar7": "carry",
                "uVar6": "mask",
                "remainder": "remainder",
                "uVar9": "difference",
                "uVar8": "dividend_copy"
            },
            "code": "uint calculate_0800a1bc(uint dividend, uint divisor)\n{\n  uint quotient = 0;\n  uint bit = 1 << 31;\n  uint remainder = dividend;\n  if ((0x0800a340 & ~divisor) == 0) {\n    uint64_t temp = multiply(dividend, divisor);\n    quotient = divide(temp, bit, &remainder);\n    return quotient;\n  }\n  if ((int)divisor < 1) {\n    if ((divisor & 0x7fffffff | dividend) == 0) {\n      return dividend;\n    }\n    if (divisor != 0) {\n      uint64_t temp = divide(dividend, divisor);\n      uint32_t high = temp >> 32;\n      quotient = multiply(high, high) + multiply(high, high) + high;\n      quotient = quotient + divide(temp - multiply(divisor, quotient), divisor, &remainder);\n      return quotient;\n    }\n    do {\n      uint temp_dividend = dividend;\n      quotient = temp_dividend >> 0xb;\n      divisor -= 0x15;\n      dividend = temp_dividend << 0x15;\n    } while (quotient == 0);\n    bit = divisor;\n    if (-1 < (int)dividend) goto LAB_0800a290;\n    uint bit_count = 0x20;\n    uint mask = 0xffffffff;\n    divisor = dividend;\n  }\n  else {\n    bit = divisor >> 0x14;\n    divisor = dividend;\n    if (bit != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    divisor = 0;\n    uint bit_count = bit;\n    do {\n      mask = divisor;\n      bit = bit_count << 1;\n      int shift = bit_count << 0xc;\n      divisor = mask + 1;\n      bit_count = bit_count + 1;\n    } while (-1 < shift);\n    bit_count = 0x20 - bit_count;\n    divisor = divisor << (bit_count & 0xff);\n  }\n  divisor = divisor & 0xfffff | 0x100000;\n  if (-1 < (int)(bit << 0x1f)) {\n    divisor = divisor * 2 - ((int)remainder >> 0x1f);\n    remainder = remainder << 1;\n  }\n  uint temp_quotient = 0;\n  divisor = divisor * 2 - ((int)remainder >> 0x1f);\n  remainder = remainder << 1;\n  bit_count = 0;\n  uint bit_mask = 0x16;\n  uint bit_value = 0x200000;\n  do {\n    int sum = bit_value + bit_mask;\n    if (sum <= (int)divisor) {\n      divisor = divisor - sum;\n      temp_quotient = temp_quotient + bit_value + bit_mask;\n    }\n    bit_mask = bit_mask >> 1;\n    bit_count = bit_count + 1;\n    divisor = divisor * 2 - ((int)remainder >> 0x1f);\n    remainder = remainder << 1;\n    bit_value = bit_value >> 1;\n  } while (bit_mask != 0);\n  uint result = 0x20;\n  uint carry = 0x80000000;\n  bit_mask = bit_mask;\n  do {\n    uint sum = carry + bit_mask;\n    uint temp_remainder = divisor;\n    if ((int)divisor < (int)result) {\n      if ((int)sum < 0) {\n        if (-1 < (int)(sum + carry)) {\n          temp_remainder = divisor + 1;\n        }\n      }\n      uint difference = result - divisor;\n      divisor = temp_remainder;\n      if (remainder < sum) {\n        difference = difference - 1;\n      }\n      bit_mask = sum + carry;\n      carry = carry >> 1;\n      result = difference;\n    }\n    else if ((divisor == result) && (sum <= remainder)) {\n      if ((int)sum < 0) goto LAB_0800a26a;\n      uint difference = 0;\n      divisor = result;\n      goto LAB_0800a262;\n    }\n    result = result - 1;\n    carry = carry >> 1;\n    divisor = divisor * 2 - ((int)remainder >> 0x1f);\n    remainder = remainder << 1;\n    if (result == 0) {\n      if ((divisor | remainder) == 0) {\n        result = bit_mask >> 1;\n      }\n      else if (bit_mask == 0xffffffff) {\n        temp_quotient = temp_quotient + 1;\n      }\n      else {\n        result = bit_mask + 1 >> 1;\n      }\n      if ((temp_quotient & 1) != 0) {\n        result = result | 0x80000000;\n      }\n      return result;\n    }\n  } while( true );\n}\n",
            "called": [
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": true,
            "current_name": "calculate_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "do_nothing_08005208": "do_nothing_after_char_check",
                "param_1": "new_char",
                "PTR_DAT_080052a8": "pointer_to_data",
                "do_nothing_0800522c": "do_nothing_char_less_than_one",
                "FUN_08002fd4": "reset_and_update",
                "FUN_0800525c": "update_char_if_not_equal_0800525c",
                "do_nothing_08005250": "do_nothing_null_termination",
                "do_nothing_08005220": "do_nothing_char_greater_than_one"
            },
            "code": "void update_char_if_not_equal_0800525c(char new_char) {\\n  if ((int)new_char != (uint)(byte)*PTR_DAT_080052a8) {\\n    reset_and_update(new_char);\\n    if (new_char == \"\\0\") {\\n      do_nothing_08005250();\\n    }\\n    else {\\n      if (new_char < \"\\x01\") {\\n        do_nothing_0800522c();\\n      }\\n      else {\\n        do_nothing_08005220();\\n      }\\n      do_nothing_08005208();\\n    }\\n    *PTR_DAT_080052a8 = new_char;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08005208",
                "FUN_08005220",
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": true,
            "current_name": "update_char_if_not_equal_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "param_1": "index",
                "*PTR_DAT_0800201a": "data",
                "FUN_080073d4": "set_bit_in_short_at_index_080073d4",
                "PTR_DAT_0800201a": "address",
                "DAT_0800201f": "bit_index",
                "DAT_0800201e": "bit_value"
            },
            "code": "void set_bit_in_short_at_index_080073d4(uint index)\n{\n    uint PTR_DAT_0800201a = ((int)index >> 4) * 0x400 + 0x4002001a;\n    short* *PTR_DAT_0800201a = (short*)PTR_DAT_0800201a;\n    uint DAT_0800201f = index & 0xf;\n    short DAT_0800201e = (short)(1 << DAT_0800201f);\n    **PTR_DAT_0800201a = DAT_0800201e;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": true,
            "current_name": "set_bit_in_short_at_index_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "param_1": "character",
                "FUN_08006dfe": "print_character_08006dfe",
                "FUN_08006a8c": "print_to_screen"
            },
            "code": "void print_character_08006dfe(char character)\n{\n  print_to_screen((int)character);\n  return;\n}",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": true,
            "current_name": "print_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006c70": "setup_user_interface",
                "FUN_08006d66": "initialize_application_08006d66"
            },
            "code": "void initialize_application_08006d66(void)\n{\n  setup_user_interface();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": true,
            "current_name": "initialize_application_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "DAT_080071c4": "ptr_080071c4",
                "DAT_080071a0": "ptr_080071a0",
                "DAT_080071b0": "ptr_080071b0",
                "DAT_080071cc[3]": "ptr_080071cc[3]",
                "local_c": "i",
                "DAT_080071c8": "ptr_080071c8",
                "DAT_080071cc[2]": "ptr_080071cc[2]",
                "iVar3": "index",
                "DAT_080071cc[1]": "ptr_080071cc[1]",
                "uVar1": "bit",
                "DAT_080071a4": "ptr_080071a4",
                "DAT_080071b4": "ptr_080071b4",
                "param_1": "params",
                "DAT_080071c0": "ptr_080071c0",
                "*DAT_080071cc": "*ptr_080071cc",
                "DAT_0800719c": "ptr_0800719c",
                "DAT_080071bc": "ptr_080071bc",
                "FUN_08006e88": "update_params_08006e88",
                "param_2": "mask",
                "DAT_080071ac": "ptr_080071ac",
                "uVar2": "mask_bit",
                "DAT_080071a8": "ptr_080071a8",
                "DAT_080071b8": "ptr_080071b8"
            },
            "code": "void update_params_08006e88(uint *params, uint *mask) {\n  uint bit;\n  uint mask_bit;\n  int index;\n  uint i;\n  \n  for (i = 0; i < 16; i++) {\n    bit = 1 << (i & 0xff);\n    mask_bit = *mask & bit;\n    if (mask_bit == bit) {\n      if ((mask[1] == 2) || (mask[1] == 0x12)) {\n        uint value = mask[4];\n        params[(i >> 3) + 8] &= ~(0xf << ((i & 7) << 2));\n        params[(i >> 3) + 8] |= value << ((i & 7) << 2);\n      }\n      *params &= ~(3 << ((i & 0x7f) << 1));\n      *params |= (mask[1] & 3) << ((i & 0x7f) << 1);\n      if ((((mask[1] == 1) || (mask[1] == 2)) || (mask[1] == 0x11)) || (mask[1] == 0x12)) {\n        params[2] &= ~(3 << ((i & 0x7f) << 1));\n        params[2] |= mask[3] << ((i & 0x7f) << 1);\n        params[1] &= ~(1 << (i & 0xff));\n        params[1] |= (mask[1] >> 4 & 1) << (i & 0xff);\n      }\n      params[3] &= ~(3 << ((i & 0x7f) << 1));\n      params[3] |= mask[2] << ((i & 0x7f) << 1);\n      if ((mask[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_0800719c + 0x44) |= 0x4000;\n        index = (params == DAT_080071a4) ? 0 : (params == DAT_080071a8) ? 1 : (params == DAT_080071ac) ? 2 : (params == DAT_080071b0) ? 3 : (params == DAT_080071b4) ? 4 : (params == DAT_080071b8) ? 5 : (params == DAT_080071bc) ? 6 : (params == DAT_080071c0) ? 7 : (params == DAT_080071c4) ? 8 : 10;\n        *(uint *)(DAT_080071a0 + ((i >> 2) + 2) * 4) = index << ((i & 3) << 2) | *(uint *)(DAT_080071a0 + ((i >> 2) + 2) * 4);\n        *DAT_080071cc &= ~mask_bit;\n        DAT_080071cc[1] &= ~mask_bit;\n        if ((mask[1] & 0x10000) != 0) {\n          *DAT_080071cc |= mask_bit;\n        }\n        if ((mask[1] & 0x20000) != 0) {\n          DAT_080071cc[1] |= mask_bit;\n        }\n        DAT_080071cc[2] &= ~mask_bit;\n        DAT_080071cc[3] &= ~mask_bit;\n        if ((mask[1] & 0x100000) != 0) {\n          DAT_080071cc[2] |= mask_bit;\n        }\n        if ((mask[1] & 0x200000) != 0) {\n          DAT_080071cc[3] |= mask_bit;\n        }\n      }\n    }\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": true,
            "current_name": "update_params_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": true,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "local_c": "mask",
                "uVar1": "binary_digit",
                "param_1": "number",
                "param_2": "num_bits",
                "FUN_080036f0": "print_binary_representation_080036f0",
                "local_10": "i",
                "FUN_08008250": "putchar"
            },
            "code": "void print_binary_representation_080036f0(uint number, int num_bits){\n    uint mask = 1 << (num_bits - 1);\n    for (int i = 0; i < num_bits; i++) {\n        if ((mask & number) == 0) {\n            putchar('0');\n        }\n        else {\n            putchar('1');\n        }\n        mask = mask >> 1;\n    }\n    return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": true,
            "current_name": "print_binary_representation_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002e08": "start_process",
                "FUN_08002ba8": "load_data",
                "FUN_08002a94": "initialize_system",
                "FUN_08002edc": "run_all_functions_08002edc"
            },
            "code": "void run_all_functions_08002edc(void)\n{\n  initialize_system();\n  load_data();\n  start_process();\n  return;\n}",
            "called": [
                "FUN_08002a94",
                "FUN_08002ba8",
                "FUN_08002e08"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": true,
            "current_name": "run_all_functions_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "param_1": "buffer",
                "0x10": "buffer_size",
                "FUN_080036f0": "copy_data",
                "FUN_0800375c": "copy_data_to_buffer_and_return_0800375c"
            },
            "code": "void copy_data_to_buffer_and_return_0800375c(void* buffer, int buffer_size)\n{\n  copy_data(buffer, buffer_size);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": true,
            "current_name": "copy_data_to_buffer_and_return_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "iVar1": "temp1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result",
                "uVar2": "temp2",
                "FUN_08009990": "calculate_08009990",
                "uVar5": "temp4",
                "uVar4": "temp3",
                "uVar6": "temp5"
            },
            "code": "uint calculate_08009990(uint input1, uint input2, uint input3, uint input4)\n{\n  int temp1;\n  undefined4 temp2;\n  uint result;\n  uint temp3;\n  uint temp4;\n  undefined8 temp5;\n  temp5 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (temp4 | (-input3 | input3) >> 0x1f)) || (temp3 = input2 & 0x7fffffff, DAT_08009b18 < (temp3 | (-input1 | input1) >> 0x1f))) {\n    temp4 = calculate_08009990_helper(input3, input4, input1, input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUNC_0800af78();\n      return temp4;\n    }\n    uint temp6 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp3 | input1) == 0) {\n      temp4 = DAT_08009af0;\n      if ((temp6 != 2) && (temp4 = input1, temp6 == 3)) {\n        temp4 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == DAT_08009b18) {\n          temp6 = temp6 - 1;\n          if (temp3 == temp4) {\n            if (2 < temp6) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + temp6 * 8);\n          }\n          if (temp6 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + temp6 * 8);\n          }\n          return 0;\n        }\n        if (temp3 != DAT_08009b18) {\n          temp1 = (int)(temp3 - temp4) >> 0x14;\n          if ((int)(temp3 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp5 = 0;\n            }\n            else {\n              calculate_08009990_helper(input1, input2, input3, input4, input4);\n              do_nothing_0800b2cc();\n              temp5 = FUNC_0800af78();\n            }\n          }\n          temp2 = (undefined4)((ulonglong)temp5 >> 0x20);\n          temp4 = (uint)temp5;\n          if (temp6 == 1) {\n            return temp4;\n          }\n          if (temp6 == 2) {\n            temp5 = calculate_08009990_helper(temp4, temp2, DAT_08009ae8, DAT_08009aec);\n            temp4 = calculate_08009990_helper(DAT_08009af0, DAT_08009af4, (int)temp5, (int)((ulonglong)temp5 >> 0x20));\n            return temp4;\n          }\n          if (temp6 == 0) {\n            return temp4;\n          }\n          temp5 = calculate_08009990_helper(temp4, temp2, DAT_08009ae8, DAT_08009aec);\n          temp4 = calculate_08009990_helper((int)temp5, (int)((ulonglong)temp5 >> 0x20), DAT_08009af0, DAT_08009af4);\n          return temp4;\n        }\n      }\n      temp4 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        temp4 = DAT_08009b00;\n      }\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": true,
            "current_name": "calculate_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "*DAT_08007e80": "*PTR_DAT_08007e80",
                "FUN_08007e58": "is_bit_set_08007e58"
            },
            "code": "bool is_bit_set_08007e58(void)\n{\n  bool is_set = (*DAT_08007e80 & 0x20) != 0;\n  return is_set;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": true,
            "current_name": "is_bit_set_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "*(undefined4 *) (data + 0x14)": "ptr_data[3]",
                "*(undefined4 *) (data + 0x24)": "ptr_data[6]",
                "*(undefined4 *) (data + 0x10)": "ptr_data[4]",
                "*(undefined4 *) (data + 0x20)": "ptr_data[5]",
                "*(undefined4 *) (data + 0x18)": "ptr_data[2]",
                "DAT_08005a4c": "data",
                "do_nothing_08005a5c": "do_nothing",
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "code": "void initialize_data_080059f8()\n{\n    int* ptr_DAT_08005a4c = (int*)DAT_08005a4c;\n    ptr_DAT_08005a4c[5] = -1;\n    ptr_DAT_08005a4c[5] = 0;\n    ptr_DAT_08005a4c[6] = -1;\n    ptr_DAT_08005a4c[6] = 0;\n    ptr_DAT_08005a4c[4] = -1;\n    ptr_DAT_08005a4c[4] = 0;\n    ptr_DAT_08005a4c[3] = -1;\n    ptr_DAT_08005a4c[3] = 0;\n    ptr_DAT_08005a4c[2] = -1;\n    ptr_DAT_08005a4c[2] = 0;\n    do_nothing_08005a5c();\n}",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": true,
            "current_name": "initialize_data_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "bVar2": "current_char",
                "bVar1": "current_char",
                "PTR_DAT_08004020": "input_buffer_index",
                "FUN_08004030": "print_output",
                "FUN_08008286": "get_input_char",
                "FUN_08003980": "print_error",
                "PTR_DAT_08004024": "input_buffer",
                "FUN_08003a74": "process_input_buffer",
                "PTR_DAT_0800401c": "is_output_ready",
                "uVar3": "output_value",
                "PTR_DAT_08004028": "is_parenthesis_open",
                "FUN_08003f34": "process_input_08003f34"
            },
            "code": "void process_input_08003f34(void)\n{\n  char current_char;\n  int PTR_DAT_08004028 = 0;\n  char PTR_DAT_08004024[256];\n  int PTR_DAT_08004020 = 0;\n  int PTR_DAT_0800401c = 0;\n  int output_value;\n  while (1) {\n    current_char = get_input_char();\n    if (current_char == 0xff) {\n      return;\n    }\n    if ((current_char == 10) || (current_char == 0xd)) {\n      if (PTR_DAT_0800401c == 0) {\n        print_error();\n      }\n      else {\n        output_value = process_PTR_DAT_08004024(PTR_DAT_08004024, PTR_DAT_08004020);\n        print_output(output_value);\n        PTR_DAT_0800401c = 0;\n        PTR_DAT_08004020 = 0;\n      }\n    }\n    else if (PTR_DAT_08004024[0] == 0 && (current_char > 0x20 && current_char != 0x2f)) {\n      if (current_char == 0x28) {\n        PTR_DAT_08004028 = 1;\n      }\n      else if (PTR_DAT_08004028 == 0) {\n        print_error();\n      }\n      else if ((current_char >= 0x61) && (current_char <= 0x7a)) {\n        PTR_DAT_08004024[PTR_DAT_08004020++] = current_char - 0x20;\n      }\n      else {\n        PTR_DAT_08004024[PTR_DAT_08004020++] = current_char;\n      }\n    }\n    else if (current_char == 0x29) {\n      if (PTR_DAT_08004028 == 0) {\n        print_error();\n      }\n      else {\n        PTR_DAT_08004028 = 0;\n      }\n    }\n    else {\n      print_error();\n    }\n    if (PTR_DAT_08004020 == 256) {\n      print_error();\n    }\n    if (current_char == 10 || current_char == 0xd) {\n      PTR_DAT_0800401c = 1;\n    }\n  }\n}\n",
            "called": [
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003a74",
                "FUN_08003b98",
                "FUN_08008286"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "process_input_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "uVar1": "shifted_mantissa",
                "iVar4": "sign",
                "param_1": "float_bits",
                "param_2": "sign_bit",
                "uVar3": "mantissa",
                "uVar2": "exponent",
                "uVar5": "exponent_diff",
                "uVar4": "result",
                "FUN_080095b8": "calculate_float_bits_080095b8"
            },
            "code": "int calculate_float_bits_080095b8(uint float_bits, uint sign_bit) {\n  uint exponent = (sign_bit << 1) >> 0x15;\n  uint exponent_diff = exponent - 0x3ff;\n  int sign = (int)sign_bit < 0 ? -1 : 1;\n  uint mantissa = float_bits & 0xfffff | 0x100000;\n  if ((int)exponent_diff < 0x14) {\n    if ((int)exponent_diff < 0) {\n      if (exponent_diff != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    mantissa = mantissa + (0x80000 >> (exponent_diff & 0xff)) >> (0x14 - exponent_diff & 0xff);\n  } else {\n    if (0x1e < exponent_diff) {\n      int result = FUN_08008ba0();\n      return result;\n    }\n    if ((int)exponent_diff < 0x34) {\n      uint shifted_mantissa = 0x80000000 >> (exponent - 0x413 & 0xff);\n      if (CARRY4(shifted_mantissa, float_bits) != false) {\n        mantissa = mantissa + 1;\n      }\n      mantissa = mantissa << (exponent - 0x413 & 0xff);\n      if (exponent_diff != 0x14) {\n        mantissa = mantissa | shifted_mantissa + float_bits >> (0x34 - exponent_diff & 0xff);\n      }\n    } else {\n      mantissa = mantissa << (exponent - 0x413 & 0xff) | float_bits << (exponent - 0x433 & 0xff);\n    }\n  }\n  return mantissa * sign;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "calculate_float_bits_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "print_result_08006cf6",
                "uVar1": "result",
                "FUN_08006ba0": "process_result",
                "param_1": "output_char",
                "FUN_08006998": "calculate_result",
                "FUN_08006b00": "print_output",
                "param_2": "input_param1",
                "param_3": "input_param2"
            },
            "code": "void print_result_08006cf6(char output_char, int input_param1, int input_param2)\n{\n  int result = calculate_result();\n  int processed_result = process_result(result, input_param1, input_param2);\n  print_output((int)output_char, processed_result);\n  return;\n}",
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": true,
            "current_name": "print_result_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "uVar1": "converted_data",
                "FUN_08002ef0": "copy_and_convert_data_08002ef0",
                "*PTR_DAT_08002f1c": "*destination",
                "*PTR_DAT_08002f20": "*converted_data",
                "*PTR_DAT_08002f18": "*source"
            },
            "code": "void copy_and_convert_data_08002ef0(void)\n{\n  int* source = PTR_DAT_08002f18;\n  int* destination = PTR_DAT_08002f1c;\n  int converted_data = convert_data(*PTR_DAT_08002f18);\n  *PTR_DAT_08002f1c = *PTR_DAT_08002f18;\n  *PTR_DAT_08002f20 = converted_data;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": true,
            "current_name": "copy_and_convert_data_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "print_footer": "FUN_080057e4",
                "do_nothing_08002814": "do_nothing",
                "FUN_08001d4c": "print_numbers_08001d4c",
                "local_9": "current_number",
                "PTR_DAT_08001dd8": "PTR_DAT",
                "FUNC_08001994": "print_number",
                "print_header": "FUN_08005790"
            },
            "code": "void print_numbers_08001d4c(void)\n{\n  char current_number;\n  print_header();\n  print_number(4, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\n  print_number(3, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\n  do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n  current_number = 2;\n  while(current_number != 0) {\n    print_number(7, 0, 1, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\n    do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n    current_number--;\n    if (current_number > 0) {\n      print_number(7, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\n      do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n    }\n  }\n  print_footer();\n  return;\n}",
            "called": [
                "FUN_08001994",
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": true,
            "current_name": "print_numbers_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "(uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21)": "result",
                "iVar1": "value1",
                "*(uint *)(DAT_08000298 + 8) >> 3": "value2",
                "FUN_08000268": "calculate_value_08000268",
                "FUN_08005a84": "get_value"
            },
            "code": "int calculate_value_08000268(void)\n{\n  int value1;\n  value1 = get_value();\n  int *(uint *)(DAT_08000298 + 8) >> 3 = *(uint *)(DAT_08000298 + 8) >> 3;\n  int (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21) = (value1 + 1) * 1000 - ((uint)((ulonglong)DAT_0800029c * (ulonglong)*(uint *)(DAT_08000298 + 8) >> 3 >> 0x21));\n  return (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21);\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": true,
            "current_name": "calculate_value_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "uVar1": "quotient",
                "param_1": "number",
                "local_1c": "remainder",
                "local_9": "digit_count",
                "FUN_08003778": "print_uint_as_string_08003778",
                "acStack_15": "digit_array"
            },
            "code": "void print_uint_as_string_08003778(uint number)\n{\n  uint quotient;\n  uint remainder;\n  char digit_array[12];\n  byte digit_count = 0;\n  \n  remainder = number;\n  if (number == 0) {\n    print_char('0');\n  }\n  else {\n    while (remainder != 0) {\n      quotient = remainder / 10;\n      remainder = remainder % 10;\n      digit_array[digit_count] = remainder + '0';\n      remainder = quotient;\n      digit_count++;\n    }\n    while (digit_count != 0) {\n      digit_count--;\n      print_char(digit_array[digit_count]);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": true,
            "current_name": "print_uint_as_string_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "*pointer_to_pointer_to_value": "pointer_to_value",
                "FUN_0800b3dc": "get_value_from_pointer_0800b3dc",
                "*PTR_PTR_DAT_0800b3e4": "pointer_to_pointer_to_value"
            },
            "code": "int get_value_from_pointer_0800b3dc() {\n  int* pointer_to_value = *(int**)PTR_PTR_DAT_0800b3e4;\n  return *pointer_to_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "PTR_DAT_080048d8": "message_13",
                "PTR_DAT_080048b8": "message_5",
                "PTR_DAT_08004890": "data_pointer",
                "PTR_DAT_080048d0": "message_11",
                "PTR_DAT_080048b0": "message_3",
                "PTR_DAT_080048f4": "message_19",
                "PTR_DAT_080048d4": "message_12",
                "PTR_DAT_080048b4": "message_4",
                "PTR_DAT_080048f8": "message_20",
                "PTR_DAT_080048f0": "message_18",
                "uVar3": "var_2",
                "PTR_DAT_080048fc": "message_21",
                "uVar4": "var_1",
                "PTR_DAT_080048bc": "message_6",
                "PTR_DAT_080048e8": "message_16",
                "bVar1": "option",
                "PTR_DAT_080048c8": "message_9",
                "PTR_DAT_080048a8": "message_1",
                "PTR_DAT_080048e0": "message_14",
                "PTR_DAT_080048c0": "message_7",
                "PTR_DAT_080048e4": "message_15",
                "PTR_DAT_080048c4": "message_8",
                "FUN_080046d0": "print_info_080046d0",
                "cVar2": "option_6",
                "PTR_DAT_080048ec": "message_17",
                "PTR_DAT_080048cc": "message_10",
                "PTR_DAT_080048ac": "message_2"
            },
            "code": "void print_info_080046d0(void)\n{\n  byte num_options = PTR_DAT_08004890[1];\n  if (num_options > 4) {\n    print_string(PTR_DAT_080048a8);\n    print_number(PTR_DAT_08004890[0x1c] + 0x36);\n    if (PTR_DAT_08004890[0x19] == 0) {\n      if (PTR_DAT_08004890[0x1a] == 1) {\n        print_string(PTR_DAT_080048ac);\n      }\n      else {\n        print_string(PTR_DAT_080048b0);\n      }\n    }\n    else {\n      print_string(PTR_DAT_080048b4);\n    }\n    if (PTR_DAT_08004890[3] == 0) {\n      print_string(PTR_DAT_080048bc);\n    }\n    else {\n      print_string(PTR_DAT_080048b8);\n    }\n    if (PTR_DAT_08004890[4] == 0) {\n      print_string(PTR_DAT_080048c4);\n    }\n    else {\n      print_string(PTR_DAT_080048c0);\n    }\n    if (PTR_DAT_08004890[2] == 0) {\n      print_string(PTR_DAT_080048cc);\n    }\n    else {\n      print_string(PTR_DAT_080048c8);\n    }\n    byte option_5 = PTR_DAT_08004890[5];\n    if (option_5 == 2) {\n      print_string(PTR_DAT_080048d8);\n    }\n    else if (option_5 < 3) {\n      if (option_5 == 0) {\n        print_string(PTR_DAT_080048d0);\n      }\n      else if (option_5 == 1) {\n        print_string(PTR_DAT_080048d4);\n      }\n    }\n    char option_6 = PTR_DAT_08004890[6];\n    if (option_6 == 1) {\n      print_string(PTR_DAT_080048dc);\n    }\n    else if (option_6 < 2) {\n      if (option_6 == -1) {\n        print_string(PTR_DAT_080048e0);\n      }\n      else if (option_6 == 0) {\n        print_string(PTR_DAT_080048e4);\n      }\n    }\n    byte option_8 = PTR_DAT_08004890[7];\n    if (option_8 == 2) {\n      print_string(PTR_DAT_080048f0);\n    }\n    else if (option_8 < 3) {\n      if (option_8 == 0) {\n        print_string(PTR_DAT_080048e8);\n      }\n      else if (option_8 == 1) {\n        print_string(PTR_DAT_080048ec);\n      }\n    }\n    print_string(PTR_DAT_080048f4);\n    print_number(PTR_DAT_08004890[0x18]);\n    print_string(PTR_DAT_080048f8);\n    if (PTR_DAT_08004890[3] == 0) {\n      print_hex(*(undefined4 *)(PTR_DAT_08004890 + 8));\n    }\n    else {\n      undefined8 var_1 = FUN_08008590(*(undefined4 *)(PTR_DAT_08004890 + 8));\n      var_1 = FUNC_08008640((int)var_1,(int)((ulonglong)var_1 >> 0x20),DAT_08004888,DAT_0800488c);\n      undefined4 var_2 = FUN_08008c30((int)var_1,(int)((ulonglong)var_1 >> 0x20));\n      print_hex(var_2);\n    }\n    print_string(PTR_DAT_080048fc);\n    return;\n  }\n  (*(code *)(&switchD_080046de::switchdataD_080046e4)[num_options])();\n  return;\n}",
            "called": [
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08008590",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_080037fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "print_info_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "uVar1": "result_value",
                "param_1": "input_value",
                "FUN_08006d72": "calculate_result_08006d72",
                "FUN_08006c9c": "calculate"
            },
            "code": "undefined4 calculate_result_08006d72(undefined4 input_value)\n{\n  undefined4 result_value;\n  result_value = calculate(input_value);\n  return result_value;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": true,
            "current_name": "calculate_result_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "DAT_080075c0": "dataLength",
                "DAT_080075c4": "dataAddress",
                "DAT_080075bc": "flag",
                "FUN_0800756c": "setFlagAndClearData_0800756c"
            },
            "code": "void setFlagAndClearData_0800756c() {\n  *DAT_080075bc = *DAT_080075bc | 1;\n  data[2] = 0;\n  *DAT_080075bc = *DAT_080075bc & 0xfef6ffff;\n  data[1] = DAT_080075c0;\n  *DAT_080075bc = *DAT_080075bc & 0xfffbffff;\n  data[3] = 0;\n  *(undefined4 *)(DAT_080075c4 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": true,
            "current_name": "setFlagAndClearData_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "PTR_DAT_0800020c": "dataPointer",
                "FUN_08000210": "callSecondFunction",
                "FUN_080001f8": "initializeData_080001f8"
            },
            "code": "void initializeData_080001f8(void)\n{\n  *PTR_DAT_0800020c = 0;\n  callSecondFunction();\n  return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "initializeData_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "PTR_DAT_08002fa4": "data_pointer2",
                "PTR_DAT_08002fa8": "data_pointer3",
                "puVar1": "pointer",
                "FUN_08002f74": "get_pointer_08002f74",
                "PTR_DAT_08002fa0": "data_pointer1"
            },
            "code": "uint8_t* get_pointer_08002f74() {\n  uint8_t* pointer = NULL;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\n    pointer = NULL;\n  }\n  else {\n    pointer = PTR_DAT_08002fa8 + (*PTR_DAT_08002fa4 * 64);\n  }\n  return pointer;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": true,
            "current_name": "get_pointer_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "iVar1": "i",
                "iVar3": "num_functions",
                "do_nothing_0800b5b0": "do_nothing",
                "ppcVar2": "function_pointer",
                "FUN_0800b3e8": "execute_functions_0800b3e8"
            },
            "code": "void execute_functions_0800b3e8() {\n  int num_functions = (int)PTR_FUNCTIONS_END - (int)PTR_FUNCTIONS_START >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_pointer = (code **)PTR_FUNCTIONS_START;\n    do {\n      i++;\n      (**function_pointer)();\n      function_pointer++;\n    } while (num_functions != i);\n  }\n  function_pointer = (code **)PTR_POST_FUNCTIONS_START;\n  int num_post_functions = (int)PTR_POST_FUNCTIONS_END - (int)PTR_POST_FUNCTIONS_START >> 2;\n  do_nothing();\n  num_post_functions = num_post_functions >> 2;\n  if (num_post_functions != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**function_pointer)();\n      function_pointer++;\n    } while (num_post_functions != i);\n  }\n  return;\n}",
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": true,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "uVar1": "result",
                "uStack_24": "temp_array[1]",
                "param_1": "input_value",
                "local_28": "temp_array[0]",
                "param_2": "input_flag",
                "uVar2": "temp_value",
                "local_20": "temp_index",
                "FUN_080096e8": "calculate_result_080096e8"
            },
            "code": "int calculate_result_080096e8(int input_value, uint input_flag){\n    int result;\n    uint temp_value;\n    int temp_array[2];\n    int temp_index;\n    \n    if (MAX_INPUT_VALUE < (int)(input_flag & 0x7fffffff)) {\n        result = calculate_output(input_value, input_flag, 0, 0, 0);\n    }\n    else {\n        temp_value = calculate_temp_value(input_value, input_flag, temp_array);\n        temp_index = temp_value & 3;\n        if (temp_index == 1) {\n            result = calculate_output(temp_array[0], temp_array[1], 0, 0);\n        }\n        else if (temp_index == 2) {\n            result = calculate_output(temp_array[0], temp_array[1], 0, 0, 1);\n        }\n        else if (temp_index == 0) {\n            result = calculate_output(temp_array[0], temp_array[1], 0, 0, 1);\n        }\n        else {\n            result = calculate_output(temp_array[0], temp_array[1], 0, 0);\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "calculate_result_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "DAT_08006a54": "data",
                "param_1": "bitPosition",
                "FUN_08006a18": "isBitSet_08006a18"
            },
            "code": "bool isBitSet_08006a18(uint8_t bitPosition)\n{\n    uint32_t* DAT_08006a54 = (uint32_t*)(DAT_08006a54 + (((uint32_t)bitPosition >> 5) + 0x40) * 4);\n    uint32_t mask = 1 << (bitPosition & 0x1f);\n    return ((*DAT_08006a54) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": true,
            "current_name": "isBitSet_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "PTR_08008e3c": "get_ptr",
                "FUN_08002c18": "calculate_offsets_08002c18",
                "iVar2": "offset2",
                "uVar1": "offset1",
                "param_1": "base_address",
                "PTR_08009318": "calculate_offset",
                "local_1c": "local_1c",
                "PTR_08008e44": "get_ptr",
                "PTR_08008eec": "calculate_offset",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar3": "temp_uint",
                "local_20": "temp_int2",
                "uVar5": "local_1c",
                "PTR_08008bf0": "get_ptr",
                "uVar4": "temp_uint2",
                "PTR_08008590": "get_ptr",
                "uVar7": "temp_int",
                "uVar6": "temp_uint3",
                "DAT_08002e04": "temp_ptr"
            },
            "code": "void calculate_offsets_08002c18(int base_address, int param_2, int param_3)\n{\n  int offset1;\n  int offset2;\n  int offset3;\n  uint temp_uint;\n  uint temp_uint2;\n  uint local_1c;\n  \n  int ptr1 = PTR_08008e3c(base_address + 0x3c);\n  offset1 = PTR_08008eec(ptr1, param_2);\n  int ptr2 = PTR_08008e3c(base_address + 0x3c);\n  offset2 = PTR_08008eec(ptr2, param_3);\n  \n  int ptr3 = PTR_08008e3c(base_address + 0x30);\n  uint temp_uint3 = *(uint *)(base_address + 0x30);\n  temp_uint3 *= 0x32;\n  uint* DAT_08002e04 = (uint*)DAT_08002e04;\n  offset3 = PTR_08008eec(DAT_08002e04, temp_uint3);\n  \n  int temp_int = -offset2;\n  int ptr4 = PTR_08008e3c(base_address + 0x28);\n  int ptr5 = PTR_08008e3c(base_address + 0x3c);\n  int ptr6 = PTR_08008e3c(offset3);\n  int ptr7 = PTR_08008e3c(*(uint *)(base_address + 0x10));\n  int temp_int2 = *(uint *)(base_address + 0x10);\n  if (temp_int2 - ptr6 - PTR_08008eec(ptr4, ptr5, ptr6) < 0) {\n    temp_uint = PTR_08008eec(ptr4, ptr5, ptr6, ptr7);\n    temp_uint2 = PTR_08008eec(ptr7);\n    temp_uint2 = temp_uint2 & ~((int)temp_uint2 >> 0x1f);\n    local_1c = *(uint *)(base_address + 0x10);\n    if ((int)temp_uint2 <= (int)*(uint *)(base_address + 0x10)) {\n      local_1c = temp_uint2;\n    }\n    offset3 = 0;\n  }\n  *(uint *)(base_address + 0x34) = local_1c;\n  *(uint *)(base_address + 0x38) = temp_int2 - ptr6 + offset3 + local_1c;\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008e3c",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080094c0",
                "FUN_08009318"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": true,
            "current_name": "calculate_offsets_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "is_bit_set_08006ac0",
                "DAT_08006afc": "data",
                "param_1": "bit_index",
                "PTR_DAT_08006afc": "data_ptr"
            },
            "code": "bool is_bit_set_08006ac0(uint8_t bit_index){\n    uint32_t* PTR_DAT_08006afc = (uint32_t*)(DAT_08006afc + (((uint32_t)bit_index >> 5) + 0x80) * 4);\n    uint32_t mask = 1 << (bit_index & 0x1f);\n    return ((*PTR_DAT_08006afc) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": true,
            "current_name": "is_bit_set_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": true,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": true,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "puVar2": "current_data_block",
                "puVar3": "previous_data_backup",
                "FUN_08002ba8": "decode_data_08002ba8",
                "local_9": "current_byte",
                "puVar1": "previous_data_block",
                "local_10": "current_data",
                "local_14": "previous_data"
            },
            "code": "void decode_data_08002ba8(void)\n{\n  uint8_t current_byte;\n  uint8_t *previous_data = NULL;\n  uint8_t *current_data = NULL;\n  uint8_t *previous_data_backup = NULL;\n  current_byte = *DATA_START;\n  while (current_byte != *DATA_END) {\n    previous_data_backup = previous_data;\n    previous_data = current_data;\n    current_data = DATA_LOOKUP_TABLE + (uint)current_byte * 0x40;\n    decode_data_08002ba8_block(previous_data, current_data);\n    current_byte = get_next_byte(current_byte);\n  }\n  decode_data_08002ba8_block(previous_data, current_data, NULL, previous_data_backup);\n  return;\n}\n",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": true,
            "current_name": "decode_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "uVar1": "is_negative",
                "param_1": "input1",
                "FUN_0800919c": "calculate_result_0800919c",
                "param_2": "input2",
                "uVar3": "doubled_input2",
                "uVar2": "doubled_input1",
                "uVar4": "combined_inputs",
                "bVar5": "is_zero"
            },
            "code": "uint calculate_result_0800919c(uint input1, uint input2)\n{\n  bool is_negative;\n  uint doubled_input1;\n  uint doubled_input2;\n  uint combined_inputs;\n  bool is_zero;\n  \n  doubled_input1 = input1 * 2;\n  doubled_input2 = input2 * 2;\n  if (((int)doubled_input1 >> 0x18 == -1 || (int)doubled_input2 >> 0x18 == -1) && ((((int)doubled_input1 >> 0x18 == -1 && ((input1 & 0x7fffff) != 0)) || (((int)doubled_input2 >> 0x18 == -1 && ((input2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_inputs = doubled_input1 | input2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input1 ^ input2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input1 = doubled_input1 + input2 * -2;\n    is_zero = input1 == 0;\n  }\n  if ((is_negative && doubled_input2 <= doubled_input1) && !is_zero) {\n    input1 = (int)input2 >> 0x1f;\n  }\n  if (!is_negative || doubled_input2 > doubled_input1) {\n    input1 = ~((int)input2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input1 = input1 | 1;\n  }\n  return input1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": true,
            "current_name": "calculate_result_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "imported": true,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "iVar3": "leading_zero_count",
                "uVar1": "concat_1",
                "param_1": "input",
                "FUN_0800854c": "convert_uint64_to_concat44_0800854c",
                "uVar2": "concat_2",
                "uVar4": "shift_amount_1",
                "bVar6": "carry_flag_2",
                "bVar5": "carry_flag_1",
                "in_r12": "difference",
                "bVar7": "borrow_flag"
            },
            "code": "ulonglong convert_uint64_to_concat44_0800854c(uint input)\n{\n  uint leading_zero_count;\n  uint shift_amount_1;\n  uint shift_amount_2;\n  uint concat_1 = 0;\n  uint concat_2 = 0;\n  uint difference;\n  bool carry_flag_1;\n  bool carry_flag_2;\n  bool borrow_flag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  leading_zero_count = count_leading_zeroes(input);\n  shift_amount_1 = leading_zero_count + 21;\n  borrow_flag = SBORROW4(shift_amount_1, 32);\n  shift_amount_2 = leading_zero_count - 11;\n  carry_flag_1 = (int)shift_amount_2 < 0;\n  carry_flag_2 = shift_amount_2 == 0;\n  if ((int)shift_amount_1 < 32) {\n    borrow_flag = SCARRY4(shift_amount_2, 12);\n    leading_zero_count = leading_zero_count + 1;\n    carry_flag_1 = leading_zero_count < 0;\n    carry_flag_2 = leading_zero_count == 0;\n    shift_amount_2 = shift_amount_1;\n    if (!carry_flag_2 && carry_flag_1 == borrow_flag) {\n      concat_1 = input << (shift_amount_1 & 0xff);\n      input = input >> (0xcU - leading_zero_count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (carry_flag_2 || carry_flag_1 != borrow_flag) {\n    difference = 32 - shift_amount_2;\n  }\n  input = input << (shift_amount_2 & 0xff);\n  if (carry_flag_2 || carry_flag_1 != borrow_flag) {\n    input = input | 0U >> (difference & 0xff);\n  }\n  if (carry_flag_2 || carry_flag_1 != borrow_flag) {\n    concat_1 = 0 << (shift_amount_2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)shift_amount_1 < 1075) {\n    return CONCAT44(concat_1 + (0x432 - shift_amount_1) * 0x100000, concat_2);\n  }\n  difference = ~(0x432 - shift_amount_1);\n  if (0x1e < (int)difference) {\n    return (ulonglong)(input >> (difference - 0x1f & 0xff));\n  }\n  shift_amount_2 = difference - 0x13;\n  if (shift_amount_2 == 0 || shift_amount_2 < 0 != SCARRY4(difference - 0x1f, 12)) {\n    difference = difference + 1;\n    return CONCAT44(input >> (difference & 0xff),\n                    concat_1 >> (difference & 0xff) | input << (0x20 - difference & 0xff));\n  }\n  return (ulonglong)(concat_1 >> (0x20 - (0xcU - shift_amount_2) & 0xff) | input << (0xcU - shift_amount_2 & 0xff));\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": true,
            "current_name": "convert_uint64_to_concat44_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "iVar1": "leading_zeroes_count",
                "iVar4": "hash_value",
                "param_1": "input",
                "FUN_08008e44": "calculate_hash_08008e44",
                "uVar3": "sign_bit_mask",
                "uVar2": "shift_amount",
                "uVar5": "overflow_mask"
            },
            "code": "uint calculate_hash_08008e44(uint input)\n{\n  int leading_zeroes_count;\n  uint sign_bit_mask;\n  uint hash_value;\n  int shift_amount;\n  uint overflow_mask;\n  \n  sign_bit_mask = input & 0x80000000;\n  if ((int)sign_bit_mask < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leading_zeroes_count = count_leading_zeroes(input);\n  shift_amount = leading_zeroes_count - 8;\n  hash_value = ((sign_bit_mask | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (leading_zeroes_count > 7) {\n    overflow_mask = 0 << (shift_amount & 0xff);\n    hash_value = hash_value + (input << (shift_amount & 0xff)) + (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < overflow_mask);\n    if (overflow_mask == 0x80000000) {\n      hash_value = hash_value & 0xfffffffe;\n    }\n    return hash_value;\n  }\n  shift_amount = leading_zeroes_count + 0x18U;\n  overflow_mask = input << (shift_amount & 0xff);\n  hash_value = hash_value + ((input >> (0x20 - (shift_amount & 0xff))) - ((int)overflow_mask >> 0x1f));\n  if ((overflow_mask & 0x7fffffff) == 0) {\n    hash_value = hash_value & ~(overflow_mask >> 0x1f);\n  }\n  return hash_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_08002c18",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003004",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003618"
            ],
            "imported": true,
            "current_name": "calculate_hash_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "param_1": "parameter_index",
                "FUN_0800733e": "set_parameter_value_0800733e",
                "param_2": "parameter_value",
                "param_3": "parameter_type"
            },
            "code": "void set_parameter_value_0800733e(int parameter_index, unsigned short parameter_value, char parameter_type) {\n  if (parameter_type == '\\0') {\n    *(unsigned short *)(parameter_index + 0x1a) = parameter_value;\n  }\n  else {\n    *(unsigned short *)(parameter_index + 0x18) = parameter_value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": true,
            "current_name": "set_parameter_value_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_08005790": "initialize_first_component",
                "*(undefined2 *)(PTR_DAT_08005858 + 0x18)": "*(int *)(PTR_DAT_08005858 + 0x18)",
                "FUN_080052ac": "initialize_parameter",
                "FUN_0800583c": "initialize_program_0800583c",
                "FUN_080057e4": "initialize_second_component"
            },
            "code": "void initialize_program_0800583c(void)\n{\n  int parameter = *(undefined2 *)(PTR_DAT_08005858 + 0x18);\n  initialize_parameter(parameter);\n  initialize_first_component();\n  initialize_second_component();\n  return;\n}",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "initialize_program_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "iVar1": "loop_condition",
                "PTR_DAT_08001efc": "PTR_DATA_SECTION",
                "param_1": "param_1",
                "FUN_08003a74": "perform_check",
                "FUNC_08003004": "execute_function",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "FUN_08001e98": "check_and_execute_function_08001e98",
                "FUN_0800585c": "perform_additional_function",
                "FUN_08002fac": "check_loop_condition"
            },
            "code": "void check_and_execute_function_08001e98(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4, undefined param_5)\\n{\\n  int loop_condition;\\n  if (PTR_DAT_08001efc[1] != \"\\a\") {\\n    do {\\n      perform_check();\\n      if (*PTR_DAT_08001efc != \"\\0\") {\\n        return;\\n      }\\n      loop_condition = check_loop_condition();\\n    } while (loop_condition != 0);\\n    execute_function(param_1, param_2, param_3, param_4, param_5);\\n    if (PTR_DAT_08001efc[1] == \"\\0\") {\\n      PTR_DAT_08001efc[1] = 2;\\n    }\\n    if (PTR_DAT_08001efc[0x10] != \"\\0\") {\\n      perform_additional_function();\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08003a74",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08002fac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "check_and_execute_function_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "shifted_index": "shifted_index",
                "param_1": "bit_index",
                "PTR_DAT_08006a14": "array",
                "bit_position": "bit_position",
                "array_index": "array_index",
                "FUN_080069e4": "set_bit_in_array_at_index_080069e4"
            },
            "code": "void set_bit_in_array_at_index_080069e4(uint8_t bit_index, uint32_t* PTR_DAT_08006a14){\n    uint8_t shifted_index = bit_index >> 5;\n    uint8_t bit_position = bit_index & 0x1f;\n    uint32_t* PTR_DAT_08006a14_index = (uint32_t*)(DAT_08006a14 + (shifted_index + 0x20) * 4);\n    *PTR_DAT_08006a14_index = 1 << bit_position;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_at_index_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "param_1": "value",
                "param_2": "shift_amount",
                "FUN_0800b2d4": "set_msb_bit_and_shift_right_0800b2d4"
            },
            "code": "uint set_msb_bit_and_shift_right_0800b2d4(uint value, uint shift_amount) {\n  uint shifted_value = (value | 0x80000000) + 0x100000;\n  uint result = shifted_value >> shift_amount;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": true,
            "current_name": "set_msb_bit_and_shift_right_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "iVar1": "leading_zeros",
                "iVar3": "multiplier",
                "shifted_output": "shifted_output",
                "param_1": "input",
                "shifted_zeroes": "shifted_zeroes",
                "result": "result",
                "uVar2": "shift_amount",
                "uVar4": "carry",
                "shifted_input": "shifted_input"
            },
            "code": "uint calculate_hash_08008e3c(uint input)\n{\n  int leading_zeros = count_leading_zeroes(input);\n  int shift_amount = leading_zeros - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeros > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < 0);\n    uint result = multiplier + shifted_input + shifted_zeroes + carry;\n    if (shifted_input == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeros + 0x18U & 0xff);\n  uint shifted_output = (input >> (0x20 - (leading_zeros + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_output = shifted_output & ~(shifted_input >> 0x1f);\n  }\n  return shifted_output + multiplier;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002c18",
                "FUN_08002638"
            ],
            "imported": true,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "DAT_080096e4": "mask",
                "FUN_08009654": "calculate_double_precision_number_08009654",
                "lVar3": "result",
                "uVar1": "biased_exponent",
                "param_1": "mantissa",
                "param_2": "exponent",
                "uVar2": "shift_amount"
            },
            "code": "long long calculate_double_precision_number_08009654(uint32_t mantissa, uint32_t exponent) {\n    long long result = ((long long)mantissa << 32) | exponent;\n    uint32_t biased_exponent = (exponent << 1) >> 21;\n    int32_t exponent_difference = biased_exponent - 1023;\n    if (exponent_difference < 20) {\n        if (exponent_difference < 0) {\n            uint32_t sign_bit = mantissa & 0x80000000;\n            if (exponent_difference == -1) {\n                sign_bit |= 0x3ff00000;\n            }\n            result = (long long)sign_bit << 32;\n        }\n        else {\n            uint32_t shift_amount = exponent_difference & 0xff;\n            uint32_t DAT_080096e4 = DAT_080096e4 >> shift_amount;\n            if ((mantissa & DAT_080096e4) != 0) {\n                uint32_t round_bit = 0x80000 >> shift_amount;\n                uint32_t new_mantissa = (mantissa + round_bit) & ~DAT_080096e4;\n                result = ((long long)exponent << 32) | new_mantissa;\n            }\n        }\n    }\n    else if (exponent_difference == 1024) {\n        result = FUNC_080082d4();\n    }\n    return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": true,
            "current_name": "calculate_double_precision_number_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2",
                "_DAT_40000000": "flag1",
                "_DAT_4000000c": "flag2"
            },
            "code": "void clear_flags_08007bc2(void)\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": true,
            "current_name": "clear_flags_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "uVar1": "return_value",
                "FUN_08009410": "check_parameters_and_call_functions_08009410",
                "uStack_24": "local_variable_2",
                "param_1": "initial_param",
                "local_28": "local_variable_1",
                "param_2": "parameter_2",
                "uStack_1c": "local_variable_4",
                "uVar2": "function_result",
                "local_20": "local_variable_3"
            },
            "code": "undefined4 check_parameters_and_call_functions_08009410(undefined4 initial_param,uint parameter_2)\n{\n  undefined4 return_value;\n  uint function_result;\n  undefined4 local_variable_1;\n  undefined4 local_variable_2;\n  undefined4 local_variable_3;\n  undefined4 local_variable_4;\n  if (DAT_080094b4 < (int)(parameter_2 & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(parameter_2 & 0x7fffffff)) {\n      return_value = FUNC_080082d0(initial_param, parameter_2, initial_param, parameter_2);\n    }\n    else {\n      function_result = FUNC_08009d78(initial_param, parameter_2, &local_variable_1);\n      function_result = function_result & 3;\n      if (function_result == 1) {\n        return_value = FUN_0800adf0(local_variable_1, local_variable_2, local_variable_3, local_variable_4, 1);\n      }\n      else if (function_result == 2 || function_result == 0) {\n        return_value = FUNC_0800a348(local_variable_1, local_variable_2, local_variable_3, local_variable_4);\n      }\n      else {\n        return_value = FUN_0800adf0(local_variable_1, local_variable_2, local_variable_3, local_variable_4, 1);\n      }\n    }\n    return return_value;\n  }\n  return_value = FUNC_0800a348(initial_param, parameter_2, 0, 0);\n  return return_value;\n}",
            "called": [
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "check_parameters_and_call_functions_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "*PTR_DAT_08003614": "*ptr_array",
                "FUN_080035ec": "store_data_to_ptr_array_080035ec",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "PTR_DAT_08003614": "ptr_array"
            },
            "code": "void store_data_to_ptr_array_080035ec(int data_1, int data_2, int data_3)\n{\n  *(int *)PTR_DAT_08003614 = data_1;\n  *(int *)(PTR_DAT_08003614 + 4) = data_2;\n  *(int *)(PTR_DAT_08003614 + 8) = data_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": true,
            "current_name": "store_data_to_ptr_array_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "DAT_08006c98": "data_mask",
                "DAT_08006c94": "data_ptr_start",
                "FUN_08006c70": "synchronize_data_and_wait_08006c70",
                "uint": "unsigned int",
                "DataSynchronizationBarrier": "synchronize_data"
            },
            "code": "void synchronize_data_and_wait_08006c70(void)\n{\n  synchronize_data();\n  uint* data_ptr = (uint*)(DAT_08006c94 + 0xc);\n  uint data = *data_ptr;\n  uint mask = 0x700;\n  data &= mask;\n  data |= DAT_08006c98;\n  *data_ptr = data;\n  synchronize_data();\n  while(true) {}\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": true,
            "current_name": "synchronize_data_and_wait_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "uVar1": "converted_char",
                "param_1": "character",
                "FUN_08006d98": "convert_char_to_int_and_print_08006d98",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_08006b54": "convert_char_to_int",
                "FUN_08006c04": "print_converted_char"
            },
            "code": "void convert_char_to_int_and_print_08006d98(char character, int param_2, int param_3, int param_4)\n{\n  int converted_char = convert_char_to_int((int)character);\n  print_converted_char(converted_char, param_2, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": true,
            "current_name": "convert_char_to_int_and_print_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_ptr_value_08005a68",
                "PTR_DAT_08005a80": "ptr"
            },
            "code": "void increment_ptr_value_08005a68(int* PTR_DAT_08005a80){\n  *PTR_DAT_08005a80 = *PTR_DAT_08005a80 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": true,
            "current_name": "increment_ptr_value_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "PTR_DAT_080079d8": "PTR_data_array",
                "FUN_080079c0": "initialize_data_080079c0",
                "PTR_DAT_080079dc": "PTR_data_initialized_flag"
            },
            "code": "void initialize_data_080079c0(void)\n{\n  set_data_to_zero(PTR_DAT_080079d8, 0, sizeof(data_array));\n  *(int *)PTR_DAT_080079dc = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "returnZero_0800b2e0"
            },
            "code": "int32_t returnZero_0800b2e0(void) {\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": true,
            "current_name": "returnZero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "uVar1": "result1",
                "param_1": "input1",
                "param_2": "input2",
                "FUN_08002908": "calculate_result_08002908",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "result2"
            },
            "code": "undefined4 calculate_result_08002908(undefined4 input1, undefined4 input2, undefined4 input3, undefined4 input4)\n{\n  undefined4 result1 = FUNC_08008cdc(input3, input3);\n  result1 = FUNC_08008eec(result1, input4);\n  undefined4 result2 = FUNC_08008eec(input1, input1);\n  result1 = FUNC_08008cd8(result1, result2);\n  result2 = FUNC_08008eec(input2, input2);\n  result1 = FUNC_08008cdc(result1, result2);\n  result2 = FUNC_08008eec(input3, 0x40800000);\n  result1 = FUNC_08009054(result1, result2);\n  return result1;\n}",
            "called": [
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": true,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "param_1": "value",
                "_DAT_40000034": "global_variable",
                "FUN_08007c40": "set_global_variable_08007c40"
            },
            "code": "void set_global_variable_08007c40(int value)\n{\n  _DAT_40000034 = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": true,
            "current_name": "set_global_variable_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "lVar6": "final_result",
                "bVar4": "carry_flag",
                "iVar1": "result",
                "param_1": "input_1",
                "param_2": "input_2",
                "FUN_080094c0": "calculate_value_080094c0",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar3": "shift_subtracted",
                "uVar2": "shift",
                "uVar5": "temp_result"
            },
            "code": "longlong calculate_value_080094c0(uint input_1, uint input_2, undefined4 param_3, undefined4 param_4)\n{\n  int result;\n  uint shift;\n  uint shift_subtracted;\n  bool carry_flag;\n  undefined8 temp_result;\n  longlong final_result;\n  \n  shift_subtracted = (input_2 << 1) >> 0x15;\n  shift = shift_subtracted - 0x3ff;\n  if ((int)shift < 0x14) {\n    if ((int)shift < 0) {\n      temp_result = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result = FUN_08008b60((int)temp_result, (int)((ulonglong)temp_result >> 0x20), 0, 0);\n      final_result = CONCAT44(input_2, input_1);\n      if (result != 0) {\n        if ((int)input_2 < 0) {\n          if ((input_1 | input_2 & 0x7fffffff) != 0) {\n            input_2 = DAT_080095b4;\n          }\n          final_result = (ulonglong)input_2 << 0x20;\n        }\n        else {\n          final_result = 0;\n        }\n      }\n    }\n    else {\n      shift_subtracted = DAT_080095b0 >> (shift & 0xff);\n      final_result = CONCAT44(input_2, input_1);\n      if ((input_2 & shift_subtracted | input_1) != 0) {\n        temp_result = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n        result = FUN_08008b60((int)temp_result, (int)((ulonglong)temp_result >> 0x20), 0, 0);\n        final_result = CONCAT44(input_2, input_1);\n        if (result != 0) {\n          if ((int)input_2 < 0) {\n            input_2 = input_2 + (0x100000 >> (shift & 0xff));\n          }\n          final_result = (ulonglong)(input_2 & ~shift_subtracted) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shift < 0x34) {\n    shift_subtracted = 0xffffffff >> (shift_subtracted - 0x413 & 0xff);\n    final_result = CONCAT44(input_2, input_1);\n    if ((shift_subtracted & input_1) != 0) {\n      temp_result = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result = FUN_08008b60((int)temp_result, (int)((ulonglong)temp_result >> 0x20), 0, 0);\n      final_result = CONCAT44(input_2, input_1);\n      if (result != 0) {\n        if ((int)input_2 < 0) {\n          if (shift == 0x14) {\n            input_2 = input_2 + 1;\n          }\n          else {\n            shift = 1 << (0x34 - shift & 0xff);\n            carry_flag = CARRY4(shift, input_1);\n            input_1 = shift + input_1;\n            if (carry_flag != false) {\n              input_2 = input_2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input_2, input_1 & ~shift_subtracted);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input_2, input_1);\n    if (shift == 0x400) {\n      final_result = FUNC_080082d4();\n    }\n  }\n  return final_result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_08002c18",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_0800a5a0"
            ],
            "imported": true,
            "current_name": "calculate_value_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_080005b4",
                "FUN_08002c18",
                "FUN_080024c4",
                "FUN_08001f00",
                "FUN_08002978",
                "FUN_08002908",
                "FUN_08003618",
                "FUN_08001994",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_080028bc",
                "FUN_08003826",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "bVar1": "shifted_byte",
                "param_1": "input_byte",
                "FUN_08006b54": "get_shifted_byte_08006b54"
            },
            "code": "byte get_shifted_byte_08006b54(byte input_byte)\\n{\\n  byte shifted_byte;\\n  if ((char)input_byte < \"\\0\") {\\n    shifted_byte = *(byte *)((input_byte & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    shifted_byte = *(byte *)((char)input_byte + DAT_08006b9c + 0x300);\\n  }\\n  return shifted_byte >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": true,
            "current_name": "get_shifted_byte_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "uint": "unsigned int",
                "PTR_": "ptr_",
                "FUN_08007e84": "get_first_byte_from_ptr_plus_four_08007e84",
                "DAT_": "dat_"
            },
            "code": "uint get_first_byte_from_ptr_plus_four_08007e84()\n{\n  uint* PTR_to_uint = (uint*)(DAT_08007ea0 + 4);\n  uint uint_at_PTR_plus_four = *PTR_to_uint;\n  uint first_byte = uint_at_PTR_plus_four & 0xff;\n  return first_byte;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": true,
            "current_name": "get_first_byte_from_ptr_plus_four_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_08007bc2": "check_for_flag_and_index",
                "PTR_DAT_0800580c": "flag_array",
                "do_nothing_0800530c": "do_nothing",
                "FUN_080057e4": "check_and_do_nothing_if_needed_080057e4",
                "PTR_DAT_08005810": "index_array"
            },
            "code": "void check_and_do_nothing_if_needed_080057e4(void)\n{\n  check_for_flag_and_index();\n  if ((PTR_DAT_0800580c[60] != -1) || ((PTR_DAT_08005810[8] & 0x20) != 0)) {\n    do_nothing();\n  }\n  return;\n}",
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_08001d4c",
                "FUN_080025e8",
                "FUN_0800583c",
                "FUN_080053a0"
            ],
            "imported": true,
            "current_name": "check_and_do_nothing_if_needed_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "uVar1": "result",
                "FUN_08006998": "calculate",
                "FUN_08006d8a": "get_result_08006d8a"
            },
            "code": "int get_result_08006d8a(void)\n{\n  int result = calculate();\n  return result;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": true,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "iVar2": "sum",
                "uVar1": "shift",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar3": "num3_upper",
                "uVar4": "concat_nums",
                "FUN_0800b2e8": "calculate_hash_0800b2e8"
            },
            "code": "uint calculate_hash_0800b2e8(uint num1, uint num2, int num3, undefined4 num4) {\n  uint hash = 0;\n  int sum = 0;\n  ulonglong concat_nums = CONCAT44(num2, num1);\n  uint shift = (num2 << 1) >> 0x15;\n  if (shift == 0) {\n    if ((num1 | num2 & 0x7fffffff) == 0) {\n      return num1;\n    }\n    concat_nums = FUNC_08008640(num1, num2, 0, DAT_0800b3c8);\n    if (num3 < DAT_0800b3cc) goto LAB_0800b34a;\n    shift = ((uint)((int)(concat_nums >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shift == 0x7ff) {\n    hash = FUNC_080082d4(num1, num2, num1, num2, num4);\n    return hash;\n  }\n  uint num3_upper = (uint)(concat_nums >> 0x20);\n  sum = shift + num3;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)concat_nums;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum, 0x35)) {\n      hash = FUNC_08008640((uint)concat_nums, num3_upper & 0x800fffff | (sum + 0x36) * 0x100000, 0, DAT_0800b3d8);\n      return hash;\n    }\n    if (num3 < 0xc351) {\n      concat_nums = concat_nums & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      goto LAB_0800b34a;\n    }\n  }\n  hash = FUNC_08008640(DAT_0800b3d4, num3_upper & 0x80000000 | 0x7e37e43c, DAT_0800b3c0, DAT_0800b3c4);\n  return hash;\n}",
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": true,
            "current_name": "calculate_hash_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": true,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "checkAndCallFunction_08007520",
                "param_1": "inputParam",
                "0x3e": "62",
                "FUN_080073d4": "callFunctionWithArg"
            },
            "code": "void checkAndCallFunction_08007520(uint inputParam)\n{\n  if ((inputParam & 1) != 0) {\n    callFunctionWithArg(62);\n  }\n  return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": true,
            "current_name": "checkAndCallFunction_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "calculate_result_08007884",
                "iVar1": "first_number",
                "iVar2": "second_number",
                "iVar3": "third_number",
                "iVar4": "fourth_number",
                "iVar5": "fifth_number",
                "FUN_08007854": "get_number",
                "uVar6": "result"
            },
            "code": "uint calculate_result_08007884(void)\n{\n  int first_number = get_number(0x36);\n  int second_number = get_number(0x37);\n  int third_number = get_number(0x38);\n  int fourth_number = get_number(0x39);\n  int fifth_number = get_number(0xf);\n  uint result = get_number(0);\n  return result | first_number << 4 | second_number << 3 | third_number << 2 | fourth_number << 1 | fifth_number << 7;\n}",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": true,
            "current_name": "calculate_result_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "PTR_s___default_seek__mm_min___6__0800448c": "default_seek_mm_min",
                "PTR_s___n_decimals__int___13__080044b0": "n_decimals",
                "FUN_08004250": "initialize_stepper_motor_settings_08004250",
                "PTR_DAT_08004470": "step_mm",
                "PTR_s___default_feed__mm_min___5__08004488": "default_feed_mm_min",
                "PTR_s___hard_limits__bool___17__080044c0": "hard_limits",
                "PTR_s____19__080044cc": "unknown_setting_19",
                "PTR_DAT_08004474": "step_port",
                "PTR_s___acceleration__mm_sec_2___9__080044a0": "acceleration_mm_sec_2",
                "PTR_s___n_arc_correction__int___12__080044ac": "n_arc_correction_int",
                "PTR_s___step_idle_delay__msec___8__08004498": "step_idle_delay_msec",
                "PTR_s___auto_start__bool___15__080044b8": "auto_start",
                "PTR_s___junction_deviation__mm___10__080044a4": "junction_deviation_mm",
                "PTR_s___dir_port_invert_mask__int__080044e0": "dir_port_invert_mask",
                "PTR_s___x__step_mm___1__08004478": "x_step_mm",
                "PTR_s___homing_pull_off__mm___23__080044dc": "homing_pull_off_mm",
                "PTR_s___homing_dir_invert_mask__int__080044c8": "homing_dir_invert_mask",
                "PTR_s___homing_cycle__bool___18__080044c4": "homing_cycle",
                "PTR_s___invert_step_enable__bool___16__080044bc": "invert_step_enable",
                "PTR_s___arc__mm_segment___11__080044a8": "arc_mm_segment",
                "PTR_DAT_080044e4": "unknown_setting_24",
                "PTR_s___step_pulse__usec___4__08004484": "step_pulse_usec",
                "PTR_s___homing_debounce__msec___22__080044d8": "homing_debounce_msec",
                "PTR_s___report_inches__bool___14__080044b4": "report_inches",
                "PTR_s___y__step_mm___2__0800447c": "y_step_mm",
                "PTR_s___homing_feed__mm_min___20__080044d0": "homing_feed_mm_min",
                "PTR_s____7__08004494": "unknown_setting_7",
                "PTR_s___step_port_invert_mask__int__08004490": "step_port_invert_mask_int",
                "PTR_s___homing_seek__mm_min___21__080044d4": "homing_seek_mm_min",
                "PTR_s___z__step_mm___3__08004480": "z_step_mm"
            },
            "code": "void initialize_stepper_motor_settings_08004250(void)\n{\n    undefined4 PTR_s___step_pulse__usec___4__08004484;\n    undefined2 PTR_s___n_decimals__int___13__080044b0;\n    bool PTR_s___report_inches__bool___14__080044b4;\n    bool PTR_s___auto_start__bool___15__080044b8;\n    bool PTR_s___invert_step_enable__bool___16__080044bc;\n    bool PTR_s___hard_limits__bool___17__080044c0;\n    bool PTR_s___homing_cycle__bool___18__080044c4;\n    undefined2 PTR_s___homing_dir_invert_mask__int__080044c8;\n    undefined2 PTR_s___homing_debounce__msec___22__080044d8;\n    undefined2 PTR_s___dir_port_invert_mask__int__080044e0;\n    undefined4 PTR_s___homing_feed__mm_min___20__080044d0;\n    undefined4 PTR_s___homing_seek__mm_min___21__080044d4;\n    undefined2 PTR_s___homing_pull_off__mm___23__080044dc;\n    undefined4 PTR_s___acceleration__mm_sec_2___9__080044a0;\n    undefined4 PTR_s___junction_deviation__mm___10__080044a4;\n    undefined4 PTR_s___arc__mm_segment___11__080044a8;\n\n    FUN_080036c6(PTR_DAT_08004470);\n    FUN_08003826(*(undefined4 *)PTR_DAT_08004474);\n    FUN_080036c6(PTR_s___x__PTR_DAT_08004470___1__08004478);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 4));\n    FUN_080036c6(PTR_s___y__PTR_DAT_08004470___2__0800447c);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 8));\n    FUN_080036c6(PTR_s___z__PTR_DAT_08004470___3__08004480);\n    FUN_080037fc(step_idle_delay);\n    FUN_080036c6(PTR_s___step_pulse__usec___4__08004484);\n    PTR_s___step_pulse__usec___4__08004484 = FUNC_08009054(*(undefined4 *)(PTR_DAT_08004474 + 0x20), n_arc_correction);\n    FUN_08003826(PTR_s___step_pulse__usec___4__08004484);\n    FUN_080036c6(PTR_s___default_feed__mm_min___5__08004488);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x14));\n    FUN_080036c6(PTR_s___default_seek__mm_min___6__0800448c);\n    FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n    FUN_080036c6(PTR_s___PTR_DAT_08004474_invert_mask__int__08004490);\n    FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n    FUN_080036c6(PTR_s____7__08004494);\n    FUN_080037fc(PTR_DAT_08004474[0x3c]);\n    FUN_080036c6(PTR_s___step_idle_delay__msec___8__08004498);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x2c));\n    FUN_080036c6(PTR_s___acceleration__mm_sec_2___9__080044a0);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x24));\n    FUN_080036c6(PTR_s___junction_deviation__mm___10__080044a4);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x1c));\n    FUN_080036c6(PTR_s___arc__mm_segment___11__080044a8);\n    FUN_080037fc(PTR_DAT_08004474[0x3e]);\n    FUN_080036c6(PTR_s___n_arc_correction__int___12__080044ac);\n    FUN_080037fc(PTR_DAT_08004474[0x3d]);\n    FUN_080036c6(PTR_s___n_decimals__int___13__080044b0);\n    FUN_080037fc((PTR_DAT_08004474[0x28] & 1) != 0);\n    FUN_080036c6(PTR_s___report_inches__bool___14__080044b4);\n    FUN_080037fc((PTR_DAT_08004474[0x28] & 2) != 0);\n    FUN_080036c6(PTR_s___auto_start__bool___15__080044b8);\n    FUN_080037fc((PTR_DAT_08004474[0x28] & 4) != 0);\n    FUN_080036c6(PTR_s___invert_step_enable__bool___16__080044bc);\n    FUN_080037fc((PTR_DAT_08004474[0x28] & 8) != 0);\n    FUN_080036c6(PTR_s___hard_limits__bool___17__080044c0);\n    FUN_080037fc((PTR_DAT_08004474[0x28] & 0x10) != 0);\n    FUN_080036c6(PTR_s___homing_cycle__bool___18__080044c4);\n    FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n    FUN_080036c6(PTR_s___homing_dir_invert_mask__int__080044c8);\n    FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n    FUN_080036c6(PTR_s____19__080044cc);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x20));\n    FUN_080036c6(PTR_s___homing_feed__mm_min___20__080044d0);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x30));\n    FUN_080036c6(PTR_s___homing_seek__mm_min___21__080044d4);\n    FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x34));\n    FUN_080036c6(PTR_s___homing_debounce__msec___22__080044d8);\n    FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x38));\n    FUN_080036c6(PTR_s___homing_pull_off__mm___23__080044dc);\n    FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n    FUN_080036c6(PTR_s___dir_port_invert_mask__int__080044e0);\n    FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n    FUN_080036c6(PTR_DAT_080044e4);\n    return;\n}",
            "called": [
                "FUN_0800375c",
                "FUN_08009054",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_080037fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "imported": true,
            "current_name": "initialize_stepper_motor_settings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "print_character_08006dc4",
                "param_1": "character",
                "FUN_08006a58": "print_to_screen"
            },
            "code": "void print_character_08006dc4(char character){\n\tprint_to_screen((int)character);\n\treturn;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": true,
            "current_name": "print_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_at_position_08007402",
                "param_1": "position"
            },
            "code": "void set_bit_at_position_08007402(uint position) {\n  uint offset = position >> 4;\n  uint base_address = offset * 0x400 + 0x40020018;\n  uint bit_position = position & 0xf;\n  short* memory_address = (short*)base_address;\n  short bit_mask = (short)(1 << bit_position);\n  *memory_address = bit_mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": true,
            "current_name": "set_bit_at_position_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_char_08002870",
                "param_1": "input_char",
                "local_9": "incremented_char"
            },
            "code": "char increment_char_08002870(char input_char) {\n  char incremented_char = input_char + 1;\n  if (incremented_char == 0x12) {\n    incremented_char = 0;\n  }\n  return incremented_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": true,
            "current_name": "increment_char_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "do_nothing_080001ec": "do_nothing",
                "FUN_08000210": "do_nothing_twice_08000210",
                "do_nothing_080001d4": "do_nothing"
            },
            "code": "void do_nothing_twice_08000210(void)\n{\n  do_nothing();\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "imported": true,
            "current_name": "do_nothing_twice_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "param_1": "input_byte",
                "FUN_08005900": "process_byte_08005900",
                "PTR_DAT_08005978": "data_array"
            },
            "code": "int process_byte_08005900(byte input_byte) {\n  int result = 0;\n  if (input_byte == 0x7e) {\n    PTR_DAT_08005978[2] |= 2;\n    result = 1;\n  }\n  else if (input_byte < 0x7f) {\n    if (input_byte == 0x3f) {\n      PTR_DAT_08005978[2] |= 1;\n      result = 1;\n    }\n    else if (input_byte < 0x40) {\n      if (input_byte == 0x18) {\n        execute_function();\n        result = 1;\n      }\n      else if (input_byte == 0x21) {\n        PTR_DAT_08005978[2] |= 8;\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": true,
            "current_name": "process_byte_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "bVar2": "is_negative",
                "bVar1": "current_digit",
                "bVar3": "has_decimal",
                "local_c": "next_pos",
                "iVar4": "status",
                "param_1": "start_addr",
                "local_1c": "decimal",
                "local_16": "num_decimal_digits",
                "FUN_08002638": "parse_integer_08002638",
                "local_15": "num_decimal_places",
                "param_2": "input_str",
                "param_3": "output_int",
                "pcVar6": "start_pos",
                "pcVar5": "current_pos",
                "local_d": "current_char",
                "uVar7": "return_val",
                "local_14": "integer_part",
                "uVar8": "temp_val"
            },
            "code": "uint32_t parse_integer_08002638(int32_t start_addr, uint8_t *input_str, uint32_t *output_int) {\n  uint8_t current_char;\n  bool is_negative = false;\n  bool has_decimal = false;\n  int32_t integer_part = 0;\n  int32_t decimal_part = 0;\n  int32_t decimal_place = 1;\n  int32_t num_digits = 0;\n\n  char *current_pos = (char *)(start_addr + (uint32_t)*input_str);\n  current_char = *current_pos;\n  if (current_char == '-') {\n    is_negative = true;\n    current_char = *(current_pos + 1);\n    current_pos += 2;\n  }\n  else if (current_char == '+') {\n    current_char = *(current_pos + 1);\n    current_pos += 2;\n  }\n  else {\n    current_pos++;\n  }\n\n  while (current_char != '\\0') {\n    if (current_char == '.') {\n      has_decimal = true;\n      current_char = *(++current_pos);\n    }\n    else if (current_char >= '0' && current_char <= '9') {\n      num_digits++;\n      if (has_decimal) {\n        decimal_place *= 10;\n        decimal_part = decimal_part * 10 + (current_char - '0');\n      }\n      else {\n        integer_part = integer_part * 10 + (current_char - '0');\n      }\n      current_char = *(++current_pos);\n    }\n    else {\n      return 0;\n    }\n  }\n\n  if (num_digits == 0) {\n    return 0;\n  }\n\n  if (has_decimal) {\n    double decimal = (double)decimal_part / (double)decimal_place;\n    double result = (double)integer_part + decimal;\n    *output_int = (uint32_t)result;\n  }\n  else {\n    *output_int = integer_part;\n  }\n\n  if (is_negative) {\n    *output_int = ~(*output_int) + 1;\n  }\n\n  return 1;\n}",
            "called": [
                "FUN_08009214",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08008e3c",
                "FUN_08008640",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "parse_integer_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_08004250": "reset_data",
                "iVar1": "result",
                "FUN_08004030": "print_error_message",
                "FUN_08004dd2": "check_data",
                "FUN_08004d7c": "retrieve_data",
                "auStack_18": "data_buffer",
                "local_9": "i",
                "FUN_080051b4": "check_and_print_data_080051b4",
                "FUN_08004c48": "set_error_flag"
            },
            "code": "void check_and_print_data_080051b4(void)\n{\n  int result = check_data();\n  if (result == 0) {\n    print_error_message(10);\n    set_error_flag(1);\n    reset_data();\n  }\n  for (int i = 0; i < 8; i++) {\n    result = retrieve_data(i, data_buffer);\n    if (result == 0) {\n      print_error_message(10);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004c48",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "check_and_print_data_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "ptr_1": "ptr_1",
                "ptr_2": "ptr_2",
                "ptr_3": "ptr_3",
                "stack_var_2": "stack_var_2",
                "param_1": "input_param_1",
                "stack_var_1": "stack_var_1",
                "input_int_1": "input_int_1",
                "stack_var_4": "stack_var_4",
                "stack_var_3": "stack_var_3",
                "input_int_2": "input_int_2",
                "stack_var_5": "stack_var_5",
                "result": "result",
                "flag_2": "flag_2",
                "flag_1": "flag_1",
                "param_2": "input_param_2",
                "input_char": "input_char",
                "FUN_080098d0": "process_data_080098d0"
            },
            "code": "undefined4 process_data_080098d0(undefined4 param_1,undefined4 param_2)\\n{\\n  char input_char;\\n  undefined4 result;\\n  int input_int_1;\\n  undefined4 *ptr_1;\\n  int *ptr_2;\\n  undefined4 flag_1;\\n  undefined *ptr_3;\\n  undefined4 flag_2;\\n  undefined4 stack_var_1;\\n  undefined4 stack_var_2;\\n  undefined4 stack_var_3;\\n  undefined4 stack_var_4;\\n  undefined8 stack_var_5;\\n  int input_int_2;\\n  result = FUN_0800a1bc();\\n  input_char = *PTR_DAT_08009988;\\n  if (((input_char == -1) || (input_int_2 = FUN_08008b74(param_1,param_2,param_1,param_2), input_int_2 != 0)) || (input_int_1 = FUN_08008b24(param_1,param_2,0,0), input_int_1 == 0)) {\\n    return result;\\n  }\\n  flag_1 = 1;\\n  ptr_3 = PTR_DAT_0800998c;\\n  flag_2 = param_1;\\n  stack_var_1 = param_2;\\n  stack_var_2 = param_1;\\n  stack_var_3 = param_2;\\n  if (input_char == \"\\0\") {\\n    stack_var_5 = 0;\\nLAB_0800996c:\\n    input_int_1 = FUN_0800b2e0(&flag_1);\\n    if (input_int_1 != 0) goto joined_r0x0800997a;\\n  }\\n  else {\\n    stack_var_5 = FUNC_08008894(0,0,0,0);\\n    if (input_char != \"\\x02\") goto LAB_0800996c;\\n  }\\n  ptr_1 = (undefined4 *)FUN_0800b3dc();\\n  *ptr_1 = 0x21;\\njoined_r0x0800997a:\\n  if (input_int_2 != 0) {\\n    ptr_2 = (int *)FUN_0800b3dc();\\n    *ptr_2 = input_int_2;\\n  }\\n  return (undefined4)stack_var_5;\\n}",
            "called": [
                "FUN_08008894",
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_08008b74",
                "FUN_0800b2e0",
                "FUN_0800a1bc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "process_data_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "bVar1": "is_valid",
                "param_1": "address",
                "FUN_08005c30": "is_valid_address_08005c30"
            },
            "code": "bool is_valid_address_08005c30(unsigned int address)\n{\n  bool is_valid = address < 0x1000000;\n  if (is_valid) {\n    PTR_DAT_08005c70[1] = address - 1;\n    set_flags();\n    PTR_DAT_08005c70[2] = 0;\n    *PTR_DAT_08005c70 = 7;\n  }\n  return !is_valid;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": true,
            "current_name": "is_valid_address_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": true,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "FUNC_0800056c"
            },
            "code": "\nundefined4 FUNC_0800056c(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  if (PTR_DAT_080005b0[3] != '\\0') {\n    uVar1 = FUN_08008590(param_1);\n    uVar1 = FUNC_08008640((int)uVar1,(int)((ulonglong)uVar1 >> 0x20),DAT_080005a8,DAT_080005ac);\n    param_1 = FUN_08008c30((int)uVar1,(int)((ulonglong)uVar1 >> 0x20));\n  }\n  return param_1;\n}\n\n",
            "called": [
                "FUN_08008c30",
                "FUN_08008590",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_0800b430": "initialize_data",
                "FUN_08002ef0": "initialize_system",
                "FUN_08002f24": "execute_initialization_08002f24"
            },
            "code": "void execute_initialization_08002f24(void)\n{\n  initialize_system();\n  initialize_data(PTR_DAT_08002f3c, 0, 0x1c);\n  return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "execute_initialization_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "local_50": "dimension_1",
                "iVar3": "error_code",
                "puVar2": "pointer",
                "piVar5": "dimension_pointer",
                "puVar4": "result_pointer",
                "uStack_44": "constant_1",
                "param_1": "x1",
                "uStack_34": "constant_3",
                "puStack_4c": "function_pointer",
                "local_38": "dimension_2",
                "local_48": "dimension_2",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "cVar1": "mode",
                "uStack_3c": "constant_3",
                "local_30": "dimension_count",
                "local_40": "constant_2",
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "uVar6": "return_value"
            },
            "code": "undefined8 calculate_hypotenuse_0800981c(undefined4 x1, undefined4 y1, undefined4 x2, undefined4 y2)\n{\n  char mode;\n  undefined *pointer;\n  int error_code;\n  undefined4 *result_pointer;\n  int *dimension_pointer;\n  undefined8 return_value;\n  undefined4 dimension_1;\n  undefined *function_pointer;\n  undefined4 dimension_2;\n  undefined4 constant_1;\n  undefined4 constant_2;\n  undefined4 constant_3;\n  int dimension_count;\n  \n  pointer = PTR_DAT_080098cc;\n  return_value = FUNC_08009b24();\n  if (*pointer == -1) {\n    return return_value;\n  }\n  dimension_count = FUN_0800b2d4();\n  if (dimension_count != 0) {\n    return return_value;\n  }\n  error_code = FUN_0800b2d4(x1, y1);\n  if (error_code == 0) {\n    return return_value;\n  }\n  error_code = FUN_0800b2d4(x2, y2);\n  if (error_code == 0) {\n    return return_value;\n  }\n  mode = *pointer;\n  dimension_1 = 3;\n  function_pointer = PTR_s_hypot_080098c0;\n  dimension_2 = x1;\n  constant_1 = y1;\n  constant_2 = x2;\n  constant_3 = y2;\n  if (mode == \"\\0\") {\n    dimension_2 = 0xe0000000;\n    constant_3 = DAT_080098c8;\nLAB_080098aa:\n    error_code = FUN_0800b2e0(&dimension_1);\n    if (error_code != 0) goto LAB_08009896;\n  }\n  else {\n    dimension_2 = 0;\n    constant_3 = DAT_080098c4;\n    if (mode != \"\\x02\") goto LAB_080098aa;\n  }\n  result_pointer = (undefined4 *)FUN_0800b3dc();\n  *result_pointer = 0x22;\nLAB_08009896:\n  return_value = CONCAT44(constant_3, dimension_2);\n  if (dimension_count != 0) {\n    dimension_pointer = (int *)FUN_0800b3dc();\n    return_value = CONCAT44(constant_3, dimension_2);\n    *dimension_pointer = dimension_count;\n  }\n  return return_value;\n}",
            "called": [
                "FUN_08009b24",
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "calculate_hypotenuse_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_08006ce0": "set_display_mode",
                "do_nothing_08005a50": "do_nothing",
                "FUN_08006d72": "initialize_audio",
                "DAT_080059f4": "data_pointer",
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "code": "void initialize_system_080059b4(void)\n{\n  unsigned int* DAT_080059f4 = DAT_080059f4;\n  *DAT_080059f4 |= 0x200;\n  *DAT_080059f4 |= 0x400;\n  *DAT_080059f4 |= 0x100;\n  initialize_audio(16000);\n  set_display_mode(3);\n  do_nothing();\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006ce0",
                "FUN_08006d72"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "initialize_system_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "uVar1": "num_bits_mod_comp",
                "param_1": "input",
                "param_2": "num_bits",
                "param_3": "output1",
                "param_4": "output2",
                "FUN_08006c04": "extract_bits_08006c04"
            },
            "code": "void extract_bits_08006c04(uint input, uint num_bits, uint *output1, uint *output2)\n{\n  uint num_bits_mod = num_bits & 7;\n  uint num_bits_mod_comp = 7 - num_bits_mod;\n  if (num_bits_mod_comp > 3) {\n    num_bits_mod_comp = 4;\n  }\n  if (num_bits_mod + 4 < 7) {\n    num_bits_mod = 0;\n  }\n  else {\n    num_bits_mod = num_bits_mod - 3;\n  }\n  *output1 = (1 << (num_bits_mod_comp & 0xff)) - 1U & input >> (num_bits_mod & 0xff);\n  *output2 = (1 << (num_bits_mod & 0xff)) - 1U & input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": true,
            "current_name": "extract_bits_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "FUNC_08009054": "calculate_value",
                "FUN_08002c18": "process_values",
                "uVar1": "first_value",
                "puVar3": "current_data_pointer",
                "local_18": "previous_data_pointer",
                "PTR_DAT_08002ed8": "DATA_END_INDEX_POINTER",
                "PTR_DAT_08002ed0": "DATA_START_INDEX_POINTER",
                "uVar2": "second_value",
                "PTR_DAT_08002ed4": "DATA_POINTER_ARRAY",
                "local_11": "current_index"
            },
            "code": "void process_data_08002e08(void)\\n{\\n    undefined4 first_value;\\n    undefined4 second_value;\\n    undefined *previous_data_pointer;\\n    undefined *current_data_pointer;\\n    byte current_index = *PTR_DAT_08002ed0;\\n    previous_data_pointer = NULL;\\n    \\n    while (current_index != *PTR_DAT_08002ed8) {\\n        current_data_pointer = PTR_DAT_08002ed4 + (uint)current_index * 0x40;\\n        if ((previous_data_pointer != NULL) && ((previous_data_pointer[0x24] != \"\\0\" || (current_data_pointer[0x24] != \"\\0\")))) {\\n            first_value = FUNC_08009054(*(undefined4 *)(previous_data_pointer + 0x18),*(undefined4 *)(previous_data_pointer + 0x14));\\n            second_value = FUNC_08009054(*(undefined4 *)(current_data_pointer + 0x18),*(undefined4 *)(previous_data_pointer + 0x14));\\n            process_values(previous_data_pointer, first_value, second_value);\\n            previous_data_pointer[0x24] = 0;\\n        }\\n        current_index = get_next_index(current_index);\\n        previous_data_pointer = current_data_pointer;\\n    }\\n    first_value = FUNC_08009054(*(undefined4 *)(previous_data_pointer + 0x18),*(undefined4 *)(previous_data_pointer + 0x14));\\n    second_value = FUNC_08009054(0,*(undefined4 *)(previous_data_pointer + 0x14));\\n    process_values(previous_data_pointer, first_value, second_value);\\n    previous_data_pointer[0x24] = 0;\\n    return;\\n}",
            "called": [
                "FUN_08002c18",
                "FUN_08009054",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": true,
            "current_name": "process_data_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "calculate_shift_amount_08006680",
                "get_value_from_PTR_DAT_080066c8": "get_value_from_PTR_DAT_080066c8",
                "uVar1": "result",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_080066c8": "get_value_from_PTR_DAT_080066c8",
                "uVar2": "leading_zeroes_count",
                "DAT_080066c4": "DAT_080066c4",
                "get_value_from_DAT_080066c4": "get_value_from_DAT_080066c4"
            },
            "code": "uint calculate_shift_amount_08006680(void)\n{\n  uint leading_zeroes_count;\n  uint result;\n  leading_zeroes_count = count_leading_zeroes(0x380000);\n  result = PTR_DAT_080066c8(get_value_from_DAT_080066c4() & 0x1c00) >> (leading_zeroes_count & 0xff);\n  return result;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": true,
            "current_name": "calculate_shift_amount_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_value_at_index_08000340",
                "PTR_DAT_0800036c": "is_initialized",
                "param_1": "index",
                "PTR_DAT_08000370": "data_array",
                "param_2": "value",
                "FUN_080002f0": "initialize_data"
            },
            "code": "void store_value_at_index_08000340(uint index, undefined value)\n{\n  if (*PTR_DAT_0800036c == 0) {\n    initialize_data();\n  }\n  PTR_DAT_08000370[index & 0x3ff] = value;\n  return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": true,
            "current_name": "store_value_at_index_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_thunk_08009990",
                "uVar1": "temp1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result",
                "uVar2": "temp2",
                "uVar5": "temp4",
                "uVar4": "temp3",
                "uVar6": "temp5"
            },
            "code": "uint calculate_thunk_08009990(uint input1,uint input2,uint input3,uint input4)\n{\n  int temp1;\n  undefined4 temp2;\n  uint result;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp6 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (temp4 | (-input3 | input3) >> 0x1f)) ||\n     (temp5 = input2 & 0x7fffffff, DAT_08009b18 < (temp5 | (-input1 | input1) >> 0x1f))) {\n    temp4 = FUNC_080082d4(input3,input4,input1,input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUNC_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      temp4 = DAT_08009af0;\n      if ((temp3 != 2) && (temp4 = input1, temp3 == 3)) {\n        temp4 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == DAT_08009b18) {\n          temp3 = temp3 - 1;\n          if (temp5 == temp4) {\n            if (2 < temp3) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + temp3 * 8);\n          }\n          if (temp3 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != DAT_08009b18) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUNC_08008894(input1,input2,input3,input4,input4);\n              do_nothing_0800b2cc();\n              temp6 = FUNC_0800af78();\n            }\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUNC_080082d0(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n            temp4 = FUNC_080082d0(DAT_08009af0,DAT_08009af4,(int)temp6,\n                                 (int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUNC_080082d0(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n          temp4 = FUNC_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),DAT_08009af0,DAT_08009af4)\n          ;\n          return temp4;\n        }\n      }\n      temp4 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        temp4 = DAT_08009b00;\n      }\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "calculate_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_copy_08004bf4",
                "FUN_08000374": "copy_memory_with_offset",
                "param_1": "input_char",
                "ushort": "unsigned_short",
                "0x200": "512",
                "param_2": "input_value",
                "0xc": "12",
                "0xd": "13"
            },
            "code": "void calculate_offset_and_copy_08004bf4(byte input_char, undefined4 input_value)\n{\n  ushort offset = (ushort)input_char * 13 + 512;\n  copy_memory_with_offset(offset, input_value, 12);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": true,
            "current_name": "calculate_offset_and_copy_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_0800b430": "function_B",
                "iVar1": "result",
                "FUN_08004d7c": "check_param_08004d7c",
                "FUN_08004bf4": "function_C",
                "FUN_080003ec": "function_A",
                "param_1": "input_byte",
                "param_2": "input_value"
            },
            "code": "bool check_param_08004d7c(byte input_byte, undefined4 input_value)\n{\n  int result = FUN_080003ec(input_value, (ushort)input_byte * 0xd + 0x200, 0xc);\n  if (result == 0) {\n    FUN_0800b430(input_value, 0, 0xc);\n    FUN_08004bf4(input_byte, input_value);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_080003ec",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080004ac",
                "FUN_080051b4"
            ],
            "imported": true,
            "current_name": "check_param_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "uVar1": "shift_amount",
                "FUN_08009278": "calculate_integer_from_parameter_08009278",
                "param_1": "parameter",
                "shifted_parameter": "shifted_parameter",
                "uVar2": "shift_amount_difference"
            },
            "code": "uint calculate_integer_from_parameter_08009278(uint parameter)\n{\n  uint shift_amount = 0x9e - ((parameter << 1) >> 0x18);\n  if (parameter << 1 < 0x7f000000 || shift_amount == 0 || shift_amount == 0xffffff9f && (parameter & 0x7fffff) != 0)\n    return parameter & 0x80000000 ? -2147483648 : 2147483647;\n  uint shifted_parameter = parameter << 8 | 0x80000000;\n  if (parameter & 0x80000000)\n    return -(shifted_parameter >> (shift_amount & 0xff));\n  return shifted_parameter >> (shift_amount & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "imported": true,
            "current_name": "calculate_integer_from_parameter_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "uVar1": "result1, result2, result3",
                "FUN_080004fc": "store_values_in_memory_080004fc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3"
            },
            "code": "void store_values_in_memory_080004fc(int value1, int value2, int value3)\n{\n  int result1 = calculate_result(value1);\n  int result2 = calculate_result(value2);\n  int result3 = calculate_result(value3);\n  *(int*)(PTR_DAT_08000568 + 0xc) = result1;\n  *(int*)(PTR_DAT_08000568 + 0x10) = result2;\n  *(int*)(PTR_DAT_08000568 + 0x14) = result3;\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": true,
            "current_name": "store_values_in_memory_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000210": "handle_unknown_state",
                "FUN_08000220": "update_state_08000220",
                "param_1": "new_state",
                "do_nothing_080001c8": "do_action_1",
                "FUN_08002fd4": "perform_reset",
                "do_nothing_080001e0": "do_action_2"
            },
            "code": "void update_state_08000220(char new_state) {\n  if (new_state != *PTR_DAT_08000264) {\n    perform_reset();\n    if (new_state == '\\x01') {\n      do_action_1();\n    }\n    else if (new_state == '\\x02') {\n      do_action_2();\n    }\n    else {\n      handle_unknown_state();\n    }\n    *PTR_DAT_08000264 = new_state;\n  }\n  return;\n}",
            "called": [
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0",
                "FUN_08002fd4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": true,
            "current_name": "update_state_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005250": "callFunction",
                "FUN_08005238": "resetPointer_08005238",
                "PTR_DAT_0800524c": "pointer"
            },
            "code": "void resetPointer_08005238() {\n  *PTR_DAT_0800524c = 0;\n  callFunction();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "resetPointer_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_flag_and_toggle_08007da8",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flag_and_toggle_08007da8(void)\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *flag_ptr |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": true,
            "current_name": "set_flag_and_toggle_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "PTR_s_ALARM__08004190": "ALARM_message",
                "PTR_s___MPos__0800419c": "current_position_message",
                "do_nothing_08002814": "wait_for",
                "FUN_08004148": "display_error_message_08004148",
                "param_1": "error_code",
                "PTR_s_Abort_during_cycle_08004198": "abort_during_cycle_message",
                "PTR_s_Hard_limit_08004194": "hard_limit_message"
            },
            "code": "void display_error_message_08004148(char error_code)\n{\n  display_message(\"ALARM\");\n  if (error_code == -2) {\n    display_message(\"Abort during cycle\");\n  }\n  else if (error_code == -1) {\n    display_message(\"Hard limit\");\n  }\n  display_message(\"Current position: \");\n  wait_for(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": true,
            "current_name": "display_error_message_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "uVar1": "processed_data_1",
                "auStack_2c": "data",
                "FUN_08004940": "process_data_08004940",
                "uVar3": "processed_data_6",
                "uVar2": "loop_var",
                "uVar5": "processed_data_3",
                "uVar4": "processed_data_2",
                "local_11": "data_index"
            },
            "code": "void process_data_08004940(void)\n{\n  uint loop_var;\n  uint data[6];\n  byte data_index;\n  data[3] = *(uint *)(PTR_DAT_08004b88 + 4);\n  data[4] = *(uint *)(PTR_DAT_08004b88 + 8);\n  data[5] = *(uint *)(PTR_DAT_08004b88 + 0xc);\n  if ((byte)PTR_DAT_08004b88[1] < 8) {\n    (*(void (*)())(&switchD_0800495e::switchdataD_08004964)[(byte)PTR_DAT_08004b88[1]])();\n    return;\n  }\n  FUN_080036c6(PTR_s__MPos__08004ba8);\n  for (data_index = 0; data_index < 3; data_index++) {\n    uint processed_data = process_data_08004940_1(data[data_index + 3]);\n    data[data_index] = process_data_08004940_2(processed_data, *(uint *)(PTR_DAT_08004bac + data_index * 4));\n    if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n      uint processed_data_2 = process_data_08004940_3(data[data_index]);\n      processed_data_2 = process_data_08004940_4((int)processed_data_2,(int)((ulonglong)processed_data_2 >> 0x20),DAT_08004b80,DAT_08004b84);\n      data[data_index] = process_data_08004940_5((int)processed_data_2,(int)((ulonglong)processed_data_2 >> 0x20));\n    }\n    FUN_08003826(data[data_index]);\n    FUN_080036c6(PTR_DAT_08004bb0);\n  }\n  FUN_080036c6(PTR_s_WPos__08004bb4);\n  for (data_index = 0; data_index < 3; data_index++) {\n    if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\n      uint processed_data = data[data_index];\n      uint processed_data_2 = process_data_08004940_6(*(uint *)(PTR_DAT_08004bb8 + (data_index + 8) * 4), *(uint *)(PTR_DAT_08004bb8 + (data_index + 10) * 4 + 4));\n      data[data_index] = process_data_08004940_7(processed_data,processed_data_2);\n    }\n    else {\n      uint processed_data = process_data_08004940_3(data[data_index]);\n      uint processed_data_2 = process_data_08004940_6(*(uint *)(PTR_DAT_08004bb8 + (data_index + 8) * 4), *(uint *)(PTR_DAT_08004bb8 + (data_index + 10) * 4 + 4));\n      uint processed_data_3 = process_data_08004940_3(processed_data_2);\n      processed_data_3 = process_data_08004940_4((int)processed_data_3,(int)((ulonglong)processed_data_3 >> 0x20),DAT_08004b80,DAT_08004b84);\n      uint processed_data_4 = process_data_08004940_8((int)processed_data,(int)((ulonglong)processed_data >> 0x20),(int)processed_data_3,(int)((ulonglong)processed_data_3 >> 0x20));\n      data[data_index] = process_data_08004940_5((int)processed_data_4,(int)((ulonglong)processed_data_4 >> 0x20));\n    }\n    FUN_08003826(data[data_index]);\n    if (data_index < 2) {\n      FUN_080036c6(PTR_DAT_08004bb0);\n    }\n  }\n  FUN_080036c6(PTR_DAT_08004bbc);\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_08008c30",
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08009054",
                "FUN_080036c6",
                "FUN_080082d0",
                "FUN_08003826"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": true,
            "current_name": "process_data_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "bVar2": "is_collision",
                "bVar3": "is_second_point_closer",
                "uVar1": "xor_distance",
                "FUN_08008a74": "check_collision_08008a74",
                "param_1": "x1",
                "param_2": "y1",
                "PTR_": "PTR_",
                "param_3": "x2",
                "param_4": "y2",
                "DAT_": "DAT_"
            },
            "code": "uint check_collision_08008a74(uint x1, uint y1, uint x2, uint y2)\n{\n  bool is_collision = false;\n  if (((int)(y1 << 1) >> 0x15 == -1 || (int)(y2 << 1) >> 0x15 == -1) && ((((int)(y1 << 1) >> 0x15 == -1 && ((x1 | y1 << 0xc) != 0)) || (((int)(y2 << 1) >> 0x15 == -1 && ((x2 | y2 << 0xc) != 0)))))) {\n    return 1;\n  }\n  bool both_points_not_zero = (x1 | y1 << 1) != 0 && (x2 | y2 << 1) != 0;\n  bool same_point = x1 == x2 && y1 == y2;\n  if (both_points_not_zero && !same_point) {\n    uint xor_distance = x1 ^ x2 | y1 ^ y2;\n    bool is_same_distance = xor_distance == 0;\n    if (-1 < (int)xor_distance) {\n      is_same_distance = same_point;\n    }\n    bool is_second_point_closer = -1 < (int)xor_distance && y2 <= y1;\n    if (is_same_distance) {\n      is_second_point_closer = x2 <= x1;\n    }\n    uint is_collision_uint = (int)y2 >> 0x1f;\n    if (!is_second_point_closer) {\n      is_collision_uint = ~is_collision_uint;\n    }\n    return is_collision_uint | 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": true,
            "current_name": "check_collision_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "iVar1": "result",
                "PTR_DAT_08003000": "PTR_DAT_08003000",
                "FUN_08002fd4": "check_for_data_08002fd4",
                "FUN_08003a74": "process_data",
                "FUN_08002f74": "get_data"
            },
            "code": "void check_for_data_08002fd4(void)\\n{\\n  int result;\\n  while ((result = get_data(), result != 0 || (PTR_DAT_08003000[1] == \"\\x03\")))\\n  {\\n    process_data();\\n    if (*PTR_DAT_08003000 != \"\\0\")\\n    {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_0800525c"
            ],
            "imported": true,
            "current_name": "check_for_data_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08008cd8": "process_data",
                "uVar1": "result1",
                "PTR_DAT_080024c0": "data_pointer",
                "DAT_080024bc": "data_info_2",
                "param_1": "data",
                "FUN_08002fd4": "do_something",
                "FUN_08002408": "process_data_08002408",
                "FUN_08008e44": "calculate_value",
                "FUN_08003a74": "do_more_processing",
                "DAT_080024b8": "data_info_1",
                "FUN_080094c0": "process_result_again",
                "FUNC_08008eec": "get_data",
                "uVar3": "result3",
                "FUN_08008590": "process_result",
                "FUN_080002a0": "do_something_else",
                "uVar2": "result2",
                "FUN_08008bf0": "extract_count",
                "uVar4": "result4",
                "local_12": "count"
            },
            "code": "void process_data_08002408(undefined4 data) {\\n  undefined2 result1;\\n  undefined4 result2;\\n  undefined4 result3;\\n  undefined8 result4;\\n  ushort count;\\n  result2 = get_data(data, DAT_080024b8);\\n  result4 = process_result(result2);\\n  result4 = process_result_again((int)result4, (int)((ulonglong)result4 >> 0x20));\\n  count = extract_count((int)result4, (int)((ulonglong)result4 >> 0x20));\\n  do_something();\\n  result2 = get_data(data, DAT_080024bc);\\n  result3 = calculate_value((uint)count * 0x32);\\n  result2 = process_data_08002408(result2, result3);\\n  result4 = process_result(result2);\\n  result4 = process_result_again((int)result4, (int)((ulonglong)result4 >> 0x20));\\n  result1 = extract_result((int)result4, (int)((ulonglong)result4 >> 0x20));\\n  do_nothing(result1);\\n  while ((count != 0 && (do_more_processing(), *PTR_DAT_080024c0 == \"\\0\"))) {\\n    do_something_else(0x32);\\n    count = count - 1;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008cd8",
                "FUN_08003a74",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08002fd4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": true,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_080029d8": "copy_data",
                "PTR_DAT_08002af0": "data_start_pointer",
                "PTR_DAT_08002af4": "data_table",
                "puVar2": "current_pointer",
                "FUN_08002896": "get_next_byte",
                "local_9": "current_byte",
                "FUN_08002a94": "decode_data_08002a94",
                "local_18": "previous_pointer",
                "puVar1": "previous_pointer",
                "PTR_DAT_08002af8": "data_end_pointer",
                "local_14": "current_pointer"
            },
            "code": "void decode_data_08002a94(void)\n{\n  uint8_t current_byte = *PTR_DAT_08002af0;\n  uint8_t *previous_pointer = NULL;\n  uint8_t *current_pointer = NULL;\n  while (current_byte != *PTR_DAT_08002af8) {\n    current_byte = get_next_byte(current_byte);\n    previous_pointer = current_pointer;\n    current_pointer = PTR_DAT_08002af4 + (uint32_t)current_byte * 0x40;\n    copy_data(current_pointer, previous_pointer);\n  }\n  return;\n}",
            "called": [
                "FUN_080029d8",
                "FUN_08002896"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": true,
            "current_name": "decode_data_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "bVar1": "index",
                "puVar2": "data_ptr",
                "param_1": "input_value",
                "FUN_08003618": "calculate_result_and_update_data_structure_08003618",
                "FUN_08008e44": "calculate_result",
                "FUNC_08008eec": "update_result_with_current_data",
                "uVar3": "current_data_value",
                "uVar4": "result_value",
                "FUN_08009054": "update_result_with_temp_value"
            },
            "code": "void calculate_result_and_update_data_structure_08003618(undefined4 input_value)\n{\n  byte index;\n  undefined *data_ptr;\n  undefined4 current_data_value;\n  undefined4 result_value;\n  undefined4 temp_value;\n  \n  data_ptr = PTR_DAT_08003698;\n  index = *PTR_DAT_08003694;\n  current_data_value = *(undefined4 *)(PTR_DAT_08003698 + (uint)index * 0x40 + 0x20);\n  result_value = calculate_result(input_value);\n  result_value = FUNC_08008eec(current_data_value, result_value);\n  temp_value = calculate_result(*(undefined4 *)(data_ptr + (uint)index * 0x40 + 0x10));\n  result_value = update_result_with_temp_value(result_value, temp_value);\n  *(undefined4 *)(data_ptr + (uint)index * 0x40 + 0x20) = result_value;\n  *(undefined4 *)(data_ptr + (uint)index * 0x40 + 0x10) = input_value;\n  *(undefined4 *)(data_ptr + (uint)index * 0x40 + 0x18) = 0;\n  *(undefined4 *)(data_ptr + (uint)index * 0x40 + 0x1c) = 0;\n  data_ptr[(uint)index * 0x40 + 0x25] = 0;\n  data_ptr[(uint)index * 0x40 + 0x24] = 1;\n  call_cleanup_function();\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": true,
            "current_name": "calculate_result_and_update_data_structure_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": true,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = FUN_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "PTR_DAT_08007da0": "serial_multiplier",
                "DAT_08007da4": "serial_number",
                "puVar1": "settings_ptr",
                "FUN_08007d08": "initialize_settings_08007d08",
                "DAT_08007d9c": "settings_array"
            },
            "code": "void initialize_settings_08007d08(void)\n{\n  uint32_t *settings_ptr;\n  settings_ptr = DAT_08007d9c;\n  set_default_settings(DAT_08007d9c);\n  settings_ptr[0] = 0x80;\n  settings_ptr[1] = 0;\n  settings_ptr[2] = 0;\n  settings_ptr[3] = 0;\n  settings_ptr[4] = 0;\n  settings_ptr[6] = 0x6800;\n  settings_ptr[7] = 0;\n  settings_ptr[8] = 0;\n  settings_ptr[9] = 0;\n  settings_ptr[10] = (uint32_t)((uint64_t)DAT_08007da4 * (uint64_t)*PTR_DAT_08007da0 >> 0x35) - 1;\n  settings_ptr[0xb] = 199;\n  settings_ptr[0xd] = 0;\n  settings_ptr[0xe] = 100;\n  settings_ptr[0xf] = 0;\n  settings_ptr[0x10] = 0;\n  settings_ptr[0x12] = 0;\n  settings_ptr[0x13] = 0;\n  settings_ptr[5] = 1;\n  return;\n}\n",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": true,
            "current_name": "initialize_settings_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_08009204": "memcpy",
                "param_1": "destination",
                "param_2": "source",
                "FUN_080091fc": "copy_values_080091fc"
            },
            "code": "void copy_values_080091fc(void* destination, void* source)\n{\n  memcpy(destination, source, sizeof(destination));\n  return;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": true,
            "current_name": "copy_values_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "PTR_DAT_080058f4": "pointer_to_dat_f4",
                "FUN_08005324": "print",
                "FUN_08003618": "calculate",
                "PTR_DAT_080058f0": "pointer_to_dat_f0",
                "PTR_DAT_080058fc": "pointer_to_dat_fc",
                "FUN_080058a0": "initialize_080058a0",
                "DAT_080058f8": "global_variable_f8"
            },
            "code": "void initialize_080058a0() {\n  if (*PTR_DAT_080058f0 == 0) {\n    PTR_DAT_080058fc[1] = 0;\n  }\n  else {\n    int diff = *(int *)(*(int *)PTR_DAT_080058f0 + 0x10) - *(int *)(PTR_DAT_080058f4 + 0x10);\n    calculate(diff);\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x1c) = 0;\n    print(*(undefined4 *)(PTR_DAT_080058f4 + 0x1c));\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x10) = 0;\n    PTR_DAT_080058fc[1] = 2;\n  }\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": true,
            "current_name": "initialize_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "local_c": "current_char",
                "param_1": "str",
                "*local_c": "*current_char",
                "FUN_08008250": "process_character",
                "FUN_080036c6": "process_string_080036c6"
            },
            "code": "void process_string_080036c6(char *str) {\n  char *current_char = str;\n  while (*current_char != '\\0') {\n    process_character(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_0800423c",
                "FUN_080046d0",
                "FUN_08004250",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080044e8",
                "FUN_08004900",
                "FUN_08004148",
                "FUN_08004228",
                "FUN_08004940"
            ],
            "imported": true,
            "current_name": "process_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08007ea4": "set_flag_08007ea4",
                "FUN_08007f54": "set_flag_08007f54",
                "puVar1": "flags_and_values",
                "DAT_08008240": "flags_and_values",
                "FUN_08008190": "set_flags_and_values_08008190"
            },
            "code": "void set_flags_and_values_08008190(void)\n{\n  uint *DAT_08008240;\n  DAT_08008240 = DAT_08008240;\n  set_flag_08007ea4(DAT_08008240);\n  DAT_08008240[3] &= 0xffffdfff;\n  DAT_08008240[3] = (DAT_08008240[3] & 0xffff400c) | 0xc;\n  DAT_08008240[4] &= 0xffff8090;\n  DAT_08008240[5] &= 0xfffff000;\n  *DAT_08008240 &= 0xfffffc00;\n  set_flag_08007f54(DAT_08008240, 0x1c200);\n  DAT_08008240[6] = DAT_08008240[6];\n  DAT_08008240[3] |= 0x2000;\n}",
            "called": [
                "FUN_08007f54",
                "FUN_08007ea4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "set_flags_and_values_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_08007402": "print_error",
                "param_1": "flags",
                "PTR_DAT_0800751c": "PTR_DAT_0800751c",
                "PTR_DAT_08007518": "PTR_DAT_08007518",
                "FUN_080074c8": "check_flags_080074c8",
                "FUN_08003a18": "process_data",
                "FUN_0800195c": "initialize_data"
            },
            "code": "void check_flags_080074c8(uint flags)\n{\n  if ((flags & 1) != 0) {\n    print_error(0x3e);\n  }\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((flags & 0x1e) != 0)) {\n    initialize_data();\n  }\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((flags & 0x80) != 0)) {\n    process_data(flags);\n  }\n  return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": true,
            "current_name": "check_flags_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "fill_buffer_with_value_0800b430",
                "puVar2": "buffer",
                "param_1": "buffer",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "current_word",
                "uVar3": "remaining_size",
                "uVar4": "value_word",
                "bVar5": "is_remaining_size_zero"
            },
            "code": "void fill_buffer_with_value_0800b430(uint32_t *buffer, uint8_t value, uint32_t size) {\n  uint32_t *current_word;\n  uint32_t remaining_size;\n  uint32_t value_word;\n  bool is_remaining_size_zero;\n  \n  if (((uint)buffer & 3) != 0) {\n    remaining_size = size - 1;\n    current_word = buffer;\n    if (size == 0) {\n      return;\n    }\n    while (true) {\n      buffer = (uint32_t *)((int)current_word + 1);\n      *(uint8_t *)current_word = value;\n      size = remaining_size;\n      if (((uint)buffer & 3) == 0) break;\n      is_remaining_size_zero = remaining_size == 0;\n      remaining_size = remaining_size - 1;\n      current_word = buffer;\n      if (is_remaining_size_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    value_word = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      current_word = buffer + 4;\n      do {\n        current_word[-4] = value_word;\n        current_word[-3] = value_word;\n        current_word[-2] = value_word;\n        current_word[-1] = value_word;\n        current_word = current_word + 4;\n      } while (current_word != (uint32_t *)((int)buffer + (size - 0x10 & 0xfffffff0) + 0x20));\n      remaining_size = size & 0xc;\n      buffer = buffer + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remaining_size == 0) goto joined_r0x0800b4a8;\n    }\n    current_word = (uint32_t *)((size - 4 & 0xfffffffc) + 4 + (int)buffer);\n    do {\n      buffer = buffer + 1;\n      *buffer = value_word;\n    } while (current_word != buffer);\n    size = size & 3;\n    buffer = current_word;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    current_word = buffer;\n    do {\n      buffer = (uint32_t *)((int)current_word + 1);\n      *(uint8_t *)current_word = value;\n      current_word = buffer;\n    } while ((uint32_t *)(size + (int)buffer) != buffer);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_080079c0",
                "FUN_080024c4",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_08001ddc",
                "FUN_080004ac",
                "FUN_080002f0",
                "FUN_08002f24"
            ],
            "imported": true,
            "current_name": "fill_buffer_with_value_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "printErrorMessage_08004030",
                "param_1": "errorCode"
            },
            "code": "void printErrorMessage_08004030(char errorCode){\n  if (errorCode == '\\0') {\n    printString(PTR_DAT_08004108);\n  }\n  else {\n    printString(PTR_s_error__0800410c);\n    switch(errorCode) {\n      case '\\x01':\n        printString(PTR_s_Bad_number_format_08004110);\n        break;\n      case '\\x02':\n        printString(PTR_s_Expected_command_letter_08004114);\n        break;\n      case '\\x03':\n        printString(PTR_s_Unsupported_statement_08004118);\n        break;\n      case '\\x04':\n        printString(PTR_s_Invalid_radius_0800411c);\n        break;\n      case '\\x05':\n        printString(PTR_s_Modal_group_violation_08004120);\n        break;\n      case '\\x06':\n        printString(PTR_s_Invalid_statement_08004124);\n        break;\n      case '\\a':\n        printString(PTR_s_Setting_disabled_08004128);\n        break;\n      case '\\b':\n        printString(PTR_s_Value___0_0_0800412c);\n        break;\n      case '\\t':\n        printString(PTR_s_Value___3_usec_08004130);\n        break;\n      case '\\n':\n        printString(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n        break;\n      case '\\v':\n        printString(PTR_s_Busy_or_queued_08004138);\n        break;\n      case '\\f':\n        printString(PTR_s_Alarm_lock_0800413c);\n        break;\n      case '\\r':\n        printString(PTR_s_Line_overflow_08004140);\n    }\n    printString(PTR_DAT_08004144);\n  }\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080039bc"
            ],
            "imported": true,
            "current_name": "printErrorMessage_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "limit_val": "limit_value_copy",
                "current_val": "current_limit_copy",
                "DAT_0800539c": "limit_value",
                "FUN_08005360": "check_if_limit_exceeded_08005360",
                "PTR_DAT_08005398": "limit_data_pointer",
                "*current_value": "current_addend",
                "*limit": "current_limit"
            },
            "code": "bool check_if_limit_exceeded_08005360()\n{\n  int* limit = PTR_DAT_08005398 + 0x18;\n  int* current_value = PTR_DAT_08005398 + 0x14;\n  *limit = *limit + *current_value;\n  uint limit_val = DAT_0800539c;\n  uint current_val = *(uint *)(PTR_DAT_08005398 + 0x18);\n  if (limit_val < current_val) {\n    *limit = *limit - 420000;\n  }\n  return limit_val < current_val;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": true,
            "current_name": "check_if_limit_exceeded_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "initialize_pointers_08003980",
                "PTR_DAT_0800399c": "data_pointer_2",
                "PTR_DAT_08003998": "data_pointer_1"
            },
            "code": "void initialize_pointers_08003980(void)\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": true,
            "current_name": "initialize_pointers_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "convert_char_to_int_08006de0",
                "uVar1": "result",
                "param_1": "character",
                "FUN_08006a18": "convert_char_to_int_helper"
            },
            "code": "int convert_char_to_int_08006de0(char character) {\n  int result = convert_char_to_int_08006de0_helper((int)character);\n  return result;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": true,
            "current_name": "convert_char_to_int_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "run_all_functions_08007540",
                "FUN_08005984": "set_exit_code",
                "FUN_08007436": "load_game_data",
                "FUN_080079c0": "show_game_over_screen",
                "FUN_0800778c": "show_splash_screen",
                "FUN_08001ddc": "unused_function",
                "FUN_08007e08": "start_game_loop",
                "FUN_08008190": "clean_up",
                "FUN_080059b4": "initialize_graphics"
            },
            "code": "undefined4 run_all_functions_08007540(void)\n{\n  initialize_graphics();\n  load_game_data();\n  show_splash_screen();\n  start_game_loop();\n  show_game_over_screen();\n  clean_up();\n  set_exit_code(0);\n  return 0;\n}",
            "called": [
                "FUN_08007e08",
                "FUN_08005984",
                "FUN_080079c0",
                "FUN_0800778c",
                "FUN_08008190",
                "FUN_080059b4",
                "FUN_08001ddc",
                "FUN_08007436"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": true,
            "current_name": "run_all_functions_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "currentParam": "currentParam",
                "*(uint *)(DAT_08005308 + 0x14)": "*ptr_param",
                "FUN_080052dc": "updateParameter_080052dc",
                "param_1": "newParamValue",
                "DAT_08005308": "ptr_dat",
                "maskedCurrent": "maskedCurrent",
                "newParamMasked": "newParamMasked",
                "0x14": "offset",
                "mask": "mask"
            },
            "code": "void updateParameter_080052dc(uint newParamValue)\n{\n    uint* ptr_param = (uint*)(DAT_08005308 + 0x14);\n    uint currentParam = *(uint *)(DAT_08005308 + 0x14);\n    uint mask = 0xfffff55f;\n    uint maskedCurrent = currentParam & mask;\n    uint newParamMasked = newParamValue | maskedCurrent;\n    *(uint *)(DAT_08005308 + 0x14) = newParamMasked;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": true,
            "current_name": "updateParameter_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "leading_zeroes": "leading_zeroes",
                "local_c": "local_c",
                "mul": "mul",
                "uVar1": "u_var_1",
                "FUN_080064ec": "calculate_local_c_080064ec",
                "condition": "condition",
                "divisor": "divisor",
                "uVar2": "u_var_2",
                "bitmask": "bitmask"
            },
            "code": "uint calculate_local_c_080064ec(void)\n{\n  uint bitmask = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (bitmask == 8) {\n    uint uVar1 = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    uint uVar2 = count_leading_zeroes(0x200);\n    uint condition = (*(uint *)(DAT_0800661c + 4) & 0x400000) >> (uVar2 & 0xff);\n    uint divisor = (condition == 0) ? DAT_08006620 : DAT_08006624;\n    uint leading_zeroes = count_leading_zeroes(0x3fe0000);\n    uint mul = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (leading_zeroes & 0xff)) * (divisor / uVar1);\n    leading_zeroes = count_leading_zeroes(0xc000);\n    return mul / ((((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (leading_zeroes & 0xff)) + 1) * 2);\n  }\n  if (bitmask < 9) {\n    if (bitmask == 0) {\n      return DAT_08006620;\n    }\n    if (bitmask == 4) {\n      return DAT_08006624;\n    }\n  }\n  return DAT_08006620;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": true,
            "current_name": "calculate_local_c_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "uVar1": "bits_to_set",
                "FUN_08006ba0": "mask_bits_08006ba0",
                "param_1": "start_bit",
                "remaining_bits": "remaining_bits",
                "param_2": "middle_bits",
                "param_3": "end_bits"
            },
            "code": "uint mask_bits_08006ba0(uint start_bit,uint middle_bits,uint end_bits)\n{\n  uint remaining_bits = start_bit & 7;\n  uint bits_to_set = 7 - remaining_bits;\n  if (bits_to_set > 3) {\n    bits_to_set = 4;\n  }\n  if (remaining_bits + 4 < 7) {\n    remaining_bits = 0;\n  }\n  else {\n    remaining_bits = remaining_bits - 3;\n  }\n  return end_bits & (1 << (remaining_bits & 0xff)) - 1U |\n         ((1 << (bits_to_set & 0xff)) - 1U & middle_bits) << (remaining_bits & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": true,
            "current_name": "mask_bits_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "check_sum_080003ec",
                "param_1": "data",
                "local_1c": "length",
                "local_9": "calculated_checksum",
                "local_18": "current_index",
                "param_2": "length",
                "param_3": "checksum",
                "cVar1": "current_char",
                "uVar2": "expected_checksum",
                "local_14": "current_data"
            },
            "code": "bool check_sum_080003ec(char *data, int length, int checksum) {\n  char current_char;\n  uint8_t calculated_checksum = 0;\n  char *current_data = data;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initialize();\n    current_data = data;\n  }\n  for (; length != 0; length--) {\n    current_char = get_next_char(current_data);\n    calculated_checksum = current_char + (calculated_checksum != 0);\n    *current_data = current_char;\n    current_data++;\n  }\n  uint8_t expected_checksum = get_next_char(current_data);\n  return calculated_checksum == expected_checksum;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d7c",
                "FUN_08004d2c",
                "FUN_08004dd2"
            ],
            "imported": true,
            "current_name": "check_sum_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "replace_null_character_with_0x12_08002896",
                "param_1": "character_to_replace",
                "local_9": "replaced_character"
            },
            "code": "char replace_null_character_with_0x12_08002896(char character_to_replace) {\n  char replaced_character = character_to_replace;\n  if (character_to_replace == '\\0') {\n    replaced_character = '\\x12';\n  }\n  return replaced_character - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": true,
            "current_name": "replace_null_character_with_0x12_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = FUN_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_params_080001ac",
                "DAT_080001bc": "data_flag",
                "param_1": "first_param",
                "param_2": "second_param",
                "PTR_FUN_080001c4": "first_pointer",
                "PTR_DAT_080001c0": "second_data_pointer"
            },
            "code": "undefined8 concatenate_params_080001ac(undefined *first_param, undefined *second_param)\n{\n  if (DAT_080001bc != 0) {\n    first_param = PTR_FUN_080001c4;\n    second_param = PTR_DAT_080001c0;\n  }\n  return CONCAT44(second_param,first_param);\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": true,
            "current_name": "concatenate_params_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "data_size": "data_size",
                "FUN_08003740": "copy_data_to_buffer_08003740",
                "param_1": "source_data",
                "FUN_080036f0": "copy_data"
            },
            "code": "void copy_data_to_buffer_08003740(void* source_data)\n{\n  size_t data_size = 8;\n  copy_data(source_data, data_size);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": true,
            "current_name": "copy_data_to_buffer_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "PTR_DAT_080004a8": "params_array",
                "param_1": "param1",
                "FUN_08000478": "set_params_in_array_08000478",
                "param_2": "param2",
                "param_3": "param3"
            },
            "code": "void set_params_in_array_08000478(int param1, int param2, int param3) {\n  PTR_DAT_080004a8[25] = param1;\n  PTR_DAT_080004a8[26] = param2;\n  PTR_DAT_080004a8[27] = param3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": true,
            "current_name": "set_params_in_array_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "param_1": "character",
                "FUN_08006d2e": "print_character_08006d2e",
                "FUN_080069b4": "print_to_console"
            },
            "code": "void print_character_08006d2e(char character) {\n  print_to_console((int)character);\n  return;\n}",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": true,
            "current_name": "print_character_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "param_1": "data",
                "FUN_08007e1c": "wait_for_flag_to_set_and_store_byte_08007e1c",
                "DAT_08007e48": "status_flag"
            },
            "code": "void wait_for_flag_to_set_and_store_byte_08007e1c(byte data){\n  while((*DAT_08007e48 & 0x80) == 0);\n  *(DAT_08007e48 + 1) = (uint)data;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": true,
            "current_name": "wait_for_flag_to_set_and_store_byte_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "uVar10": "hash_key_3_low",
                "uVar11": "hash_key_3_high",
                "iVar1": "time_check",
                "uVar12": "hash_key_4_low",
                "uVar13": "hash_key_4_high",
                "param_1": "key",
                "FUN_0800adf0": "calc_hash_key_0800adf0",
                "param_2": "hash_seed",
                "hash_key": "final_hash_key",
                "param_3": "hash_size",
                "param_4": "hash_mask",
                "param_5": "use_seed",
                "uVar3": "seed_key_high",
                "uVar2": "seed_key_low",
                "uVar5": "hash_key_1_high",
                "uVar4": "hash_key_1_low",
                "uVar7": "hash_key_2_high",
                "uVar6": "hash_key_2_low",
                "uVar9": "seed_key_2_high",
                "uVar8": "seed_key_2_low"
            },
            "code": "int calc_hash_key_0800adf0(int key, uint32_t hash_seed, int hash_size, int hash_mask, int use_seed) {\n  int hash_key = 0;\n  if (((hash_seed & 0x7fffffff) < 0x3e400000) && (get_time() == 0)) {\n    return key;\n  }\n  uint64_t seed_key = get_seed_key(key, hash_seed, key);\n  uint32_t seed_key_high = (uint32_t)(seed_key >> 32);\n  uint32_t seed_key_low = (uint32_t)seed_key;\n  uint64_t hash_key_1 = get_hash_key(seed_key_low, seed_key_high, PTR_DAT_0800af40, PTR_DAT_0800af44);\n  uint64_t hash_key_2 = get_hash_key((uint32_t)(hash_key_1 >> 32), (uint32_t)hash_key_1, PTR_DAT_0800af48, PTR_DAT_0800af4c);\n  uint64_t hash_key_3 = get_hash_key((uint32_t)(hash_key_2 >> 32), (uint32_t)hash_key_2, PTR_DAT_0800af50, PTR_DAT_0800af54);\n  uint64_t hash_key_4 = get_hash_key((uint32_t)(hash_key_3 >> 32), (uint32_t)hash_key_3, PTR_DAT_0800af60, PTR_DAT_0800af64);\n  if (use_seed != 0) {\n    uint64_t seed_key_2 = get_seed_key(0, 0, PTR_DAT_0800af68, PTR_DAT_0800af6c);\n    hash_key = get_hash_key((uint32_t)(seed_key_2 >> 32), (uint32_t)seed_key_2, (uint32_t)hash_key_4, (uint32_t)(hash_key_4 >> 32));\n    hash_key = get_hash_key((uint32_t)(hash_key >> 32), (uint32_t)hash_key, seed_key_low, seed_key_high);\n    hash_key = get_hash_key((uint32_t)(hash_key >> 32), (uint32_t)hash_key, hash_seed, key);\n  } else {\n    hash_key = get_hash_key(PTR_DAT_0800af68, PTR_DAT_0800af6c, (uint32_t)hash_key_4, (uint32_t)(hash_key_4 >> 32));\n    hash_key = get_hash_key((uint32_t)(hash_key >> 32), (uint32_t)hash_key, seed_key_low, seed_key_high);\n    hash_key = get_hash_key((uint32_t)(hash_key >> 32), (uint32_t)hash_key, key, hash_seed);\n  }\n  return hash_key & hash_mask % hash_size;\n}",
            "called": [
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": true,
            "current_name": "calc_hash_key_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "call_func_A": "call_func_A",
                "call_func_F": "call_func_F",
                "call_func_C": "call_func_C",
                "call_func_B": "call_func_B",
                "call_func_E": "call_func_E",
                "call_func_D": "call_func_D",
                "FUN_08003a74": "process_data_08003a74",
                "PTR_DAT_08003b94": "PTR_DATA_2",
                "PTR_DAT_08003b90": "PTR_DATA"
            },
            "code": "void process_data_08003a74()\\n{\\n  byte data = PTR_DAT_08003b90[2];\\n  if (data != \"\\0\") {\\n    if ((data & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((data & 0x40) == 0) {\\n        call_func_A(0xfffffffe);\\n      }\\n      else {\\n        call_func_A(0xffffffff);\\n        call_func_B(1);\\n        PTR_DAT_08003b90[2] &= 0xef;\\n        while ((PTR_DAT_08003b90[2] & 0x10) == 0);\\n      }\\n      PTR_DAT_08003b90[2] &= 0x9f;\\n    }\\n    if ((data & 0x10) == 0) {\\n      if ((data & 1) != 0) {\\n        call_func_C();\\n        PTR_DAT_08003b90[2] &= 0xfe;\\n      }\\n      if ((data & 8) != 0) {\\n        call_func_D();\\n        PTR_DAT_08003b90[2] &= 0xf7;\\n      }\\n      if ((data & 4) != 0) {\\n        call_func_E();\\n        PTR_DAT_08003b90[2] &= 0xfb;\\n      }\\n      if ((data & 2) != 0) {\\n        call_func_F();\\n        if ((PTR_DAT_08003b90[0x28] & 2) != 0) {\\n          PTR_DAT_08003b90[0x10] = 1;\\n        }\\n        PTR_DAT_08003b90[2] &= 0xfd;\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080041a0",
                "FUN_080058a0",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_08004940"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_08001e98"
            ],
            "imported": true,
            "current_name": "process_data_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "param_1": "address",
                "DAT_08006b50": "data_address_2",
                "FUN_08006b00": "set_value_at_address_08006b00",
                "param_2": "value",
                "DAT_08006b4c": "data_address_1"
            },
            "code": "void set_value_at_address_08006b00(byte address, uint value) {\n  if (address < 0) {\n    *(char *)((address & 0xf) + DAT_08006b4c + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + DAT_08006b50 + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006c9c"
            ],
            "imported": true,
            "current_name": "set_value_at_address_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b524": "print_string",
                "DAT_0800b4dc": "is_printable",
                "FUN_0800b4d0": "print_if_not_zero_0800b4d0",
                "PTR_LAB_0800b4f0_1_0800b4e0": "printable_string"
            },
            "code": "void print_if_not_zero_0800b4d0(void)\n{\n  if (DAT_0800b4dc != 0) {\n    print_string(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n    return;\n  }\n  return;\n}\n",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": true,
            "current_name": "print_if_not_zero_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "iVar2": "hash_int_1",
                "iVar3": "hash_int_2",
                "hash_uint_4": "hash_uint_4",
                "hash_uint_5": "hash_uint_5",
                "param_1": "hash_param_1",
                "lVar1": "hash_long_1",
                "FUN_08007f54": "calculate_hash_08007f54",
                "param_2": "hash_param_2",
                "hash_uint_2": "hash_uint_2",
                "hash_uint_3": "hash_uint_3",
                "uVar4": "hash_uint_6",
                "hash_uint_1": "hash_uint_1"
            },
            "code": "void calculate_hash_08007f54(int hash_param_1, int hash_param_2)\n{\n  long long hash_long_1;\n  int hash_int_1;\n  int hash_int_2;\n  unsigned int hash_uint_1;\n  unsigned int hash_uint_2;\n  unsigned int hash_uint_3;\n  unsigned int hash_uint_4;\n  unsigned int hash_uint_5;\n  if ((*(unsigned int *)(hash_param_1 + 0xc) & 0x8000) == 0)\n  {\n    if ((hash_param_1 != PTR_DAT_08008184) && (hash_param_1 != PTR_DAT_08008188))\n    {\n      unsigned int hash_uint_6 = (unsigned int)FUN_08006680();\n      hash_long_1 = (long long)DAT_0800818c * ((long long)(unsigned int)((int)hash_uint_6 * 0x19) / (long long)(unsigned int)(hash_param_2 << 2));\n      hash_int_1 = FUN_08006680((int)hash_uint_6, (int)(hash_long_1 >> 0x20), (int)hash_long_1);\n      hash_int_2 = FUN_08006680();\n      hash_uint_1 = (unsigned int)((hash_long_1 >> 0x25) << 4);\n      hash_uint_2 = DAT_0800818c;\n      hash_uint_3 = (unsigned int)((unsigned int)(hash_int_1 * 0x19) / (unsigned int)(hash_param_2 << 2));\n      hash_uint_4 = (unsigned int)((long long)hash_uint_2 * ((long long)(unsigned int)((int)hash_int_2 * 0x19) / (long long)(unsigned int)(hash_param_2 << 2)) >> 0x25);\n      hash_uint_5 = (hash_uint_3 + hash_uint_4 * -100) * 0x10 + 0x32;\n      *(unsigned int *)(hash_param_1 + 8) = hash_uint_1 | (hash_uint_5 >> 0x25) & 0xf;\n      return;\n    }\n    unsigned int hash_uint_6 = (unsigned int)FUN_080066cc();\n    hash_long_1 = (long long)DAT_0800818c * ((long long)(unsigned int)((int)hash_uint_6 * 0x19) / (long long)(unsigned int)(hash_param_2 << 2));\n    hash_int_1 = FUN_080066cc((int)hash_uint_6, (int)(hash_long_1 >> 0x20), (int)hash_long_1);\n    hash_int_2 = FUN_080066cc();\n    hash_uint_1 = (unsigned int)((hash_long_1 >> 0x25) << 4);\n    hash_uint_2 = DAT_0800818c;\n    hash_uint_3 = (unsigned int)((unsigned int)(hash_int_1 * 0x19) / (unsigned int)(hash_param_2 << 2));\n    hash_uint_4 = (unsigned int)((long long)hash_uint_2 * ((long long)(unsigned int)((int)hash_int_2 * 0x19) / (long long)(unsigned int)(hash_param_2 << 2)) >> 0x25);\n    hash_uint_5 = (hash_uint_3 + hash_uint_4 * -100) * 0x10 + 0x32;\n    *(unsigned int *)(hash_param_1 + 8) = hash_uint_1 | (hash_uint_5 >> 0x25) & 0xf;\n  }\n  else\n  {\n    if ((hash_param_1 != PTR_DAT_08008184) && (hash_param_1 != PTR_DAT_08008188))\n    {\n      unsigned int hash_uint_6 = (unsigned int)FUN_08006680();\n      hash_long_1 = (long long)DAT_0800818c * ((long long)(unsigned int)((int)hash_uint_6 * 0x19) / (long long)(unsigned int)(hash_param_2 << 1));\n      hash_int_1 = FUN_08006680((int)hash_uint_6, (int)(hash_long_1 >> 0x20), (int)hash_long_1);\n      hash_int_2 = FUN_08006680();\n      hash_uint_1 = (unsigned int)((hash_long_1 >> 0x25) << 4);\n      hash_uint_2 = DAT_0800818c;\n      hash_uint_3 = (unsigned int)((unsigned int)(hash_int_1 * 0x19) / (unsigned int)(hash_param_2 << 1));\n      hash_uint_4 = (unsigned int)((long long)hash_uint_2 * ((long long)(unsigned int)((int)hash_int_2 * 0x19) / (long long)(unsigned int)(hash_param_2 << 1)) >> 0x25);\n      hash_uint_5 = (hash_uint_3 + hash_uint_4 * -100) * 0x10 + 0x32;\n      *(unsigned int *)(hash_param_1 + 8) = hash_uint_1 | (hash_uint_5 >> 0x25) & 0xf;\n      return;\n    }\n    unsigned int hash_uint_6 = (unsigned int)FUN_080066cc();\n    hash_long_1 = (long long)DAT_0800818c * ((long long)(unsigned int)((int)hash_uint_6 * 0x19) / (long long)(unsigned int)(hash_param_2 << 1));\n    hash_int_1 = FUN_080066cc((int)hash_uint_6, (int)(hash_long_1 >> 0x20), (int)hash_long_1);\n    hash_int_2 = FUN_080066cc();\n    hash_uint_1 = (unsigned int)((hash_long_1 >> 0x25) << 4);\n    hash_uint_2 = DAT_0800818c;\n    hash_uint_3 = (unsigned int)((unsigned int)(hash_int_1 * 0x19) / (unsigned int)(hash_param_2 << 1));\n    hash_uint_4 = (unsigned int)((long long)hash_uint_2 * ((long long)(unsigned int)((int)hash_int_2 * 0x19) / (long long)(unsigned int)(hash_param_2 << 1)) >> 0x25);\n    hash_uint_5 = (hash_uint_3 + hash_uint_4 * -100) * 0x10 + 0x32;\n    *(unsigned int *)(hash_param_1 + 8) = hash_uint_1 | (hash_uint_5 >> 0x25) & 0xf;\n  }\n  return;\n}",
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": true,
            "current_name": "calculate_hash_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "bVar1": "second_char",
                "iVar2": "temp_int",
                "local_a": "local_var_a",
                "PTR_DAT_08003f30": "global_var_2",
                "param_1": "input",
                "local_9": "local_var_9",
                "FUN_08003b98": "process_input_08003b98",
                "local_10": "local_var_10",
                "uVar3": "temp_uint",
                "uVar5": "temp_ulonglong",
                "uVar4": "result",
                "local_14": "local_var_14",
                "PTR_DAT_08003f2c": "global_var_1"
            },
            "code": "uint process_input_08003b98(char *input)\\n{\\n  uint result;\\n  byte second_char;\\n  byte third_char;\\n  byte fourth_char;\\n  char *input_ptr;\\n  int temp_int;\\n  undefined4 temp_uint;\\n  undefined8 temp_ulonglong;\\n  undefined4 local_var_14;\\n  undefined4 local_var_10;\\n  byte local_var_a;\\n  byte local_var_9;\\n  \\n  if (*input != \"$\") {\\n    result = process_non_special_input(input);\\n    return result;\\n  }\\n  local_var_a = 1;\\n  local_var_9 = \"\\0\";\\n  second_char = input[1];\\n  if (second_char == 0) {\\n    handle_error();\\n    return 0;\\n  }\\n  if ((0x58 < second_char) || (second_char < 0x23)) goto switchD_08003bdc_caseD_25;\\n  switch(second_char) {\\n  case 0x23:\\n    local_var_a = 2;\\n    if (input[2] != \"\\0\") {\\n      return 3;\\n    }\\n    handle_case_23();\\n    break;\\n  case 0x24:\\n    local_var_a = 2;\\n    if (input[2] != \"\\0\") {\\n      return 3;\\n    }\\n    handle_case_24();\\n    break;\\n  case 0x43:\\n    local_var_a = 2;\\n    if (input[2] != \"\\0\") {\\n      return 3;\\n    }\\n    if (PTR_DAT_08003f2c == \"\\a\") {\\n      handle_case_43_a();\\n      handle_case_43_b(5);\\n    }\\n    else {\\n      if (PTR_DAT_08003f2c != \"\\0\") {\\n        return 0xb;\\n      }\\n      PTR_DAT_08003f2c = 7;\\n      handle_case_43_b(4);\\n    }\\n    break;\\n  case 0x47:\\n    local_var_a = 2;\\n    if (input[2] != \"\\0\") {\\n      return 3;\\n    }\\n    handle_case_47();\\n    break;\\n  case 0x48:\\n    if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\\n      return 7;\\n    }\\n    if ((PTR_DAT_08003f2c != \"\\0\") && (PTR_DAT_08003f2c != \"\\x06\")) {\\n      return 0xb;\\n    }\\n    handle_case_48_a();\\n    if (*PTR_DAT_08003f2c == \"\\0\") {\\n      handle_case_48_b();\\n    }\\n    break;\\n  case 0x4e:\\n    local_var_a = 2;\\n    if (input[2] == \"\\0\") {\\n      for (local_var_9 = 0; local_var_9 < 2; local_var_9++) {\\n        temp_int = handle_case_4e(local_var_9, input);\\n        if (temp_int == 0) {\\n          handle_case_4e_a(10);\\n        }\\n        else {\\n          handle_case_4e_b(local_var_9, input);\\n        }\\n      }\\n      return 0;\\n    }\\n    local_var_9 = \"\\x01\";\\n  default:\\nswitchD_08003bdc_caseD_25:\\n    temp_int = parse_input(input, &local_var_a, &local_var_10);\\n    if (temp_int == 0) {\\n      return 1;\\n    }\\n    third_char = local_var_a + 1;\\n    if (input[local_var_a] != \"=\") {\\n      return 3;\\n    }\\n    local_var_a = third_char;\\n    if (local_var_9 == \"\\0\") {\\n      temp_int = parse_input(input, &local_var_a, &local_var_14);\\n      if (temp_int == 0) {\\n        return 1;\\n      }\\n      if (input[local_var_a] == \"\\0\") {\\n        temp_uint = convert_to_uint(local_var_10);\\n        result = handle_case_58(temp_uint, local_var_14);\\n        return result;\\n      }\\n      return 3;\\n    }\\n    input_ptr = input + third_char - 1;\\n    do {\\n      input_ptr[(uint)local_var_a - (uint)third_char] = input[local_var_a];\\n      result = (uint)local_var_a;\\n      local_var_a++;\\n    } while (input[result] != \"\\0\");\\n    local_var_9 = third_char;\\n    result = process_non_special_input(input);\\n    if (result != 0) {\\n      return (uint)result;\\n    }\\n    temp_ulonglong = convert_to_ulonglong(local_var_10);\\n    temp_ulonglong = calculate(temp_ulonglong, (int)temp_ulonglong >> 0x20);\\n    local_var_9 = convert_to_byte(temp_ulonglong, (int)temp_ulonglong >> 0x20);\\n    handle_case_58(local_var_9, input);\\n    break;\\n  case 0x58:\\n    local_var_a = 2;\\n    if (input[2] != \"\\0\") {\\n      return 3;\\n    }\\n    if (PTR_DAT_08003f2c == \"\\x06\") {\\n      handle_case_58_a(3);\\n      PTR_DAT_08003f2c = 0;\\n    }\\n  }\\n  return 0;\\n}",
            "called": [
                "FUN_080005b4",
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_080024c4",
                "FUN_08008590",
                "FUN_08004d2c",
                "FUN_080039bc",
                "FUN_08009798",
                "FUN_080046d0",
                "FUN_08002638",
                "FUN_080025e8",
                "FUN_08004e30",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08008bf0",
                "FUN_080044e8",
                "FUN_08004bc0",
                "FUN_08004900",
                "FUN_08009278"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": true,
            "current_name": "process_input_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "PTR_DAT_080025e4": "hex_pointer",
                "initialize_scan": "initialize_scanner",
                "PTR_DAT_080025d8": "scan_and_print_pointer_1",
                "initialize_buffer": "initialize_conversion_buffer",
                "apply_function": "apply_conversion_function",
                "print_result": "print_conversion_result",
                "PTR_DAT_080025dc": "scan_and_print_pointer_2",
                "print_summary": "print_conversion_summary",
                "PTR_DAT_080025e0": "buffer_pointer",
                "print_buffer": "print_conversion_buffer",
                "FUN_080024c4": "scan_and_print_080024c4",
                "convert_to_hex": "convert_to_hexadecimal",
                "initialize_print": "initialize_printer",
                "local_13": "is_local_13_set",
                "local_12": "is_local_12_set",
                "local_11": "is_local_11_set"
            },
            "code": "void scan_and_print_080024c4() {\\n  int is_local_13_set;\\n  int is_local_12_set;\\n  int is_local_11_set;\\n  int local_13;\\n  int local_12;\\n  int local_11;\\n  PTR_DAT_080025d8[1] = 5;\\n  *(undefined4 *)PTR_DAT_080025dc = 0;\\n  initialize_scan();\\n  initialize_print();\\n  if (*PTR_DAT_080025d8 == \"\\0\") {\\n    initialize_buffer(PTR_DAT_080025e0,0,0xc);\\n    print_buffer();\\n    PTR_DAT_080025d8[1] = 0;\\n    is_local_11_set = (*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x20) != 0;\\n    local_11 = is_local_11_set ? 1 : -1;\\n    is_local_12_set = (*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x80) != 0;\\n    local_12 = is_local_12_set ? 1 : -1;\\n    is_local_13_set = (*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x200) != 0;\\n    local_13 = is_local_13_set ? 1 : -1;\\n    uVar1 = convert_to_hex(local_11);\\n    uVar1 = apply_function(uVar1,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\\n    uVar2 = convert_to_hex(local_12);\\n    uVar2 = apply_function(uVar2,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\\n    uVar3 = convert_to_hex(local_13);\\n    uVar3 = apply_function(uVar3,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\\n    print_result(uVar1,uVar2,uVar3,*(undefined4 *)(PTR_DAT_080025e4 + 0x30),0);\\n    print_buffer();\\n    print_summary();\\n    initialize_print();\\n    if ((PTR_DAT_080025e4[0x28] & 8) != 0) {\\n      *(undefined4 *)PTR_DAT_080025dc = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08001d4c",
                "FUN_08008eec",
                "FUN_08003a74",
                "FUN_08002fd4",
                "FUN_0800283a",
                "FUN_0800585c",
                "FUN_08001e98",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "scan_and_print_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002870": "update_datapoint",
                "uVar1": "updated_datapoint",
                "*PTR_DAT_08002f70": "*datapoint_ptr_2",
                "FUN_08002f40": "update_datapoint_if_different_08002f40",
                "*PTR_DAT_08002f6c": "*datapoint_ptr_1"
            },
            "code": "void update_datapoint_if_different_08002f40(void)\n{\n  int current_datapoint = *PTR_DAT_08002f6c;\n  int new_datapoint = *PTR_DAT_08002f70;\n  if (current_datapoint != new_datapoint) {\n    int updated_datapoint = update_datapoint(new_datapoint);\n    *PTR_DAT_08002f70 = updated_datapoint;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": true,
            "current_name": "update_datapoint_if_different_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08001994",
                "FUN_08004250",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "set_flag_if_not_set_080025e8"
            },
            "code": "void set_flag_if_not_set_080025e8() {\n  int flag = PTR_DAT_08002634[2];\n  if ((flag & 0x10) == 0) {\n    flag |= 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    int byte_val = PTR_DAT_08002634[1];\n    if ((byte_val - 3) < 3) {\n      flag |= 0x20;\n      FUN_080057e4();\n    }\n    PTR_DAT_08002634[2] = flag;\n  }\n}",
            "called": [
                "FUN_08000210",
                "FUN_08005250",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "imported": true,
            "current_name": "set_flag_if_not_set_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": true,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_and_return_08005250",
                "do_nothing_08005214": "do_nothing"
            },
            "code": "void do_nothing_and_return_08005250(void)\n{\n  do_nothing_08005214();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_08005238",
                "FUN_080025e8",
                "FUN_0800525c"
            ],
            "imported": true,
            "current_name": "do_nothing_and_return_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "wait_for_input_08007430"
            },
            "code": "void wait_for_input_08007430(void)\n{\n  while(true)\n  {\n    // Do nothing and wait for input\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": true,
            "current_name": "wait_for_input_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_08002c18",
                "FUN_08009d78",
                "FUN_0800adf0",
                "FUN_08001f00",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08004940",
                "FUN_08001994",
                "FUN_0800a348",
                "FUN_080046d0",
                "FUN_08002638",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_0800a5a0",
                "FUN_0800b2e8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "DAT_080074c0": "memory_address_1",
                "local_c": "param_5",
                "DAT_080074c4": "memory_address_2",
                "local_4c": "flag_1",
                "FUN_08007436": "initialize_system_08007436",
                "local_1c": "param_1",
                "FUN_0800618c": "function_B",
                "local_2c": "flag_5",
                "local_18": "param_2",
                "local_28": "flag_6",
                "local_48": "flag_2",
                "local_10": "param_4",
                "FUNC_08005cec": "function_A",
                "local_20": "flag_8",
                "local_30": "flag_4",
                "local_14": "param_3",
                "local_24": "flag_7",
                "local_34": "flag_3"
            },
            "code": "void initialize_system_08007436(void)\n{\n  int status;\n  uint32_t flag_1 = 1;\n  uint32_t flag_2 = 1;\n  uint32_t flag_3 = 2;\n  uint32_t flag_4 = 0x400000;\n  uint32_t flag_5 = 8;\n  uint32_t flag_6 = 0x150;\n  uint32_t flag_7 = 2;\n  uint32_t flag_8 = 7;\n  status = FUNC_08005cec(&flag_1);\n  if (status != 0) {\n    handle_error();\n  }\n  uint32_t param_1 = 0xf;\n  uint32_t param_2 = 2;\n  uint32_t param_3 = 0;\n  uint32_t param_4 = 0x1400;\n  uint32_t param_5 = 0x1000;\n  status = function_B(&param_1, 5);\n  if (status != 0) {\n    handle_error();\n  }\n  *(uint *)(DAT_080074c0 + 0x40) |= 0x10000000;\n  *DAT_080074c4 |= 0xc000;\n}\n",
            "called": [
                "FUN_08005cec",
                "FUN_0800618c",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "initialize_system_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_0800b430": "clear_data",
                "FUN_08005324": "set_data_limit",
                "FUN_08005814": "initialize_data_08005814",
                "PTR_DAT_08005838": "PTR_DATA_FLAG",
                "PTR_DAT_08005834": "PTR_DATA_ARRAY"
            },
            "code": "void initialize_data_08005814(void)\n{\n  clear_data(PTR_DAT_08005834, 0, 0x24);\n  set_data_limit(800);\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "initialize_data_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "param_1": "data",
                "FUN_08005bdc": "set_data_08005bdc",
                "param_2": "value",
                "DAT_08005c2c": "data_ptr_2",
                "DAT_08005c28": "data_ptr_1"
            },
            "code": "void set_data_08005bdc(byte data, uint value) {\n  if (data < 0) {\n    *(char *)((data & 0xf) + DAT_08005c28 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)data + DAT_08005c2c + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": true,
            "current_name": "set_data_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "PTR_DAT_0800030c": "PTR_DATA_SECTION_FLAG",
                "FUN_080002f0": "initialize_system_080002f0",
                "PTR_DAT_08000308": "PTR_DATA_SECTION_START"
            },
            "code": "void initialize_system_080002f0(void)\n{\n  set_memory(PTR_DAT_08000308, 0xff, 4);\n  *(int *)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_08000310",
                "FUN_080003ec"
            ],
            "imported": true,
            "current_name": "initialize_system_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": true,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "local_c": "loop_counter",
                "local_1c": "mask_low",
                "local_18": "data_1",
                "FUN_0800778c": "update_data_0800778c",
                "local_10": "data_ptr",
                "local_20": "mask_high",
                "local_14": "data_2",
                "local_24": "bit_position"
            },
            "code": "void update_data_0800778c()\n{\n  int bit_position;\n  uint mask_high;\n  uint mask_low;\n  uint data_1;\n  uint data_2;\n  uint *data_ptr;\n  uint loop_counter;\n\n  for (loop_counter = 0; loop_counter < 0x11; loop_counter = loop_counter + 1) {\n    data_ptr = (uint *)(PTR_DAT_0800784c + loop_counter * 0x18);\n    *(uint *)(DAT_08007850 + 0x30) = *(uint *)(DAT_08007850 + 0x30) | 1 << (*data_ptr >> 4 & 0xff);\n    bit_position = 1 << (*data_ptr & 0xf);\n    mask_high = data_ptr[1];\n    mask_low = data_ptr[2];\n    data_1 = data_ptr[3];\n    data_2 = data_ptr[4];\n    FUN_08006e88(((*data_ptr >> 4) + 0x100080) * 0x400,&bit_position);\n    if (-1 < (int)data_ptr[5]) {\n      FUN_0800733e(((*data_ptr >> 4) + 0x100080) * 0x400,1 << (*data_ptr & 0xf) & 0xffff,data_ptr[5] & 0xff);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_0800733e",
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "update_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": true,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_0800b430": "initialize_data",
                "FUN_0800192c": "update_data",
                "FUN_080082ba": "do_nothing",
                "FUN_08008244": "do_nothing",
                "PTR_DAT_08001e94": "PTR_UNUSED",
                "FUN_08005238": "update_display",
                "FUN_08005814": "process_error",
                "FUN_080004ac": "process_output",
                "PTR_DAT_08001e90": "PTR_DATA",
                "FUN_080051b4": "initialize_network",
                "FUN_08001ddc": "main_loop_08001ddc",
                "FUN_0800583c": "initialize_display",
                "FUN_080001f8": "update_network",
                "FUN_08002f24": "process_input",
                "FUN_0800283a": "process_cleanup",
                "FUN_080039a0": "process_data"
            },
            "code": "void main_loop_08001ddc(void)\n{\n  do_nothing();\n  initialize_network();\n  initialize_display();\n  initialize_data(PTR_DAT_08001e90,0,20);\n  *PTR_DAT_08001e90 = 1;\n  PTR_DAT_08001e90[1] = 1;\n  do {\n    if (*PTR_DAT_08001e90 != '\\0') {\n      do_nothing();\n      process_input();\n      process_output();\n      process_data();\n      update_display();\n      update_network();\n      update_data();\n      *PTR_DAT_08001e90 = 0;\n      PTR_DAT_08001e90[2] = 0;\n      if ((PTR_DAT_08001e90[4] & 2) != 0) {\n        PTR_DAT_08001e90[16] = 1;\n      }\n      if ((PTR_DAT_08001e90[1] == 1) && ((PTR_DAT_08001e90[4] & 16) != 0)) {\n        PTR_DAT_08001e90[1] = 6;\n      }\n      if (PTR_DAT_08001e90[1] == 6) {\n        process_error(2);\n      }\n      else {\n        PTR_DAT_08001e90[1] = 0;\n        process_cleanup();\n      }\n    }\n    process_idle();\n    process_timeout();\n  } while( true );\n}",
            "called": [
                "FUN_0800192c",
                "FUN_080039a0",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_0800583c",
                "FUN_080004ac",
                "FUN_080001f8",
                "FUN_080039bc",
                "FUN_08002f24",
                "FUN_0800283a",
                "FUN_0800b430",
                "FUN_08005238",
                "FUN_08005814",
                "FUN_080041a0",
                "FUN_08003f34",
                "FUN_080051b4",
                "FUN_08008244"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "main_loop_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "DAT_080069e0": "array_start",
                "param_1": "bit_position",
                "FUN_080069b4": "set_bit_in_array_080069b4"
            },
            "code": "void set_bit_in_array_080069b4(uint8_t bit_position) {\n    uint32_t* array_ptr = (uint32_t*)(DAT_080069e0 + ((uint32_t)bit_position >> 5) * 4);\n    uint32_t bit_mask = 1 << (bit_position & 0x1f);\n    *array_ptr = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "is_end_of_string_08009228",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_08009228(void)\\n{\\n  char current_char;\\n  FUN_08009204();\\n  return current_char == \"\\0\";\\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_080005b4",
                "FUN_080029d8",
                "FUN_08004e30",
                "FUN_08002afc",
                "FUN_08003826",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "clear_interrupts_08007c7c",
                "FUN_08005760": "handle_interrupt_2",
                "FUNC_080053a0": "handle_interrupt_3",
                "_DAT_40000010": "PTR_DAT_40000010",
                "FUN_08005778": "handle_interrupt_1",
                "_DAT_4000000c": "PTR_DAT_4000000c"
            },
            "code": "void clear_interrupts_08007c7c(void)\n{\n  if (is_bit_set(_DAT_40000010, 2) && is_bit_set(_DAT_4000000c, 2)) {\n    clear_bit(_DAT_40000010, 2);\n    handle_interrupt_1();\n  }\n  if (is_bit_set(_DAT_40000010, 4) && is_bit_set(_DAT_4000000c, 4)) {\n    clear_bit(_DAT_40000010, 4);\n    handle_interrupt_2();\n  }\n  if (is_bit_set(_DAT_40000010, 1) && is_bit_set(_DAT_4000000c, 1)) {\n    clear_bit(_DAT_40000010, 1);\n    FUNC_080053a0();\n  }\n  return;\n}",
            "called": [
                "FUN_08005778",
                "FUN_080053a0",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": true,
            "current_name": "clear_interrupts_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "_DAT_40000038": "global_flag_2",
                "local_c": "flags",
                "FUN_08007b70": "set_flags_based_on_globals_08007b70",
                "_DAT_40000000": "global_flag_4",
                "_DAT_40000034": "global_flag_1",
                "_DAT_4000000c": "global_flag_3"
            },
            "code": "void set_flags_based_on_globals_08007b70(void)\n{\n  uint8_t flags = 0;\n  if (_DAT_40000034 != 0) {\n    flags |= 0b11;\n  }\n  if (_DAT_40000038 != 0) {\n    flags |= 0b100;\n  }\n  _DAT_4000000c |= flags;\n  _DAT_40000000 |= 0b1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": true,
            "current_name": "set_flags_based_on_globals_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "iVar1": "result",
                "PTR_FUN_080003ec": "FUN_080003ec",
                "FUN_08004d2c": "validate_data_08004d2c",
                "param_1": "data",
                "ushort": "unsigned_short",
                "DAT_08004bc0": "FUN_08004bc0",
                "*param_2": "*data_buffer",
                "param_2": "data_buffer"
            },
            "code": "bool validate_data_08004d2c(byte data, undefined *data_buffer){\n  int result;\n  int buffer_offset = (ushort)data * 0x101 + 0x300;\n  \n  result = PTR_FUN_080003ec(data_buffer, buffer_offset, 0x100);\n  \n  if (result == 0) {\n    *data_buffer = 0;\n    DAT_08004bc0(data, data_buffer);\n  }\n  \n  return result != 0;\n}",
            "called": [
                "FUN_080003ec",
                "FUN_08004bc0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "imported": true,
            "current_name": "validate_data_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = FUN_08008590(uVar3);\n  iVar4 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = FUN_08008590(uVar3);\n  iVar5 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = FUN_08008590(uVar3);\n  iVar6 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = FUN_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = FUN_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = FUN_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = FUN_08008590(uVar9);\n    uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = FUN_08008590(uVar9);\n      iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = FUN_08008590(uVar9);\n        iVar13 = FUN_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = FUN_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUN_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = FUN_08008590(uVar10);\n          uVar17 = FUN_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUN_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = FUN_08008590(uVar10);\n            uVar16 = FUN_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = FUN_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = FUN_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008e44",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08008cd8",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_08008894",
                "FUN_08008590",
                "FUN_08008b24",
                "FUN_08002978",
                "FUN_08002edc",
                "FUN_08009054",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08008cdc",
                "FUN_08008bf0",
                "FUN_08008640",
                "FUN_08009250",
                "FUN_080095b8",
                "FUN_08008b60",
                "FUN_08009318",
                "FUN_08009264",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "uVar1": "initial_value",
                "DAT_08006710": "memory_base_address",
                "FUN_080066cc": "calculate_shift_amount_080066cc",
                "uVar2": "leading_zeroes_count",
                "PTR_DAT_08006714": "memory_offset"
            },
            "code": "uint calculate_shift_amount_080066cc(void)\n{\n  uint leading_zeroes_count;\n  uint initial_value = get_initial_value();\n  uint shifted_value = (*(uint *)(PTR_DAT_08006714 + 8) & 0xe000) >> (leading_zeroes_count & 0xff);\n  leading_zeroes_count = count_leading_zeroes(0x70000);\n  return initial_value >> shifted_value;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": true,
            "current_name": "calculate_shift_amount_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "param_mask": "param_mask",
                "masked_param": "masked_param",
                "DAT_08001928": "dat_08001928",
                "*(uint *)(DAT_08001928 + 0x14)": "*ptr_dat_08001928_14",
                "param_1": "new_param",
                "masked_dat_08001928": "masked_dat_08001928",
                "uint": "uint",
                "FUN_080018fc": "set_param_080018fc",
                "ptr_dat_08001928_14": "ptr_dat_08001928_14",
                "ptr_dat_08001928": "ptr_dat_08001928"
            },
            "code": "void set_param_080018fc(uint new_param) {\n  uint* ptr_DAT_08001928 = (uint*)DAT_08001928;\n  uint* ptr_param = (uint*)&new_param;\n  uint* ptr_DAT_08001928_14 = ptr_DAT_08001928 + 0x14;\n  uint DAT_08001928_14 = *(uint *)(DAT_08001928 + 0x14);\n  uint param_mask = 0xfffff55f;\n  uint masked_DAT_08001928_14 = DAT_08001928_14 & param_mask;\n  uint masked_param = *ptr_param & ~param_mask;\n  *(uint *)(DAT_08001928 + 0x14) = masked_DAT_08001928 | masked_param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": true,
            "current_name": "set_param_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "iVar1": "result",
                "FUN_08004030": "display_result",
                "FUN_08004d2c": "check_input",
                "PTR_DAT_08003a14": "input_data",
                "*PTR_DAT_08003a14": "input_data_value",
                "FUN_080039bc": "check_inputs_and_display_results_080039bc",
                "local_9": "input_value",
                "FUNC_080005b4": "calculate_result",
                "FUN_0800369c": "display_input",
                "uVar2": "calculated_result"
            },
            "code": "void check_inputs_and_display_results_080039bc(void)\\n{\\n  int input_value;\\n  int result;\\n  for (input_value = 0; input_value < 2; input_value++) {\\n    result = check_input(input_value, PTR_DAT_08003a14);\\n    if (result == 0) {\\n      display_error_message(10);\\n    }\\n    else if (*PTR_DAT_08003a14 != \"\\0\") {\\n      display_input(PTR_DAT_08003a14);\\n      int calculated_result = FUNC_080005b4(PTR_DAT_08003a14);\\n      display_result(calculated_result);\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_0800369c",
                "FUN_08004d2c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "check_inputs_and_display_results_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "iVar2": "i",
                "param_1": "params",
                "lVar1": "current_time",
                "FUN_0800618c": "check_parameters_0800618c",
                "param_2": "num_params",
                "uVar3": "wait_time",
                "uVar5": "status",
                "uVar4": "max_wait_time"
            },
            "code": "int check_parameters_0800618c(uint *params, uint num_params) {\n  long long current_time;\n  int i;\n  uint wait_time;\n  uint status;\n  uint max_wait_time;\n  \n  if ((*ptr_DAT_08006400 & 0xf) < num_params) {\n    *(char *)ptr_DAT_08006400 = (char)num_params;\n    if (num_params != (*ptr_DAT_08006400 & 0xf)) {\n      return 1;\n    }\n    if ((*params & 1) != 0) {\n      if (params[1] == 1) {\n        if ((*ptr_DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((params[1] != 2) && ((*ptr_DAT_08006404 & 2) == 0)) {\n        return 1;\n      }\n      ptr_DAT_08006404[2] = params[1] | ptr_DAT_08006404[2] & 0xfffffffc;\n      i = get_current_time();\n      max_wait_time = i + 5000;\n      if (params[1] == 1) {\n        while ((ptr_DAT_08006404[2] & 0xc) != 4) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else if (params[1] == 2) {\n        while ((ptr_DAT_08006404[2] & 0xc) != 8) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((ptr_DAT_08006404[2] & 0xc) != 0) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*params & 1) != 0) {\n      if (params[1] == 1) {\n        if ((*ptr_DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (params[1] == 2) {\n        if ((*ptr_DAT_08006404 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((*ptr_DAT_08006404 & 2) == 0) {\n        return 1;\n      }\n      ptr_DAT_08006404[2] = params[1] | ptr_DAT_08006404[2] & 0xfffffffc;\n      i = get_current_time();\n      max_wait_time = i + 5000;\n      if (params[1] == 1) {\n        while ((ptr_DAT_08006404[2] & 0xc) != 4) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else if (params[1] == 2) {\n        while ((ptr_DAT_08006404[2] & 0xc) != 8) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((ptr_DAT_08006404[2] & 0xc) != 0) {\n          wait_time = get_current_time();\n          if (max_wait_time <= wait_time) {\n            return 3;\n          }\n        }\n      }\n    }\n    *(char *)ptr_DAT_08006400 = (char)num_params;\n    if (num_params != (*ptr_DAT_08006400 & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*params & 2) != 0) {\n    ptr_DAT_08006404[2] = params[2] | ptr_DAT_08006404[2] & 0xffffff0f;\n  }\n  if ((*params & 4) != 0) {\n    ptr_DAT_08006404[2] = params[3] | ptr_DAT_08006404[2] & 0xffffe3ff;\n  }\n  if ((*params & 8) != 0) {\n    ptr_DAT_08006404[2] = params[4] << 3 | ptr_DAT_08006404[2] & 0xffff1fff;\n  }\n  current_time = get_current_time();\n  status = (uint)((ulonglong)ptr_DAT_08006408 * (ulonglong)(current_time & 0xffffffff) >> 0x26);\n  FUN_08005c30(status, (int)(current_time >> 0x20), (int)((ulonglong)ptr_DAT_08006408 * (ulonglong)(current_time & 0xffffffff)));\n  return 0;\n}",
            "called": [
                "FUN_08005c30",
                "FUN_08005a84",
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": true,
            "current_name": "check_parameters_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_data_value_08006998",
                "DAT_080069b0": "data_start_address"
            },
            "code": "uint get_data_value_08006998(void)\n{\n  uint data_value = *(uint *)(DAT_080069b0 + 0xc);\n  uint shifted_value = data_value >> 8;\n  uint masked_value = shifted_value & 7;\n  return masked_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": true,
            "current_name": "get_data_value_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "PTR_DAT_080004f4": "system_info",
                "check_status": "check_system_status",
                "FUN_080004ac": "initialize_system_080004ac",
                "display_error_message": "display_system_error_message",
                "initialize_memory": "initialize_system_memory",
                "PTR_DAT_080004f0": "system_data",
                "initialize_devices": "initialize_system_devices"
            },
            "code": "void initialize_system_080004ac(void)\n{\n  int status;\n  initialize_memory(PTR_DAT_080004f0, 0, 0x38);\n  *(undefined4 *)(PTR_DAT_080004f0 + 8) = *(undefined4 *)(PTR_DAT_080004f4 + 0x10);\n  initialize_devices(0, 1, 2);\n  PTR_DAT_080004f0[4] = 1;\n  status = check_status(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f8);\n  if (status == 0) {\n    display_error_message(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_0800b430",
                "FUN_08000478"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "initialize_system_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "local_c": "sum",
                "FUN_080078f4": "sum_of_four_values_080078f4",
                "local_10": "index"
            },
            "code": "uint sum_of_four_values_080078f4(void)\n{\n  int index;\n  uint sum = 0;\n  for (index = 0; index < 4; index++) {\n    sum |= *(uint *)(PTR_DAT_0800792c + index * 4);\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": true,
            "current_name": "sum_of_four_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "PTR_s_Caution__Unlocked_08004218": "CAUTION_TEXT",
                "PTR_s_Disabled_08004220": "DISABLED_TEXT",
                "PTR_DAT_0800420c": "HEADER",
                "param_1": "message_type",
                "PTR_s_Reset_to_continue_08004210": "RESET_TEXT",
                "PTR_s___H____X__to_unlock_08004214": "UNLOCK_TEXT",
                "FUN_080041a0": "display_message_080041a0",
                "PTR_s_Enabled_0800421c": "ENABLED_TEXT",
                "PTR_DAT_08004224": "FOOTER"
            },
            "code": "void display_message_080041a0(int message_type) {\n  display_header();\n  switch(message_type) {\n    case 1:\n      display_text(\"Reset to continue\");\n      break;\n    case 2:\n      display_text(\"Enter code to unlock\");\n      break;\n    case 3:\n      display_text(\"Unlocked. Caution.\");\n      break;\n    case 4:\n      display_text(\"Enabled.\");\n      break;\n    case 5:\n      display_text(\"Disabled.\");\n      break;\n  }\n  display_footer();\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08003a74",
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "iVar1": "temp_var1",
                "param_1": "integer_part",
                "param_2": "fractional_part",
                "FUN_08008bf0": "convert_to_float_08008bf0",
                "uVar2": "shift_amount"
            },
            "code": "uint convert_to_float_08008bf0(uint integer_part, uint fractional_part) {\n  int temp_var1;\n  uint shift_amount;\n  if ((fractional_part & 0x80000000) != 0) {\n    return 0;\n  }\n  temp_var1 = fractional_part * 2 + 0x200000;\n  if (fractional_part * 2 < 0xffe00000) {\n    if (-1 < temp_var1) {\n      return 0;\n    }\n    shift_amount = -(temp_var1 >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (fractional_part << 0xb | 0x80000000 | integer_part >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((integer_part | fractional_part << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08002c18",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "convert_to_float_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "param_1": "permissions",
                "PTR_DAT_08003a70": "permissions_array",
                "FUN_080025e8": "execute_error_handler",
                "FUN_08003a18": "set_permissions_08003a18"
            },
            "code": "void set_permissions_08003a18(uint8_t permissions)\n{\n  if ((permissions & 0x80) == 0) {\n    if ((permissions & 0x40) == 0) {\n      if ((permissions & 0x20) != 0) {\n        PTR_DAT_08003a70[2] |= 2;\n      }\n    }\n    else {\n      PTR_DAT_08003a70[2] |= 8;\n    }\n  }\n  else {\n    execute_error_handler();\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": true,
            "current_name": "set_permissions_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08007c5e": "send_message",
                "FUN_08005790": "process_data_08005790",
                "do_nothing_08005318": "do_nothing",
                "FUN_08007b70": "do_something",
                "PTR_DAT_080057d4": "data_array",
                "PTR_DAT_080057d8": "data_array[2]",
                "FUN_08007c40": "send_message",
                "PTR_DAT_080057e0": "data_array[4]",
                "PTR_DAT_080057dc": "data_array[3]"
            },
            "code": "void process_data_08005790(void)\n{\n  do_nothing_08005318();\n  if (PTR_DAT_080057d4[1] == 3) {\n    *(unsigned short *)PTR_DAT_080057dc = *(unsigned short *)(PTR_DAT_080057d8 + 0x18);\n    *(unsigned short *)PTR_DAT_080057e0 = *(unsigned short *)(PTR_DAT_080057d8 + 0x1a);\n    send_message(0x69);\n    send_message(((unsigned char)PTR_DAT_080057d4[0xd] + 5) * 0x15);\n    do_something();\n  }\n  return;\n}",
            "called": [
                "FUN_08007c40",
                "FUN_08007c5e",
                "FUN_08007b70",
                "FUN_08005318"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": true,
            "current_name": "process_data_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  FUN_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = FUN_0800854c(local_40);\n  uVar4 = FUN_0800854c(local_11);\n  uVar4 = FUN_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = FUN_08008590(uVar1);\n  uVar3 = FUN_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = FUN_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = FUN_0800854c(local_11);\n  uVar3 = FUN_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = FUN_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = FUN_08008590(uVar1);\n  local_4c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  FUN_080018fc(local_1a);\n  FUN_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = FUN_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08008894",
                "FUN_08008590",
                "FUN_080078f4",
                "FUN_08009054",
                "FUN_0800b430",
                "FUN_08002828",
                "FUN_08008bf0",
                "FUN_0800854c",
                "FUN_08008640",
                "FUN_080095b8",
                "FUN_08009318"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "param_1": "address",
                "FUN_08007854": "get_bit_at_position_08007854",
                "PTR_": "ptr",
                "DAT_": "value"
            },
            "code": "bool get_bit_at_position_08007854(uint32_t address, uint8_t position) {\n    uint32_t *PTR_ = (uint32_t *)((address >> 4) * 0x400 + 0x40020010);\n    uint32_t DAT_ = *PTR_ >> (position & 0xf) & 1;\n    return (bool)DAT_;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": true,
            "current_name": "get_bit_at_position_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "param_1": "data",
                "FUN_080037fc": "print_data",
                "FUN_08004900": "print_and_log_data_08004900",
                "param_2": "data_size",
                "FUN_0800369c": "log_data_size",
                "FUN_080036c6": "print_header"
            },
            "code": "void print_and_log_data_08004900(undefined data, undefined4 data_size)\n{\n  print_header();\n  print_data(data);\n  log_data_size(data_size);\n  return;\n}",
            "called": [
                "FUN_0800369c",
                "FUN_080036c6",
                "FUN_080037fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "print_and_log_data_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": true,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "printHelpMenu_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "helpMenu",
                "FUN_080036c6": "printMessage"
            },
            "code": "void printHelpMenu_08004228(void)\n{\n  printMessage(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": true,
            "current_name": "printHelpMenu_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = FUN_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_0800a1bc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "param_1": "index",
                "PTR_": "",
                "DAT_": "",
                "FUN_080076c8": "toggle_bit_at_index_080076c8"
            },
            "code": "DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_oDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_ toggle_bit_at_index_080076c8(DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_{DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_(DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_(DAT_PDAT_TDAT_RDAT__DAT_(DAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_>DAT_PDAT_TDAT_RDAT__DAT_>DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_4DAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_4DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_+DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_4DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_2DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_1DAT_PDAT_TDAT_RDAT__DAT_4DAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_kDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_1DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_<DAT_PDAT_TDAT_RDAT__DAT_<DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_(DAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_&DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_fDAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_*DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_^DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_kDAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_}DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": true,
            "current_name": "toggle_bit_at_index_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": true,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "DAT_08006abc": "array_start_address",
                "param_1": "bit_position",
                "PTR_DAT_08006abc": "array_ptr",
                "FUN_08006a8c": "set_bit_in_array_08006a8c"
            },
            "code": "void set_bit_in_array_08006a8c(byte bit_position) {\n    int* PTR_DAT_08006abc = (int*)(DAT_08006abc + (((uint)(int)(char)bit_position >> 5) + 0x60) * 4);\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *PTR_DAT_08006abc = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_080004fc": "execute_function2",
                "FUN_080035ec": "execute_function1",
                "FUN_0800283a": "execute_functions_0800283a",
                "PTR_DAT_08002868": "data_pointer"
            },
            "code": "void execute_functions_0800283a(void)\n{\n  int arg1 = *(int *)(PTR_DAT_08002868 + 4);\n  int arg2 = *(int *)(PTR_DAT_08002868 + 8);\n  int arg3 = *(int *)(PTR_DAT_08002868 + 0xc);\n  execute_function1(arg1, arg2, arg3);\n  execute_function2(arg1, arg2, arg3);\n  return;\n}",
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": true,
            "current_name": "execute_functions_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "bVar4": "is_zero",
                "exponent_shift": "exponent_shift",
                "uVar1": "temp_1",
                "max_bit": "max_bit",
                "param_1": "input_1",
                "nan_mask": "nan_mask",
                "result": "result",
                "unaff_r4": "temp_2",
                "param_2": "input_2",
                "param_3": "input_3",
                "exponent_mask": "exponent_mask",
                "param_4": "input_4",
                "uVar3": "temp_4",
                "sign_bit": "sign_bit",
                "uVar2": "temp_3",
                "FUN_0800881c": "calculate_result_0800881c",
                "in_r12": "mask",
                "exponent": "exponent"
            },
            "code": "ulonglong calculate_result_0800881c(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1 = 0;\n  uint temp_2 = 0;\n  uint temp_3 = 0;\n  uint temp_4 = 0;\n  bool is_zero = false;\n  uint mask = 0x80000000;\n  uint max_bit = 0x100000;\n  uint exponent_mask = 0x7ff00000;\n  uint nan_mask = 0x7ff8000000000000;\n  uint exponent_shift = 32;\n  uint result = 0;\n  uint exponent = 0;\n  uint sign_bit = 0;\n\n  temp_1 = input_4 >> 0x14;\n\n  if (input_3 != input_4 && temp_1 != input_4) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      result = (input_2 ^ input_4) & mask;\n      result <<= exponent_shift;\n      return (ulonglong)result;\n    }\n    if (input_3 == 0) {\n      temp_3 = input_2 & mask;\n      do {\n        temp_2 = input_1 & mask;\n        input_1 <<= 1;\n        input_2 = input_2 * 2 + (uint)(temp_2 != 0);\n      } while ((input_2 & max_bit) == 0);\n      input_2 |= temp_3;\n      if (temp_1 != 0) {\n        result = input_1;\n        result <<= exponent_shift;\n        result |= input_2;\n        return (ulonglong)result;\n      }\n    }\n    do {\n      temp_1 = input_3 & mask;\n      input_3 <<= 1;\n      input_4 = input_4 * 2 + (uint)(temp_1 != 0);\n    } while ((input_4 & max_bit) == 0);\n    result = input_1;\n    result <<= exponent_shift;\n    result |= input_2;\n    return (ulonglong)result;\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_3 = input_2;\n  if (((!is_zero) && ((input_3 != input_4 || ((input_1 | input_2 << 0xc) == 0)))) && ((temp_1 != input_4 || (input_1 = input_3, temp_3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    sign_bit = (input_2 ^ input_4) & mask;\n    exponent = exponent_mask | sign_bit;\n    exponent <<= exponent_shift;\n    result = temp_3;\n    result <<= exponent_shift;\n    result |= input_1;\n    result |= exponent;\n    return (ulonglong)result;\n  }\n  result = temp_3;\n  result <<= exponent_shift;\n  result |= input_1;\n  result |= nan_mask;\n  return (ulonglong)result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": true,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "convertByteToUshortAndAddOffset_08004bc0",
                "param_1": "inputByte",
                "param_2": "param_2"
            },
            "code": "void convertByteToUshortAndAddOffset_08004bc0(byte inputByte, undefined4 param_2)\n{\n    ushort convertedUshort = (ushort)inputByte * 0x101 + 0x300;\n    FUN_08000374(convertedUshort, param_2, 0x100);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "imported": true,
            "current_name": "convertByteToUshortAndAddOffset_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "is_CY_zero_or_ZR_nonzero_08008b4c",
                "in_ZR": "zero",
                "in_CY": "carry"
            },
            "code": "bool is_CY_zero_or_ZR_nonzero_08008b4c(){\n  undefined zero;\n  undefined carry;\n  \n  FUN_08008af0();\n  return !(bool)carry || (bool)zero;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": true,
            "current_name": "is_CY_zero_or_ZR_nonzero_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initializeProgram_08004c2a",
                "FUN_08000340": "setInitialValues",
                "FUN_08000374": "initializeData",
                "PTR_DAT_08004c44": "PTR_DATA_08004c44"
            },
            "code": "void initializeProgram_08004c2a(void)\n{\n  setInitialValues(0, 5);\n  initializeData(PTR_DAT_08004c44, 0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "imported": true,
            "current_name": "initializeProgram_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "execute_function_0800826a",
                "param_1": "data",
                "FUN_08007e1c": "call_other_function"
            },
            "code": "int execute_function_0800826a(void* data)\n{\n  call_other_function(data);\n  return 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": true,
            "current_name": "execute_function_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "current_char",
                "FUN_08008af0": "call_function_to_set_current_char"
            },
            "code": "bool is_end_of_string_08008b60(void)\n{\n  char current_char;\n  call_function_to_set_current_char();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_080094c0",
                "FUN_08009318",
                "FUN_0800af78",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_local_variable_08005324",
                "param_1": "input_value",
                "local_14": "calculated_value"
            },
            "code": "void calculate_local_variable_08005324(uint input_value)\n{\n  uint calculated_value;\n  if (input_value < 800) {\n    calculated_value = 800;\n  }\n  else {\n    calculated_value = DAT_08005358 / input_value;\n  }\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculated_value;\n  call_other_function(calculated_value);\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_08005814",
                "FUN_080053a0",
                "FUN_080058a0"
            ],
            "imported": true,
            "current_name": "calculate_local_variable_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "PTR_DAT_0800033c": "array",
                "FUN_08000310": "get_value_from_array_08000310",
                "param_1": "index",
                "FUN_080002f0": "initialize_array",
                "PTR_DAT_08000338": "is_initialized"
            },
            "code": "int get_value_from_array_08000310(uint index)\n{\n  int* PTR_DAT_08000338 = (int*)PTR_DAT_08000338;\n  int* PTR_DAT_0800033c = PTR_DAT_0800033c;\n  if (*PTR_DAT_08000338 == 0) {\n    initialize_PTR_DAT_0800033c();\n  }\n  return PTR_DAT_0800033c[index & 0x3ff];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": true,
            "current_name": "get_value_from_array_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": true,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08006cf6": "print_message_to_screen",
                "local_c": "message_length",
                "DAT_08007acc": "MESSAGE_ID_3",
                "param_1": "message_id",
                "FUN_08007a70": "print_message_08007a70",
                "FUN_080079e0": "log_message",
                "DAT_08007ac8": "MESSAGE_ID_1"
            },
            "code": "void print_message_08007a70(int message_id, undefined4 param_2, undefined4 param_3)\n{\n  int message_length;\n  if (message_id == DAT_08007ac8) {\n    message_length = 28;\n  }\n  else if (message_id == MESSAGE_ID_2) {\n    message_length = 29;\n  }\n  else {\n    if (message_id != DAT_08007acc) {\n      return;\n    }\n    message_length = 30;\n  }\n  print_message_08007a70_to_screen(message_length, param_2, param_3);\n  log_message(message_length);\n  return;\n}",
            "called": [
                "FUN_08006cf6",
                "FUN_080079e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": true,
            "current_name": "print_message_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_0800b3e8",
                "FUN_08000188",
                "FUN_080001ac"
            ],
            "imported": true,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "uVar1": "result1",
                "param_1": "a",
                "FUN_08002978": "calculate_checksum_08002978",
                "param_2": "b",
                "FUNC_08008cdc": "calculate_hash",
                "param_3": "c",
                "FUN_08008c30": "calculate_checksum",
                "FUN_080098d0": "calculate_checksum",
                "FUNC_08008eec": "calculate_hash",
                "uVar3": "result3",
                "FUN_08008590": "calculate_value",
                "uVar2": "result2",
                "FUNC_08008cd8": "combine_results"
            },
            "code": "int calculate_checksum_08002978(int a, int b, int c)\n{\n  int result1 = FUNC_08008eec(b, b);\n  int result2 = FUNC_08008cdc(a, a);\n  int result3 = calculate_hash(result2, c);\n  int final_result = FUNC_08008cd8(result1, result3);\n  int final_value = calculate_value(final_result);\n  int final_checksum = calculate_checksum_08002978(final_value);\n  return final_checksum;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_080029d8",
                "FUN_08002afc",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "calculate_checksum_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_40 = FUN_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    local_38 = FUN_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = FUN_08008ba0();\n  uVar11 = FUN_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_08008b10",
                "FUN_08008ba0",
                "FUN_0800a5a0",
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "iVar1": "is_negative",
                "local_a": "index",
                "acStack_1d": "buffer",
                "param_1": "num",
                "local_9": "i",
                "FUN_08003826": "print_unsigned_decimal_08003826",
                "local_10": "quotient",
                "local_24": "abs_num"
            },
            "code": "void print_unsigned_decimal_08003826(uint32_t num)\n{\n  int is_negative = FUNC_08009228(num, 0);\n  uint32_t abs_num = num;\n  if (is_negative) {\n    FUN_08008250('-');\n    abs_num = num ^ 0x80000000;\n  }\n  for (int i = PTR_DAT_08003970[0x3d]; i > 1; i -= 2) {\n    abs_num = FUNC_08008eec(abs_num, DAT_08003974);\n  }\n  if (i != 0) {\n    abs_num = FUNC_08008eec(abs_num, DAT_08003978);\n  }\n  uint32_t quotient = FUNC_08008cdc(abs_num, 0x3f000000);\n  int digits = FUN_08009278(quotient);\n  char buffer[13];\n  buffer[digits + 1] = '.';\n  int index = digits;\n  while (quotient != 0) {\n    if (index == PTR_DAT_08003970[0x3d]) {\n      index = index + 1;\n    }\n    buffer[index + 1] = (char)(quotient % 10) + '0';\n    quotient = quotient / 10;\n    index = index - 1;\n  }\n  while (index < PTR_DAT_08003970[0x3d]) {\n    index = index + 1;\n    buffer[index + 1] = '0';\n  }\n  if (index == PTR_DAT_08003970[0x3d]) {\n    index = index + 2;\n    buffer[index + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(buffer[index]);\n  }\n}",
            "called": [
                "FUN_08008cdc",
                "FUN_08008250",
                "FUN_08008eec",
                "FUN_08009228",
                "FUN_08009278"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_080046d0",
                "FUN_08004250",
                "FUN_080044e8",
                "FUN_08004940"
            ],
            "imported": true,
            "current_name": "print_unsigned_decimal_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "in_ZR": "zero_register",
                "in_CY": "carry_register",
                "FUN_0800923c": "is_CY_false_or_ZR_true_0800923c"
            },
            "code": "bool is_CY_false_or_ZR_true_0800923c() {\n  undefined zero_register;\n  undefined carry_register;\n  FUN_08009204();\n  return !(bool)carry_register || (bool)zero_register;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": true,
            "current_name": "is_CY_false_or_ZR_true_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "iVar1": "result",
                "param_1": "original_param",
                "param_2": "updated_param",
                "FUN_08002afc": "update_parameter_08002afc",
                "uVar3": "updated_param_2",
                "uVar2": "updated_param_1"
            },
            "code": "void update_parameter_08002afc(int param_1, int param_2) {\n  int result;\n  undefined4 updated_param_2;\n  undefined4 updated_param_1;\n\n  if (param_1 != 0 && *(char *)(param_1 + 0x25) == \"\\0\") {\n    result = FUN_08009228(*(undefined4 *)(param_1 + 0x18), *(undefined4 *)(param_2 + 0x18));\n    if (result != 0) {\n      updated_param_2 = *(undefined4 *)(param_2 + 0x18);\n      updated_param_1 = FUN_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000, *(undefined4 *)(param_1 + 0x18), *(undefined4 *)(param_1 + 0x20));\n      result = FUN_08009228(updated_param_2, updated_param_1);\n      if (result == 0) {\n        updated_param_1 = FUN_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000, *(undefined4 *)(param_1 + 0x18), *(undefined4 *)(param_1 + 0x20));\n      } else {\n        updated_param_1 = *(undefined4 *)(param_2 + 0x18);\n      }\n      result = FUN_08009214(updated_param_1, *(undefined4 *)(param_2 + 0x18));\n      if (result == 0) {\n        *(undefined4 *)(param_2 + 0x18) = updated_param_1;\n        *(undefined *)(param_2 + 0x24) = 1;\n      }\n    }\n  }\n}",
            "called": [
                "FUN_08009214",
                "FUN_08002978",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": true,
            "current_name": "update_parameter_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "PTR_DAT_08004d0c + 4": "ptr1[1]",
                "DAT_08004d10": "data1",
                "PTR_DAT_08004d0c + 0x20": "ptr1[8]",
                "PTR_DAT_08004d0c + 8": "ptr1[2]",
                "PTR_DAT_08004d0c + 0x30": "ptr3[13]",
                "PTR_DAT_08004d0c + 0x10": "ptr1[4]",
                "PTR_DAT_08004d0c + 0x24": "ptr1[9]",
                "param_1": "input",
                "PTR_DAT_08004d0c + 0x34": "ptr5[8]",
                "PTR_DAT_08004d0c + 0x14": "ptr1[5]",
                "PTR_DAT_08004d0c + 0x28": "ptr3[10]",
                "PTR_DAT_08004d0c + 0x38": "ptr6",
                "PTR_DAT_08004d0c + 0x18": "ptr2[0]",
                "FUN_08004c48": "init_08004c48",
                "PTR_DAT_08004d0c + 0x1a": "ptr2[1]",
                "PTR_DAT_08004d0c + 0x3c": "ptr3[15]",
                "PTR_DAT_08004d0c + 0x2a": "ptr4[2]",
                "PTR_DAT_08004d0c + 0x1c": "ptr1[7]",
                "PTR_DAT_08004d0c + 0x3e": "ptr3[17]",
                "PTR_DAT_08004d0c + 0x2c": "ptr3[12]",
                "PTR_DAT_08004d0c + 0x3d": "ptr3[16]",
                "PTR_DAT_08004d0c": "ptr1"
            },
            "code": "void init_08004c48(char input) {\n  if (input != '\\0') {\n    int* PTR_DAT_08004d0c = (int*)PTR_DAT_08004d0c;\n    int DAT_08004d10 = DAT_08004d10;\n    PTR_DAT_08004d0c[0] = DAT_08004d10;\n    PTR_DAT_08004d0c + 4 = DAT_08004d10;\n    PTR_DAT_08004d0c + 8 = DAT_08004d10;\n    PTR_DAT_08004d0c[13] = 10;\n    PTR_DAT_08004d0c + 0x10 = DAT_08004d14;\n    PTR_DAT_08004d0c + 0x14 = DAT_08004d18;\n    PTR_DAT_08004d0c + 0x20 = DAT_08004d1c;\n    PTR_DAT_08004d0c + 0x1c = DAT_08004d20;\n    short* ptr2 = (short*)(PTR_DAT_08004d0c + 6);\n    PTR_DAT_08004d0c + 0x18 = 0;\n    PTR_DAT_08004d0c + 0x1a = 0xa80;\n    PTR_DAT_08004d0c + 0x24 = DAT_08004d24;\n  }\n  int* ptr3 = (int*)PTR_DAT_08004d0c;\n  PTR_DAT_08004d0c + 0x28 |= 2;\n  PTR_DAT_08004d0c + 0x28 |= 0x10;\n  short* ptr4 = (short*)(ptr3 + 10);\n  PTR_DAT_08004d0c + 0x2a = 0;\n  PTR_DAT_08004d0c + 0x2c = DAT_08004d28;\n  PTR_DAT_08004d0c + 0x30 = DAT_08004d14;\n  short* ptr5 = (short*)(ptr3 + 16);\n  PTR_DAT_08004d0c + 0x34 = 100;\n  float* PTR_DAT_08004d0c + 0x38 = (float*)(ptr3 + 18);\n  *PTR_DAT_08004d0c + 0x38 = 1.0f;\n  PTR_DAT_08004d0c + 0x3c = 25;\n  PTR_DAT_08004d0c + 0x3d = 3;\n  PTR_DAT_08004d0c + 0x3e = 25;\n  init_08004c482();\n  return;\n}",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": true,
            "current_name": "init_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "param_1": "param",
                "FUN_08005a98": "call_function",
                "FUN_080002a0": "call_function_with_param_1_080002a0"
            },
            "code": "void call_function_with_param_1_080002a0(int param){\n  call_function(param);\n  return;\n}",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": true,
            "current_name": "call_function_with_param_1_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "in_ZR": "is_ZR_set",
                "in_CY": "is_CY_set",
                "FUN_08009250": "is_CY_false_or_ZR_true_08009250"
            },
            "code": "bool is_CY_false_or_ZR_true_08009250(void)\n{\n  bool is_CY_false = !is_CY_set();\n  bool is_ZR_true = is_ZR_set();\n  return is_CY_false || is_ZR_true;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08001f00",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "is_CY_false_or_ZR_true_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "local_c": "flag",
                "param_1": "mode",
                "local_1c": "constant1",
                "local_18": "constant2",
                "param_2": "param2",
                "param_3": "param3",
                "local_10": "constant4",
                "FUN_0800640c": "set_params_0800640c",
                "local_14": "constant3"
            },
            "code": "void set_params_0800640c(int mode, uint param_2, uint param_3)\n{\n  // Define local variables\n  undefined4 flag;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n\n  // Check mode\n  if (mode == 0) {\n    // Set flag to 1\n    *(uint *)(DAT_080064b0 + 0x30) = *(uint *)(DAT_080064b0 + 0x30) | 1;\n    // Set constants\n    constant1 = 0x100;\n    constant2 = 2;\n    constant3 = 3;\n    constant4 = 0;\n    // Call function with constants\n    FUN_08006e88(DAT_080064b4, &constant1);\n    // Set value\n    *(uint *)(DAT_080064b0 + 8) = param_3 | param_2 | *(uint *)(DAT_080064b0 + 8) & 0xf89fffff;\n  }\n  else {\n    // Set flag to 4\n    *(uint *)(DAT_080064b0 + 0x30) = *(uint *)(DAT_080064b0 + 0x30) | 4;\n    // Set constants\n    constant1 = 0x200;\n    constant2 = 2;\n    constant3 = 3;\n    constant4 = 0;\n    // Call function with constants\n    FUN_08006e88(DAT_080064b8, &constant1);\n    // Set value\n    *(uint *)(DAT_080064b0 + 8) = param_2 | param_3 << 3 | *(uint *)(DAT_080064b0 + 8) & 0x7ffffff;\n  }\n  return;\n}",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": true,
            "current_name": "set_params_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "FUN_08008af0": "execute_function_with_swapped_arguments_08008af0"
            },
            "code": "void execute_function_with_swapped_arguments_08008af0(undefined4 arg1, undefined4 arg2, undefined4 arg3, undefined4 arg4)\n{\n  execute_function_with_swapped_arguments_08008af0(arg3, arg4, arg1, arg2);\n  return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "imported": true,
            "current_name": "execute_function_with_swapped_arguments_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "convert_char_to_int_08006e1a",
                "FUN_08006ac0": "convert_char_to_int_helper",
                "uVar1": "converted_int",
                "param_1": "input_char"
            },
            "code": "int convert_char_to_int_08006e1a(char input_char) {\n  int converted_int = convert_char_to_int_08006e1a_helper((int)input_char);\n  return converted_int;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": true,
            "current_name": "convert_char_to_int_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "update_param_value_080052ac",
                "param_1": "new_param_value",
                "DAT_080052d8": "data_section_ptr",
                "PTR_080052d8": "data_section_ptr"
            },
            "code": "void update_param_value_080052ac(uint new_param_value)\n{\n  uint* param_ptr = (uint*)(DAT_080052d8 + 0x14);\n  uint current_value = *param_ptr;\n  uint mask = 0xFFFFFAAF;\n  *param_ptr = (new_param_value | (current_value & mask));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_08005778",
                "FUN_0800583c",
                "FUN_08005760"
            ],
            "imported": true,
            "current_name": "update_param_value_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_file_validity_08008286",
                "iVar2": "file_status",
                "uVar1": "result",
                "FUN_08005900": "check_file_contents",
                "FUN_08007e84": "get_file_contents",
                "FUN_08007e58": "get_file_status"
            },
            "code": "undefined check_file_validity_08008286(void)\n{\n  undefined result;\n  int file_status;\n  \n  file_status = get_file_status();\n  if (file_status != 0) {\n    result = get_file_contents();\n    int content_status = check_file_contents(result);\n    if (content_status == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}",
            "called": [
                "FUN_08007e58",
                "FUN_08005900",
                "FUN_08007e84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": true,
            "current_name": "check_file_validity_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": true,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08008b74(uint input1, int input2, uint input3, int input4) {\n  bool condition1 = ((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0);\n  bool condition2 = ((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0));\n  if (condition1 && condition2) {\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": true,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "iVar4": "list_pointer",
                "iVar5": "list_start",
                "FUN_0800b524": "add_parameter_to_list_0800b524",
                "param_1": "list_index",
                "param_2": "parameter_value",
                "param_3": "parameter_type",
                "do_nothing_0800b51c": "do_nothing_1",
                "param_4": "parameter_flag",
                "puVar1": "pointer_to_pointer",
                "uVar3": "parameter_count",
                "uVar2": "return_value",
                "do_nothing_0800b520": "do_nothing_2",
                "uVar6": "parameter_flag_mask"
            },
            "code": "int add_parameter_to_list_0800b524(int list_index, int parameter_value, int parameter_type, int parameter_flag) {\n  int list_pointer = PTR_PTR_DAT_0800b5a8;\n  do_nothing_0800b51c(*(int *)PTR_PTR_DAT_0800b5ac);\n  int list_start = *(int *)(list_pointer + 0x148);\n  if (list_start == 0) {\n    list_start = list_pointer + 0x14c;\n    *(int *)(list_pointer + 0x148) = list_start;\n  }\n  uint parameter_count = *(uint *)(list_start + 4);\n  if ((int)parameter_count < 0x20) {\n    if (list_index != 0) {\n      int parameter_pointer = list_start + parameter_count * 4;\n      *(int *)(parameter_pointer + 0x88) = parameter_type;\n      uint parameter_flag_mask = 1 << (parameter_count & 0xff);\n      *(uint *)(list_start + 0x188) = *(uint *)(list_start + 0x188) | parameter_flag_mask;\n      *(int *)(parameter_pointer + 0x108) = parameter_flag;\n      if (list_index == 2) {\n        *(uint *)(list_start + 0x18c) = parameter_flag_mask | *(uint *)(list_start + 0x18c);\n      }\n    }\n    int do_nothing_1 = *(int *)PTR_PTR_DAT_0800b5ac;\n    *(uint *)(list_start + 4) = parameter_count + 1;\n    *(int *)(list_start + (parameter_count + 2) * 4) = parameter_value;\n    do_nothing_0800b520(do_nothing_1);\n    return 0;\n  }\n  else {\n    int do_nothing_2 = *(int *)PTR_PTR_DAT_0800b5ac;\n    do_nothing_0800b520(do_nothing_2);\n    return -1;\n  }\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": true,
            "current_name": "add_parameter_to_list_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": true,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "DAT_08007f44": "FLAG_C",
                "DAT_08007f50": "FLAG_F",
                "DAT_08007f40": "FLAG_B",
                "*(uint *)(DAT_08007f3c + 0x44)": "*more_flags_ptr",
                "param_1": "flag",
                "FUN_08007ea4": "set_flags_08007ea4",
                "DAT_08007f4c": "FLAG_E",
                "*(uint *)(DAT_08007f3c + 0x40)": "*flags_ptr",
                "DAT_08007f38": "FLAG_A",
                "DAT_08007f48": "FLAG_D"
            },
            "code": "void set_flags_08007ea4(int flag) {\n    uint* flags_ptr = (uint*)(DAT_08007f3c + 0x40);\n    uint* more_flags_ptr = (uint*)(DAT_08007f3c + 0x44);\n    switch(flag) {\n        case DAT_08007f38:\n            *(uint *)(DAT_08007f3c + 0x44) |= 0x10;\n            break;\n        case DAT_08007f40:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x20000;\n            break;\n        case DAT_08007f44:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x40000;\n            break;\n        case DAT_08007f48:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x80000;\n            break;\n        case DAT_08007f4c:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x100000;\n            break;\n        case DAT_08007f50:\n            *(uint *)(DAT_08007f3c + 0x44) |= 0x20;\n            break;\n        default:\n            break;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": true,
            "current_name": "set_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007930": "notifySystemMaintenance",
                "uVar1": "systemStatus",
                "FUN_08007756": "checkSystemStatus_08007756",
                "FUN_08005a68": "updateSystemStatus",
                "FUN_08005a84": "getSystemStatus",
                "FUN_080076c8": "logSystemError"
            },
            "code": "void checkSystemStatus_08007756(void)\n{\n  uint systemStatus = getSystemStatus();\n  if ((systemStatus & 0x1ff) == 0) {\n    logSystemError(0x3c);\n  }\n  if ((systemStatus & 0xf) == 0) {\n    notifySystemMaintenance();\n  }\n  updateSystemStatus();\n  return;\n}",
            "called": [
                "FUN_080076c8",
                "FUN_08005a84",
                "FUN_08007930",
                "FUN_08005a68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": true,
            "current_name": "checkSystemStatus_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": true,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "view_Grbl_settings_0800423c",
                "FUN_080036c6": "display_settings"
            },
            "code": "void view_Grbl_settings_0800423c() {\n  display_settings(PTR_s_____view_Grbl_settings_0800423c______view_0800424c);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": true,
            "current_name": "view_Grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "in_CY": "current_char",
                "FUN_080091fc": "execute_previous_function",
                "FUN_08009264": "is_end_of_string_08009264"
            },
            "code": "bool is_end_of_string_08009264(void)\\n{\\n  char current_char;\\n  execute_previous_function();\\n  return current_char == \"\\0\";\\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007da8": "output_results",
                "FUN_08007d08": "process_input",
                "FUN_08007e08": "execute_program_08007e08",
                "FUN_08007ad0": "initialize_data_structures"
            },
            "code": "void execute_program_08007e08(void)\n{\n  initialize_data_structures();\n  process_input();\n  output_results();\n  return;\n}",
            "called": [
                "FUN_08007da8",
                "FUN_08007ad0",
                "FUN_08007d08"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": true,
            "current_name": "execute_program_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "*PTR_DAT_08002fcc": "*ptr_1",
                "result": "are_equal",
                "FUN_08002fac": "are_ptrs_equal_08002fac",
                "*PTR_DAT_08002fd0": "*ptr_2"
            },
            "code": "bool are_ptrs_equal_08002fac(void)\n{\n  bool result = (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": true,
            "current_name": "are_ptrs_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "lVar4": "current_time",
                "bVar3": "is_valid",
                "uVar1": "current_upper_bound",
                "param_1": "input_value",
                "uVar2": "upper_bound",
                "uVar5": "temp",
                "FUN_080002b6": "validate_input_080002b6"
            },
            "code": "void validate_input_080002b6(uint input_value) {\n  uint upper_bound = (uint)(get_current_time() + (ulonglong)input_value >> 0x20);\n  do {\n    undefined8 current_time = get_current_time();\n    uint current_upper_bound = (uint)((ulonglong)current_time >> 0x20);\n    bool is_valid = upper_bound <= current_upper_bound;\n    if (current_upper_bound == upper_bound) {\n      is_valid = (uint)(get_current_time() + (ulonglong)input_value) <= (uint)current_time;\n    }\n  } while (!is_valid);\n  return;\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": true,
            "current_name": "validate_input_080002b6"
        }
    },
    "used_tokens": 174691,
    "layers": [
        [
            "FUN_08002e08",
            "FUN_08002fd4",
            "FUN_08003618",
            "FUN_0800b430",
            "FUN_08004030",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_080003ec",
            "FUN_08002896",
            "FUN_080001ac",
            "FUN_08003740",
            "FUN_08000478",
            "FUN_08006d2e",
            "FUN_08007e1c",
            "FUN_0800adf0",
            "FUN_08003a74",
            "FUN_08006b00",
            "FUN_0800b4d0",
            "FUN_08007f54",
            "FUN_08003b98",
            "FUN_080024c4",
            "FUN_08002f40",
            "FUN_080025e8",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_08005814",
            "FUN_08005bdc",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08001ddc",
            "FUN_080069b4",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_08007b70",
            "FUN_08004d2c",
            "FUN_080066cc",
            "FUN_080018fc",
            "FUN_080039bc",
            "FUN_0800618c",
            "FUN_08006998",
            "FUN_080004ac",
            "FUN_080078f4",
            "FUN_080041a0",
            "FUN_08008bf0",
            "FUN_08003a18",
            "FUN_08005790",
            "FUN_08007854",
            "FUN_08004900",
            "FUN_08004228",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800283a",
            "FUN_0800881c",
            "FUN_08004bc0",
            "FUN_08008b4c",
            "FUN_08004c2a",
            "FUN_0800826a",
            "FUN_08008b60",
            "FUN_08005324",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_08002978",
            "FUN_08003826",
            "FUN_0800923c",
            "FUN_08002afc",
            "FUN_08004c48",
            "FUN_080002a0",
            "FUN_08009250",
            "FUN_0800640c",
            "FUN_08008af0",
            "FUN_08006e1a",
            "FUN_080052ac",
            "FUN_08008286",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_080002b6"
        ]
    ],
    "locked_functions": []
}