{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "toggle_flag_if_zero_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 toggleFlagIfZero_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "toggle_flag_if_zero_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_integers_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_integers_080001ac(undefined4 first_integer,undefined4 second_integer)\n\n{\n  return CONCAT44(second_integer,first_integer);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_integers_080001ac",
                "param_1": "first_integer",
                "param_2": "second_integer"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_function_080001f8",
            "code": "\nvoid initializeFunction_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_function_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "run_init_functions_08000210",
            "code": "\nvoid run_init_functions_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "run_init_functions_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "process_param_08000220",
            "code": "\nvoid process_param_08000220(char input_param)\n\n{\n  if (input_param != DAT_20000468) {\n    FUN_08002fd4();\n    if (input_param == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = input_param;\n    }\n    else if (input_param == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = input_param;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = input_param;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "process_param_08000220",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_time_offset_08000268",
            "code": "\n\n\nint calculateTimeOffset_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_time_offset_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_function_080002a0",
            "code": "\nvoid executeFunction_080002a0(undefined4 parameter)\n\n{\n  FUN_08005a98(parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_function_080002a0",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "find_matching_value_080002b6",
            "code": "\nvoid find_matching_value_080002b6(uint input_value)\n\n{\n  uint upper_bits1;\n  uint upper_bits2;\n  bool is_match;\n  longlong result1;\n  undefined8 result2;\n  \n  result1 = FUN_08000268();\n  upper_bits2 = (uint)(result1 + (ulonglong)input_value >> 0x20);\n  do {\n    result2 = FUN_08000268();\n    upper_bits1 = (uint)((ulonglong)result2 >> 0x20);\n    is_match = upper_bits2 <= upper_bits1;\n    if (upper_bits1 == upper_bits2) {\n      is_match = (uint)(result1 + (ulonglong)input_value) <= (uint)result2;\n    }\n  } while (!is_match);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "find_matching_value_080002b6",
                "param_1": "input_value",
                "uVar1": "upper_bits1",
                "uVar2": "upper_bits2",
                "bVar3": "is_match",
                "lVar4": "result1",
                "uVar5": "result2"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_and_flags_080002f0",
            "code": "\nvoid initializeDataAndFlags_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_and_flags_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_modified_value_08000310",
            "code": "\nundefined getModifiedValue_08000310(uint inputValue)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[inputValue & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_modified_value_08000310",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined data)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int dataOffset,char *data,int size)\n\n{\n  int remainingSize;\n  char *currentByte;\n  int currentIndex;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingSize = size;\n  currentByte = data;\n  currentIndex = dataOffset;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentByte = data;\n    currentIndex = dataOffset;\n  }\n  for (; remainingSize != 0; remainingSize = remainingSize + -1) {\n    checksum = (checksum != '\\0') + *currentByte;\n    FUN_08000340(currentIndex,*currentByte);\n    currentByte = currentByte + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "dataOffset",
                "param_2": "data",
                "param_3": "size",
                "local_1c": "remainingSize",
                "local_18": "currentByte",
                "local_14": "currentIndex",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "check_equal_chars_080003ec",
            "code": "\nbool check_equal_chars_080003ec(char *string,int start_index,int length)\n\n{\n  char current_char;\n  uint uVar2;\n  int remaining_length;\n  int current_index;\n  char *current_char_ptr;\n  byte char_count;\n  \n  char_count = 0;\n  remaining_length = length;\n  current_index = start_index;\n  current_char_ptr = string;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_index = start_index;\n    current_char_ptr = string;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    current_char = FUN_08000310(current_index);\n    char_count = current_char + (char_count != 0);\n    *current_char_ptr = current_char;\n    current_index = current_index + 1;\n    current_char_ptr = current_char_ptr + 1;\n  }\n  uVar2 = FUN_08000310(current_index);\n  return char_count == uVar2;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "check_equal_chars_080003ec",
                "param_1": "string",
                "param_2": "start_index",
                "param_3": "length",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_char_ptr",
                "local_9": "char_count",
                "cVar1": "current_char"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_parameters_08000478",
            "code": "\nvoid initializeParameters_08000478(undefined parameter1,undefined parameter2,undefined parameter3)\n\n{\n  DAT_20000e89 = parameter1;\n  DAT_20000e8a = parameter2;\n  DAT_20000e8b = parameter3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_parameters_08000478",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int iVar1;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  iVar1 = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (iVar1 == 0) {\n    FUNC_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08008e44(data1);\n  DAT_20000e7c = FUN_08009054(result,DAT_20000ebc);\n  result = FUN_08008e44(data2);\n  DAT_20000e80 = FUN_08009054(result,DAT_20000ec0);\n  result = FUN_08008e44(data3);\n  DAT_20000e84 = FUN_08009054(result,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_input_0800056c",
            "code": "\nundefined4 processInput_0800056c(undefined4 input)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    input = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_input_0800056c",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "process_data_080005b4",
            "code": "\nchar process_data_080005b4(undefined4 input_param)\n\n{\n  int status;\n  undefined4 temp_var1;\n  char result;\n  uint temp_var2;\n  undefined4 temp_var3;\n  undefined8 temp_var4;\n  undefined8 temp_var5;\n  undefined8 temp_var6;\n  undefined4 array1 [4];\n  undefined4 temp_var7;\n  undefined4 temp_var8;\n  undefined4 temp_var9;\n  undefined4 temp_var10;\n  undefined4 temp_var11;\n  undefined4 array2 [6];\n  undefined4 temp_var12;\n  byte byte1;\n  undefined byte2;\n  undefined4 temp_var13;\n  undefined4 temp_var14;\n  undefined bool1;\n  uint temp_var15;\n  byte byte3;\n  byte byte4;\n  byte byte5;\n  byte byte6;\n  char char1;\n  uint temp_var16;\n  undefined4 temp_var17;\n  sbyte temp_var18;\n  char char2;\n  char char3;\n  undefined4 temp_var19;\n  byte byte7;\n  ushort short1;\n  uint temp_var20;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    result = '\\f';\n  }\n  else {\n    byte2 = 0;\n    short1 = 0;\n    byte7 = 0;\n    temp_var19 = 0xbf800000;\n    char3 = '\\0';\n    char2 = '\\0';\n    FUN_0800b430(array2 + 3,0,0xc);\n    FUN_0800b430(array2,0,0xc);\n    DAT_20000e70 = '\\0';\n    temp_var18 = 0;\n    while (status = FUN_0800184c(&byte1,array2 + 6,input_param,&byte2), status != 0) {\n      temp_var4 = FUN_08008590(temp_var12);\n      temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      temp_var20 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      if (byte1 == 0x47) {\n        switch(temp_var20) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          temp_var18 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          temp_var18 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          temp_var18 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          temp_var18 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          temp_var18 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          temp_var18 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          temp_var18 = 6;\n        }\n        switch(temp_var20) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          char2 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          char2 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var20 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          switch(temp_var20) {\n          case 0x118:\n            char2 = '\\x03';\n            break;\n          case 0x119:\n            char2 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            char2 = '\\x05';\n            break;\n          case 0x12d:\n            char2 = '\\x06';\n          }\n          break;\n        case 0x35:\n          char3 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)temp_var20 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var20 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if (temp_var20 == 0x398) {\n            char2 = '\\a';\n          }\n          else if (temp_var20 == 0x399) {\n            char2 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (byte1 == 0x4d) {\n        if (temp_var20 == 0x1e) {\nLAB_08000b96:\n          temp_var18 = 5;\n        }\n        else if ((int)temp_var20 < 0x1f) {\n          if ((int)temp_var20 < 3) {\n            if (-1 < (int)temp_var20) goto LAB_08000b96;\n          }\n          else if (temp_var20 - 3 < 3) {\n            temp_var18 = 8;\n          }\n        }\n        switch(temp_var20) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (temp_var18 != 0) {\n        if (((int)(uint)short1 >> temp_var18 & 1U) == 0) {\n          short1 = short1 | (ushort)(1 << temp_var18);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        temp_var18 = 0;\n      }\n    }\n    result = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      temp_var17 = 0;\n      temp_var16 = 0;\n      char1 = '\\0';\n      byte2 = 0;\nswitchD_08000d18_caseD_47:\n      status = FUN_0800184c(&byte1,array2 + 6,input_param,&byte2);\n      if (status != 0) {\n        switch(byte1) {\n        case 0x46:\n          status = FUN_0800923c(temp_var12,0);\n          if (status != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(temp_var12);\n          }\n          else {\n            temp_var19 = FUN_0800056c(temp_var12);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          temp_var2 = (uint)byte1;\n          temp_var1 = FUN_0800056c(temp_var12);\n          array2[temp_var2 - 0x49] = temp_var1;\n          break;\n        case 0x4c:\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          char1 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x50:\n          temp_var17 = temp_var12;\n          break;\n        case 0x52:\n          temp_var16 = FUN_0800056c(temp_var12);\n          break;\n        case 0x53:\n          status = FUN_08009228(temp_var12,0);\n          if (status != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          status = FUN_08009228(temp_var12,0);\n          if (status != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x58:\n          array2[3] = FUN_0800056c(temp_var12);\n          byte7 = byte7 | 1;\n          break;\n        case 0x59:\n          array2[4] = FUN_0800056c(temp_var12);\n          byte7 = byte7 | 2;\n          break;\n        case 0x5a:\n          array2[5] = FUN_0800056c(temp_var12);\n          byte7 = byte7 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      result = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((short1 & 0x200) != 0) {\n          status = FUN_08004d7c(DAT_20000e8c,&temp_var9);\n          if (status == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = temp_var9;\n          DAT_20000e94 = temp_var10;\n          DAT_20000e98 = temp_var11;\n        }\n        switch(char2) {\n        case '\\x01':\n          status = FUN_08009228(temp_var17,0);\n          if (status == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(temp_var17);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          temp_var4 = FUN_08008590(temp_var17);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var20 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if ((((char1 == '\\x02') || (char1 == '\\x14')) && (-1 < (int)temp_var20)) &&\n             ((int)temp_var20 < 7)) {\n            if ((byte7 == 0) && (char1 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)temp_var20 < 1) {\n                temp_var20 = (uint)DAT_20000e8c;\n              }\n              else {\n                temp_var20 = temp_var20 - 1;\n              }\n              status = FUN_08004d7c(temp_var20 & 0xff,array1);\n              if (status == 0) {\n                return '\\n';\n              }\n              for (byte6 = 0; byte6 < 3; byte6 = byte6 + 1) {\n                if (((int)(uint)byte7 >> byte6 & 1U) != 0) {\n                  if (char1 == '\\x14') {\n                    temp_var2 = (uint)byte6;\n                    temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byte6 + 2) * 4),\n                                         array2[byte6 + 3]);\n                    array1[temp_var2] = temp_var1;\n                  }\n                  else {\n                    array1[byte6] = array2[byte6 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(temp_var20 & 0xff,array1);\n              if (temp_var20 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          byte7 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (byte7 != 0) {\n            for (byte5 = 0; byte5 < 3; byte5 = byte5 + 1) {\n              if (((int)(uint)byte7 >> byte5 & 1U) == 0) {\n                array2[byte5 + 3] = *(undefined4 *)(&DAT_20000e74 + (byte5 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)byte5;\n                temp_var1 = FUN_08008cdc(array2[byte5 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byte5 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[byte5 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byte5 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byte5 + 10) * 4));\n                temp_var2 = (uint)byte5;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n            FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n          }\n          if (char2 == '\\x05') {\n            status = FUN_08004d7c(7,array1 + 3);\n            if (status == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            status = FUN_08004d7c(6,array1 + 3);\n            if (status == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(array1[3],temp_var7,temp_var8,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = temp_var7;\n          DAT_20000e84 = temp_var8;\n          byte7 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (char2 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (byte7 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (byte4 = 0; byte4 < 3; byte4 = byte4 + 1) {\n              if (((int)(uint)byte7 >> byte4 & 1U) != 0) {\n                temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byte4 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (byte4 + 8) * 4));\n                temp_var2 = (uint)byte4;\n                temp_var1 = FUN_08008cd8(temp_var1,array2[byte4 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (temp_var2 + 10) * 4) = temp_var1;\n              }\n            }\n          }\n          byte7 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((short1 & 4) != 0) || (byte7 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((status = FUN_08009228(temp_var19,0), status != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((char3 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (byte3 = 0; byte3 < 3; byte3 = byte3 + 1) {\n            if (((int)(uint)byte7 >> byte3 & 1U) == 0) {\n              array2[byte3 + 3] = *(undefined4 *)(&DAT_20000e74 + (byte3 + 2) * 4);\n            }\n            else if (char3 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)byte3;\n                temp_var1 = FUN_08008cdc(array2[byte3 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byte3 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[byte3 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byte3 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byte3 + 10) * 4));\n                temp_var2 = (uint)byte3;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (byte7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (byte7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              temp_var1 = temp_var19;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001e98(array2[3],array2[4],array2[5],temp_var1,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            byte7 = byte7 & ~(byte)(1 << DAT_20000e8b);\n            if ((byte7 == 0) ||\n               (((status = FUN_08009214(temp_var16,0), status != 0 &&\n                 (status = FUN_08009214(array2[DAT_20000e89],0), status != 0)) &&\n                (status = FUN_08009214(array2[DAT_20000e8a],0), status != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              status = FUN_08009214(temp_var16,0);\n              if (status == 0) {\n                temp_var14 = FUN_08008cd8(array2[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                temp_var13 = FUN_08008cd8(array2[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(array2,0,0xc);\n                temp_var1 = FUN_08008eec(temp_var16,0x40800000);\n                temp_var1 = FUN_08008eec(temp_var1,temp_var16);\n                temp_var3 = FUN_08008eec(temp_var14,temp_var14);\n                temp_var1 = FUN_08008cd8(temp_var1,temp_var3);\n                temp_var3 = FUN_08008eec(temp_var13,temp_var13);\n                temp_var15 = FUN_08008cd8(temp_var1,temp_var3);\n                status = FUN_08009228(temp_var15,0);\n                if (status != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                temp_var4 = FUN_08008590(temp_var15);\n                temp_var4 = FUN_080098d0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                temp_var5 = FUN_08008590(temp_var14);\n                temp_var6 = FUN_08008590(temp_var13);\n                temp_var5 = FUN_0800981c((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                                     (int)((ulonglong)temp_var6 >> 0x20));\n                temp_var4 = FUN_08008894((int)temp_var4,(uint)((ulonglong)temp_var4 >> 0x20) ^ 0x80000000,\n                                     (int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n                temp_var15 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  temp_var15 = temp_var15 ^ 0x80000000;\n                }\n                status = FUN_08009228(temp_var16,0);\n                if (status != 0) {\n                  temp_var15 = temp_var15 ^ 0x80000000;\n                  temp_var16 = temp_var16 ^ 0x80000000;\n                }\n                temp_var1 = FUN_08008eec(temp_var13,temp_var15);\n                temp_var1 = FUN_08008cd8(temp_var14,temp_var1);\n                temp_var2 = (uint)DAT_20000e89;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n                temp_var1 = FUN_08008eec(temp_var14,temp_var15);\n                temp_var1 = FUN_08008cdc(temp_var1,temp_var13);\n                temp_var2 = (uint)DAT_20000e8a;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n              }\n              else {\n                temp_var4 = FUN_08008590(array2[DAT_20000e89]);\n                temp_var5 = FUN_08008590(array2[DAT_20000e8a]);\n                temp_var4 = FUN_0800981c((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),(int)temp_var5,\n                                     (int)((ulonglong)temp_var5 >> 0x20));\n                temp_var16 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n              }\n              bool1 = DAT_20000e71 == '\\x02';\n              temp_var1 = temp_var19;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,array2 + 3,array2,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,temp_var1,DAT_20000e72,temp_var16,bool1);\n            }\n            break;\n          case '\\x04':\n            if (byte7 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = array2[3];\n          DAT_20000e80 = array2[4];\n          DAT_20000e84 = array2[5];\n        }\n        result = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            result = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            result = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "process_data_080005b4",
                "param_1": "input_param",
                "iVar1": "status",
                "uVar2": "temp_var1",
                "cVar3": "result",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "temp_var4",
                "uVar7": "temp_var5",
                "uVar8": "temp_var6",
                "local_94": "array1",
                "local_84": "temp_var7",
                "local_80": "temp_var8",
                "local_7c": "temp_var9",
                "uStack_78": "temp_var10",
                "uStack_74": "temp_var11",
                "auStack_70": "array2",
                "local_58": "temp_var12",
                "local_52": "byte1",
                "local_51": "byte2",
                "local_50": "temp_var13",
                "local_4c": "temp_var14",
                "local_45": "bool1",
                "local_44": "temp_var15",
                "local_3d": "byte3",
                "local_3c": "byte4",
                "local_3b": "byte5",
                "local_3a": "byte6",
                "local_39": "char1",
                "local_38": "temp_var16",
                "local_34": "temp_var17",
                "local_2f": "temp_var18",
                "local_2e": "char2",
                "local_2d": "char3",
                "local_2c": "temp_var19",
                "local_27": "byte7",
                "local_26": "short1",
                "local_24": "temp_var20"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_character_validity_0800184c",
            "code": "\nundefined4 checkCharacterValidity_0800184c(byte *outputChar,undefined4 param2,int inputArray,byte *currentIndex)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(inputArray + (uint)*currentIndex) == '\\0') {\n    returnValue = 0;\n  }\n  else {\n    *outputChar = *(byte *)(inputArray + (uint)*currentIndex);\n    if ((*outputChar < 0x41) || (0x5a < *outputChar)) {\n      DAT_20000e70 = 2;\n      returnValue = 0;\n    }\n    else {\n      *currentIndex = *currentIndex + 1;\n      result = FUN_08002638(inputArray,currentIndex,param2);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 1;\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_character_validity_0800184c",
                "param_1": "outputChar",
                "param_2": "param2",
                "param_3": "inputArray",
                "param_4": "currentIndex",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_data_080018fc",
            "code": "\n\n\nvoid updateData_080018fc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_data_080018fc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "check_and_set_flag_0800192c",
            "code": "\nvoid checkAndSetFlag_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "check_and_set_flag_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "initialize_flags_0800195c",
            "code": "\nvoid initializeFlags_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "initialize_flags_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char option1,char option2,undefined4 data)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 result2;\n  undefined8 result3;\n  byte temp1;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint value4;\n  int constant2;\n  undefined4 result4;\n  uint maxValue2;\n  uint temp2;\n  ushort constant2;\n  uint constant3;\n  uint counter;\n  int difference;\n  int temp3;\n  int temp4;\n  int temp5;\n  ushort constant4;\n  uint limit;\n  char temp6;\n  \n  temp6 = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    temp6 = temp6 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    temp6 = temp6 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    temp6 = temp6 + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  maxValue2 = value1;\n  if (value1 < maxValue) {\n    maxValue2 = maxValue;\n  }\n  result2 = FUN_0800854c(maxValue2);\n  result3 = FUN_0800854c(temp6);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result2 = FUN_08008894((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result4 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000edc,result4);\n  result1 = FUN_08009054(result1,0x453b8000);\n  result2 = FUN_08008590(result1);\n  result2 = FUN_08009318((int)result2,(int)((ulonglong)result2 >> 0x20));\n  constant2 = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result2 = FUN_0800854c(temp6);\n  result2 = FUN_080098d0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result3 = FUN_08008590(data);\n  result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(result4,result1);\n  result1 = FUN_08009054(0x4c64e1c0,result1);\n  result2 = FUN_08008590(result1);\n  value4 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  limit = 75000;\n  if (value4 < 75000) {\n    limit = value4;\n  }\n  constant1 = DAT_20000ed4;\n  constant4 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (option1 == '\\0') {\n    constant4 = constant4 ^ 0xaa0;\n  }\n  FUN_080018fc(constant4);\n  FUN_080018cc(constant1);\n  temp3 = -(maxValue2 >> 1);\n  difference = limit - DAT_20000ec9;\n  counter = 0;\n  constant3 = 10000;\n  temp1 = flags;\n  temp4 = temp3;\n  temp5 = temp3;\n  while( true ) {\n    constant2 = constant1;\n    temp2 = FUN_080078f4();\n    if (option2 == '\\0') {\n      temp2 = temp2 ^ 0x1e;\n    }\n    if (((temp1 & 1) != 0) && (temp5 = temp5 + value1, 0 < temp5)) {\n      if ((temp2 & 0x10) == 0) {\n        temp1 = temp1 & 0xfe;\n      }\n      else {\n        constant2 = constant2 ^ 0x10;\n      }\n      temp5 = temp5 - maxValue2;\n    }\n    if (((temp1 & 2) != 0) && (temp4 = temp4 + value2, 0 < temp4)) {\n      if ((temp2 & 8) == 0) {\n        temp1 = temp1 & 0xfd;\n      }\n      else {\n        constant2 = constant2 ^ 0x440;\n      }\n      temp4 = temp4 - maxValue2;\n    }\n    if (((temp1 & 4) != 0) && (temp3 = temp3 + value3, 0 < temp3)) {\n      if ((temp2 & 4) == 0) {\n        temp1 = temp1 & 0xfb;\n      }\n      else {\n        constant2 = constant2 ^ 0x100;\n      }\n      temp3 = temp3 - maxValue2;\n    }\n    if ((temp1 == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(constant2);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(difference);\n    if ((value4 < limit) && (constant3 = limit + constant3, 20000 < constant3)) {\n      constant3 = constant3 - 20000;\n      counter = constant2 + counter;\n      limit = 60000000 / counter;\n      if (limit < value4) {\n        limit = value4;\n      }\n      difference = limit - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "option1",
                "param_3": "option2",
                "param_4": "data",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "result2",
                "uVar4": "result3",
                "local_61": "temp1",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant1",
                "local_4c": "value4",
                "local_48": "constant2",
                "local_44": "result4",
                "local_40": "maxValue2",
                "local_3c": "temp2",
                "local_36": "constant2",
                "local_34": "constant3",
                "local_30": "counter",
                "local_2c": "difference",
                "local_28": "temp3",
                "local_24": "temp4",
                "local_20": "temp5",
                "local_1a": "constant4",
                "local_18": "limit",
                "local_11": "temp6"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_system_08001d4c",
            "code": "\nvoid initializeSystem_08001d4c(void)\n\n{\n  char tempChar;\n  char loopCounter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  loopCounter = '\\x02';\n  while( true ) {\n    tempChar = loopCounter + -1;\n    if (loopCounter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    loopCounter = tempChar;\n    if ('\\0' < tempChar) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_system_08001d4c",
                "cVar1": "tempChar",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_application_08001ddc",
            "code": "\nvoid initializeApplication_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_application_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "process_data_08001e98",
            "code": "\nvoid processData_08001e98(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined flag)\n\n{\n  int returnValue;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      returnValue = FUN_08002fac();\n    } while (returnValue != 0);\n    FUN_08003004(input1,input2,input3,input4,flag);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculateChecksum_08001f00(int input1,undefined4 *input2,int input3,byte byte1,byte byte2,byte byte3\n                 ,undefined4 param7,char param8,undefined4 param9,char param10)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int loopCounter;\n  uint temp;\n  undefined8 temp1;\n  undefined8 temp2;\n  uint checksumArr [4];\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined4 temp8;\n  ushort numIterations;\n  undefined4 checksum;\n  undefined4 temp9;\n  undefined4 temp10;\n  uint byte1Value;\n  undefined4 byte2Value;\n  undefined4 byte3Value;\n  char flag;\n  ushort counter;\n  undefined4 result3;\n  uint result4;\n  uint temp11;\n  \n  byte3Value = FUN_08008cdc(*(undefined4 *)((uint)byte1 * 4 + input1),\n                          *(undefined4 *)((uint)byte1 * 4 + input3));\n  byte2Value = FUN_08008cdc(*(undefined4 *)((uint)byte2 * 4 + input1),\n                          *(undefined4 *)((uint)byte2 * 4 + input3));\n  byte1Value = FUN_08008cd8(input2[byte3],*(undefined4 *)((uint)byte3 * 4 + input1));\n  temp11 = *(uint *)((uint)byte1 * 4 + input3) ^ 0x80000000;\n  result4 = *(uint *)((uint)byte2 * 4 + input3) ^ 0x80000000;\n  temp10 = FUN_08008cd8(input2[byte1],byte3Value);\n  temp9 = FUN_08008cd8(input2[byte2],byte2Value);\n  result1 = FUN_08008eec(temp11,temp9);\n  result2 = FUN_08008eec(result4,temp10);\n  result1 = FUN_08008cd8(result1,result2);\n  temp1 = FUN_08008590(result1);\n  result1 = FUN_08008eec(temp11,temp10);\n  result2 = FUN_08008eec(result4,temp9);\n  result1 = FUN_08008cdc(result1,result2);\n  temp2 = FUN_08008590(result1);\n  temp1 = thunk_FUN_08009990((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                             (int)((ulonglong)temp2 >> 0x20));\n  result3 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  if (param10 == '\\0') {\n    loopCounter = FUN_0800923c(result3,0);\n    if (loopCounter != 0) {\n      temp1 = FUN_08008590(result3);\n      temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x401921fb);\n      result3 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    }\n  }\n  else {\n    loopCounter = FUN_08009250(result3,0);\n    if (loopCounter != 0) {\n      temp1 = FUN_08008590(result3);\n      temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x401921fb);\n      result3 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    }\n  }\n  result1 = FUN_08008eec(result3,param9);\n  temp1 = FUN_08008590(result1);\n  temp2 = FUN_08008590(byte1Value & 0x7fffffff);\n  temp1 = FUN_0800981c((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  checksum = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  loopCounter = FUN_08009214(checksum,0);\n  if (loopCounter == 0) {\n    result1 = FUN_08009054(checksum,DAT_20000ed8);\n    temp1 = FUN_08008590(result1);\n    temp1 = FUN_080094c0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    numIterations = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    if (param8 != '\\0') {\n      result1 = FUN_08008e44(numIterations);\n      param7 = FUN_08008eec(param7,result1);\n    }\n    result1 = FUN_08008e44(numIterations);\n    temp8 = FUN_08009054(result3,result1);\n    result1 = FUN_08008e44(numIterations);\n    temp7 = FUN_08009054(byte1Value,result1);\n    temp1 = FUN_08008590(temp8);\n    temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x3fe00000);\n    temp2 = FUN_08008590(temp8);\n    temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n    temp1 = FUN_080082d0(0,0x3ff00000,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    temp6 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    temp5 = temp8;\n    flag = '\\0';\n    checksumArr[byte3] = *(uint *)(input1 + (uint)byte3 * 4);\n    for (counter = 1; counter < numIterations; counter = counter + 1) {\n      if ((int)flag < (int)(uint)DAT_20000efa) {\n        result1 = FUN_08008eec(temp11,temp5);\n        result2 = FUN_08008eec(result4,temp6);\n        checksumArr[3] = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(temp11,temp6);\n        result2 = FUN_08008eec(result4,temp5);\n        temp11 = FUN_08008cd8(result1,result2);\n        result4 = checksumArr[3];\n        flag = flag + '\\x01';\n      }\n      else {\n        result1 = FUN_08008e44(counter);\n        result1 = FUN_08008eec(result1,temp8);\n        temp1 = FUN_08008590(result1);\n        temp1 = FUN_08009410((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n        temp4 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n        result1 = FUN_08008e44(counter);\n        result1 = FUN_08008eec(result1,temp8);\n        temp1 = FUN_08008590(result1);\n        temp1 = FUN_080096e8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n        temp3 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input3) ^ 0x80000000,temp4);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input3),temp3);\n        temp11 = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input3) ^ 0x80000000,temp3);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input3),temp4);\n        result4 = FUN_08008cd8(result1,result2);\n        flag = '\\0';\n      }\n      temp = FUN_08008cdc(byte3Value,temp11);\n      checksumArr[byte1] = temp;\n      temp = FUN_08008cdc(byte2Value,result4);\n      checksumArr[byte2] = temp;\n      temp = FUN_08008cdc(checksumArr[byte3],temp7);\n      checksumArr[byte3] = temp;\n      FUN_08001e98(checksumArr[0],checksumArr[1],checksumArr[2],param7,param8);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*input2,input2[1],input2[2],param7,param8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "loopCounter",
                "uVar4": "temp",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "local_6c": "checksumArr",
                "local_5c": "temp3",
                "local_58": "temp4",
                "local_54": "temp5",
                "local_50": "temp6",
                "local_4c": "temp7",
                "local_48": "temp8",
                "local_42": "numIterations",
                "local_40": "checksum",
                "local_3c": "temp9",
                "local_38": "temp10",
                "local_34": "byte1Value",
                "local_30": "byte2Value",
                "local_2c": "byte3Value",
                "local_27": "flag",
                "local_26": "counter",
                "local_24": "result3",
                "local_20": "result4",
                "local_1c": "temp11"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 inputData)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort counter;\n  \n  result2 = FUN_08008eec(inputData,0x41a00000);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  counter = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUN_08002fd4();\n  result2 = FUN_08008eec(inputData,0x447a0000);\n  result3 = FUN_08008e44((uint)counter * 0x32);\n  result2 = FUN_08008cd8(result2,result3);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUNC_08002814(result1);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "inputData",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "counter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "perform_initial_setup_080024c4",
            "code": "\nvoid performInitialSetup_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char isBitSet1;\n  char isBitSet2;\n  char isBitSet3;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isBitSet3 = -1;\n    }\n    else {\n      isBitSet3 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isBitSet2 = -1;\n    }\n    else {\n      isBitSet2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isBitSet1 = -1;\n    }\n    else {\n      isBitSet1 = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)isBitSet3);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)isBitSet2);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)isBitSet1);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "perform_initial_setup_080024c4",
                "local_13": "isBitSet1",
                "local_12": "isBitSet2",
                "local_11": "isBitSet3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "enable_feature_080025e8",
            "code": "\nvoid enableFeature_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "enable_feature_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int base_address,byte *byte_array,uint *output_value)\n\n{\n  byte digit;\n  bool is_negative;\n  bool is_hex;\n  int result;\n  char *current_char;\n  char *start_char;\n  undefined4 return_value;\n  undefined8 temp_value;\n  uint temp;\n  byte digit_count;\n  char sign_count;\n  int integer;\n  char local_d;\n  char *local_c;\n  \n  start_char = (char *)(base_address + (uint)*byte_array);\n  current_char = start_char + 1;\n  local_d = *start_char;\n  is_negative = false;\n  if (local_d == '-') {\n    is_negative = true;\n    local_d = *current_char;\n    local_c = start_char + 2;\n  }\n  else {\n    local_c = current_char;\n    if (local_d == '+') {\n      local_c = start_char + 2;\n      local_d = *current_char;\n    }\n  }\n  integer = 0;\n  sign_count = '\\0';\n  digit_count = 0;\n  is_hex = false;\n  do {\n    digit = local_d - 0x30;\n    if (digit < 10) {\n      digit_count = digit_count + 1;\n      if (digit_count < 9) {\n        if (is_hex) {\n          sign_count = sign_count + -1;\n        }\n        integer = (uint)digit + integer * 10;\n      }\n      else if (!is_hex) {\n        sign_count = sign_count + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (is_hex)) {\n        if (digit_count == 0) {\n          return_value = 0;\n        }\n        else {\n          temp = FUN_08008e3c(integer);\n          result = FUN_08009214(temp,0);\n          if (result == 0) {\n            for (; sign_count < -1; sign_count = sign_count + '\\x02') {\n              temp_value = FUN_08008590(temp);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              temp = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            if (sign_count < '\\0') {\n              temp_value = FUN_08008590(temp);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              temp = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            else {\n              for (; '\\0' < sign_count; sign_count = sign_count + -1) {\n                temp = FUN_08008eec(temp,0x41200000);\n              }\n            }\n          }\n          if (is_negative) {\n            *output_value = temp ^ 0x80000000;\n          }\n          else {\n            *output_value = temp;\n          }\n          *byte_array = ((char)local_c - (char)base_address) - 1;\n          return_value = 1;\n        }\n        return return_value;\n      }\n      is_hex = true;\n    }\n    local_d = *local_c;\n    local_c = local_c + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "base_address",
                "param_2": "byte_array",
                "param_3": "output_value",
                "bVar1": "digit",
                "bVar2": "is_negative",
                "bVar3": "is_hex",
                "iVar4": "result",
                "pcVar5": "current_char",
                "pcVar6": "start_char",
                "uVar7": "return_value",
                "uVar8": "temp_value",
                "local_1c": "temp",
                "local_16": "digit_count",
                "local_15": "sign_count",
                "local_14": "integer"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_function_0800283a",
            "code": "\nvoid initialize_function_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_function_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_check_08002870",
            "code": "\nchar incrementAndCheck_08002870(char inputCharacter)\n\n{\n  char result;\n  \n  result = inputCharacter + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_check_08002870",
                "param_1": "inputCharacter",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "transform_input_08002896",
            "code": "\nchar transformInput_08002896(char inputChar)\n\n{\n  char outputChar;\n  \n  outputChar = inputChar;\n  if (inputChar == '\\0') {\n    outputChar = '\\x12';\n  }\n  return outputChar + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "transform_input_08002896",
                "param_1": "inputChar",
                "local_9": "outputChar"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculateResult_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 temp_1;\n  undefined4 temp_2;\n  \n  temp_1 = FUN_08008cdc(input_3,input_3);\n  temp_1 = FUN_08008eec(temp_1,input_4);\n  temp_2 = FUN_08008eec(input_1,input_1);\n  temp_1 = FUN_08008cd8(temp_1,temp_2);\n  temp_2 = FUN_08008eec(input_2,input_2);\n  temp_1 = FUN_08008cdc(temp_1,temp_2);\n  temp_2 = FUN_08008eec(input_3,0x40800000);\n  temp_1 = FUN_08009054(temp_1,temp_2);\n  return temp_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 finalResult;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  finalResult = FUN_08008590(result1);\n  finalResult = FUN_080098d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  result1 = FUN_08008c30((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "initialize_data_080029d8",
            "code": "\nvoid initializeData_080029d8(undefined4 param1,int dataStructPtr,int otherDataPtr)\n\n{\n  int returnValue;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  \n  if (((dataStructPtr != 0) && (otherDataPtr != 0)) &&\n     (returnValue = FUN_08009214(*(undefined4 *)(dataStructPtr + 0x18),*(undefined4 *)(dataStructPtr + 0x1c)),\n     returnValue == 0)) {\n    if ((*(char *)(dataStructPtr + 0x25) == '\\0') &&\n       (returnValue = FUN_08009264(*(undefined4 *)(dataStructPtr + 0x1c),*(undefined4 *)(otherDataPtr + 0x18)),\n       returnValue != 0)) {\n      tempVar2 = *(undefined4 *)(dataStructPtr + 0x1c);\n      tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(otherDataPtr + 0x18),\n                           *(undefined4 *)(dataStructPtr + 0x20));\n      returnValue = FUN_08009228(tempVar2,tempVar1);\n      if (returnValue == 0) {\n        tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(otherDataPtr + 0x18),\n                             *(undefined4 *)(dataStructPtr + 0x20));\n      }\n      else {\n        tempVar1 = *(undefined4 *)(dataStructPtr + 0x1c);\n      }\n      *(undefined4 *)(dataStructPtr + 0x18) = tempVar1;\n    }\n    else {\n      *(undefined4 *)(dataStructPtr + 0x18) = *(undefined4 *)(dataStructPtr + 0x1c);\n    }\n    *(undefined *)(dataStructPtr + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "initialize_data_080029d8",
                "param_1": "param1",
                "param_2": "dataStructPtr",
                "param_3": "otherDataPtr",
                "iVar1": "returnValue",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid processData_08002a94(void)\n\n{\n  undefined *tempPtr;\n  undefined *ptr1;\n  undefined *ptr2;\n  byte data;\n  \n  data = DAT_20000cf0;\n  ptr1 = (undefined *)0x0;\n  ptr2 = (undefined *)0x0;\n  while (tempPtr = ptr2, data != DAT_20000cf1) {\n    data = FUN_08002896(data);\n    ptr2 = ptr1;\n    FUN_080029d8(&DAT_20000870 + (uint)data * 0x40,ptr1,tempPtr);\n    ptr1 = &DAT_20000870 + (uint)data * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_9": "data",
                "local_18": "ptr1",
                "local_14": "ptr2",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_parameters_08002afc",
            "code": "\nvoid updateParameters_08002afc(int param1,int param2)\n\n{\n  int result;\n  undefined4 newValue1;\n  undefined4 newValue2;\n  \n  if (((param1 != 0) && (*(char *)(param1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(param1 + 0x18),*(undefined4 *)(param2 + 0x18)),\n     result != 0)) {\n    newValue2 = *(undefined4 *)(param2 + 0x18);\n    newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                         *(undefined4 *)(param1 + 0x20));\n    result = FUN_08009228(newValue2,newValue1);\n    if (result == 0) {\n      newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                           *(undefined4 *)(param1 + 0x20));\n    }\n    else {\n      newValue1 = *(undefined4 *)(param2 + 0x18);\n    }\n    result = FUN_08009214(newValue1,*(undefined4 *)(param2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(param2 + 0x18) = newValue1;\n      *(undefined *)(param2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_parameters_08002afc",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "newValue1",
                "uVar3": "newValue2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint currentByte_asInt;\n  undefined *puVar2;\n  undefined *previousData_ptr;\n  undefined *previousData;\n  undefined *currentData;\n  byte currentByte;\n  \n  previousData = (undefined *)0x0;\n  currentData = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  previousData_ptr = (undefined *)0x0;\n  while (puVar2 = previousData, currentByte != DAT_20000cf0) {\n    previousData = currentData;\n    currentByte_asInt = (uint)currentByte;\n    FUN_08002afc(puVar2,currentData,&DAT_20000870 + currentByte_asInt * 0x40);\n    currentByte = FUN_08002870(currentByte);\n    previousData_ptr = puVar2;\n    currentData = &DAT_20000870 + currentByte_asInt * 0x40;\n  }\n  FUN_08002afc(previousData,currentData,0,previousData,previousData_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "local_14": "previousData",
                "local_10": "currentData",
                "local_9": "currentByte",
                "puVar3": "previousData_ptr",
                "uVar1": "currentByte_asInt"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_buffer_offsets_08002c18",
            "code": "\nvoid calculate_buffer_offsets_08002c18(int buffer_address,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 var1;\n  int var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  uint var6;\n  undefined8 var7;\n  int offset_1;\n  uint offset_2;\n  \n  var1 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x3c));\n  var1 = FUN_08008eec(var1,param_2);\n  var7 = FUN_08008590(var1);\n  var7 = FUN_08009318((int)var7,(int)((ulonglong)var7 >> 0x20));\n  var1 = FUN_08008bf0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  *(undefined4 *)(buffer_address + 0x28) = var1;\n  var1 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x3c));\n  var1 = FUN_08008eec(var1,param_3);\n  var7 = FUN_08008590(var1);\n  var7 = FUN_08009318((int)var7,(int)((ulonglong)var7 >> 0x20));\n  var1 = FUN_08008bf0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  *(undefined4 *)(buffer_address + 0x2c) = var1;\n  var7 = FUN_0800856c(*(int *)(buffer_address + 0x30) * 0x32);\n  var7 = FUN_08008640((int)var7,(int)((ulonglong)var7 >> 0x20),0,0x404e0000);\n  var2 = FUN_08008ba0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  var1 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x28));\n  var3 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x3c));\n  var4 = FUN_08008e44(var2);\n  var1 = FUN_080028bc(var1,var3,var4);\n  var7 = FUN_08008590(var1);\n  var7 = FUN_08009318((int)var7,(int)((ulonglong)var7 >> 0x20));\n  offset_2 = FUN_08008ba0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  var1 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x3c));\n  var3 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x2c));\n  var4 = FUN_08008e44(-var2);\n  var1 = FUN_080028bc(var1,var3,var4);\n  var7 = FUN_08008590(var1);\n  var7 = FUN_080094c0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  offset_1 = FUN_08008ba0((int)var7,(int)((ulonglong)var7 >> 0x20));\n  offset_1 = (*(int *)(buffer_address + 0x10) - offset_2) - offset_1;\n  if (offset_1 < 0) {\n    var1 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x28));\n    var3 = FUN_08008e3c(*(undefined4 *)(buffer_address + 0x2c));\n    var4 = FUN_08008e44(var2);\n    var5 = FUN_08008e44(*(undefined4 *)(buffer_address + 0x10));\n    var1 = FUN_08002908(var1,var3,var4,var5);\n    var7 = FUN_08008590(var1);\n    var7 = FUN_08009318((int)var7,(int)((ulonglong)var7 >> 0x20));\n    var6 = FUN_08008ba0((int)var7,(int)((ulonglong)var7 >> 0x20));\n    var6 = var6 & ~((int)var6 >> 0x1f);\n    offset_2 = *(uint *)(buffer_address + 0x10);\n    if ((int)var6 <= (int)*(uint *)(buffer_address + 0x10)) {\n      offset_2 = var6;\n    }\n    offset_1 = 0;\n  }\n  *(uint *)(buffer_address + 0x34) = offset_2;\n  *(uint *)(buffer_address + 0x38) = offset_1 + offset_2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_buffer_offsets_08002c18",
                "param_1": "buffer_address",
                "uVar1": "var1",
                "iVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "local_20": "offset_1",
                "local_1c": "offset_2"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPtr;\n  byte currentByte;\n  \n  dataPtr = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  while (currentByte != DAT_20000cf0) {\n    index = (uint)currentByte * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    currentByte = FUN_08002870(currentByte);\n    dataPtr = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPtr",
                "local_11": "currentByte",
                "iVar3": "index",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_system_08002edc",
            "code": "\nvoid initializeSystem_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_system_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_da_tif_different_08002f40",
            "code": "\nvoid updateDATifDifferent_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_da_tif_different_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_next_memory_location_08002f74",
            "code": "\nundefined * get_next_memory_location_08002f74(void)\n\n{\n  undefined *next_location;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    next_location = (undefined *)0x0;\n  }\n  else {\n    next_location = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return next_location;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_next_memory_location_08002f74",
                "puVar1": "next_location"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_pointers_equal_08002fac",
            "code": "\nbool arePointersEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_pointers_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_metrics_08003004",
            "code": "\nvoid calculateMetrics_08003004(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 value4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int metric1;\n  int metric2;\n  int metric3;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  uint maxMetric;\n  int offset;\n  ushort *metrics;\n  int absDifference;\n  uint maxDifference;\n  undefined8 calcResult1;\n  undefined8 calcResult2;\n  undefined8 calcResult3;\n  undefined4 finalResult1;\n  undefined4 finalResult2;\n  \n  offset = (uint)DAT_20000cf0 * 0x40;\n  metrics = (ushort *)(&DAT_20000870 + offset);\n  result1 = FUN_08008eec(DAT_20000ebc,value1);\n  calcResult1 = FUN_08008590(result1);\n  metric1 = FUN_080095b8((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,value2);\n  calcResult1 = FUN_08008590(result1);\n  metric2 = FUN_080095b8((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,value3);\n  calcResult1 = FUN_08008590(result1);\n  metric3 = FUN_080095b8((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n  *metrics = 0;\n  if (metric1 < DAT_20000cf4) {\n    *metrics = *metrics | 0x20;\n  }\n  if (metric2 < DAT_20000cf8) {\n    *metrics = *metrics | 0x880;\n  }\n  if (metric3 < DAT_20000cfc) {\n    *metrics = *metrics | 0x200;\n  }\n  absDifference = metric1 - DAT_20000cf4;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_20000874 + offset) = absDifference;\n  absDifference = metric2 - DAT_20000cf8;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_20000878 + offset) = absDifference;\n  absDifference = metric3 - DAT_20000cfc;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_2000087c + offset) = absDifference;\n  maxMetric = *(uint *)(&DAT_2000087c + offset);\n  if (*(uint *)(&DAT_2000087c + offset) < *(uint *)(&DAT_20000878 + offset)) {\n    maxMetric = *(uint *)(&DAT_20000878 + offset);\n  }\n  maxDifference = *(uint *)(&DAT_20000874 + offset);\n  if (*(uint *)(&DAT_20000874 + offset) < maxMetric) {\n    maxDifference = maxMetric;\n  }\n  *(uint *)(&DAT_20000880 + offset) = maxDifference;\n  if (*(int *)(&DAT_20000880 + offset) != 0) {\n    result1 = FUN_08008e44(metric1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    uVar5 = FUN_08008e44(metric2 - DAT_20000cf8);\n    uVar5 = FUN_08009054(uVar5,DAT_20000ec0);\n    uVar6 = FUN_08008e44(metric3 - DAT_20000cfc);\n    uVar6 = FUN_08009054(uVar6,DAT_20000ec4);\n    uVar7 = FUN_08008eec(result1,result1);\n    uVar8 = FUN_08008eec(uVar5,uVar5);\n    uVar7 = FUN_08008cdc(uVar7,uVar8);\n    uVar8 = FUN_08008eec(uVar6,uVar6);\n    uVar7 = FUN_08008cdc(uVar7,uVar8);\n    calcResult1 = FUN_08008590(uVar7);\n    calcResult1 = FUN_080098d0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    uVar7 = FUN_08008c30((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + offset) = uVar7;\n    uVar7 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + offset));\n    if (flag == '\\0') {\n      finalResult2 = FUN_08008eec(value4,uVar7);\n    }\n    else {\n      finalResult2 = FUN_08009054(0x3f800000,value4);\n    }\n    uVar8 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + offset),finalResult2);\n    *(undefined4 *)(&DAT_20000884 + offset) = uVar8;\n    uVar8 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    uVar8 = FUN_08008eec(uVar8,finalResult2);\n    calcResult1 = FUN_08008590(uVar8);\n    calcResult1 = FUN_08009318((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    uVar8 = FUN_08008bf0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + offset) = uVar8;\n    uVar8 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    uVar8 = FUN_08008eec(uVar8,uVar7);\n    uVar8 = FUN_08008eec(uVar8,DAT_20000edc);\n    uVar8 = FUN_08009054(uVar8,0x453b8000);\n    calcResult1 = FUN_08008590(uVar8);\n    calcResult1 = FUN_08009318((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    uVar8 = FUN_08008ba0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + offset) = uVar8;\n    maxMetric = FUN_08008eec(result1,uVar7);\n    result1 = FUN_08008eec(uVar5,uVar7);\n    uVar5 = FUN_08008eec(uVar6,uVar7);\n    finalResult1 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absDifference = FUN_08009264(DAT_20000d0c,0), absDifference != 0)) {\n      uVar6 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,maxMetric);\n      uVar7 = FUN_08008eec(DAT_20000d04,result1);\n      uVar6 = FUN_08008cd8(uVar6,uVar7);\n      uVar7 = FUN_08008eec(DAT_20000d08,uVar5);\n      uVar6 = FUN_08008cd8(uVar6,uVar7);\n      calcResult1 = FUN_08008590(uVar6);\n      absDifference = FUN_08008b24((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),0x66666666,0x3fee6666);\n      if (absDifference != 0) {\n        absDifference = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + offset));\n        finalResult1 = DAT_20000d0c;\n        if (absDifference == 0) {\n          finalResult1 = *(undefined4 *)(&DAT_20000884 + offset);\n        }\n        calcResult1 = FUN_08008590(uVar6);\n        absDifference = FUN_08008b60((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),0x66666666,0xbfee6666);\n        if (absDifference != 0) {\n          calcResult1 = FUN_08008590(uVar6);\n          calcResult1 = FUN_080082d0(0,0x3ff00000,(int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n          calcResult1 = FUN_08008640((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),0,0x3fe00000);\n          calcResult1 = FUN_080098d0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n          uVar6 = FUN_08008c30((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n          calcResult1 = FUN_08008590(finalResult1);\n          uVar7 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          uVar7 = FUN_08008eec(uVar7,uVar6);\n          calcResult2 = FUN_08008590(uVar7);\n          calcResult3 = FUN_08008590(uVar6);\n          calcResult3 = FUN_080082d0(0,0x3ff00000,(int)calcResult3,(int)((ulonglong)calcResult3 >> 0x20));\n          calcResult2 = FUN_08008894((int)calcResult2,(int)((ulonglong)calcResult2 >> 0x20),(int)calcResult3,\n                                (int)((ulonglong)calcResult3 >> 0x20));\n          calcResult2 = FUN_080098d0((int)calcResult2,(int)((ulonglong)calcResult2 >> 0x20));\n          absDifference = FUN_08008b24((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),(int)calcResult2,\n                                (int)((ulonglong)calcResult2 >> 0x20));\n          if (absDifference == 0) {\n            uVar7 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            uVar7 = FUN_08008eec(uVar7,uVar6);\n            calcResult1 = FUN_08008590(uVar7);\n            calcResult2 = FUN_08008590(uVar6);\n            calcResult2 = FUN_080082d0(0,0x3ff00000,(int)calcResult2,(int)((ulonglong)calcResult2 >> 0x20));\n            calcResult1 = FUN_08008894((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20),(int)calcResult2,\n                                  (int)((ulonglong)calcResult2 >> 0x20));\n            calcResult1 = FUN_080098d0((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n            finalResult1 = FUN_08008c30((int)calcResult1,(int)((ulonglong)calcResult1 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + offset) = finalResult1;\n    uVar7 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + offset));\n    absDifference = FUN_08009228(finalResult1,uVar7);\n    uVar6 = uVar7;\n    if (absDifference != 0) {\n      uVar6 = finalResult1;\n    }\n    *(undefined4 *)(&DAT_20000888 + offset) = uVar6;\n    absDifference = FUN_08009250(uVar7,*(undefined4 *)(&DAT_20000884 + offset));\n    if (absDifference == 0) {\n      (&DAT_20000895)[offset] = 0;\n    }\n    else {\n      (&DAT_20000895)[offset] = 1;\n    }\n    (&DAT_20000894)[offset] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + offset);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maxMetric;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = uVar5;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = metric1;\n    DAT_20000cf8 = metric2;\n    DAT_20000cfc = metric3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_metrics_08003004",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "metric1",
                "iVar3": "metric2",
                "iVar4": "metric3",
                "uVar9": "maxMetric",
                "iVar10": "offset",
                "puVar11": "metrics",
                "iVar12": "absDifference",
                "uVar13": "maxDifference",
                "uVar14": "calcResult1",
                "uVar15": "calcResult2",
                "uVar16": "calcResult3",
                "local_20": "finalResult1",
                "local_1c": "finalResult2"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "set_function_parameters_080035ec",
            "code": "\nvoid set_function_parameters_080035ec(undefined4 new_param_1,undefined4 new_param_2,undefined4 new_param_3)\n\n{\n  DAT_20000cf4 = new_param_1;\n  DAT_20000cf8 = new_param_2;\n  DAT_20000cfc = new_param_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "set_function_parameters_080035ec",
                "param_1": "new_param_1",
                "param_2": "new_param_2",
                "param_3": "new_param_3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_and_execute_08003618",
            "code": "\nvoid updateDataAndExecute_08003618(undefined4 inputData)\n\n{\n  undefined4 result1;\n  int offset;\n  undefined4 data1;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  data1 = *(undefined4 *)(&DAT_20000890 + offset);\n  result1 = FUN_08008e44(inputData);\n  result1 = FUN_08008eec(data1,result1);\n  data1 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n  result1 = FUN_08009054(result1,data1);\n  *(undefined4 *)(&DAT_20000890 + offset) = result1;\n  *(undefined4 *)(&DAT_20000880 + offset) = inputData;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_and_execute_08003618",
                "param_1": "inputData",
                "uVar1": "result1",
                "iVar2": "offset",
                "uVar3": "data1"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "process_string_080036c6",
            "code": "\nvoid processString_080036c6(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_digits_080036f0",
            "code": "\nvoid printBinaryDigits_080036f0(uint number,int numBits)\n\n{\n  undefined4 binaryDigit;\n  int index;\n  uint mask;\n  \n  mask = 1 << (numBits - 1U & 0xff);\n  for (index = 0; index < numBits; index = index + 1) {\n    if ((mask & number) == 0) {\n      binaryDigit = 0x30;\n    }\n    else {\n      binaryDigit = 0x31;\n    }\n    FUN_08008250(binaryDigit);\n    mask = mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_digits_080036f0",
                "param_1": "number",
                "param_2": "numBits",
                "uVar1": "binaryDigit",
                "local_10": "index",
                "local_c": "mask"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_data_08003740",
            "code": "\nvoid initializeData_08003740(undefined data)\n\n{\n  FUN_080036f0(data,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_data_08003740",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_memory_block_0800375c",
            "code": "\nvoid initializeMemoryBlock_0800375c(undefined2 memoryBlockAddress)\n\n{\n  FUN_080036f0(memoryBlockAddress,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_memory_block_0800375c",
                "param_1": "memoryBlockAddress"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "convert_number_to_string_08003778",
            "code": "\nvoid convertNumberToString_08003778(uint number)\n\n{\n  uint counter;\n  uint tempNumber;\n  char convertedNumber [12];\n  byte digit;\n  \n  digit = 0;\n  tempNumber = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; tempNumber != 0; tempNumber = tempNumber / 10) {\n      counter = (uint)digit;\n      digit = digit + 1;\n      convertedNumber[counter + 1] = (char)(tempNumber % 10) + '0';\n    }\n    for (; digit != 0; digit = digit - 1) {\n      FUN_08008250(convertedNumber[digit]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "convert_number_to_string_08003778",
                "param_1": "number",
                "uVar1": "counter",
                "local_1c": "tempNumber",
                "acStack_15": "convertedNumber",
                "local_9": "digit"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_abs_value_080037fc",
            "code": "\nvoid printAbsValue_080037fc(int value)\n\n{\n  int absValue;\n  \n  absValue = value;\n  if (value < 0) {\n    FUN_08008250(0x2d);\n    absValue = -value;\n  }\n  FUN_08003778(absValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_abs_value_080037fc",
                "param_1": "value",
                "local_c": "absValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_and_print_decimal_08003826",
            "code": "\nvoid convertAndPrintDecimal_08003826(uint input)\n\n{\n  int result;\n  undefined4 convertedValue;\n  byte digit;\n  uint index;\n  uint value;\n  char decimalString [13];\n  uint temp;\n  byte digitIndex;\n  byte loopCount;\n  \n  result = FUN_08009228(input,0);\n  value = input;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    value = input ^ 0x80000000;\n  }\n  for (loopCount = DAT_20000ef9; 1 < loopCount; loopCount = loopCount - 2) {\n    value = FUN_08008eec(value,0x42c80000);\n  }\n  if (loopCount != 0) {\n    value = FUN_08008eec(value,0x41200000);\n  }\n  convertedValue = FUN_08008cdc(value,0x3f000000);\n  digitIndex = 0;\n  temp = FUN_08009278(convertedValue);\n  decimalString[DAT_20000ef9 + 1] = '.';\n  for (; temp != 0; temp = temp / 10) {\n    if (digitIndex == DAT_20000ef9) {\n      digitIndex = digitIndex + 1;\n    }\n    index = (uint)digitIndex;\n    digitIndex = digitIndex + 1;\n    decimalString[index + 1] = (char)(temp % 10) + '0';\n  }\n  while (digitIndex < DAT_20000ef9) {\n    index = (uint)digitIndex;\n    digitIndex = digitIndex + 1;\n    decimalString[index + 1] = '0';\n  }\n  if (digitIndex == DAT_20000ef9) {\n    digit = digitIndex + 1;\n    digitIndex = digitIndex + 2;\n    decimalString[digit + 1] = '0';\n  }\n  for (; digitIndex != 0; digitIndex = digitIndex - 1) {\n    FUN_08008250(decimalString[digitIndex]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_and_print_decimal_08003826",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "convertedValue",
                "bVar3": "digit",
                "uVar4": "index",
                "local_24": "value",
                "acStack_1d": "decimalString",
                "local_10": "temp",
                "local_a": "digitIndex",
                "local_9": "loopCount"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_dat_variables_08003980",
            "code": "\nvoid initialize_dat_variables_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_dat_variables_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_application_080039a0",
            "code": "\nvoid initializeApplication_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_application_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "check_and_process_data_080039bc",
            "code": "\nvoid checkAndProcessData_080039bc(void)\n\n{\n  int result;\n  undefined4 dataValue;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      dataValue = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(dataValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "check_and_process_data_080039bc",
                "local_9": "counter",
                "iVar1": "result",
                "uVar2": "dataValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "update_flags_08003a18",
            "code": "\nvoid updateFlags_08003a18(uint inputFlags)\n\n{\n  if ((inputFlags & 0x80) == 0) {\n    if ((inputFlags & 0x40) == 0) {\n      if ((inputFlags & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "update_flags_08003a18",
                "param_1": "inputFlags"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "process_data_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid processData_08003a74(void)\n\n{\n  byte bVar1;\n  \n  bVar1 = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((bVar1 & 0x10) == 0) {\n      if ((bVar1 & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((bVar1 & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((bVar1 & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((bVar1 & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "process_data_08003a74"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_command_08003b98",
            "code": "\nuint processCommand_08003b98(char *command)\n\n{\n  byte firstChar;\n  int errorCode;\n  undefined4 result;\n  uint returnValue;\n  undefined8 functionResult;\n  undefined4 parameter1;\n  undefined4 parameter2;\n  byte index;\n  byte isSecondParameter;\n  \n  if (*command != '$') {\n    returnValue = FUN_080005b4(command);\n    return returnValue;\n  }\n  index = 1;\n  isSecondParameter = '\\0';\n  firstChar = command[1];\n  if (firstChar == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command[2] == '\\0') {\n      for (isSecondParameter = 0; isSecondParameter < 2; isSecondParameter = isSecondParameter + 1) {\n        errorCode = FUN_08004d2c(isSecondParameter,command);\n        if (errorCode == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(isSecondParameter,command);\n        }\n      }\n      return 0;\n    }\n    isSecondParameter = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    errorCode = FUN_08002638(command,&index,&parameter2);\n    if (errorCode == 0) {\n      return 1;\n    }\n    firstChar = index + 1;\n    if (command[index] != '=') {\n      return 3;\n    }\n    index = firstChar;\n    if (isSecondParameter == '\\0') {\n      errorCode = FUN_08002638(command,&index,&parameter1);\n      if (errorCode == 0) {\n        return 1;\n      }\n      if (command[index] == '\\0') {\n        result = FUN_08009278(parameter2);\n        returnValue = FUN_08004e30(result,parameter1);\n        return returnValue;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)index - (uint)firstChar] = command[index];\n      returnValue = (uint)index;\n      index = index + 1;\n    } while (command[returnValue] != '\\0');\n    isSecondParameter = firstChar;\n    isSecondParameter = FUN_080005b4(command);\n    if (isSecondParameter != 0) {\n      return (uint)isSecondParameter;\n    }\n    functionResult = FUN_08008590(parameter2);\n    functionResult = FUN_08009798((int)functionResult,(int)((ulonglong)functionResult >> 0x20));\n    isSecondParameter = FUN_08008bf0((int)functionResult,(int)((ulonglong)functionResult >> 0x20));\n    FUN_08004bc0(isSecondParameter,command);\n    break;\n  case 0x58:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_command_08003b98",
                "param_1": "command",
                "bVar1": "firstChar",
                "iVar2": "errorCode",
                "uVar3": "result",
                "uVar4": "returnValue",
                "uVar5": "functionResult",
                "local_14": "parameter1",
                "local_10": "parameter2",
                "local_a": "index",
                "local_9": "isSecondParameter"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid processInput_08003f34(void)\n\n{\n  byte byteValue;\n  undefined4 returnValue;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      byteValue = FUN_08008286();\n      if (byteValue == 0xff) {\n        return;\n      }\n      if ((byteValue == 10) || (byteValue == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < byteValue) && (byteValue != 0x2f)) {\n          if (byteValue == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUNC_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((byteValue < 0x61) || (0x7a < byteValue)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = byteValue;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = byteValue - 0x20;\n          }\n        }\n      }\n      else if (byteValue == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUNC_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      returnValue = FUN_08003b98(&DAT_20000d10);\n      FUNC_08004030(returnValue);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "byteValue",
                "uVar2": "returnValue",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "FUNC_08004030",
            "code": "\nvoid FUNC_08004030(char param_1)\n\n{\n  if (param_1 == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(param_1) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "FUNC_08004030"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_status_message_080041a0",
            "code": "\nvoid displayStatusMessage_080041a0(undefined statusType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(statusType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "statusType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_grbl_version_08004228",
            "code": "\nvoid printGrblVersion_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "display_grbl_commands_0800423c",
            "code": "\nvoid displayGrblCommands_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "display_grbl_commands_0800423c"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configuration_08004250",
            "code": "\nvoid printConfiguration_08004250(void)\n\n{\n  undefined4 uVar1;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  uVar1 = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(uVar1);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configuration_08004250"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 processedValue;\n  undefined8 transformedValue;\n  undefined4 stackArray [3];\n  byte index;\n  byte counter;\n  \n  counter = 0;\n  while( true ) {\n    if (7 < counter) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          transformedValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          transformedValue = FUN_08008640((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20),0x57e16865,0x3fa42851);\n          processedValue = FUN_08008c30((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20));\n          FUN_08003826(processedValue);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(counter,stackArray);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(counter) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(stackArray[index]);\n      }\n      else {\n        transformedValue = FUN_08008590(stackArray[index]);\n        transformedValue = FUN_08008640((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20),0x57e16865,0x3fa42851);\n        processedValue = FUN_08008c30((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20));\n        FUN_08003826(processedValue);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    counter = counter + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "processedValue",
                "uVar3": "transformedValue",
                "auStack_18": "stackArray",
                "local_a": "index",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_components_080046d0",
            "code": "\nvoid initializeComponents_080046d0(void)\n\n{\n  undefined4 returnValue;\n  undefined8 result;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    result = FUN_08008590(DAT_20000e78);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x57e16865,0x3fa42851);\n    returnValue = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n    FUN_08003826(returnValue);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_components_080046d0",
                "uVar1": "returnValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_08004900",
            "code": "\nvoid initializeBinary_08004900(undefined undefinedParam1,undefined4 undefinedParam2)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(undefinedParam1);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(undefinedParam2);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_08004900",
                "param_1": "undefinedParam1",
                "param_2": "undefinedParam2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 status;\n  uint index;\n  undefined4 tempStatus;\n  undefined8 result1;\n  undefined8 result2;\n  undefined4 statusArray [6];\n  byte i;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    status = FUN_08008e44(statusArray[i + 3]);\n    index = (uint)i;\n    status = FUN_08009054(status,(&DAT_20000ebc)[i]);\n    statusArray[index] = status;\n    if ((DAT_20000ee4 & 1) != 0) {\n      result1 = FUN_08008590(statusArray[i]);\n      result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),0x57e16865,0x3fa42851);\n      index = (uint)i;\n      status = FUN_08008c30((int)result1,(int)((ulonglong)result1 >> 0x20));\n      statusArray[index] = status;\n    }\n    FUN_08003826(statusArray[i]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      tempStatus = statusArray[i];\n      status = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      index = (uint)i;\n      status = FUN_08008cd8(tempStatus,status);\n      statusArray[index] = status;\n    }\n    else {\n      result1 = FUN_08008590(statusArray[i]);\n      status = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      result2 = FUN_08008590(status);\n      result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),0x57e16865,0x3fa42851);\n      result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                           (int)((ulonglong)result2 >> 0x20));\n      index = (uint)i;\n      status = FUN_08008c30((int)result1,(int)((ulonglong)result1 >> 0x20));\n      statusArray[index] = status;\n    }\n    FUN_08003826(statusArray[i]);\n    if (i < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "uVar1": "status",
                "uVar2": "index",
                "uVar3": "tempStatus",
                "uVar4": "result1",
                "uVar5": "result2",
                "auStack_2c": "statusArray",
                "local_11": "i"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_08004bc0",
            "code": "\nvoid initializeMemory_08004bc0(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,inputValue,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_08004bc0",
                "param_1": "inputByte",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_offset_and_call_function_08004bf4",
            "code": "\nvoid calculateOffsetAndCallFunction_08004bf4(byte inputByte,undefined4 context)\n\n{\n  FUN_08000374((ushort)inputByte * 0xd + 0x200,context,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_call_function_08004bf4",
                "param_1": "inputByte",
                "param_2": "context"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_data_08004c2a",
            "code": "\nvoid initializeData_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_data_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char input)\n\n{\n  if (input != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_process_data_08004d2c",
            "code": "\nbool checkAndProcessData_08004d2c(byte inputByte,undefined *outputPtr)\n\n{\n  int result;\n  \n  result = FUN_080003ec(outputPtr,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *outputPtr = 0;\n    FUN_08004bc0(inputByte,outputPtr);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_process_data_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputPtr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_handle_data_08004d7c",
            "code": "\nbool checkAndHandleData_08004d7c(byte inputByte,undefined4 data)\n\n{\n  int result;\n  \n  result = FUN_080003ec(data,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(data,0,0xc);\n    FUN_08004bf4(inputByte,data);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_handle_data_08004d7c",
                "param_1": "inputByte",
                "param_2": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_data_and_process_08004dd2",
            "code": "\nundefined4 check_data_and_process_08004dd2(void)\n\n{\n  byte data_status;\n  int result;\n  \n  data_status = FUN_08000310(0);\n  if (data_status == 5) {\n    result = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < data_status) {\n      return 0;\n    }\n    result = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (result == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_data_and_process_08004dd2",
                "bVar1": "data_status",
                "iVar2": "result"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "configure_settings_08004e30",
            "code": "\nundefined4 configureSettings_08004e30(int settingOption,uint settingValue)\n\n{\n  undefined4 result;\n  int isError;\n  undefined8 modifiedValue;\n  \n  switch(settingOption) {\n  case 0:\n  case 1:\n  case 2:\n    isError = FUN_0800923c(settingValue,0);\n    if (isError != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[settingOption] = settingValue;\n    break;\n  case 3:\n    isError = FUN_08009228(settingValue,0x40400000);\n    if (isError != 0) {\n      return 9;\n    }\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009654((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = settingValue;\n    break;\n  case 5:\n    DAT_20000ed0 = settingValue;\n    break;\n  case 6:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009798((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 7:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009654((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(settingValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = settingValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = settingValue;\n    break;\n  case 0xb:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009654((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 0xc:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009654((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 0xd:\n    isError = FUN_08009214(settingValue,0);\n    if (isError == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    isError = FUN_08009214(settingValue,0);\n    if (isError == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    isError = FUN_08009214(settingValue,0);\n    if (isError == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    isError = FUN_08009214(settingValue,0);\n    if (isError == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    isError = FUN_08009214(settingValue,0);\n    if (isError == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009798((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = settingValue;\n    break;\n  case 0x14:\n    DAT_20000eec = settingValue;\n    break;\n  case 0x15:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009654((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = settingValue;\n    break;\n  case 0x17:\n    modifiedValue = FUN_08008590(settingValue);\n    modifiedValue = FUN_08009798((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)modifiedValue,(int)((ulonglong)modifiedValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "configure_settings_08004e30",
                "param_1": "settingOption",
                "param_2": "settingValue",
                "uVar1": "result",
                "iVar2": "isError",
                "uVar3": "modifiedValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_execute_tasks_080051b4",
            "code": "\nvoid checkAndExecuteTasks_080051b4(void)\n\n{\n  int result;\n  undefined taskParameters [15];\n  byte taskIndex;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (taskIndex = 0; taskIndex < 8; taskIndex = taskIndex + 1) {\n    result = FUN_08004d7c(taskIndex,taskParameters);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_execute_tasks_080051b4",
                "auStack_18": "taskParameters",
                "local_9": "taskIndex",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_system_08005250",
            "code": "\nvoid initialize_system_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_system_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "update_parameter_0800525c",
            "code": "\nvoid updateParameter_0800525c(byte inputParam)\n\n{\n  if ((int)(char)inputParam != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputParam == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputParam;\n    }\n    else {\n      if ((char)inputParam < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputParam;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "update_parameter_0800525c",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_080052ac",
            "code": "\n\n\nvoid updateData_080052ac(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_register_value_080052dc",
            "code": "\n\n\nvoid updateRegisterValue_080052dc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_register_value_080052dc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_data_rate_08005324",
            "code": "\nvoid calculateDataRate_08005324(uint inputValue)\n\n{\n  uint clampedValue;\n  \n  clampedValue = inputValue;\n  if (inputValue < 800) {\n    clampedValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / clampedValue;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_data_rate_08005324",
                "param_1": "inputValue",
                "local_14": "clampedValue"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_total_and_check_08005360",
            "code": "\nbool calculateTotalAndCheck_08005360(void)\n\n{\n  bool isExceedLimit;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExceedLimit = 420000 < DAT_20000e2c;\n  if (isExceedLimit) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExceedLimit;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_total_and_check_08005360",
                "bVar1": "isExceedLimit"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_080053a0",
            "code": "\nvoid updateData_080053a0(void)\n\n{\n  int returnValue;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_080053a0",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "process_data_08005790",
            "code": "\nvoid processData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "process_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "execute_conditional_function_080057e4",
            "code": "\nvoid executeConditionalFunction_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "execute_conditional_function_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_application_0800583c",
            "code": "\nvoid initializeApplication_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_application_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid updateStatusAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_special_character_08005900",
            "code": "\nundefined4 checkSpecialCharacter_08005900(byte character)\n\n{\n  if (character == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (character < 0x7f) {\n    if (character == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (character < 0x40) {\n      if (character == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (character == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_special_character_08005900",
                "param_1": "character"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "execute_software_interrupt_0800597c",
            "code": "\nvoid executeSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "execute_software_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_data_08005984",
            "code": "\nundefined4 initializeData_08005984(undefined4 inputData)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputData,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "inputData",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_dat_value_08005a84",
            "code": "\nundefined4 get_dat_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_dat_value_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_until_sum_08005a98",
            "code": "\nvoid waitUntilSum_08005a98(int inputValue)\n\n{\n  int randomNumber;\n  uint temporaryValue;\n  \n  randomNumber = FUN_08005a84();\n  do {\n    temporaryValue = FUN_08005a84();\n  } while (temporaryValue < (uint)(inputValue + randomNumber));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_until_sum_08005a98",
                "param_1": "inputValue",
                "iVar1": "randomNumber",
                "uVar2": "temporaryValue"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "set_byte_value_08005bdc",
            "code": "\nvoid setByteValue_08005bdc(byte inputByte,uint valueToSet)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((valueToSet & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((valueToSet & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "set_byte_value_08005bdc",
                "param_1": "inputByte",
                "param_2": "valueToSet"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_values_08005c30",
            "code": "\n\n\nbool checkAndSetValues_08005c30(int inputValue)\n\n{\n  bool isInRange;\n  \n  isInRange = inputValue - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_values_08005c30",
                "param_1": "inputValue",
                "bVar1": "isInRange"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_parameters_08005cec",
            "code": "\n\n\nundefined4 check_parameters_08005cec(uint *parameters)\n\n{\n  int temp;\n  uint random_value;\n  \n  if ((*parameters & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (parameters[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 5000U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)parameters[1],_DAT_40023800));\n      if (parameters[1] == 1) {\n        temp = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          random_value = FUN_08005a84();\n          if (temp + 5000U <= random_value) {\n            return 3;\n          }\n        }\n      }\n      else {\n        temp = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          random_value = FUN_08005a84();\n          if (temp + 5000U <= random_value) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*parameters & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (parameters[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (parameters[3] == 0) {\n      _DAT_42470000 = 0;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = parameters[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*parameters & 8) != 0) {\n    if (parameters[5] == 0) {\n      _DAT_42470e80 = 0;\n      temp = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      temp = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*parameters & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    temp = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      random_value = FUN_08005a84();\n      if (temp + 100U <= random_value) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    temp = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      random_value = FUN_08005a84();\n      if (temp + 5000U <= random_value) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)parameters[2]);\n    if (parameters[2] == 1) {\n      temp = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (temp + 5000U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      temp = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 5000U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (parameters[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (parameters[6] == 2) {\n      _DAT_42470060 = 0;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           parameters[0xb] << 0x18 |\n           parameters[8] | parameters[9] << 6 | ((parameters[10] >> 1) - 1) * 0x10000 | parameters[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      temp = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_value = FUN_08005a84();\n        if (temp + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_parameters_08005cec",
                "param_1": "parameters",
                "iVar1": "temp",
                "uVar2": "random_value"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "check_and_process_data_0800618c",
            "code": "\n\n\nundefined4 checkAndProcessData_0800618c(uint *data,uint length)\n\n{\n  int result;\n  uint elapsedTime;\n  uint timeout;\n  undefined8 currentTime;\n  \n  if ((_DAT_40023c00 & 0xf) < length) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)length);\n    if (length != (length & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((data[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (data[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          elapsedTime = FUN_08005a84();\n          if (timeout <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)length);\n    if (length != (length & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40023808 = data[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40023808 = data[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40023808 = data[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  currentTime = FUN_08006628();\n  FUN_08005c30((uint)currentTime / 1000,(int)((ulonglong)currentTime >> 0x20),(uint)currentTime * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "check_and_process_data_0800618c",
                "param_1": "data",
                "param_2": "length",
                "iVar1": "result",
                "uVar2": "elapsedTime",
                "uVar3": "timeout",
                "uVar4": "currentTime"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "set_register_flags_0800640c",
            "code": "\n\n\nvoid set_register_flags_0800640c(int flag,uint value1,uint value2)\n\n{\n  undefined4 mask;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  if (flag == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    mask = 0x100;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020000,&mask);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    mask = 0x200;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020800,&mask);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "set_register_flags_0800640c",
                "param_1": "flag",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "mask",
                "local_18": "constant1",
                "local_14": "constant2",
                "local_10": "constant3",
                "local_c": "constant4"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculate_clock_frequency_080064ec(void)\n\n{\n  uint clock_config;\n  uint frequency;\n  \n  clock_config = _DAT_40023808 & 0xc;\n  if (clock_config == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return frequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clock_config < 9) {\n    if (clock_config == 0) {\n      return 16000000;\n    }\n    if (clock_config == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clock_config",
                "local_c": "frequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_data_shift_08006628",
            "code": "\n\n\nuint calculateDataShift_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_data_shift_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "shifted_value_by_selector_08006680",
            "code": "\n\n\nuint shiftedValueBySelector_08006680(void)\n\n{\n  uint resultOf08006628;\n  \n  resultOf08006628 = FUN_08006628();\n  return resultOf08006628 >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "shifted_value_by_selector_08006680",
                "uVar1": "resultOf08006628"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "shift_right_by_constant_080066cc",
            "code": "\n\n\nuint shiftRightByConstant_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "shift_right_by_constant_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_memory_config_08006950",
            "code": "\n\n\nvoid setMemoryConfig_08006950(uint configuration)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (configuration & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_memory_config_08006950",
                "param_1": "configuration"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_shifted_value_08006998",
            "code": "\n\n\nuint getShiftedValue_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_shifted_value_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte byteValue)\n\n{\n  *(int *)((unsignedInt >> 5) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "byteValue",
                "(uint)(int)(char)param_1": "unsignedInt"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_in_memory_08006a18",
            "code": "\nbool checkBitInMemory_08006a18(byte byteValue)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byteValue & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_in_memory_08006a18",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_memory_08006a58",
            "code": "\nvoid setBitInMemory_08006a58(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_at_index_08006a8c",
            "code": "\nvoid setBitAtIndex_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_at_index_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_08006ac0",
            "code": "\nbool checkBit_08006ac0(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_memory_byte_08006b00",
            "code": "\nvoid updateMemoryByte_08006b00(byte inputByte,uint value)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_memory_byte_08006b00",
                "param_1": "inputByte",
                "param_2": "value"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte outputByte;\n  \n  if ((char)inputByte < '\\0') {\n    outputByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    outputByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return outputByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "outputByte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "bitwise_combination_08006ba0",
            "code": "\nuint bitwiseCombination_08006ba0(uint mask,uint data,uint result)\n\n{\n  uint shiftAmount;\n  \n  mask = mask & 7;\n  shiftAmount = 7 - mask;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (mask + 4 < 7) {\n    mask = 0;\n  }\n  else {\n    mask = mask - 3;\n  }\n  return result & (1 << (mask & 0xff)) - 1U |\n         ((1 << (shiftAmount & 0xff)) - 1U & data) << (mask & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "bitwise_combination_08006ba0",
                "param_1": "mask",
                "param_2": "data",
                "param_3": "result",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extract_bits_08006c04(uint input_value,uint bit_offset,uint *output_value1,uint *output_value2)\n\n{\n  uint bit_shift;\n  \n  bit_offset = bit_offset & 7;\n  bit_shift = 7 - bit_offset;\n  if (3 < bit_shift) {\n    bit_shift = 4;\n  }\n  if (bit_offset + 4 < 7) {\n    bit_offset = 0;\n  }\n  else {\n    bit_offset = bit_offset - 3;\n  }\n  *output_value1 = (1 << (bit_shift & 0xff)) - 1U & input_value >> (bit_offset & 0xff);\n  *output_value2 = (1 << (bit_offset & 0xff)) - 1U & input_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input_value",
                "param_2": "bit_offset",
                "param_3": "output_value1",
                "param_4": "output_value2",
                "uVar1": "bit_shift"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "wait_for_data_synchronization_08006c70",
            "code": "\nvoid waitForDataSynchronization_08006c70(void)\n\n{\n  synchronizeData(0xf);\n  synchronizeData(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "wait_for_data_synchronization_08006c70",
                "DataSynchronizationBarrier": "synchronizeData"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_if_valid_param_08006c9c",
            "code": "\n\n\nbool checkIfValidParam_08006c9c(int inputParam)\n\n{\n  bool isValid;\n  \n  isValid = inputParam - 1U < 0x1000000;\n  if (isValid) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_if_valid_param_08006c9c",
                "param_1": "inputParam",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_08006ce0",
            "code": "\nvoid initialize_08006ce0(undefined4 data)\n\n{\n  FUN_08006950(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_08006ce0",
                "param_1": "data"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "execute_process_08006cf6",
            "code": "\nvoid executeProcess_08006cf6(char filename,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param2,param3);\n  FUN_08006b00((int)filename,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "execute_process_08006cf6",
                "param_1": "filename",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "execute_function_08006d2e",
            "code": "\nvoid executeFunction_08006d2e(char input)\n\n{\n  FUN_080069b4((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "execute_function_08006d2e",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_function_08006d4a",
            "code": "\nvoid executeFunction_08006d4a(char inputValue)\n\n{\n  FUN_080069e4((int)inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_function_08006d4a",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_process_08006d66",
            "code": "\nvoid initialize_process_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_process_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_function_08006d72",
            "code": "\nundefined4 processFunction_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_function_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "initialize_application_08006d8a",
            "code": "\nundefined4 initializeApplication_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "initialize_application_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "update_function_08006d98",
            "code": "\nvoid updateFunction_08006d98(char inputChar,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 convertedInput;\n  \n  convertedInput = FUN_08006b54((int)inputChar);\n  FUN_08006c04(convertedInput,param2,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "update_function_08006d98",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "convertedInput"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "execute_function_08006dc4",
            "code": "\nvoid executeFunction_08006dc4(char input)\n\n{\n  FUN_08006a58((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "execute_function_08006dc4",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "convert_char_to_unsigned_int_08006de0",
            "code": "\nundefined4 convertCharToUnsignedInt_08006de0(char inputChar)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = FUN_08006a18((int)inputChar);\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "convert_char_to_unsigned_int_08006de0",
                "param_1": "inputChar",
                "uVar1": "convertedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_character_08006dfe",
            "code": "\nvoid initializeCharacter_08006dfe(char character)\n\n{\n  FUN_08006a8c((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_character_08006dfe",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "convert_char_to_undefined_08006e1a",
            "code": "\nundefined4 convertCharToUndefined_08006e1a(char inputChar)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = FUN_08006ac0((int)inputChar);\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "convert_char_to_undefined_08006e1a",
                "param_1": "inputChar",
                "uVar1": "convertedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_registers_08006e88",
            "code": "\n\n\nvoid updateRegisters_08006e88(uint *registers,uint *data)\n\n{\n  uint bitMask;\n  uint bitValue;\n  int registerIndex;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    bitMask = 1 << (counter & 0xff);\n    bitValue = *data & bitMask;\n    if (bitValue == bitMask) {\n      if ((data[1] == 2) || (data[1] == 0x12)) {\n        bitMask = data[4];\n        registers[(counter >> 3) + 8] = registers[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        registers[(counter >> 3) + 8] = registers[(counter >> 3) + 8] | bitMask << ((counter & 7) << 2);\n      }\n      *registers = *registers & ~(3 << ((counter & 0x7f) << 1));\n      *registers = *registers | (data[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((data[1] == 1) || (data[1] == 2)) || (data[1] == 0x11)) || (data[1] == 0x12)\n         ) {\n        registers[2] = registers[2] & ~(3 << ((counter & 0x7f) << 1));\n        registers[2] = registers[2] | data[3] << ((counter & 0x7f) << 1);\n        registers[1] = registers[1] & ~(1 << (counter & 0xff));\n        registers[1] = registers[1] | (data[1] >> 4 & 1) << (counter & 0xff);\n      }\n      registers[3] = registers[3] & ~(3 << ((counter & 0x7f) << 1));\n      registers[3] = registers[3] | data[2] << ((counter & 0x7f) << 1);\n      if ((data[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (registers == (uint *)0x40020000) {\n          registerIndex = 0;\n        }\n        else if (registers == (uint *)0x40020400) {\n          registerIndex = 1;\n        }\n        else if (registers == (uint *)0x40020800) {\n          registerIndex = 2;\n        }\n        else if (registers == (uint *)0x40020c00) {\n          registerIndex = 3;\n        }\n        else if (registers == (uint *)0x40021000) {\n          registerIndex = 4;\n        }\n        else if (registers == (uint *)0x40021400) {\n          registerIndex = 5;\n        }\n        else if (registers == (uint *)0x40021800) {\n          registerIndex = 6;\n        }\n        else if (registers == (uint *)0x40021c00) {\n          registerIndex = 7;\n        }\n        else if (registers == (uint *)0x40022000) {\n          registerIndex = 8;\n        }\n        else if (registers == (uint *)0x40022400) {\n          registerIndex = 9;\n        }\n        else {\n          registerIndex = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             registerIndex << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitValue & _DAT_40013c00;\n        _DAT_40013c04 = ~bitValue & _DAT_40013c04;\n        if ((data[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitValue | _DAT_40013c00;\n        }\n        if ((data[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitValue | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitValue & _DAT_40013c08;\n        _DAT_40013c0c = ~bitValue & _DAT_40013c0c;\n        if ((data[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitValue | _DAT_40013c08;\n        }\n        if ((data[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitValue | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_registers_08006e88",
                "param_1": "registers",
                "param_2": "data",
                "uVar1": "bitMask",
                "uVar2": "bitValue",
                "iVar3": "registerIndex",
                "local_c": "counter"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_0800733e",
            "code": "\nvoid updateParam_0800733e(int ptr,undefined2 value,char flag)\n\n{\n  if (flag == '\\0') {\n    *(undefined2 *)(ptr + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(ptr + 0x18) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_0800733e",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_data_if_flag_set_0800738e",
            "code": "\n\n\nvoid updateDataIfFlagSet_0800738e(ushort inputValue)\n\n{\n  if ((inputValue & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)inputValue;\n    FUNC_080073c0(inputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_data_if_flag_set_0800738e",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_in_short_array_080073d4",
            "code": "\nvoid setBitInShortArray_080073d4(uint index)\n\n{\n  *(newShortValue *)(((int)index >> 4) * 0x400 + 0x4002001a) = (newShortValue)(1 << (index & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_in_short_array_080073d4",
                "param_1": "index",
                "short": "newShortValue"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "write_bit_to_memory_08007402",
            "code": "\nvoid writeBitToMemory_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "write_bit_to_memory_08007402",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 flag3;\n  undefined4 flag4;\n  undefined4 flag5;\n  undefined4 value7;\n  undefined4 value8;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  value2 = 0x400000;\n  value3 = 8;\n  value4 = 0x150;\n  value5 = 2;\n  value6 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  flag3 = 0xf;\n  flag4 = 2;\n  flag5 = 0;\n  value7 = 0x1400;\n  value8 = 0x1000;\n  iVar1 = FUN_0800618c(&flag3,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "value2",
                "local_2c": "value3",
                "local_28": "value4",
                "local_24": "value5",
                "local_20": "value6",
                "local_1c": "flag3",
                "local_18": "flag4",
                "local_14": "flag5",
                "local_10": "value7",
                "local_c": "value8"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "check_and_perform_actions_080074c8",
            "code": "\nvoid checkAndPerformActions_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "check_and_perform_actions_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_execute_action_08007520",
            "code": "\nvoid checkAndExecuteAction_08007520(uint inputValue)\n\n{\n  if ((inputValue & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_execute_action_08007520",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_system_08007540",
            "code": "\nundefined4 initializeSystem_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_system_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_hardware_0800756c",
            "code": "\n\n\nvoid initializeHardware_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_hardware_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bitwise_data_080076c8",
            "code": "\nvoid updateBitwiseData_080076c8(uint input)\n\n{\n  *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) ^ 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bitwise_data_080076c8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_execute_actions_08007756",
            "code": "\nvoid checkAndExecuteActions_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_execute_actions_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_and_configurate_devices_0800778c",
            "code": "\n\n\nvoid initialize_and_configurate_devices_0800778c(void)\n\n{\n  int index;\n  int mask;\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_3;\n  undefined4 data_4;\n  uint *device_ptr;\n  uint counter;\n  \n  for (counter = 0; counter < 0x11; counter = counter + 1) {\n    index = counter * 0x18;\n    device_ptr = (uint *)(&DAT_0800bcbc + index);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*device_ptr >> 4 & 0xff);\n    mask = 1 << (*device_ptr & 0xf);\n    data_1 = *(undefined4 *)(&DAT_0800bcc0 + index);\n    data_2 = *(undefined4 *)(&DAT_0800bcc4 + index);\n    data_3 = *(undefined4 *)(&DAT_0800bcc8 + index);\n    data_4 = *(undefined4 *)(&DAT_0800bccc + index);\n    FUN_08006e88(((*device_ptr >> 4) + 0x100080) * 0x400,&mask);\n    if (-1 < (int)device_ptr[5]) {\n      FUN_0800733e(((*device_ptr >> 4) + 0x100080) * 0x400,1 << (*device_ptr & 0xf) & 0xffff,\n                   device_ptr[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_and_configurate_devices_0800778c",
                "iVar1": "index",
                "local_24": "mask",
                "local_20": "data_1",
                "local_1c": "data_2",
                "local_18": "data_3",
                "local_14": "data_4",
                "local_10": "device_ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_08007854",
            "code": "\nuint check_bit_08007854(uint input_value)\n\n{\n  return *(uint *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_08007854",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "get_combined_values_08007884",
            "code": "\nuint getCombinedValues_08007884(void)\n\n{\n  int value36;\n  int value37;\n  int value38;\n  int value39;\n  int valueF;\n  uint value0;\n  \n  value36 = FUN_08007854(0x36);\n  value37 = FUN_08007854(0x37);\n  value38 = FUN_08007854(0x38);\n  value39 = FUN_08007854(0x39);\n  valueF = FUN_08007854(0xf);\n  value0 = FUN_08007854(0);\n  return value0 | value36 << 4 | value37 << 3 | value38 << 2 | value39 << 1 | valueF << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "get_combined_values_08007884",
                "iVar1": "value36",
                "iVar2": "value37",
                "iVar3": "value38",
                "iVar4": "value39",
                "iVar5": "valueF",
                "uVar6": "value0"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_sum_080078f4",
            "code": "\nuint calculateSum_080078f4(void)\n\n{\n  int index;\n  uint sum;\n  \n  sum = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    sum = *(uint *)(&DAT_20000e54 + index * 4) | sum;\n  }\n  return sum;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_sum_080078f4",
                "local_10": "index",
                "local_c": "sum"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int index;\n  uint tempValue;\n  undefined4 result;\n  uint newValue;\n  uint changedBits;\n  \n  index = DAT_20000e68;\n  tempValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    result = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + index * 4) = result;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    newValue = FUN_080078f4();\n    tempValue = DAT_20000e64;\n    if (newValue != DAT_20000e64) {\n      changedBits = ~newValue & DAT_20000e64;\n      if ((~DAT_20000e64 & newValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & newValue);\n      }\n      tempValue = newValue;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = tempValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "index",
                "uVar2": "tempValue",
                "uVar3": "result",
                "uVar4": "newValue",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_flag_08007a10",
            "code": "\n\n\nvoid updateFlag_08007a10(undefined *inputPtr)\n\n{\n  if (inputPtr == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (inputPtr == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (inputPtr == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_flag_08007a10",
                "param_1": "inputPtr"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "update_flag_based_on_param_08007a70",
            "code": "\nvoid updateFlagBasedOnParam_08007a70(undefined *inputParam,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined flagValue;\n  \n  if (inputParam == (undefined *)0x40000000) {\n    flagValue = 0x1c;\n  }\n  else if (inputParam == (undefined *)0x40000400) {\n    flagValue = 0x1d;\n  }\n  else {\n    if (inputParam != &DAT_40000800) {\n      return;\n    }\n    flagValue = 0x1e;\n  }\n  FUN_08006cf6(flagValue,parameter2,parameter3);\n  FUN_080079e0(flagValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "update_flag_based_on_param_08007a70",
                "param_1": "inputParam",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "local_c": "flagValue"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initialize_memory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_and_values_08007b70",
            "code": "\n\n\nvoid setFlagsAndValues_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_and_values_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_minimum_value_08007bf0",
            "code": "\n\n\nvoid update_minimum_value_08007bf0(uint value)\n\n{\n  _DAT_4000002c = value;\n  if (value <= _DAT_40000024) {\n    _DAT_40000024 = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_minimum_value_08007bf0",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_global_variable_08007c40",
            "code": "\n\n\nvoid initializeGlobalVariable_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_global_variable_08007c40",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "initialize_data_08007c5e",
            "code": "\n\n\nvoid initializeData_08007c5e(undefined4 dataValue)\n\n{\n  _DAT_40000038 = dataValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "initialize_data_08007c5e",
                "param_1": "dataValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_flags_and_call_functions_08007c7c",
            "code": "\n\n\nvoid updateFlagsAndCallFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_flags_and_call_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_device_registers_08007d08",
            "code": "\n\n\nvoid initializeDeviceRegisters_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_device_registers_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flag_registers_08007da8",
            "code": "\n\n\nvoid set_flag_registers_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flag_registers_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_08007e08",
            "code": "\nvoid initialize_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "wait_for_flag_08007e1c",
            "code": "\n\n\nvoid waitForFlag_08007e1c(byte data)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "wait_for_flag_08007e1c",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_flag_set_08007e58",
            "code": "\n\n\nbool checkFlagSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_flag_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_permissions_08007ea4",
            "code": "\n\n\nvoid updatePermissions_08007ea4(undefined *address)\n\n{\n  if (address == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (address == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (address == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (address == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (address == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (address == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_permissions_08007ea4",
                "param_1": "address"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_param_08007f54",
            "code": "\nvoid calculateParam_08007f54(int baseAddress,int value)\n\n{\n  ulonglong quotient;\n  int temp1;\n  int temp2;\n  undefined8 result;\n  \n  if ((*(uint *)(baseAddress + 0xc) & 0x8000) == 0) {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      result = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(value << 2);\n      temp1 = FUN_08006680((int)result,(int)((ulonglong)result >> 0x20),(int)(quotient * 0x51eb851f));\n      temp2 = FUN_08006680();\n      *(uint *)(baseAddress + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(temp1 * 0x19) / (uint)(value << 2) +\n            (int)(((ulonglong)(uint)(temp2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    result = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(value << 2);\n    temp1 = FUN_080066cc((int)result,(int)((ulonglong)result >> 0x20),(int)(quotient * 0x51eb851f));\n    temp2 = FUN_080066cc();\n    *(uint *)(baseAddress + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(temp1 * 0x19) / (uint)(value << 2) +\n          (int)(((ulonglong)(uint)(temp2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      result = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(value << 1);\n      temp1 = FUN_08006680((int)result,(int)((ulonglong)result >> 0x20),(int)(quotient * 0x51eb851f));\n      temp2 = FUN_08006680();\n      *(uint *)(baseAddress + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(temp1 * 0x19) / (uint)(value << 1) +\n            (int)(((ulonglong)(uint)(temp2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    result = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(value << 1);\n    temp1 = FUN_080066cc((int)result,(int)((ulonglong)result >> 0x20),(int)(quotient * 0x51eb851f));\n    temp2 = FUN_080066cc();\n    *(uint *)(baseAddress + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(temp1 * 0x19) / (uint)(value << 1) +\n          (int)(((ulonglong)(uint)(temp2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_param_08007f54",
                "param_1": "baseAddress",
                "param_2": "value",
                "uVar1": "quotient",
                "iVar2": "temp1",
                "iVar3": "temp2",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_configuration_08008190",
            "code": "\n\n\nvoid initializeMemoryConfiguration_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_configuration_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined input)\n\n{\n  FUN_08007e1c(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "run_and_cleanup_0800826a",
            "code": "\nundefined4 run_and_cleanup_0800826a(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "run_and_cleanup_0800826a",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_status_and_return_value_08008286",
            "code": "\nundefined check_status_and_return_value_08008286(void)\n\n{\n  undefined status;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    status = FUN_08007e84();\n    result = FUN_08005900(status);\n    if (result == 0) {\n      return status;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_status_and_return_value_08008286",
                "uVar1": "status",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_080082d0",
            "code": "\nulonglong calculate_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int bitShift1;\n  byte carry;\n  uint part1;\n  uint part2;\n  uint part3;\n  uint result1;\n  uint result2;\n  int bitShift2;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bool1;\n  bool bool2;\n  bool bool3;\n  \n  result1 = input4 ^ 0x80000000;\n  uVar9 = input2 << 1;\n  input4 = input4 << 1;\n  bool1 = ((input2 ^ result1) & 0x7fffffff) == 0;\n  bool2 = bool1 && input1 == input3;\n  if (!bool1 || input1 != input3) {\n    bool2 = (uVar9 | input1) == 0;\n  }\n  if (!bool2) {\n    bool2 = (input4 | input3) == 0;\n  }\n  bitShift2 = (int)uVar9 >> 0x15;\n  if (!bool2) {\n    bool2 = bitShift2 == -1;\n  }\n  bitShift1 = (int)input4 >> 0x15;\n  if (!bool2) {\n    bool2 = bitShift1 == -1;\n  }\n  if (bool2) {\n    if (bitShift2 == -1 || bitShift1 == -1) {\n      uVar9 = result1;\n      uVar11 = input3;\n      if (bitShift2 == -1) {\n        uVar9 = input2;\n        uVar11 = input1;\n      }\n      if (bitShift2 != -1 || bitShift1 != -1) {\n        input3 = uVar11;\n        result1 = uVar9;\n      }\n      bool2 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bool2) {\n        bool2 = (input3 | result1 << 0xc) == 0;\n      }\n      if (bool2) {\n        bool2 = uVar9 == result1;\n      }\n      if (!bool2) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((input2 ^ result1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((uVar9 | input1) == 0) {\n        input1 = input3;\n        input2 = result1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result1) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bool2 = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)bool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bool2)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  input4 = input4 >> 0x15;\n  uVar11 = input4 - uVar9;\n  bool2 = uVar11 != 0;\n  if (input4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = input1;\n  result2 = input2;\n  if (bool2 && uVar9 <= input4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = input3;\n    result2 = result1;\n    input3 = input1;\n    result1 = input2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(result2,uVar10);\n  }\n  part2 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    bool2 = uVar10 != 0;\n    uVar10 = -uVar10;\n    part2 = -part2 - (uint)bool2;\n  }\n  result2 = result1 & 0xfffff | 0x100000;\n  if ((result1 & 0x80000000) != 0) {\n    bool2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)bool2;\n  }\n  if (uVar9 == uVar11) {\n    result2 = result2 ^ 0x100000;\n    if (uVar9 == 0) {\n      part2 = part2 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  result1 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = input3 << (result1 & 0xff);\n    input3 = input3 >> (uVar11 & 0xff);\n    part1 = uVar10 + input3;\n    part3 = result2 << (result1 & 0xff);\n    result1 = part1 + part3;\n    part2 = part2 + CARRY4(uVar10,input3) + ((int)result2 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(part1,part3);\n  }\n  else {\n    uVar12 = result2 << (-uVar11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    result2 = (int)result2 >> (uVar11 - 0x20 & 0xff);\n    result1 = uVar10 + result2;\n    part2 = part2 + ((int)result2 >> 0x1f) + (uint)CARRY4(uVar10,result2);\n  }\n  input2 = part2 & 0x80000000;\n  uVar11 = part2;\n  if ((int)part2 < 0) {\n    bool2 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -result1;\n    result1 = -(uint)!bool2 - result1;\n    uVar11 = -(uint)(bool2 <= uVar11) - part2;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      carry = (byte)result1;\n      result1 = (uint)(uVar10 != 0) << 0x1f | result1 >> 1;\n      uVar12 = (uint)(carry & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bool2 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bool2 = (result1 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(result1,(uint)bool2) | input2,\n                    result1 + bool2);\n  }\n  bool1 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = result1 * 2;\n  bool2 = CARRY4(result1,result1);\n  result1 = result1 * 2 + (uint)bool1;\n  uVar11 = uVar11 * 2 + (uint)(bool2 || CARRY4(uVar10,(uint)bool1));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  result2 = result1;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    result2 = 0;\n    uVar9 = result1;\n  }\n  bitShift2 = LZCOUNT(uVar9);\n  if (uVar11 == 0) {\n    bitShift2 = bitShift2 + 0x20;\n  }\n  uVar11 = bitShift2 - 0xb;\n  bool3 = SBORROW4(uVar11,0x20);\n  result1 = bitShift2 - 0x2b;\n  bool2 = (int)result1 < 0;\n  bool1 = result1 == 0;\n  if ((int)uVar11 < 0x20) {\n    bool3 = SCARRY4(result1,0xc);\n    bitShift2 = bitShift2 + -0x1f;\n    bool2 = bitShift2 < 0;\n    bool1 = bitShift2 == 0;\n    result1 = uVar11;\n    if (!bool1 && bool2 == bool3) {\n      result2 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - bitShift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bool1 || bool2 != bool3) {\n    uVar12 = 0x20 - result1;\n  }\n  uVar9 = uVar9 << (result1 & 0xff);\n  if (bool1 || bool2 != bool3) {\n    uVar9 = uVar9 | result2 >> (uVar12 & 0xff);\n  }\n  if (bool1 || bool2 != bool3) {\n    result2 = result2 << (result1 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | input2,result2);\n  }\n  result1 = ~(uVar10 - uVar11);\n  if ((int)result1 < 0x1f) {\n    bitShift2 = result1 - 0x13;\n    if (bitShift2 != 0 && bitShift2 < 0 == SCARRY4(result1 - 0x1f,0xc)) {\n      return CONCAT44(part2,result2 >> (0x20 - (0xcU - bitShift2) & 0xff) | uVar9 << (0xcU - bitShift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result1 = result1 + 1;\n    return CONCAT44(input2 | uVar9 >> (result1 & 0xff),\n                    result2 >> (result1 & 0xff) | uVar9 << (0x20 - result1 & 0xff));\n  }\n  return CONCAT44(part2,uVar9 >> (result1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "bitShift1",
                "bVar2": "carry",
                "uVar3": "part1",
                "uVar4": "part2",
                "uVar5": "part3",
                "uVar6": "result1",
                "uVar7": "result2",
                "iVar8": "bitShift2",
                "bVar13": "bool1",
                "bVar14": "bool2",
                "bVar15": "bool3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_addition_and_shift_080082d4",
            "code": "\nulonglong calculate_addition_and_shift_080082d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift_amount1;\n  byte carry_bit;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift_amount2;\n  uint shifted_input1;\n  uint shifted_input2;\n  uint result1;\n  uint result2;\n  uint carrybit_temp;\n  uint result3;\n  bool is_equal_bit;\n  bool is_zero;\n  bool is_negative;\n  \n  shifted_input1 = input2 << 1;\n  result1 = input4 << 1;\n  is_equal_bit = ((input2 ^ input4) & 0x7fffffff) == 0;\n  is_zero = is_equal_bit && input1 == input3;\n  if (!is_equal_bit || input1 != input3) {\n    is_zero = (shifted_input1 | input1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = (result1 | input3) == 0;\n  }\n  shift_amount2 = (int)shifted_input1 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift_amount2 == -1;\n  }\n  shift_amount1 = (int)result1 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift_amount1 == -1;\n  }\n  if (is_zero) {\n    if (shift_amount2 == -1 || shift_amount1 == -1) {\n      result1 = input4;\n      shifted_input1 = input3;\n      if (shift_amount2 == -1) {\n        result1 = input2;\n        shifted_input1 = input1;\n      }\n      if (shift_amount2 != -1 || shift_amount1 != -1) {\n        input3 = shifted_input1;\n        input4 = result1;\n      }\n      is_zero = (shifted_input1 | result1 << 0xc) == 0;\n      if (is_zero) {\n        is_zero = (input3 | input4 << 0xc) == 0;\n      }\n      if (is_zero) {\n        is_zero = result1 == input4;\n      }\n      if (!is_zero) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,shifted_input1);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input1 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input1 >> 0x15 == 0) {\n      is_zero = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)is_zero;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)is_zero)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (shifted_input1 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input1 = shifted_input1 >> 0x15;\n  result1 = result1 >> 0x15;\n  result2 = result1 - shifted_input1;\n  is_zero = result2 != 0;\n  if (result1 < shifted_input1) {\n    result2 = -result2;\n  }\n  shifted_input2 = input1;\n  temp3 = input2;\n  if (is_zero && shifted_input1 <= result1) {\n    shifted_input1 = shifted_input1 + result2;\n    shifted_input2 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < result2) {\n    return CONCAT44(temp3,shifted_input2);\n  }\n  result1 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    is_zero = shifted_input2 != 0;\n    shifted_input2 = -shifted_input2;\n    result1 = -result1 - (uint)is_zero;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    is_zero = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)is_zero;\n  }\n  if (shifted_input1 == result2) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input1 == 0) {\n      result1 = result1 ^ 0x100000;\n      shifted_input1 = 1;\n    }\n    else {\n      result2 = result2 - 1;\n    }\n  }\n  result3 = -result2 + 0x20;\n  if ((int)result2 < 0x21) {\n    carrybit_temp = input3 << (result3 & 0xff);\n    input3 = input3 >> (result2 & 0xff);\n    temp1 = shifted_input2 + input3;\n    temp2 = temp3 << (result3 & 0xff);\n    result3 = temp1 + temp2;\n    result1 = result1 + CARRY4(shifted_input2,input3) + ((int)temp3 >> (result2 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    carrybit_temp = temp3 << (-result2 + 0x40 & 0xff);\n    if (input3 != 0) {\n      carrybit_temp = carrybit_temp | 2;\n    }\n    temp3 = (int)temp3 >> (result2 - 0x20 & 0xff);\n    result3 = shifted_input2 + temp3;\n    result1 = result1 + ((int)temp3 >> 0x1f) + (uint)CARRY4(shifted_input2,temp3);\n  }\n  input2 = result1 & 0x80000000;\n  result2 = result1;\n  if ((int)result1 < 0) {\n    is_zero = carrybit_temp == 0;\n    carrybit_temp = -carrybit_temp;\n    result2 = -result3;\n    result3 = -(uint)!is_zero - result3;\n    result2 = -(uint)(is_zero <= result2) - result1;\n  }\n  if (0xfffff < result2) {\n    shifted_input2 = shifted_input1 - 1;\n    if (0x1fffff < result2) {\n      result1 = result2 & 1;\n      result2 = result2 >> 1;\n      carry_bit = (byte)result3;\n      result3 = (uint)(result1 != 0) << 0x1f | result3 >> 1;\n      carrybit_temp = (uint)(carry_bit & 1) << 0x1f | carrybit_temp >> 1;\n      shifted_input2 = shifted_input1;\n      if (0xffbfffff < shifted_input1 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    is_zero = 0x7fffffff < carrybit_temp;\n    if (carrybit_temp == 0x80000000) {\n      is_zero = (result3 & 1) != 0;\n    }\n    return CONCAT44(result2 + shifted_input2 * 0x100000 + (uint)CARRY4(result3,(uint)is_zero) | input2,\n                    result3 + is_zero);\n  }\n  is_equal_bit = (carrybit_temp & 0x80000000) != 0;\n  carrybit_temp = carrybit_temp << 1;\n  shifted_input2 = result3 * 2;\n  is_zero = CARRY4(result3,result3);\n  result3 = result3 * 2 + (uint)is_equal_bit;\n  result2 = result2 * 2 + (uint)(is_zero || CARRY4(shifted_input2,(uint)is_equal_bit));\n  shifted_input2 = shifted_input1 - 2;\n  if (shifted_input1 - 1 != 0 && 0xfffff < result2) goto LAB_080083e0;\n  temp3 = result3;\n  shifted_input1 = result2;\n  if (result2 == 0) {\n    temp3 = 0;\n    shifted_input1 = result3;\n  }\n  shift_amount2 = LZCOUNT(shifted_input1);\n  if (result2 == 0) {\n    shift_amount2 = shift_amount2 + 0x20;\n  }\n  result3 = shift_amount2 - 0xb;\n  is_negative = SBORROW4(result3,0x20);\n  result2 = shift_amount2 - 0x2b;\n  is_zero = (int)result2 < 0;\n  is_equal_bit = result2 == 0;\n  if ((int)result3 < 0x20) {\n    is_negative = SCARRY4(result2,0xc);\n    shift_amount2 = shift_amount2 + -0x1f;\n    is_zero = shift_amount2 < 0;\n    is_equal_bit = shift_amount2 == 0;\n    result2 = result3;\n    if (!is_equal_bit && is_zero == is_negative) {\n      temp3 = shifted_input1 << (result3 & 0xff);\n      shifted_input1 = shifted_input1 >> (0xcU - shift_amount2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_equal_bit || is_zero != is_negative) {\n    carrybit_temp = 0x20 - result2;\n  }\n  shifted_input1 = shifted_input1 << (result2 & 0xff);\n  if (is_equal_bit || is_zero != is_negative) {\n    shifted_input1 = shifted_input1 | temp3 >> (carrybit_temp & 0xff);\n  }\n  if (is_equal_bit || is_zero != is_negative) {\n    temp3 = temp3 << (result2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result3 <= (int)shifted_input2) {\n    return CONCAT44(shifted_input1 + (shifted_input2 - result3) * 0x100000 | input2,temp3);\n  }\n  result2 = ~(shifted_input2 - result3);\n  if ((int)result2 < 0x1f) {\n    shift_amount2 = result2 - 0x13;\n    if (shift_amount2 != 0 && shift_amount2 < 0 == SCARRY4(result2 - 0x1f,0xc)) {\n      return CONCAT44(result1,temp3 >> (0x20 - (0xcU - shift_amount2) & 0xff) | shifted_input1 << (0xcU - shift_amount2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result2 = result2 + 1;\n    return CONCAT44(input2 | shifted_input1 >> (result2 & 0xff),\n                    temp3 >> (result2 & 0xff) | shifted_input1 << (0x20 - result2 & 0xff));\n  }\n  return CONCAT44(result1,shifted_input1 >> (result2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_addition_and_shift_080082d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift_amount1",
                "bVar2": "carry_bit",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "shift_amount2",
                "uVar7": "shifted_input1",
                "uVar8": "shifted_input2",
                "uVar9": "result1",
                "uVar10": "result2",
                "uVar11": "carrybit_temp",
                "uVar12": "result3",
                "bVar13": "is_equal_bit",
                "bVar14": "is_zero",
                "bVar15": "is_negative"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "shift_and_concatenate_0800854c",
            "code": "\nulonglong shiftAndConcatenate_0800854c(uint input)\n\n{\n  uint upperBits;\n  uint lowerBits;\n  int bitCount;\n  uint shiftValue;\n  uint constantValue;\n  bool isNegative;\n  bool isZero;\n  bool isBorrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  upperBits = 0;\n  bitCount = LZCOUNT(input);\n  shiftValue = bitCount + 0x15;\n  isBorrow = SBORROW4(shiftValue,0x20);\n  lowerBits = bitCount - 0xb;\n  isNegative = (int)lowerBits < 0;\n  isZero = lowerBits == 0;\n  if (shiftValue < 0x20) {\n    isBorrow = SCARRY4(lowerBits,0xc);\n    isNegative = false;\n    isZero = bitCount + 1 == 0;\n    lowerBits = shiftValue;\n    if (!isZero && isBorrow == false) {\n      upperBits = input << shiftValue;\n      input = input >> (0xcU - (bitCount + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != isBorrow) {\n    constantValue = 0x20 - lowerBits;\n  }\n  input = input << (lowerBits & 0xff);\n  if (isZero || isNegative != isBorrow) {\n    input = input | 0U >> (constantValue & 0xff);\n  }\n  if (isZero || isNegative != isBorrow) {\n    upperBits = 0 << (lowerBits & 0xff);\n  }\nLAB_08008458:\n  if (shiftValue < 0x433) {\n    return CONCAT44(input + (0x432 - shiftValue) * 0x100000,upperBits);\n  }\n  lowerBits = ~(0x432 - shiftValue);\n  if (0x1e < (int)lowerBits) {\n    return (ulonglong)(input >> (lowerBits - 0x1f & 0xff));\n  }\n  bitCount = lowerBits - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(lowerBits - 0x1f,0xc)) {\n    lowerBits = lowerBits + 1;\n    return CONCAT44(input >> (lowerBits & 0xff),\n                    upperBits >> (lowerBits & 0xff) | input << (0x20 - lowerBits & 0xff));\n  }\n  return (ulonglong)(upperBits >> (0x20 - (0xcU - bitCount) & 0xff) | input << (0xcU - bitCount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "shift_and_concatenate_0800854c",
                "param_1": "input",
                "uVar1": "upperBits",
                "uVar2": "lowerBits",
                "iVar3": "bitCount",
                "uVar4": "shiftValue",
                "in_r12": "constantValue",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isBorrow"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "extract_bits_from_int_0800856c",
            "code": "\nulonglong extractBitsFromInt_0800856c(uint input)\n\n{\n  uint bitCount;\n  uint absInput;\n  uint shiftCount;\n  int leadingZeroes;\n  uint shiftAmount;\n  uint signBit;\n  uint mask;\n  bool isNegative;\n  bool isZero;\n  bool carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  bitCount = 0;\n  leadingZeroes = leadingZeroCount(absInput);\n  shiftAmount = leadingZeroes + 0x15;\n  carry = subtractionCarry(shiftAmount,0x20);\n  shiftCount = leadingZeroes - 0xb;\n  isNegative = (int)shiftCount < 0;\n  isZero = shiftCount == 0;\n  if (shiftAmount < 0x20) {\n    carry = shiftedCarry(shiftCount,0xc);\n    isNegative = false;\n    isZero = leadingZeroes + 1 == 0;\n    shiftCount = shiftAmount;\n    if (!isZero && carry == false) {\n      bitCount = absInput << shiftAmount;\n      absInput = absInput >> (0xcU - (leadingZeroes + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != carry) {\n    mask = 0x20 - shiftCount;\n  }\n  absInput = absInput << (shiftCount & 0xff);\n  if (isZero || isNegative != carry) {\n    absInput = absInput | 0U >> (mask & 0xff);\n  }\n  if (isZero || isNegative != carry) {\n    bitCount = 0 << (shiftCount & 0xff);\n  }\nLAB_08008458:\n  if (shiftAmount < 0x433) {\n    return mergeBits(absInput + (0x432 - shiftAmount) * 0x100000 | signBit,bitCount);\n  }\n  shiftCount = ~(0x432 - shiftAmount);\n  if (0x1e < (int)shiftCount) {\n    return mergeBits(input,absInput >> (shiftCount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeroes = shiftCount - 0x13;\n  if (leadingZeroes == 0 || leadingZeroes < 0 != shiftedCarry(shiftCount - 0x1f,0xc)) {\n    shiftCount = shiftCount + 1;\n    return mergeBits(signBit | absInput >> (shiftCount & 0xff),\n                    bitCount >> (shiftCount & 0xff) | absInput << (0x20 - shiftCount & 0xff));\n  }\n  return mergeBits(input,bitCount >> (0x20 - (0xcU - leadingZeroes) & 0xff) | absInput << (0xcU - leadingZeroes & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "extract_bits_from_int_0800856c",
                "param_1": "input",
                "uVar1": "bitCount",
                "uVar2": "absInput",
                "uVar3": "shiftCount",
                "iVar4": "leadingZeroes",
                "uVar5": "shiftAmount",
                "uVar6": "signBit",
                "in_r12": "mask",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "carry",
                "CONCAT44": "mergeBits",
                "LZCOUNT": "leadingZeroCount",
                "SBORROW4": "subtractionCarry",
                "SCARRY4": "shiftedCarry"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "decompress_data_08008590",
            "code": "\nulonglong decompressData_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint flag1;\n  uint tmp1;\n  uint tmp2;\n  uint flag2;\n  uint shiftedInput;\n  int count;\n  uint shiftAmount;\n  uint tempReg;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  shiftedInput = input << 1;\n  isZero = shiftedInput == 0;\n  flag1 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  flag2 = (uint)((int)shiftedInput >> 3) >> 1;\n  tmp2 = flag1 | flag2;\n  input = input << 0x1d;\n  if (!isZero) {\n    param4 = shiftedInput & 0xff000000;\n    isZero = param4 == 0;\n  }\n  if (!isZero) {\n    isZero = param4 == 0xff000000;\n  }\n  if (!isZero) {\n    return CONCAT44(tmp2,input) ^ 0x3800000000000000;\n  }\n  if ((shiftedInput & 0xffffff) == 0) {\n    return CONCAT44(tmp2,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(tmp2,input) | 0x8000000000000;\n  }\n  tmp1 = input;\n  shiftedInput = flag2;\n  if (flag2 == 0) {\n    tmp1 = 0;\n    shiftedInput = input;\n  }\n  count = LZCOUNT(shiftedInput);\n  if (flag2 == 0) {\n    count = count + 0x20;\n  }\n  shiftAmount = count - 0xb;\n  isCarry = SBORROW4(shiftAmount,0x20);\n  flag2 = count - 0x2b;\n  isZero = (int)flag2 < 0;\n  isNegative = flag2 == 0;\n  if ((int)shiftAmount < 0x20) {\n    isCarry = SCARRY4(flag2,0xc);\n    count = count + -0x1f;\n    isZero = count < 0;\n    isNegative = count == 0;\n    flag2 = shiftAmount;\n    if (!isNegative && isZero == isCarry) {\n      tmp1 = shiftedInput << (shiftAmount & 0xff);\n      shiftedInput = shiftedInput >> (0xcU - count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isNegative || isZero != isCarry) {\n    tempReg = 0x20 - flag2;\n  }\n  shiftedInput = shiftedInput << (flag2 & 0xff);\n  if (isNegative || isZero != isCarry) {\n    shiftedInput = shiftedInput | tmp1 >> (tempReg & 0xff);\n  }\n  if (isNegative || isZero != isCarry) {\n    tmp1 = tmp1 << (flag2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)shiftAmount < 0x381) {\n    return CONCAT44(shiftedInput + (0x380 - shiftAmount) * 0x100000 | flag1,tmp1);\n  }\n  flag2 = ~(0x380 - shiftAmount);\n  if (0x1e < (int)flag2) {\n    return CONCAT44(tmp2,shiftedInput >> (flag2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = flag2 - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(flag2 - 0x1f,0xc)) {\n    flag2 = flag2 + 1;\n    return CONCAT44(flag1 | shiftedInput >> (flag2 & 0xff),\n                    tmp1 >> (flag2 & 0xff) | shiftedInput << (0x20 - flag2 & 0xff));\n  }\n  return CONCAT44(tmp2,tmp1 >> (0x20 - (0xcU - count) & 0xff) | shiftedInput << (0xcU - count & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "decompress_data_08008590",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "flag1",
                "uVar2": "tmp1",
                "uVar3": "tmp2",
                "uVar4": "flag2",
                "uVar5": "shiftedInput",
                "iVar6": "count",
                "uVar7": "shiftAmount",
                "in_r12": "tempReg",
                "bVar8": "isNegative",
                "bVar9": "isZero",
                "bVar10": "isCarry"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_floating_point_08008640",
            "code": "\nulonglong calculateFloatingPoint_08008640(undefined4 integerPart,uint fractionalPart,uint exponent,uint sign)\n\n{\n  ulonglong multiplicationResult1;\n  longlong multiplicationResult2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong result;\n  \n  result = CONCAT44(fractionalPart,integerPart);\n  temp6 = 0x7ff;\n  temp2 = fractionalPart >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = sign >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    result = FUN_0800881c();\n  }\n  temp1 = (uint)(result >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ sign;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  sign = sign & ~(temp6 << 0x15);\n  flag1 = ((uint)result | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (exponent | sign << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  sign = sign | 0x100000;\n  if (flag1) {\n    exponent = (uint)result | exponent;\n    sign = (temp2 & 0x80000000 | temp1) ^ sign;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      sign = sign | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(sign,exponent);\n    }\n    sign = sign | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    multiplicationResult1 = (result & 0xffffffff) * (ulonglong)exponent;\n    result = (result & 0xffffffff) * (ulonglong)sign +\n             (ulonglong)temp1 * (ulonglong)exponent + (multiplicationResult1 >> 0x20);\n    temp7 = (uint)result;\n    multiplicationResult2 = (ulonglong)temp1 * (ulonglong)sign + (result >> 0x20);\n    temp6 = (uint)multiplicationResult2;\n    temp1 = (uint)((ulonglong)multiplicationResult2 >> 0x20);\n    if ((int)multiplicationResult1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      multiplicationResult2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    sign = temp2 & 0x80000000 | (int)((ulonglong)multiplicationResult2 >> 0x20) << 0xb | (uint)multiplicationResult2 >> 0x15;\n    exponent = (uint)multiplicationResult2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(sign + temp4 * 0x100000 + (uint)CARRY4(exponent,(uint)flag1),exponent + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(sign & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    exponent = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    sign = sign & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(sign,exponent);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = exponent >> (temp1 & 0xff) | sign << (0x20 - temp1 & 0xff);\n    temp2 = (sign >> (temp1 & 0xff) & ~((sign & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | exponent << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(sign,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = exponent << (temp4 + 0x20 & 0xff);\n    temp1 = exponent >> (temp2 & 0xff) | sign << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((sign & 0x80000000) +\n                    ((sign & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = exponent << (temp2 & 0xff);\n  temp2 = exponent >> (0x20 - temp2 & 0xff) | sign << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((sign & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_floating_point_08008640",
                "param_1": "integerPart",
                "param_2": "fractionalPart",
                "param_3": "exponent",
                "param_4": "sign",
                "uVar1": "multiplicationResult1",
                "lVar2": "multiplicationResult2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800056c",
                "FUN_0800a348",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_result_0800881c",
            "code": "\nulonglong calculate_bitwise_result_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint bit_5;\n  bool is_valid;\n  \n  bit_3 = bit_5 & input_4 >> 0x14;\n  if (bit_2 != bit_5 && bit_3 != bit_5) {\n    is_valid = (input_1 | input_2 << 1) == 0;\n    if (!is_valid) {\n      is_valid = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_valid) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (bit_2 == 0) {\n      bit_4 = input_2 & 0x80000000;\n      do {\n        bit_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | bit_4;\n      if (bit_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      bit_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(bit_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_valid = (input_1 | input_2 << 1) == 0;\n  if (is_valid) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_valid) {\n    is_valid = (input_3 | input_4 << 1) == 0;\n  }\n  bit_4 = input_2;\n  if (((!is_valid) && ((bit_2 != bit_5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((bit_3 != bit_5 || (input_1 = input_3, bit_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "bit_5",
                "bVar4": "is_valid"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 signAndExponent,uint mantissa1,uint mantissa2,uint mantissa3)\n\n{\n  uint msbMask;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  int difference;\n  uint num1;\n  uint num2;\n  uint temp7;\n  uint resultMantissa1;\n  uint resultMantissa2;\n  uint resultMantissa3;\n  bool isZero;\n  bool isEqual;\n  bool carryFlag;\n  undefined8 temp8;\n  \n  temp8 = CONCAT44(mantissa1,signAndExponent);\n  resultMantissa3 = 0x7ff;\n  temp6 = mantissa1 >> 0x14 & 0x7ff;\n  isZero = temp6 == 0;\n  if (!isZero) {\n    num2 = mantissa3 >> 0x14 & 0x7ff;\n    isZero = num2 == 0;\n  }\n  if (!isZero) {\n    isZero = temp6 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = num2 == 0x7ff;\n  }\n  if (isZero) {\n    temp8 = FUN_08008a02();\n  }\n  num1 = (uint)((ulonglong)temp8 >> 0x20);\n  resultMantissa1 = (uint)temp8;\n  difference = temp6 - num2;\n  if ((mantissa2 | mantissa3 << 0xc) == 0) {\n    temp6 = (num1 ^ mantissa3) & 0x80000000 | num1 & 0xfffff;\n    carryFlag = SCARRY4(difference,resultMantissa3 >> 1);\n    num1 = difference + (resultMantissa3 >> 1);\n    isZero = (int)num1 < 0;\n    isEqual = num1 == 0;\n    if (!isEqual && isZero == carryFlag) {\n      carryFlag = SBORROW4(resultMantissa3,num1);\n      isZero = (int)(resultMantissa3 - num1) < 0;\n      isEqual = resultMantissa3 == num1;\n    }\n    if (!isEqual && isZero == carryFlag) {\n      temp6 = temp6 | num1 * 0x100000;\n    }\n    if (!isEqual && isZero == carryFlag) {\n      return CONCAT44(temp6,resultMantissa1);\n    }\n    temp6 = temp6 | 0x100000;\n    resultMantissa3 = 0;\n    isEqual = SBORROW4(num1,1);\n    num1 = num1 - 1;\n    isZero = num1 == 0;\n    temp2 = num1;\n  }\n  else {\n    temp2 = (mantissa3 << 0xc) >> 4 | 0x10000000 | mantissa2 >> 0x18;\n    resultMantissa3 = mantissa2 << 8;\n    temp7 = (num1 << 0xc) >> 4 | 0x10000000 | resultMantissa1 >> 0x18;\n    resultMantissa1 = resultMantissa1 * 0x100;\n    temp6 = (num1 ^ mantissa3) & 0x80000000;\n    isZero = temp2 <= temp7;\n    if (temp7 == temp2) {\n      isZero = resultMantissa3 <= resultMantissa1;\n    }\n    difference = difference + (uint)isZero;\n    num1 = difference + 0x3fd;\n    if (isZero == false) {\n      temp2 = temp2 >> 1;\n      resultMantissa3 = (uint)((mantissa2 >> 0x18 & 1) != 0) << 0x1f | resultMantissa3 >> 1;\n    }\n    resultMantissa2 = resultMantissa1 - resultMantissa3;\n    temp7 = (temp7 - temp2) - (uint)(resultMantissa1 < resultMantissa3);\n    temp3 = temp2 >> 1;\n    msbMask = (uint)((temp2 & 1) != 0) << 0x1f | resultMantissa3 >> 1;\n    resultMantissa1 = 0x100000;\n    temp2 = 0x80000;\n    while( true ) {\n      isZero = msbMask <= resultMantissa2;\n      if (temp3 < temp7 || temp7 - temp3 < (uint)isZero) {\n        resultMantissa2 = resultMantissa2 - msbMask;\n        resultMantissa1 = resultMantissa1 | temp2;\n        temp7 = (temp7 - temp3) - (uint)!isZero;\n      }\n      temp4 = temp3 >> 1;\n      msbMask = (uint)((temp3 & 1) != 0) << 0x1f | msbMask >> 1;\n      isEqual = msbMask <= resultMantissa2;\n      isZero = temp7 - temp4 < (uint)isEqual;\n      resultMantissa3 = temp7;\n      if (temp4 < temp7 || isZero) {\n        resultMantissa2 = resultMantissa2 - msbMask;\n        resultMantissa3 = (temp7 - temp4) - (uint)!isEqual;\n      }\n      if (temp4 < temp7 || isZero) {\n        resultMantissa1 = resultMantissa1 | temp2 >> 1;\n      }\n      temp7 = temp3 >> 2;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | msbMask >> 1;\n      isEqual = temp1 <= resultMantissa2;\n      isZero = resultMantissa3 - temp7 < (uint)isEqual;\n      temp4 = resultMantissa3;\n      if (temp7 < resultMantissa3 || isZero) {\n        resultMantissa2 = resultMantissa2 - temp1;\n        temp4 = (resultMantissa3 - temp7) - (uint)!isEqual;\n      }\n      if (temp7 < resultMantissa3 || isZero) {\n        resultMantissa1 = resultMantissa1 | temp2 >> 2;\n      }\n      temp5 = temp3 >> 3;\n      msbMask = (uint)((temp7 & 1) != 0) << 0x1f | temp1 >> 1;\n      isEqual = msbMask <= resultMantissa2;\n      isZero = temp4 - temp5 < (uint)isEqual;\n      temp7 = temp4;\n      if (temp5 < temp4 || isZero) {\n        resultMantissa2 = resultMantissa2 - msbMask;\n        temp7 = (temp4 - temp5) - (uint)!isEqual;\n      }\n      if (temp5 < temp4 || isZero) {\n        resultMantissa1 = resultMantissa1 | temp2 >> 3;\n      }\n      resultMantissa3 = temp7 | resultMantissa2;\n      if (resultMantissa3 == 0) break;\n      temp7 = temp7 << 4 | resultMantissa2 >> 0x1c;\n      resultMantissa2 = resultMantissa2 << 4;\n      temp3 = temp3 & 0xfffffff8 | msbMask >> 0x1d;\n      msbMask = (temp1 >> 1) << 3;\n      temp2 = temp2 >> 4;\n      if (temp2 == 0) {\n        temp5 = temp3;\n        if ((temp6 & 0x100000) != 0) goto LAB_080089b2;\n        temp6 = temp6 | resultMantissa1;\n        resultMantissa1 = 0;\n        temp2 = 0x80000000;\n      }\n    }\n    if ((temp6 & 0x100000) == 0) {\n      temp6 = temp6 | resultMantissa1;\n      resultMantissa1 = 0;\n    }\nLAB_080089b2:\n    carryFlag = 0xfc < num1;\n    isEqual = SBORROW4(num1,0xfd);\n    temp3 = difference + 0x300;\n    isZero = temp3 == 0;\n    temp2 = temp3;\n    if (carryFlag && !isZero) {\n      carryFlag = 0x6ff < temp3;\n      isEqual = SBORROW4(temp3,0x700);\n      temp2 = difference - 0x400;\n      isZero = temp3 == 0x700;\n    }\n    if (!carryFlag || isZero) {\n      isZero = temp5 <= temp7;\n      if (temp7 == temp5) {\n        isZero = msbMask <= resultMantissa2;\n      }\n      if (temp7 == temp5 && resultMantissa2 == msbMask) {\n        isZero = (resultMantissa1 & 1) != 0;\n      }\n      return CONCAT44(temp6 + num1 * 0x100000 + (uint)CARRY4(resultMantissa1,(uint)isZero),resultMantissa1 + isZero);\n    }\n  }\n  if (!isZero && (int)temp2 < 0 == isEqual) {\n    return (ulonglong)(temp6 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  carryFlag = SCARRY4(num1,0x36);\n  isZero = (int)(num1 + 0x36) < 0;\n  isEqual = num1 == 0xffffffca;\n  if (isEqual || isZero != carryFlag) {\n    resultMantissa1 = 0;\n  }\n  if (isEqual || isZero != carryFlag) {\n    temp6 = temp6 & 0x80000000;\n  }\n  if (isEqual || isZero != carryFlag) {\n    return CONCAT44(temp6,resultMantissa1);\n  }\n  temp2 = -num1;\n  temp7 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp2 = resultMantissa1 >> (temp7 & 0xff) | temp6 << (0x20 - temp7 & 0xff);\n    num1 = (temp6 >> (temp7 & 0xff) & ~((temp6 & 0x80000000) >> (temp7 & 0xff))) -\n            ((int)temp2 >> 0x1f);\n    if ((resultMantissa3 | resultMantissa1 << (0x20 - temp7 & 0xff) | temp2 << 1) == 0) {\n      num1 = num1 & ~(temp2 >> 0x1f);\n    }\n    return CONCAT44(temp6,num1) & 0x80000000ffffffff;\n  }\n  difference = temp2 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp7,0xc)) {\n    num1 = 0xc - difference;\n    temp2 = resultMantissa1 << (num1 & 0xff);\n    resultMantissa1 = resultMantissa1 >> (0x20 - num1 & 0xff) | temp6 << (num1 & 0xff);\n    num1 = resultMantissa1 + -((int)temp2 >> 0x1f);\n    if ((resultMantissa3 | temp2 << 1) == 0) {\n      num1 = num1 & ~(temp2 >> 0x1f);\n    }\n    return CONCAT44((temp6 & 0x80000000) + (uint)CARRY4(resultMantissa1,-((int)temp2 >> 0x1f)),num1);\n  }\n  temp7 = resultMantissa1 << (num1 + 0x20 & 0xff);\n  resultMantissa1 = resultMantissa1 >> (temp2 & 0xff) | temp6 << (num1 + 0x20 & 0xff);\n  num1 = resultMantissa1 + -((int)temp7 >> 0x1f);\n  if ((resultMantissa3 | temp7 << 1) == 0) {\n    num1 = num1 & ~(temp7 >> 0x1f);\n  }\n  return CONCAT44((temp6 & 0x80000000) +\n                  ((temp6 & 0x7fffffff) >> (temp2 & 0xff)) +\n                  (uint)CARRY4(resultMantissa1,-((int)temp7 >> 0x1f)),num1);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "signAndExponent",
                "param_2": "mantissa1",
                "param_3": "mantissa2",
                "param_4": "mantissa3",
                "uVar1": "msbMask",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "iVar8": "difference",
                "uVar9": "num1",
                "unaff_r5": "num2",
                "uVar10": "temp7",
                "uVar11": "resultMantissa1",
                "uVar12": "resultMantissa2",
                "uVar13": "resultMantissa3",
                "bVar14": "isZero",
                "bVar15": "isEqual",
                "bVar16": "carryFlag",
                "uVar17": "temp8"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "extracted_binary_function_08008a02",
            "code": "\nulonglong extractedBinaryFunction_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint unaff_r4;\n  uint bit2;\n  uint bit3;\n  uint in_r12;\n  bool isZero;\n  \n  bit2 = in_r12 & input4 >> 0x14;\n  bit3 = input2;\n  if (unaff_r4 != in_r12 || bit2 != in_r12) {\n    if (unaff_r4 == in_r12) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit3 = input4, bit2 != in_r12)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit2 == in_r12) {\n      input1 = input3;\n      bit3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (unaff_r4 == 0) {\n          bit3 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit3;\n          if (bit2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(bit3,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "extracted_binary_function_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit2",
                "uVar3": "bit3",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "is_parameters_equal_08008a74",
            "code": "\nuint is_parameters_equal_08008a74(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_condition_met;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (param_1 | param_2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (param_3 | param_4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = param_2 == param_4;\n  }\n  if (is_zero) {\n    is_zero = param_1 == param_3;\n  }\n  if (!is_zero) {\n    result = param_2 ^ param_4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = param_2 == param_4;\n    }\n    is_condition_met = -1 < (int)result && param_4 <= param_2;\n    if (is_zero) {\n      is_condition_met = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!is_condition_met) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "is_parameters_equal_08008a74",
                "uVar1": "result",
                "bVar2": "is_zero",
                "bVar3": "is_condition_met"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08008b00(input3,input4,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_function_08008b00",
            "code": "\nundefined4 initializeFunction_08008b00(undefined4 inputParameter)\n\n{\n  FUN_08008a74();\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_function_08008b00",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_input_not_null_08008b10",
            "code": "\nbool check_input_not_null_08008b10(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_input_not_null_08008b10",
                "in_ZR": "input_char"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "check_if_end_of_string_08008b24",
            "code": "\nbool check_if_end_of_string_08008b24(void)\n\n{\n  char input_character;\n  \n  FUN_08008b00();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "check_if_end_of_string_08008b24",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_flags_08008b4c",
            "code": "\nbool check_flags_08008b4c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_flags_08008b4c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "is_cy_null_08008b60",
            "code": "\nbool is_CY_null_08008b60(void)\n\n{\n  char input_CY;\n  \n  FUN_08008af0();\n  return input_CY == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "is_cy_null_08008b60",
                "in_CY": "input_CY"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_params_08008b74",
            "code": "\nundefined4 check_params_08008b74(uint input_value_1,int input_value_2,uint input_value_3,int input_value_4)\n\n{\n  if ((((input_value_2 << 1) >> 0x15 != -1) || ((input_value_1 | input_value_2 << 0xc) == 0)) &&\n     (((input_value_4 << 1) >> 0x15 != -1 || ((input_value_3 | input_value_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_params_08008b74",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "range_conversion_08008ba0",
            "code": "\nuint rangeConversion_08008ba0(uint inputValue,uint rangeValue)\n\n{\n  uint result;\n  int adjustedRange;\n  uint shiftedValue;\n  \n  adjustedRange = rangeValue * 2 + 0x200000;\n  if (rangeValue * 2 < 0xffe00000) {\n    if (-1 < adjustedRange) {\n      return 0;\n    }\n    result = adjustedRange >> 0x15;\n    shiftedValue = -result - 0x3e1;\n    if (result < 0xfffffc20 && shiftedValue != 0) {\n      result = (rangeValue << 0xb | 0x80000000 | inputValue >> 0x15) >> (shiftedValue & 0xff);\n      if ((rangeValue & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((inputValue | rangeValue << 0xc) != 0) {\n    return 0;\n  }\n  rangeValue = rangeValue & 0x80000000;\n  if (rangeValue == 0) {\n    rangeValue = 0x7fffffff;\n  }\n  return rangeValue;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "range_conversion_08008ba0",
                "param_1": "inputValue",
                "param_2": "rangeValue",
                "uVar1": "result",
                "iVar2": "adjustedRange",
                "uVar3": "shiftedValue"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shift_amount_08008bf0",
            "code": "\nuint calculateShiftAmount_08008bf0(uint inputVal,uint shiftCount)\n\n{\n  int tempVar1;\n  uint shiftedVal;\n  \n  if ((shiftCount & 0x80000000) != 0) {\n    return 0;\n  }\n  tempVar1 = shiftCount * 2 + 0x200000;\n  if (shiftCount * 2 < 0xffe00000) {\n    if (-1 < tempVar1) {\n      return 0;\n    }\n    shiftedVal = -(tempVar1 >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftedVal) {\n      return (shiftCount << 0xb | 0x80000000 | inputVal >> 0x15) >> (shiftedVal & 0xff);\n    }\n  }\n  else if ((inputVal | shiftCount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shift_amount_08008bf0",
                "param_1": "inputVal",
                "param_2": "shiftCount",
                "iVar1": "tempVar1",
                "uVar2": "shiftedVal"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_08008c30",
            "code": "\nuint calculate_float_08008c30(uint input1,uint input2)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  bool isZero;\n  bool isLessThan;\n  \n  temp1 = input2 * 2;\n  isLessThan = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!isLessThan) {\n    temp3 = temp1 + 0x8fe00000;\n    result = temp3;\n  }\n  isZero = result == 0;\n  if (!isLessThan && temp2 >= 0x200000) {\n    isZero = temp3 == 0x1fc00000;\n  }\n  if (((isLessThan || temp2 < 0x200000) || 0x1fc00000 < temp3) || isZero) {\n    if ((input2 & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((input1 | input2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != SCARRY4(temp2,0x2e00000)) {\n      return input2 & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = input1 >> (temp1 & 0xff);\n    if (input1 << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = input2 & 0x1fffff | 0x100000;\n    input1 = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (input2 & 0x80000000 | input1 >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < input1 * 8);\n  if (input1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "temp3",
                "bVar4": "isZero",
                "bVar5": "isLessThan"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculate_float_08008cd8(uint input,uint mask,undefined4 param3,uint param4)\n\n{\n  int upper_shifted_input;\n  int upper_shifted_mask;\n  uint modified_mask;\n  uint modified_input;\n  uint result;\n  uint shift_amount;\n  uint difference;\n  bool is_equal;\n  \n  modified_mask = mask ^ 0x80000000;\n  result = input << 1;\n  is_equal = result == 0;\n  if (!is_equal) {\n    param4 = mask << 1;\n    is_equal = param4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = result == param4;\n  }\n  upper_shifted_input = (int)result >> 0x18;\n  if (!is_equal) {\n    is_equal = upper_shifted_input == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)param4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    upper_shifted_mask = (int)(mask << 1) >> 0x18;\n    if (upper_shifted_input == -1 || upper_shifted_mask == -1) {\n      result = modified_mask;\n      if (upper_shifted_input == -1) {\n        result = input;\n      }\n      if (upper_shifted_input != -1 || upper_shifted_mask != -1) {\n        modified_mask = result;\n      }\n      is_equal = (result & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (modified_mask & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = result == modified_mask;\n      }\n      if (!is_equal) {\n        result = result | 0x400000;\n      }\n      return result;\n    }\n    if (((input ^ modified_mask) & 0x7fffffff) != 0) {\n      if (result == 0) {\n        input = modified_mask;\n      }\n      return input;\n    }\n    if (input != modified_mask) {\n      return 0;\n    }\n    if ((result & 0xff000000) == 0) {\n      modified_mask = input << 1;\n      if ((input & 0x80000000) != 0) {\n        modified_mask = modified_mask | 0x80000000;\n      }\n      return modified_mask;\n    }\n    if (result < 0xfe000000) {\n      return input + 0x800000;\n    }\n    input = input & 0x80000000;\nLAB_08008e12:\n    return input | 0x7f800000;\n  }\n  result = result >> 0x18;\n  param4 = param4 >> 0x18;\n  difference = param4 - result;\n  is_equal = difference != 0;\n  shift_amount = result;\n  if (is_equal && result <= param4) {\n    shift_amount = result + difference;\n  }\n  if (is_equal && result <= param4) {\n    modified_mask = modified_mask ^ input;\n  }\n  if (is_equal && result <= param4) {\n    input = input ^ modified_mask;\n  }\n  if (is_equal && result <= param4) {\n    modified_mask = modified_mask ^ input;\n  }\n  if (param4 < result) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input;\n  }\n  result = input & 0xffffff | 0x800000;\n  if ((input & 0x80000000) != 0) {\n    result = -result;\n  }\n  modified_input = modified_mask & 0xffffff | 0x800000;\n  if ((modified_mask & 0x80000000) != 0) {\n    modified_input = -modified_input;\n  }\n  if (shift_amount == difference) {\n    modified_input = modified_input ^ 0x800000;\n    if (shift_amount == 0) {\n      result = result ^ 0x800000;\n      shift_amount = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result = result + ((int)modified_input >> (difference & 0xff));\n  modified_input = modified_input << (0x20 - difference & 0xff);\n  input = result & 0x80000000;\n  if ((int)result < 0) {\n    is_equal = modified_input != 0;\n    modified_input = -modified_input;\n    result = -result - (uint)is_equal;\n  }\n  if (result < 0x800000) {\n    modified_mask = modified_input & 0x80000000;\n    modified_input = modified_input << 1;\n    result = result * 2 + (uint)(modified_mask != 0);\n    modified_mask = shift_amount - 2;\n    if (shift_amount - 1 == 0 || result < 0x800000) {\n      difference = LZCOUNT(result) - 8;\n      result = result << (difference & 0xff);\n      if ((int)modified_mask < (int)difference) {\n        result = result >> (-(modified_mask - difference) & 0xff);\n      }\n      else {\n        result = result + (modified_mask - difference) * 0x800000;\n      }\n      return result | input;\n    }\n  }\n  else {\n    modified_mask = shift_amount - 1;\n    if (0xffffff < result) {\n      modified_mask = result & 1;\n      result = result >> 1;\n      modified_input = (uint)(modified_mask != 0) << 0x1f | modified_input >> 1;\n      modified_mask = shift_amount;\n      if (0xfd < shift_amount) goto LAB_08008e12;\n    }\n  }\n  result = result + modified_mask * 0x800000 + (uint)(0x7fffffff < modified_input);\n  if (modified_input == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result | input;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "input",
                "param_2": "mask",
                "param_3": "param3",
                "param_4": "param4",
                "uVar3": "modified_mask",
                "uVar4": "modified_input",
                "uVar5": "result",
                "uVar6": "shift_amount",
                "uVar7": "difference",
                "bVar8": "is_equal",
                "iVar1": "upper_shifted_input",
                "iVar2": "upper_shifted_mask"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint input1,uint input2,undefined4 size,uint output)\n\n{\n  int shift1;\n  int shift2;\n  uint mantissa1;\n  uint mantissa2;\n  uint exponent1;\n  uint exponent2;\n  bool isEqual;\n  \n  mantissa2 = input1 << 1;\n  isEqual = mantissa2 == 0;\n  if (!isEqual) {\n    output = input2 << 1;\n    isEqual = output == 0;\n  }\n  if (!isEqual) {\n    isEqual = mantissa2 == output;\n  }\n  shift1 = (int)mantissa2 >> 0x18;\n  if (!isEqual) {\n    isEqual = shift1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)output >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shift2 = (int)(input2 << 1) >> 0x18;\n    if (shift1 == -1 || shift2 == -1) {\n      mantissa2 = input2;\n      if (shift1 == -1) {\n        mantissa2 = input1;\n      }\n      if (shift1 != -1 || shift2 != -1) {\n        input2 = mantissa2;\n      }\n      isEqual = (mantissa2 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (input2 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = mantissa2 == input2;\n      }\n      if (!isEqual) {\n        mantissa2 = mantissa2 | 0x400000;\n      }\n      return mantissa2;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (mantissa2 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((mantissa2 & 0xff000000) == 0) {\n      mantissa2 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        mantissa2 = mantissa2 | 0x80000000;\n      }\n      return mantissa2;\n    }\n    if (mantissa2 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  mantissa2 = mantissa2 >> 0x18;\n  output = output >> 0x18;\n  exponent2 = output - mantissa2;\n  isEqual = exponent2 != 0;\n  exponent1 = mantissa2;\n  if (isEqual && mantissa2 <= output) {\n    exponent1 = mantissa2 + exponent2;\n  }\n  if (isEqual && mantissa2 <= output) {\n    input2 = input2 ^ input1;\n  }\n  if (isEqual && mantissa2 <= output) {\n    input1 = input1 ^ input2;\n  }\n  if (isEqual && mantissa2 <= output) {\n    input2 = input2 ^ input1;\n  }\n  if (output < mantissa2) {\n    exponent2 = -exponent2;\n  }\n  if (0x19 < exponent2) {\n    return input1;\n  }\n  mantissa2 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    mantissa2 = -mantissa2;\n  }\n  mantissa1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    mantissa1 = -mantissa1;\n  }\n  if (exponent1 == exponent2) {\n    mantissa1 = mantissa1 ^ 0x800000;\n    if (exponent1 == 0) {\n      mantissa2 = mantissa2 ^ 0x800000;\n      exponent1 = 1;\n    }\n    else {\n      exponent2 = exponent2 - 1;\n    }\n  }\n  mantissa2 = mantissa2 + ((int)mantissa1 >> (exponent2 & 0xff));\n  mantissa1 = mantissa1 << (0x20 - exponent2 & 0xff);\n  input1 = mantissa2 & 0x80000000;\n  if ((int)mantissa2 < 0) {\n    isEqual = mantissa1 != 0;\n    mantissa1 = -mantissa1;\n    mantissa2 = -mantissa2 - (uint)isEqual;\n  }\n  if (mantissa2 < 0x800000) {\n    exponent2 = mantissa1 & 0x80000000;\n    mantissa1 = mantissa1 << 1;\n    mantissa2 = mantissa2 * 2 + (uint)(exponent2 != 0);\n    exponent2 = exponent1 - 2;\n    if (exponent1 - 1 == 0 || mantissa2 < 0x800000) {\n      exponent1 = LZCOUNT(mantissa2) - 8;\n      mantissa2 = mantissa2 << (exponent1 & 0xff);\n      if ((int)exponent2 < (int)exponent1) {\n        mantissa2 = mantissa2 >> (-(exponent2 - exponent1) & 0xff);\n      }\n      else {\n        mantissa2 = mantissa2 + (exponent2 - exponent1) * 0x800000;\n      }\n      return mantissa2 | input1;\n    }\n  }\n  else {\n    exponent2 = exponent1 - 1;\n    if (0xffffff < mantissa2) {\n      exponent2 = mantissa2 & 1;\n      mantissa2 = mantissa2 >> 1;\n      mantissa1 = (uint)(exponent2 != 0) << 0x1f | mantissa1 >> 1;\n      exponent2 = exponent1;\n      if (0xfd < exponent1) goto LAB_08008e12;\n    }\n  }\n  mantissa2 = mantissa2 + exponent2 * 0x800000 + (uint)(0x7fffffff < mantissa1);\n  if (mantissa1 == 0x80000000) {\n    mantissa2 = mantissa2 & 0xfffffffe;\n  }\n  return mantissa2 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "size",
                "param_4": "output",
                "iVar1": "shift1",
                "iVar2": "shift2",
                "uVar3": "mantissa1",
                "uVar4": "mantissa2",
                "uVar5": "exponent1",
                "uVar6": "exponent2",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_value_08008e3c",
            "code": "\nuint calculateValue_08008e3c(uint input)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  int offset;\n  uint mask;\n  \n  if (input == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(input);\n  shiftAmount = leadingZeros - 8;\n  offset = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeros) {\n    mask = 0 << (shiftAmount & 0xff);\n    leadingZeros = offset + (input << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < mask);\n    if (mask == 0x80000000) {\n      leadingZeros = leadingZeros & 0xfffffffe;\n    }\n    return leadingZeros;\n  }\n  shiftAmount = input << leadingZeros + 0x18;\n  leadingZeros = offset + ((input >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeros = leadingZeros & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeros;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_value_08008e3c",
                "param_1": "input",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "iVar3": "offset",
                "uVar4": "mask"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "count_leading_zeros_08008e44",
            "code": "\nuint countLeadingZeros_08008e44(uint number)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  uint signFlag;\n  int result;\n  \n  signFlag = number & 0x80000000;\n  if ((int)signFlag < 0) {\n    number = -number;\n  }\n  if (number == 0) {\n    return 0;\n  }\n  leadingZeros = countLeadingZeros_08008e44(number);\n  shiftAmount = leadingZeros - 8;\n  result = ((signFlag | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeros) {\n    leadingZeros = 0 << (shiftAmount & 0xff);\n    signFlag = result + (number << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeros);\n    if (leadingZeros == 0x80000000) {\n      signFlag = signFlag & 0xfffffffe;\n    }\n    return signFlag;\n  }\n  shiftAmount = number << leadingZeros + 0x18;\n  signFlag = result + ((number >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    signFlag = signFlag & ~(shiftAmount >> 0x1f);\n  }\n  return signFlag;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "count_leading_zeros_08008e44",
                "param_1": "number",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "uVar3": "signFlag",
                "iVar4": "result",
                "LZCOUNT": "countLeadingZeros"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_floating_point_08008eec",
            "code": "\nuint calculateFloatingPoint_08008eec(uint firstInput,uint secondInput,undefined4 thirdInput,uint fourthInput)\n\n{\n  longlong tempLong;\n  uint result;\n  uint firstInputShifted;\n  int sumOfShiftedInputs;\n  int shiftedSum;\n  uint tempResult;\n  int shiftedSum2;\n  uint tempResult2;\n  bool isCondition1True;\n  bool isCondition2True;\n  \n  firstInputShifted = firstInput >> 0x17 & 0xff;\n  isCondition1True = firstInputShifted == 0;\n  if (!isCondition1True) {\n    fourthInput = secondInput >> 0x17 & 0xff;\n    isCondition1True = fourthInput == 0;\n  }\n  if (!isCondition1True) {\n    isCondition1True = firstInputShifted == 0xff;\n  }\n  if (!isCondition1True) {\n    isCondition1True = fourthInput == 0xff;\n  }\n  if (isCondition1True) {\n    fourthInput = secondInput >> 0x17 & 0xff;\n    if (firstInputShifted == 0xff || fourthInput == 0xff) {\n      isCondition1True = firstInput == 0 || firstInput == 0x80000000;\n      result = secondInput;\n      if (firstInput != 0 && firstInput != 0x80000000) {\n        isCondition1True = secondInput == 0;\n        result = firstInput;\n      }\n      if (!isCondition1True) {\n        isCondition1True = secondInput == 0x80000000;\n      }\n      tempResult2 = result;\n      if (((isCondition1True) || ((firstInputShifted == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((fourthInput == 0xff && (tempResult2 = secondInput, (secondInput & 0x7fffff) != 0)))) {\n        return tempResult2 | 0x7fc00000;\n      }\n      result = result ^ secondInput;\n      goto LAB_0800903c;\n    }\n    isCondition1True = (firstInput & 0x7fffffff) == 0;\n    if (!isCondition1True) {\n      isCondition1True = (secondInput & 0x7fffffff) == 0;\n    }\n    if (isCondition1True) {\n      return (firstInput ^ secondInput) & 0x80000000;\n    }\n    isCondition1True = firstInputShifted == 0;\n    result = firstInput & 0x80000000;\n    while( true ) {\n      if (isCondition1True) {\n        firstInput = firstInput << 1;\n        isCondition1True = (firstInput & 0x800000) == 0;\n      }\n      if (!isCondition1True) break;\n      firstInputShifted = firstInputShifted - 1;\n    }\n    firstInput = firstInput | result;\n    isCondition1True = fourthInput == 0;\n    result = secondInput & 0x80000000;\n    while( true ) {\n      if (isCondition1True) {\n        secondInput = secondInput << 1;\n        isCondition1True = (secondInput & 0x800000) == 0;\n      }\n      if (!isCondition1True) break;\n      fourthInput = fourthInput - 1;\n    }\n    secondInput = secondInput | result;\n  }\n  sumOfShiftedInputs = firstInputShifted + fourthInput;\n  tempResult2 = firstInput ^ secondInput;\n  firstInputShifted = firstInput << 9;\n  isCondition1True = firstInputShifted == 0;\n  if (!isCondition1True) {\n    secondInput = secondInput << 9;\n    isCondition1True = secondInput == 0;\n  }\n  if (isCondition1True) {\n    if (firstInputShifted == 0) {\n      secondInput = secondInput << 9;\n    }\n    result = tempResult2 & 0x80000000 | firstInput & 0x7fffff | secondInput >> 9;\n    isCondition2True = SBorrow(sumOfShiftedInputs,0x7f);\n    shiftedSum = sumOfShiftedInputs + -0x7f;\n    isCondition1True = shiftedSum == 0;\n    shiftedSum2 = shiftedSum;\n    if (!isCondition1True && 0x7e < sumOfShiftedInputs) {\n      isCondition2True = SBorrow(0xff,shiftedSum);\n      shiftedSum2 = 0xff - shiftedSum;\n      isCondition1True = shiftedSum == 0xff;\n    }\n    if (!isCondition1True && shiftedSum2 < 0 == isCondition2True) {\n      result = result | shiftedSum * 0x800000;\n    }\n    if (!isCondition1True && shiftedSum2 < 0 == isCondition2True) {\n      return result;\n    }\n    result = result | 0x800000;\n    tempResult = 0;\n    isCondition2True = SBorrow(shiftedSum,1);\n    tempResult2 = sumOfShiftedInputs - 0x80;\n    isCondition1True = tempResult2 == 0;\n    firstInputShifted = tempResult2;\n  }\n  else {\n    tempLong = (ulonglong)(firstInputShifted >> 5 | 0x8000000) * (ulonglong)(secondInput >> 5 | 0x8000000);\n    tempResult = (uint)tempLong;\n    result = (uint)((ulonglong)tempLong >> 0x20);\n    isCondition1True = result < 0x800000;\n    if (isCondition1True) {\n      result = result << 1;\n    }\n    if (isCondition1True) {\n      result = result | tempResult >> 0x1f;\n      tempResult = tempResult << 1;\n    }\n    result = tempResult2 & 0x80000000 | result;\n    tempResult2 = (sumOfShiftedInputs + -0x7f) - (uint)isCondition1True;\n    isCondition2True = SBorrow(tempResult2,0xfd);\n    isCondition1True = tempResult2 == 0xfd;\n    firstInputShifted = tempResult2 - 0xfd;\n    if (tempResult2 < 0xfe) {\n      result = result + tempResult2 * 0x800000 + (uint)(0x7fffffff < tempResult);\n      if (tempResult == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (isCondition1True || (int)firstInputShifted < 0 != isCondition2True) {\n    isCondition1True = (int)(tempResult2 + 0x19) < 0;\n    if (tempResult2 == 0xffffffe7 || isCondition1True != SCarry(tempResult2,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (tempResult2 != 0xffffffe7 && isCondition1True == SCarry(tempResult2,0x19)) {\n      firstInputShifted = (result << 1) >> (-tempResult2 & 0xff);\n      tempResult2 = result << (tempResult2 + 0x20 & 0xff);\n      firstInputShifted = ((uint)((result & 0x80000000) != 0) << 0x1f | firstInputShifted >> 1) + (uint)((byte)firstInputShifted & 1);\n      if ((tempResult | tempResult2 << 1) == 0) {\n        firstInputShifted = firstInputShifted & ~(tempResult2 >> 0x1f);\n      }\n      return firstInputShifted;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_floating_point_08008eec",
                "param_1": "firstInput",
                "param_2": "secondInput",
                "param_3": "thirdInput",
                "param_4": "fourthInput",
                "uVar3": "firstInputShifted",
                "uVar2": "result",
                "uVar6": "tempResult",
                "uVar8": "tempResult2",
                "bVar9": "isCondition1True",
                "bVar10": "isCondition2True",
                "iVar4": "sumOfShiftedInputs",
                "iVar5": "shiftedSum",
                "iVar7": "shiftedSum2",
                "lVar1": "tempLong",
                "SBORROW4": "SBorrow",
                "SCARRY4": "SCarry"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_08009054",
            "code": "\nuint calculateFloatingPoint_08009054(uint firstValue,uint secondValue,undefined4 constant,uint shiftAmount)\n\n{\n  uint temp1;\n  uint temp2;\n  int difference;\n  uint temp3;\n  int temp4;\n  uint result;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp2 = firstValue >> 0x17 & 0xff;\n  condition1 = temp2 == 0;\n  if (!condition1) {\n    shiftAmount = secondValue >> 0x17 & 0xff;\n    condition1 = shiftAmount == 0;\n  }\n  if (!condition1) {\n    condition1 = temp2 == 0xff;\n  }\n  if (!condition1) {\n    condition1 = shiftAmount == 0xff;\n  }\n  if (condition1) {\n    shiftAmount = secondValue >> 0x17 & 0xff;\n    result = firstValue;\n    if (temp2 == 0xff) {\n      if (((firstValue & 0x7fffff) != 0) || (result = secondValue, shiftAmount == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (shiftAmount == 0xff) {\n        result = secondValue;\n        if ((secondValue & 0x7fffff) == 0) {\nLAB_08009000:\n          return (firstValue ^ secondValue) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      condition1 = (firstValue & 0x7fffffff) == 0;\n      if (!condition1) {\n        condition1 = (secondValue & 0x7fffffff) == 0;\n      }\n      if (!condition1) {\n        condition1 = temp2 == 0;\n        result = firstValue & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            firstValue = firstValue << 1;\n            condition1 = (firstValue & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          temp2 = temp2 - 1;\n        }\n        firstValue = firstValue | result;\n        condition1 = shiftAmount == 0;\n        result = secondValue & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            secondValue = secondValue << 1;\n            condition1 = (secondValue & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          shiftAmount = shiftAmount - 1;\n        }\n        secondValue = secondValue | result;\n        goto LAB_0800906c;\n      }\n      if ((firstValue & 0x7fffffff) == 0) {\n        if ((secondValue & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    firstValue = firstValue ^ secondValue;\n  }\n  else {\nLAB_0800906c:\n    difference = temp2 - shiftAmount;\n    if (secondValue << 9 == 0) {\n      firstValue = (firstValue ^ secondValue) & 0x80000000 | firstValue & 0x7fffff;\n      condition3 = SCARRY4(difference,0x7f);\n      temp4 = difference + 0x7f;\n      condition1 = temp4 < 0;\n      condition2 = temp4 == 0;\n      if (!condition2 && condition1 == condition3) {\n        condition3 = SBORROW4(0xff,temp4);\n        condition1 = 0xff - temp4 < 0;\n        condition2 = temp4 == 0xff;\n      }\n      if (!condition2 && condition1 == condition3) {\n        firstValue = firstValue | temp4 * 0x800000;\n      }\n      if (!condition2 && condition1 == condition3) {\n        return firstValue;\n      }\n      firstValue = firstValue | 0x800000;\n      temp2 = 0;\n      condition2 = SBORROW4(temp4,1);\n      temp3 = difference + 0x7e;\n      condition1 = temp3 == 0;\n      result = temp3;\n    }\n    else {\n      temp1 = (secondValue << 9) >> 4 | 0x10000000;\n      temp2 = (firstValue << 9) >> 4 | 0x10000000;\n      firstValue = (firstValue ^ secondValue) & 0x80000000;\n      condition1 = temp1 <= temp2;\n      if (!condition1) {\n        temp2 = temp2 << 1;\n      }\n      temp3 = difference + 0x7d + (uint)condition1;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          firstValue = firstValue | result;\n        }\n        condition1 = temp1 >> 1 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (condition1) {\n          firstValue = firstValue | result >> 1;\n        }\n        condition1 = temp1 >> 2 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (condition1) {\n          firstValue = firstValue | result >> 2;\n        }\n        condition1 = temp1 >> 3 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (condition1) {\n          firstValue = firstValue | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        condition1 = temp2 == 0;\n        if (!condition1) {\n          result = result >> 4;\n          condition1 = result == 0;\n        }\n      } while (!condition1);\n      condition2 = SBORROW4(temp3,0xfd);\n      condition1 = temp3 == 0xfd;\n      result = temp3 - 0xfd;\n      if (temp3 < 0xfe) {\n        firstValue = firstValue + temp3 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          firstValue = firstValue & 0xfffffffe;\n        }\n        return firstValue;\n      }\n    }\n    if (condition1 || (int)result < 0 != condition2) {\n      condition1 = (int)(temp3 + 0x19) < 0;\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        firstValue = firstValue & 0x80000000;\n      }\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        return firstValue;\n      }\n      result = (firstValue << 1) >> (-temp3 & 0xff);\n      temp3 = firstValue << (temp3 + 0x20 & 0xff);\n      result = ((uint)((firstValue & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | temp3 << 1) == 0) {\n        result = result & ~(temp3 >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return firstValue & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_08009054",
                "param_1": "firstValue",
                "param_2": "secondValue",
                "param_3": "constant",
                "param_4": "shiftAmount",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "difference",
                "uVar4": "temp3",
                "iVar5": "temp4",
                "uVar6": "result",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "compute_result_0800919c",
            "code": "\nuint compute_result_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_negative_result;\n  uint input_1_doubled;\n  uint input_2_doubled;\n  uint combined_inputs_with_mask;\n  bool is_combined_zero;\n  \n  input_1_doubled = input_1 * 2;\n  input_2_doubled = input_2 * 2;\n  if (((int)input_1_doubled >> 0x18 == -1 || (int)input_2_doubled >> 0x18 == -1) &&\n     ((((int)input_1_doubled >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)input_2_doubled >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs_with_mask = input_1_doubled | input_2 & 0x7fffffff;\n  is_combined_zero = combined_inputs_with_mask == 0;\n  if (!is_combined_zero) {\n    combined_inputs_with_mask = input_1 ^ input_2;\n    is_combined_zero = combined_inputs_with_mask == 0;\n  }\n  is_negative_result = -1 < (int)combined_inputs_with_mask;\n  if (is_negative_result) {\n    input_1 = input_1_doubled + input_2 * -2;\n    is_combined_zero = input_1 == 0;\n  }\n  if ((is_negative_result && input_2_doubled <= input_1_doubled) && !is_combined_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative_result || input_2_doubled > input_1_doubled) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_combined_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "compute_result_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_negative_result",
                "uVar2": "input_1_doubled",
                "uVar3": "input_2_doubled",
                "uVar4": "combined_inputs_with_mask",
                "bVar5": "is_combined_zero",
                "return": "result"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_parameters_080091fc",
            "code": "\nvoid copyParameters_080091fc(undefined4 source,undefined4 destination)\n\n{\n  FUN_08009204(destination,source);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_parameters_080091fc",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_params_08009204",
            "code": "\nundefined8 concatenate_params_08009204(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_if_input_is_not_null_08009214",
            "code": "\nbool check_if_input_is_not_null_08009214(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_if_input_is_not_null_08009214",
                "in_ZR": "input_char"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_if_null_terminated_08009228",
            "code": "\nbool check_if_null_terminated_08009228(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_if_null_terminated_08009228",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_or_zr_0800923c",
            "code": "\nbool check_CY_or_ZR_0800923c(void)\n\n{\n  undefined flag_ZR;\n  undefined flag_CY;\n  \n  FUN_08009204();\n  return !(bool)flag_CY || (bool)flag_ZR;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_or_zr_0800923c",
                "in_CY": "flag_CY",
                "in_ZR": "flag_ZR"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_for_error_08009250",
            "code": "\nbool check_for_error_08009250(void)\n\n{\n  undefined zero_result;\n  undefined carry_flag;\n  \n  FUN_080091fc();\n  return !(bool)carry_flag || (bool)zero_result;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_for_error_08009250",
                "in_ZR": "zero_result",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_if_null_terminated_08009264",
            "code": "\nbool check_if_null_terminated_08009264(void)\n\n{\n  char input_character;\n  \n  FUN_080091fc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_if_null_terminated_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "convert_to_signed_int_08009278",
            "code": "\nuint convertToSignedInt_08009278(uint input)\n\n{\n  uint shiftedValue;\n  uint bitDifference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftedValue = (input << 1) >> 0x18;\n  bitDifference = 0x9e - shiftedValue;\n  if (shiftedValue < 0x9f && bitDifference != 0) {\n    shiftedValue = (input << 8 | 0x80000000) >> (bitDifference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shiftedValue = -shiftedValue;\n    }\n    return shiftedValue;\n  }\n  if ((bitDifference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08009278": "convert_to_signed_int_08009278",
                "param_1": "input",
                "uVar1": "shiftedValue",
                "uVar2": "bitDifference"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "convert_floating_point_08009318",
            "code": "\nlonglong convertFloatingPoint_08009318(uint input1,uint input2,undefined4 param1,undefined4 param2)\n\n{\n  int result;\n  uint exponentDiff;\n  uint mask;\n  bool carryFlag;\n  undefined8 convertedValue;\n  longlong output;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponentDiff = mask - 0x3ff;\n  if ((int)exponentDiff < 0x14) {\n    if ((int)exponentDiff < 0) {\n      convertedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param2);\n      result = FUN_08008b60((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          output = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          output = 0;\n        }\n        else {\n          output = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentDiff & 0xff);\n      output = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        convertedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param2);\n        result = FUN_08008b60((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0,0);\n        output = CONCAT44(input2,input1);\n        if (result != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (exponentDiff & 0xff));\n          }\n          output = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentDiff < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    output = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      convertedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param2);\n      result = FUN_08008b60((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (result != 0) {\n        if (0 < (int)input2) {\n          if (exponentDiff == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponentDiff = 1 << (0x34 - exponentDiff & 0xff);\n            carryFlag = CARRY4(exponentDiff,input1);\n            input1 = exponentDiff + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        output = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    output = CONCAT44(input2,input1);\n    if (exponentDiff == 0x400) {\n      output = FUN_080082d4();\n    }\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08009318": "convert_floating_point_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result",
                "uVar2": "exponentDiff",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "convertedValue",
                "lVar6": "output"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_data_08009410",
            "code": "\nundefined4 processData_08009410(undefined4 inputValue,uint flag)\n\n{\n  undefined4 returnValue;\n  uint result;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  \n  if (0x3fe921fb < (flag & 0x7fffffff)) {\n    if ((flag & 0x7fffffff) < 0x7ff00000) {\n      result = FUN_08009d78(inputValue,flag,&localVar1);\n      result = result & 3;\n      if (result == 1) {\n        returnValue = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else if (result == 2) {\n        returnValue = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else if (result == 0) {\n        returnValue = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else {\n        returnValue = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(inputValue,flag,inputValue,flag);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800a348(inputValue,flag,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_data_08009410",
                "param_1": "inputValue",
                "param_2": "flag",
                "uVar1": "returnValue",
                "uVar2": "result",
                "local_28": "localVar1",
                "uStack_24": "localVar2",
                "local_20": "localVar3",
                "uStack_1c": "localVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "retrieve_value_080094c0",
            "code": "\nlonglong retrieveValue_080094c0(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftedBits;\n  uint mask;\n  bool carryFlag;\n  undefined8 functionResult;\n  longlong returnValue;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftedBits = mask - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      functionResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)functionResult,(int)((ulonglong)functionResult >> 0x20),0,0);\n      returnValue = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          returnValue = (ulonglong)input2 << 0x20;\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedBits & 0xff);\n      returnValue = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        functionResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result = FUN_08008b60((int)functionResult,(int)((ulonglong)functionResult >> 0x20),0,0);\n        returnValue = CONCAT44(input2,input1);\n        if (result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shiftedBits & 0xff));\n          }\n          returnValue = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedBits < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    returnValue = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      functionResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)functionResult,(int)((ulonglong)functionResult >> 0x20),0,0);\n      returnValue = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if (shiftedBits == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftedBits = 1 << (0x34 - shiftedBits & 0xff);\n            carryFlag = CARRY4(shiftedBits,input1);\n            input1 = shiftedBits + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        returnValue = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    returnValue = CONCAT44(input2,input1);\n    if (shiftedBits == 0x400) {\n      returnValue = FUN_080082d4();\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "retrieve_value_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedBits",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "functionResult",
                "lVar6": "returnValue"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint mask;\n  uint shiftAmount;\n  uint modifiedInput2;\n  int sign;\n  uint shiftedValue;\n  \n  shiftAmount = (input2 << 1) >> 0x15;\n  shiftedValue = shiftAmount - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  modifiedInput2 = input2 & 0xfffff | 0x100000;\n  if ((int)shiftedValue < 0x14) {\n    if ((int)shiftedValue < 0) {\n      if (shiftedValue != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    modifiedInput2 = modifiedInput2 + (0x80000 >> (shiftedValue & 0xff)) >> (0x14 - shiftedValue & 0xff);\n  }\n  else {\n    if (0x1e < shiftedValue) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)shiftedValue < 0x34) {\n      mask = 0x80000000 >> (shiftAmount - 0x413 & 0xff);\n      if (CARRY4(mask,input1) != false) {\n        modifiedInput2 = modifiedInput2 + 1;\n      }\n      modifiedInput2 = modifiedInput2 << (shiftAmount - 0x413 & 0xff);\n      if (shiftedValue != 0x14) {\n        modifiedInput2 = modifiedInput2 | mask + input1 >> (0x34 - shiftedValue & 0xff);\n      }\n    }\n    else {\n      modifiedInput2 = modifiedInput2 << (shiftAmount - 0x413 & 0xff) | input1 << (shiftAmount - 0x433 & 0xff);\n    }\n  }\n  return modifiedInput2 * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "mask",
                "uVar2": "shiftAmount",
                "uVar3": "modifiedInput2",
                "iVar4": "sign",
                "uVar5": "shiftedValue"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "decode_float_08009654",
            "code": "\nlonglong decode_float_08009654(uint sign_bit,uint exponent_mantissa)\n\n{\n  uint exponent;\n  uint shift_amount;\n  longlong decoded_float;\n  \n  decoded_float = CONCAT44(exponent_mantissa,sign_bit);\n  shift_amount = (exponent_mantissa << 1) >> 0x15;\n  exponent = shift_amount - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      exponent_mantissa = exponent_mantissa & 0x80000000;\n      if (exponent == 0xffffffff) {\n        exponent_mantissa = exponent_mantissa | 0x3ff00000;\n      }\n      decoded_float = (ulonglong)exponent_mantissa << 0x20;\n    }\n    else {\n      shift_amount = 0xfffff >> (exponent & 0xff);\n      decoded_float = CONCAT44(exponent_mantissa,sign_bit);\n      if ((exponent_mantissa & shift_amount | sign_bit) != 0) {\n        decoded_float = (ulonglong)(exponent_mantissa + (0x80000 >> (exponent & 0xff)) & ~shift_amount) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    shift_amount = 0xffffffff >> (shift_amount - 0x413 & 0xff);\n    if ((sign_bit & shift_amount) != 0) {\n      exponent = 1 << (0x33 - exponent & 0xff);\n      if (CARRY4(sign_bit,exponent) != false) {\n        exponent_mantissa = exponent_mantissa + 1;\n      }\n      decoded_float = CONCAT44(exponent_mantissa,sign_bit + exponent & ~shift_amount);\n    }\n  }\n  else {\n    decoded_float = CONCAT44(exponent_mantissa,sign_bit);\n    if (exponent == 0x400) {\n      decoded_float = FUN_080082d4();\n    }\n  }\n  return decoded_float;\n}\n\n",
            "renaming": {
                "FUN_08009654": "decode_float_08009654",
                "param_1": "sign_bit",
                "param_2": "exponent_mantissa",
                "uVar1": "exponent",
                "uVar2": "shift_amount",
                "lVar3": "decoded_float"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_float_080096e8",
            "code": "\nundefined4 processFloat_080096e8(undefined4 input1,uint input2)\n\n{\n  undefined4 result;\n  uint bitwiseAndResult;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      bitwiseAndResult = FUN_08009d78(input1,input2,&var1);\n      bitwiseAndResult = bitwiseAndResult & 3;\n      if (bitwiseAndResult == 1) {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else if (bitwiseAndResult == 2) {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n      else if (bitwiseAndResult == 0) {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n      else {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n    }\n    else {\n      result = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(input1,input2,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_float_080096e8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "bitwiseAndResult",
                "local_28": "var1",
                "uStack_24": "var2",
                "local_20": "var3",
                "uStack_1c": "var4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "extract_bits_from_number_08009798",
            "code": "\nlonglong extract_bits_from_number_08009798(uint input_1,uint input_2,undefined4 unused_param_1,undefined4 unused_param_2)\n\n{\n  uint shift_amount;\n  uint result;\n  longlong extracted_bits;\n  \n  result = (input_2 << 1) >> 0x15;\n  shift_amount = result - 0x3ff;\n  if ((int)shift_amount < 0x14) {\n    if ((int)shift_amount < 0) {\n      return ((ulonglong)input_2 & 0x80000000) << 0x20;\n    }\n    extracted_bits = (ulonglong)(input_2 & ~(0xfffff >> (shift_amount & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shift_amount < 0x34) {\n      return CONCAT44(input_2,input_1 & ~(0xffffffffU >> (result - 0x413 & 0xff)));\n    }\n    if (shift_amount != 0x400) {\n      return CONCAT44(input_2,input_1);\n    }\n    extracted_bits = FUN_080082d4(input_1,input_2,input_1,input_2,unused_param_2);\n  }\n  return extracted_bits;\n}\n\n",
            "renaming": {
                "FUN_08009798": "extract_bits_from_number_08009798",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "unused_param_1",
                "param_4": "unused_param_2",
                "uVar1": "shift_amount",
                "uVar2": "result",
                "lVar3": "extracted_bits"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculateResult_thunk_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = input4 & 0x7fffffff;\n  if (((temp4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = input2 & 0x7fffffff, (temp5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUN_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      if (temp3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          temp3 = temp3 - 1;\n          if (temp5 == 0x7ff00000) {\n            if (temp3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              temp6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n            temp4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n          temp4 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "validate_and_set_values_0800981c",
            "code": "\nundefined8 validate_and_set_values_0800981c(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 value4)\n\n{\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined8 returnValue;\n  undefined4 constant;\n  char *str;\n  undefined4 value1_new;\n  undefined4 value2_new;\n  undefined4 value3_new;\n  undefined4 value4_new;\n  undefined4 constant2;\n  undefined4 constant3;\n  int result2;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  result2 = FUN_0800b2d4();\n  if (result2 != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(value1,value2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(value3,value4);\n  if (result == 0) {\n    return returnValue;\n  }\n  constant = 3;\n  str = \"hypot\";\n  value1_new = value1;\n  value2_new = value2;\n  value3_new = value3;\n  value4_new = value4;\n  if (DAT_20000014 == '\\0') {\n    constant2 = 0xe0000000;\n    constant3 = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&constant);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    constant2 = 0;\n    constant3 = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(constant3,constant2);\n  if (result2 != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(constant3,constant2);\n    *ptr2 = result2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "validate_and_set_values_0800981c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "iVar1": "result",
                "puVar2": "ptr",
                "piVar3": "ptr2",
                "uVar4": "returnValue",
                "local_50": "constant",
                "pcStack_4c": "str",
                "local_48": "value1_new",
                "uStack_44": "value2_new",
                "local_40": "value3_new",
                "uStack_3c": "value4_new",
                "local_38": "constant2",
                "uStack_34": "constant3",
                "local_30": "result2"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "extract_and_process_data_080098d0",
            "code": "\nundefined4 extract_and_process_data_080098d0(undefined4 input_1,undefined4 input_2)\n\n{\n  char check_flag;\n  undefined4 result;\n  int resultCode;\n  undefined4 *output_ptr;\n  int *result_ptr;\n  undefined4 initializedFlag;\n  undefined *dataPointer;\n  undefined4 input_1_copy;\n  undefined4 input_2_copy;\n  undefined4 input_1_copy_2;\n  undefined4 input_2_copy_2;\n  undefined8 processing_result;\n  int processing_flag;\n  \n  result = FUN_0800a1bc();\n  check_flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (processing_flag = FUN_08008b74(input_1,input_2,input_1,input_2), processing_flag != 0)) ||\n     (resultCode = FUN_08008b24(input_1,input_2,0,0), resultCode == 0)) {\n    return result;\n  }\n  initializedFlag = 1;\n  dataPointer = &DAT_0800be5c;\n  input_1_copy = input_1;\n  input_2_copy = input_2;\n  input_1_copy_2 = input_1;\n  input_2_copy_2 = input_2;\n  if (check_flag == '\\0') {\n    processing_result = 0;\nLAB_0800996c:\n    resultCode = FUN_0800b2e0(&initializedFlag);\n    if (resultCode != 0) goto joined_r0x0800997a;\n  }\n  else {\n    processing_result = FUN_08008894(0,0,0,0);\n    if (check_flag != '\\x02') goto LAB_0800996c;\n  }\n  output_ptr = (undefined4 *)FUN_0800b3dc();\n  *output_ptr = 0x21;\njoined_r0x0800997a:\n  if (processing_flag != 0) {\n    result_ptr = (int *)FUN_0800b3dc();\n    *result_ptr = processing_flag;\n  }\n  return (undefined4)processing_result;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "extract_and_process_data_080098d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "check_flag",
                "uVar2": "result",
                "iVar3": "resultCode",
                "puVar4": "output_ptr",
                "piVar5": "result_ptr",
                "local_50": "initializedFlag",
                "local_4c": "dataPointer",
                "local_48": "input_1_copy",
                "uStack_44": "input_2_copy",
                "local_40": "input_1_copy_2",
                "uStack_3c": "input_2_copy_2",
                "local_38": "processing_result",
                "local_30": "processing_flag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint number1,uint number2,uint number3,uint number4)\n\n{\n  int difference;\n  undefined4 result;\n  uint shiftedResult;\n  uint positiveNumber4;\n  uint positiveNumber2;\n  undefined8 tempResult;\n  \n  positiveNumber4 = number4 & 0x7fffffff;\n  if (((positiveNumber4 | (-number3 | number3) >> 0x1f) < 0x7ff00001) &&\n     (positiveNumber2 = number2 & 0x7fffffff, (positiveNumber2 | (-number1 | number1) >> 0x1f) < 0x7ff00001)) {\n    if ((number4 + 0xc0100000 | number3) == 0) {\n      positiveNumber4 = FUN_0800af78();\n      return positiveNumber4;\n    }\n    shiftedResult = (int)number4 >> 0x1e & 2U | number2 >> 0x1f;\n    if ((positiveNumber2 | number1) == 0) {\n      if (shiftedResult == 2) {\n        number1 = 0x54442d18;\n      }\n      else if (shiftedResult == 3) {\n        number1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((positiveNumber4 | number3) != 0) {\n        if (positiveNumber4 == 0x7ff00000) {\n          shiftedResult = shiftedResult - 1;\n          if (positiveNumber2 == 0x7ff00000) {\n            if (shiftedResult < 3) {\n              return *(uint *)(&DAT_0800be68 + shiftedResult * 8);\n            }\n            return 0x54442d18;\n          }\n          if (shiftedResult < 3) {\n            return *(uint *)(&DAT_0800be80 + shiftedResult * 8);\n          }\n          return 0;\n        }\n        if (positiveNumber2 != 0x7ff00000) {\n          difference = (int)(positiveNumber2 - positiveNumber4) >> 0x14;\n          if ((int)(positiveNumber2 - positiveNumber4) < 0x3d00000) {\n            if (((int)number4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              tempResult = 0;\n            }\n            else {\n              FUN_08008894(number1,number2,number3,number4,number4);\n              FUNC_0800b2cc();\n              tempResult = FUN_0800af78();\n            }\n          }\n          else {\n            tempResult = 0x3ff921fb54442d18;\n          }\n          result = (undefined4)((ulonglong)tempResult >> 0x20);\n          positiveNumber4 = (uint)tempResult;\n          if (shiftedResult == 1) {\n            return positiveNumber4;\n          }\n          if (shiftedResult == 2) {\n            tempResult = FUN_080082d0(positiveNumber4,result,0x33145c07,0x3ca1a626);\n            positiveNumber4 = FUN_080082d0(0x54442d18,0x400921fb,(int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n            return positiveNumber4;\n          }\n          if (shiftedResult == 0) {\n            return positiveNumber4;\n          }\n          tempResult = FUN_080082d0(positiveNumber4,result,0x33145c07,0x3ca1a626);\n          positiveNumber4 = FUN_080082d0((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0x54442d18,0x400921fb);\n          return positiveNumber4;\n        }\n      }\n      if ((int)number2 < 0) {\n        number1 = 0x54442d18;\n      }\n      else {\n        number1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    number1 = FUN_080082d4(number3,number4,number1,number2);\n  }\n  return number1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "number3",
                "param_4": "number4",
                "iVar1": "difference",
                "uVar2": "result",
                "uVar3": "shiftedResult",
                "uVar4": "positiveNumber4",
                "uVar5": "positiveNumber2",
                "uVar6": "tempResult"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculate_result_08009b24(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  undefined4 temp_1;\n  int temp_2;\n  uint result_1;\n  int temp_3;\n  undefined4 temp_4;\n  int temp_5;\n  uint result_2;\n  undefined4 temp_6;\n  undefined4 temp_7;\n  undefined8 temp_8;\n  undefined8 temp_9;\n  undefined8 temp_10;\n  undefined8 temp_11;\n  int local_var;\n  \n  input_2 = input_2 & 0x7fffffff;\n  input_4 = input_4 & 0x7fffffff;\n  result_1 = input_1;\n  result_2 = input_2;\n  if (input_2 < input_4) {\n    result_1 = input_3;\n    input_3 = input_1;\n    result_2 = input_4;\n    input_4 = input_2;\n  }\n  if (0x3c00000 < (int)(result_2 - input_4)) {\n    result_1 = FUN_080082d4(result_1,result_2,input_3,input_4);\n    return result_1;\n  }\n  if (result_2 < 0x5f300001) {\n    local_var = 0;\n  }\n  else {\n    if (0x7fefffff < result_2) {\n      if ((result_2 & 0xfffff | result_1) != 0) {\n        result_1 = FUN_080082d4(result_1,result_2,input_3,input_4);\n      }\n      if ((input_4 ^ 0x7ff00000 | input_3) != 0) {\n        return result_1;\n      }\n      return input_3;\n    }\n    result_2 = result_2 + 0xda800000;\n    input_4 = input_4 + 0xda800000;\n    local_var = 600;\n  }\n  temp_9 = CONCAT44(result_2,result_1);\n  temp_8 = CONCAT44(input_4,input_3);\n  if ((int)input_4 < 0x20b00000) {\n    if ((int)input_4 < 0x100000) {\n      if ((input_4 | input_3) == 0) {\n        return result_1;\n      }\n      temp_8 = FUN_08008640(input_3,input_4,0,0x7fd00000);\n      temp_9 = FUN_08008640(result_1,result_2,0,0x7fd00000);\n      local_var = local_var + -0x3fe;\n    }\n    else {\n      result_2 = result_2 + 0x25800000;\n      temp_9 = CONCAT44(result_2,result_1);\n      input_4 = input_4 + 0x25800000;\n      temp_8 = CONCAT44(input_4,input_3);\n      local_var = local_var + -600;\n    }\n  }\n  temp_7 = (undefined4)((ulonglong)temp_9 >> 0x20);\n  temp_6 = (undefined4)temp_9;\n  temp_5 = (int)((ulonglong)temp_8 >> 0x20);\n  temp_4 = (undefined4)temp_8;\n  temp_8 = FUN_080082d0(temp_6,temp_7,temp_4,temp_5);\n  temp_3 = (int)((ulonglong)temp_8 >> 0x20);\n  temp_1 = (undefined4)temp_8;\n  temp_2 = FUN_08008b24(temp_4,temp_5,temp_1,temp_3);\n  if (temp_2 == 0) {\n    temp_8 = FUN_08008640(0,input_4,0);\n    temp_9 = FUN_08008640(temp_1,temp_3 + -0x80000000,temp_1,temp_3);\n    temp_10 = FUN_080082d4(temp_6,temp_7,temp_6,temp_7);\n    temp_10 = FUN_080082d0((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),0,result_2 + 0x100000);\n    temp_10 = FUN_08008640((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),temp_4,temp_5);\n    temp_11 = FUN_080082d0(temp_4,temp_5,0,input_4);\n    temp_11 = FUN_08008640((int)temp_11,(int)((ulonglong)temp_11 >> 0x20),0,result_2 + 0x100000);\n    temp_10 = FUN_080082d4((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_11,\n                          (int)((ulonglong)temp_11 >> 0x20));\n    temp_9 = FUN_080082d0((int)temp_9,(int)((ulonglong)temp_9 >> 0x20),(int)temp_10,\n                          (int)((ulonglong)temp_10 >> 0x20));\n    FUN_080082d0((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),(int)temp_9,\n                 (int)((ulonglong)temp_9 >> 0x20));\n    temp_8 = FUN_0800a1bc();\n  }\n  else {\n    temp_8 = FUN_08008640(0,result_2,0,result_2);\n    temp_9 = FUN_08008640(temp_4,temp_5 + -0x80000000,temp_4,temp_5);\n    temp_10 = FUN_080082d4(temp_6,temp_7,0,result_2);\n    temp_11 = FUN_080082d0(temp_6,temp_7,0,result_2);\n    temp_10 = FUN_08008640((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_11,\n                          (int)((ulonglong)temp_11 >> 0x20));\n    temp_9 = FUN_080082d0((int)temp_9,(int)((ulonglong)temp_9 >> 0x20),(int)temp_10,\n                          (int)((ulonglong)temp_10 >> 0x20));\n    FUN_080082d0((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),(int)temp_9,\n                 (int)((ulonglong)temp_9 >> 0x20));\n    temp_8 = FUN_0800a1bc();\n  }\n  result_1 = (uint)temp_8;\n  if (local_var != 0) {\n    result_1 = FUN_08008640(result_1,(int)((ulonglong)temp_8 >> 0x20),0,local_var * 0x100000 + 0x3ff00000);\n  }\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "iVar2": "temp_2",
                "uVar3": "result_1",
                "iVar4": "temp_3",
                "uVar5": "temp_4",
                "iVar6": "temp_5",
                "uVar7": "result_2",
                "uVar8": "temp_6",
                "uVar9": "temp_7",
                "uVar10": "temp_8",
                "uVar11": "temp_9",
                "uVar12": "temp_10",
                "uVar13": "temp_11",
                "local_3c": "local_var"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_result_08009d78",
            "code": "\nint calculateResult_08009d78(undefined4 input1,uint input2,undefined8 *output)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  uint absInput2;\n  int counter;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined8 finalResult;\n  undefined4 localResult1;\n  undefined4 localResult2;\n  undefined8 localVar1;\n  undefined8 localVar2;\n  undefined8 localVar3;\n  \n  absInput2 = input2 & 0x7fffffff;\n  if (absInput2 < 0x3fe921fc) {\n    *(undefined4 *)output = input1;\n    *(uint *)((int)output + 4) = input2;\n    *(undefined4 *)(output + 1) = 0;\n    *(undefined4 *)((int)output + 0xc) = 0;\n    return 0;\n  }\n  if (absInput2 < 0x4002d97c) {\n    if ((int)input2 < 1) {\n      tempResult1 = FUN_080082d4(input1,input2,0x54400000,0x3ff921fb);\n      temp1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n      result1 = (undefined4)tempResult1;\n      if (absInput2 != 0x3ff921fb) {\n        tempResult1 = FUN_080082d4(result1,temp1,0x1a626331,0x3dd0b461);\n        *output = tempResult1;\n        tempResult1 = FUN_080082d0(result1,temp1);\n        tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x1a626331,0x3dd0b461);\n        output[1] = tempResult1;\n        return -1;\n      }\n      tempResult1 = FUN_080082d4(result1,temp1,0x1a600000,0x3dd0b461);\n      result1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n      tempResult2 = FUN_080082d4((int)tempResult1,result1,0x2e037073,0x3ba3198a);\n      *output = tempResult2;\n      tempResult1 = FUN_080082d0((int)tempResult1,result1);\n      tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x2e037073,0x3ba3198a);\n      output[1] = tempResult1;\n      return -1;\n    }\n    tempResult1 = FUN_080082d0();\n    temp1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    result1 = (undefined4)tempResult1;\n    if (absInput2 != 0x3ff921fb) {\n      tempResult1 = FUN_080082d0(result1,temp1,0x1a626331,0x3dd0b461);\n      *output = tempResult1;\n      tempResult1 = FUN_080082d0(result1,temp1);\n      tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x1a626331,0x3dd0b461);\n      output[1] = tempResult1;\n      return 1;\n    }\n    tempResult1 = FUN_080082d0(result1,temp1,0x1a600000,0x3dd0b461);\n    result1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    tempResult2 = FUN_080082d0((int)tempResult1,result1,0x2e037073,0x3ba3198a);\n    *output = tempResult2;\n    tempResult1 = FUN_080082d0((int)tempResult1,result1);\n    tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x2e037073,0x3ba3198a);\n    output[1] = tempResult1;\n    return 1;\n  }\n  if (0x413921fb < absInput2) {\n    if (0x7fefffff < absInput2) {\n      tempResult1 = FUN_080082d0(input1,input2,input1,input2);\n      output[1] = tempResult1;\n      *output = tempResult1;\n      return 0;\n    }\n    counter = ((int)absInput2 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar1 = FUN_0800856c();\n    tempResult1 = FUN_080082d0(input1,absInput2 + counter * -0x100000,(int)localVar1,\n                          (int)((ulonglong)localVar1 >> 0x20));\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar2 = FUN_0800856c();\n    tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    localVar3 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar3,(int)((ulonglong)localVar3 >> 0x20),0,0);\n    counter = FUN_0800a5a0(&localVar1,output,counter);\n    if (-1 < (int)input2) {\n      return counter;\n    }\n    *(int *)((int)output + 4) = *(int *)((int)output + 4) + -0x80000000;\n    *(int *)((int)output + 0xc) = *(int *)((int)output + 0xc) + -0x80000000;\n    return -counter;\n  }\n  tempResult1 = FUNC_0800b2cc();\n  temp1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n  tempResult2 = FUN_08008640((int)tempResult1,temp1,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0,0x3fe00000);\n  counter = FUN_08008ba0();\n  tempResult2 = FUN_0800856c();\n  temp2 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n  result1 = (undefined4)tempResult2;\n  tempResult2 = FUN_08008640(result1,temp2,0x54400000,0x3ff921fb);\n  tempResult1 = FUN_080082d0((int)tempResult1,temp1,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n  temp3 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n  temp1 = (undefined4)tempResult1;\n  tempResult2 = FUN_08008640(result1,temp2,0x1a626331,0x3dd0b461);\n  if ((0x1f < counter) || (*(uint *)(&DAT_0800be98 + (counter + -1) * 4) == absInput2)) {\n    finalResult = FUN_080082d0(temp1,temp3,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n    if ((int)((absInput2 >> 0x14) - ((uint)((int)((ulonglong)finalResult >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    tempResult2 = FUN_08008640(result1,temp2,0x1a600000,0x3dd0b461);\n    temp4 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n    tempResult1 = FUN_080082d0(temp1,temp3,(int)tempResult2,temp4);\n    temp5 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    result2 = (undefined4)tempResult1;\n    finalResult = FUN_080082d0(temp1,temp3,result2,temp5);\n    tempResult2 = FUN_080082d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult2,temp4);\n    finalResult = FUN_08008640(result1,temp2,0x2e037073,0x3ba3198a);\n    tempResult2 = FUN_080082d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult2,\n                          (int)((ulonglong)tempResult2 >> 0x20));\n    finalResult = FUN_080082d0(result2,temp5,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n    if ((int)(((int)absInput2 >> 0x14) - ((uint)((int)((ulonglong)finalResult >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    tempResult2 = FUN_08008640(result1,temp2,0x2e000000,0x3ba3198a);\n    temp1 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n    tempResult1 = FUN_080082d0(result2,temp5,(int)tempResult2,temp1);\n    finalResult = FUN_080082d0(result2,temp5);\n    tempResult2 = FUN_080082d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult2,temp1);\n    finalResult = FUN_08008640(result1,temp2,0x252049c1,0x397b839a);\n    tempResult2 = FUN_080082d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult2,\n                          (int)((ulonglong)tempResult2 >> 0x20));\n  }\n  finalResult = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                        (int)((ulonglong)tempResult2 >> 0x20));\nLAB_0800a0ce:\n  localResult2 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n  localResult1 = (undefined4)tempResult1;\n  *output = finalResult;\n  tempResult1 = FUN_080082d0(localResult1,localResult2);\n  tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                        (int)((ulonglong)tempResult2 >> 0x20));\n  output[1] = tempResult1;\n  if ((int)input2 < 0) {\n    *(int *)output = (int)finalResult;\n    *(int *)((int)output + 4) = (int)((ulonglong)finalResult >> 0x20) + -0x80000000;\n    *(int *)(output + 1) = (int)tempResult1;\n    *(int *)((int)output + 0xc) = (int)((ulonglong)tempResult1 >> 0x20) + -0x80000000;\n    counter = -counter;\n  }\n  return counter;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_result_08009d78",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "absInput2",
                "iVar9": "counter",
                "uVar10": "tempResult1",
                "uVar11": "tempResult2",
                "uVar12": "finalResult",
                "local_50": "localResult1",
                "uStack_4c": "localResult2",
                "local_40": "localVar1",
                "local_38": "localVar2",
                "local_30": "localVar3"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_product_0800a1bc",
            "code": "\nuint calculateProduct_0800a1bc(uint input_a,uint input_b)\n\n{\n  uint shiftAmount;\n  int iterationCount;\n  uint temp;\n  undefined4 shiftedBits;\n  uint bitMask;\n  uint result;\n  uint remainder;\n  uint subtractValue;\n  uint shiftedInput;\n  int loopIteration;\n  uint tempResult;\n  uint shiftCount;\n  undefined8 funcResult;\n  \n  if ((~input_b & 0x7ff00000) == 0) {\n    funcResult = FUN_08008640(input_a,input_b,input_a,input_b);\n    remainder = FUN_080082d4((int)funcResult,(int)((ulonglong)funcResult >> 0x20),input_a,input_b);\n    return remainder;\n  }\n  if ((int)input_b < 1) {\n    if ((input_b & 0x7fffffff | input_a) == 0) {\n      return input_a;\n    }\n    if (input_b != 0) {\n      funcResult = FUN_080082d0(input_a,input_b,input_a);\n      shiftedBits = (undefined4)((ulonglong)funcResult >> 0x20);\n      remainder = FUN_08008894((int)funcResult,shiftedBits,(int)funcResult,shiftedBits);\n      return remainder;\n    }\n    do {\n      shiftedInput = input_a;\n      remainder = shiftedInput >> 0xb;\n      input_b = input_b - 0x15;\n      input_a = shiftedInput << 0x15;\n    } while (remainder == 0);\n    shiftAmount = input_b;\n    if (-1 < (int)shiftedInput) goto LAB_0800a290;\n    shiftCount = 0x20;\n    bitMask = 0xffffffff;\n    shiftedInput = input_a;\n  }\n  else {\n    shiftAmount = (int)input_b >> 0x14;\n    remainder = input_b;\n    shiftedInput = input_a;\n    if (shiftAmount != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    shiftedInput = 0;\n    shiftCount = remainder;\n    do {\n      bitMask = shiftedInput;\n      remainder = shiftCount << 1;\n      loopIteration = shiftCount << 0xc;\n      shiftedInput = bitMask + 1;\n      shiftCount = remainder;\n    } while (-1 < loopIteration);\n    shiftCount = 0x20 - shiftedInput;\n    input_b = shiftAmount;\n    shiftedInput = input_a << (shiftedInput & 0xff);\n  }\n  remainder = input_a >> (shiftCount & 0xff) | remainder;\n  shiftAmount = input_b - bitMask;\nLAB_0800a1da:\n  remainder = remainder & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftAmount << 0x1f)) {\n    remainder = remainder * 2 - ((int)shiftedInput >> 0x1f);\n    shiftedInput = shiftedInput << 1;\n  }\n  shiftCount = 0;\n  remainder = remainder * 2 - ((int)shiftedInput >> 0x1f);\n  shiftedInput = shiftedInput << 1;\n  shiftAmount = 0;\n  loopIteration = 0x16;\n  bitMask = 0x200000;\n  do {\n    iterationCount = shiftAmount + bitMask;\n    if (iterationCount <= (int)remainder) {\n      remainder = remainder - iterationCount;\n      shiftAmount = iterationCount + bitMask;\n      shiftCount = shiftCount + bitMask;\n    }\n    loopIteration = loopIteration + -1;\n    remainder = remainder * 2 - ((int)shiftedInput >> 0x1f);\n    bitMask = bitMask >> 1;\n    shiftedInput = shiftedInput << 1;\n  } while (loopIteration != 0);\n  iterationCount = 0x20;\n  result = 0x80000000;\n  loopIteration = 0;\n  bitMask = 0;\n  do {\n    temp = result + loopIteration;\n    tempResult = shiftAmount;\n    if ((int)shiftAmount < (int)remainder) {\n      if ((int)temp < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp + result)) {\n          tempResult = shiftAmount + 1;\n        }\n      }\n      subtractValue = remainder - shiftAmount;\n      shiftAmount = tempResult;\n      if (shiftedInput < temp) {\n        subtractValue = subtractValue - 1;\n      }\nLAB_0800a262:\n      loopIteration = temp + result;\n      shiftedInput = shiftedInput - temp;\n      bitMask = bitMask + result;\n      remainder = subtractValue;\n    }\n    else if ((remainder == shiftAmount) && (temp <= shiftedInput)) {\n      if ((int)temp < 0) goto LAB_0800a26a;\n      subtractValue = 0;\n      shiftAmount = remainder;\n      goto LAB_0800a262;\n    }\n    iterationCount = iterationCount + -1;\n    result = result >> 1;\n    remainder = remainder * 2 - ((int)shiftedInput >> 0x1f);\n    shiftedInput = shiftedInput << 1;\n    if (iterationCount == 0) {\n      if ((remainder | shiftedInput) == 0) {\n        bitMask = bitMask >> 1;\n      }\n      else if (bitMask == 0xffffffff) {\n        shiftCount = shiftCount + 1;\n        bitMask = 0;\n      }\n      else {\n        bitMask = bitMask + 1 >> 1;\n      }\n      if ((shiftCount & 1) != 0) {\n        bitMask = bitMask | 0x80000000;\n      }\n      return bitMask;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_product_0800a1bc",
                "param_1": "input_a",
                "param_2": "input_b",
                "uVar1": "shiftAmount",
                "iVar2": "iterationCount",
                "uVar3": "temp",
                "uVar4": "shiftedBits",
                "uVar5": "bitMask",
                "uVar6": "result",
                "uVar7": "remainder",
                "uVar8": "subtractValue",
                "uVar9": "shiftedInput",
                "iVar10": "loopIteration",
                "uVar11": "tempResult",
                "uVar12": "shiftCount",
                "uVar13": "funcResult"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculateResult_0800a348(undefined4 inputA,uint inputB,undefined4 inputC,undefined4 inputD)\n\n{\n  int result;\n  undefined4 tempResult1;\n  undefined4 tempResult2;\n  uint absInputB;\n  undefined8 tempProduct;\n  undefined8 tempResult3;\n  undefined8 tempResult4;\n  undefined4 tempVariable1;\n  undefined4 tempVariable2;\n  undefined4 tempVariable3;\n  undefined4 tempVariable4;\n  \n  absInputB = inputB & 0x7fffffff;\n  if (absInputB < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    tempProduct = FUN_08008640(inputA,inputB,inputA,inputB);\n    tempResult2 = (undefined4)((ulonglong)tempProduct >> 0x20);\n    tempResult1 = (undefined4)tempProduct;\n    tempResult3 = FUN_08008640(tempResult1,tempResult2,0xbe8838d4,0xbda8fae9);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x809c52ad,0x3e927e4f);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x19cb1590,0x3efa01a0);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x16c15177,0x3f56c16c);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x5555554c,0x3fa55555);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n  }\n  else {\n    tempProduct = FUN_08008640(inputA,inputB,inputA,inputB);\n    tempResult2 = (undefined4)((ulonglong)tempProduct >> 0x20);\n    tempResult1 = (undefined4)tempProduct;\n    tempResult3 = FUN_08008640(tempResult1,tempResult2,0xbe8838d4,0xbda8fae9);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x809c52ad,0x3e927e4f);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x19cb1590,0x3efa01a0);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x16c15177,0x3f56c16c);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    tempResult3 = FUN_080082d4((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x5555554c,0x3fa55555);\n    tempResult3 = FUN_08008640((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,tempResult2);\n    if (0x3fd33332 < absInputB) {\n      if (absInputB < 0x3fe90001) {\n        result = absInputB - 0x200000;\n        tempProduct = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        tempProduct = 0x3fe7000000000000;\n      }\n      tempVariable4 = (undefined4)((ulonglong)tempProduct >> 0x20);\n      tempVariable3 = (undefined4)tempProduct;\n      tempProduct = FUN_08008640(tempResult1,tempResult2,0,0x3fe00000);\n      tempProduct = FUN_080082d0((int)tempProduct,(int)((ulonglong)tempProduct >> 0x20),0,result);\n      tempResult3 = FUN_08008640(tempResult1,tempResult2,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n      tempResult4 = FUN_08008640(inputA,inputB,inputC,inputD);\n      tempResult3 = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                           (int)((ulonglong)tempResult4 >> 0x20));\n      tempProduct = FUN_080082d0((int)tempProduct,(int)((ulonglong)tempProduct >> 0x20),(int)tempResult3,\n                           (int)((ulonglong)tempResult3 >> 0x20));\n      tempResult1 = FUN_080082d0(tempVariable3,tempVariable4,(int)tempProduct,(int)((ulonglong)tempProduct >> 0x20));\n      return tempResult1;\n    }\n  }\n  tempVariable2 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n  tempVariable1 = (undefined4)tempResult3;\n  tempResult1 = (undefined4)((ulonglong)tempProduct >> 0x20);\n  tempResult3 = FUN_08008640((int)tempProduct,tempResult1,0,0x3fe00000);\n  tempProduct = FUN_08008640((int)tempProduct,tempResult1,tempVariable1,tempVariable2);\n  tempResult4 = FUN_08008640(inputA,inputB,inputC,inputD);\n  tempProduct = FUN_080082d0((int)tempProduct,(int)((ulonglong)tempProduct >> 0x20),(int)tempResult4,\n                       (int)((ulonglong)tempResult4 >> 0x20));\n  tempProduct = FUN_080082d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempProduct,\n                       (int)((ulonglong)tempProduct >> 0x20));\n  tempResult1 = FUN_080082d0(0,0x3ff00000,(int)tempProduct,(int)((ulonglong)tempProduct >> 0x20));\n  return tempResult1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD",
                "iVar1": "result",
                "uVar2": "tempResult1",
                "uVar3": "tempResult2",
                "uVar4": "absInputB",
                "uVar5": "tempProduct",
                "uVar6": "tempResult3",
                "uVar7": "tempResult4",
                "local_30": "tempVariable1",
                "uStack_2c": "tempVariable2",
                "local_28": "tempVariable3",
                "uStack_24": "tempVariable4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input,undefined8 *result,int len,int offset,int mode,int constants)\n\n{\n  undefined4 *pointer1;\n  uint uVar2;\n  uint uVar3;\n  int counter1;\n  uint *pointer2;\n  undefined4 uVar6;\n  uint **pointerArray;\n  undefined4 uVar8;\n  int counter2;\n  undefined4 *pointer3;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *pointer4;\n  int counter3;\n  int counter4;\n  undefined8 *pointer5;\n  int counter5;\n  undefined4 *pointer6;\n  undefined8 *pointer7;\n  undefined4 uVar20;\n  int counter6;\n  undefined8 *pointer8;\n  undefined4 *pointer9;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 *localResult;\n  int lengthCounter;\n  int dataIndex;\n  int divisionResult;\n  uint *resultArray [2];\n  uint coefficients [20];\n  undefined8 uStack_208;\n  undefined8 rem;\n  int indexArray [38];\n  undefined8 uStack_c8;\n  \n  counter4 = *(int *)(&DAT_0800c060 + mode * 4);\n  counter2 = offset + -1;\n  resultArray[1] = (uint *)result;\n  if (len + 0x14 < 0 == SCARRY4(len,0x14)) {\n    divisionResult = (len + -3) / 0x18;\n    dataIndex = (divisionResult + 1) * -0x18;\n  }\n  else {\n    dataIndex = -0x18;\n    divisionResult = 0;\n  }\n  dataIndex = len + dataIndex;\n  counter5 = divisionResult - counter2;\n  if (-1 < counter4 + counter2) {\n    counter6 = counter4 + counter2 + 1 + counter5;\n    pointer5 = &uStack_208;\n    do {\n      while (counter5 < 0) {\n        counter5 = counter5 + 1;\n        *(undefined4 *)pointer5 = 0;\n        *(undefined4 *)((int)pointer5 + 4) = 0;\n        pointer5 = pointer5 + 1;\n        if (counter5 == counter6) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(constants + counter5 * 4));\n      counter5 = counter5 + 1;\n      *pointer5 = uVar26;\n      pointer5 = pointer5 + 1;\n    } while (counter5 != counter6);\n  }\nLAB_0800a626:\n  pointer3 = (undefined4 *)(input + -8);\n  if (-1 < counter4) {\n    pointer8 = &uStack_208 + offset;\n    counter5 = counter2;\n    pointer5 = &uStack_c8;\n    do {\n      if (counter2 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        pointer9 = pointer3;\n        pointer7 = pointer8;\n        do {\n          pointer6 = pointer9 + 2;\n          uVar25 = FUN_08008640(*pointer6,pointer9[3],*(undefined4 *)(pointer7 + -1),\n                                *(undefined4 *)((int)pointer7 + -4));\n          uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          pointer9 = pointer6;\n          pointer7 = pointer7 + -1;\n        } while (pointer6 != pointer3 + offset * 2);\n      }\n      counter5 = counter5 + 1;\n      *pointer5 = uVar26;\n      pointer8 = pointer8 + 1;\n      pointer5 = pointer5 + 1;\n    } while (counter5 != counter4 + offset);\n  }\n  resultArray[0] = coefficients + counter4 + -1;\n  counter5 = counter4;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + counter5 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + counter5));\n    if (0 < counter5) {\n      pointer5 = &uStack_c8 + counter5;\n      pointer2 = coefficients;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUN_08008640((int)uVar26,uVar6,0,0x3e700000);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUN_08008640((int)uVar25,uVar8,0,0x41700000);\n        FUN_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        pointer8 = pointer5 + -1;\n        uVar6 = *(undefined4 *)pointer8;\n        uVar11 = *(undefined4 *)((int)pointer5 + -4);\n        *pointer2 = uVar2;\n        uVar26 = FUN_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        pointer5 = pointer8;\n        pointer2 = pointer2 + 1;\n      } while (pointer8 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),dataIndex);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUN_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUN_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,0x40200000);\n    uVar26 = FUN_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUN_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (dataIndex < 1) {\n      if (dataIndex == 0) {\n        counter6 = (int)coefficients[counter5 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      counter6 = FUN_08008b4c(uVar8,uVar6,0,0x3fe00000);\n      if (counter6 != 0) {\n        uVar2 = uVar2 + 1;\n        if (counter5 < 1) {\n          uVar26 = FUN_080082d0(0,0x3ff00000,uVar8,uVar6);\n          counter6 = 2;\n          goto LAB_0800a7a4;\n        }\n        counter6 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      counter1 = (int)coefficients[counter5 + -1] >> (0x18U - dataIndex & 0xff);\n      uVar12 = coefficients[counter5 + -1] - (counter1 << (0x18U - dataIndex & 0xff));\n      counter6 = (int)uVar12 >> (0x17U - dataIndex & 0xff);\n      coefficients[counter5 + -1] = uVar12;\n      uVar2 = uVar2 + counter1;\njoined_r0x0800a8b8:\n      if (0 < counter6) {\n        uVar2 = uVar2 + 1;\n        if (counter5 < 1) {\n          bVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (coefficients[0] == 0) {\n            bVar24 = false;\n            if (counter5 != 1) {\n              pointer2 = coefficients;\n              counter1 = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  counter3 = counter1 + 1;\n                  uVar12 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                counter1 = counter1 + 1;\n              } while (counter1 != counter5);\n              bVar24 = false;\n            }\n          }\n          else {\n            counter3 = 1;\n            counter1 = 0;\n            uVar12 = coefficients[0];\nLAB_0800a8e2:\n            coefficients[counter1] = 0x1000000 - uVar12;\n            if (counter3 < counter5) {\n              uVar12 = coefficients[counter3];\n              pointer2 = coefficients + counter3;\n              while( true ) {\n                pointer4 = pointer2 + 1;\n                *pointer2 = 0xffffff - uVar12;\n                if (pointer4 == coefficients + counter5) break;\n                uVar12 = *pointer4;\n                pointer2 = pointer4;\n              }\n            }\n            bVar24 = true;\n          }\n        }\n        if (0 < dataIndex) {\n          if (dataIndex == 1) {\n            coefficients[counter5 + -1] = coefficients[counter5 + -1] & 0x7fffff;\n          }\n          else if (dataIndex == 2) {\n            coefficients[counter5 + -1] = coefficients[counter5 + -1] & 0x3fffff;\n          }\n        }\n        if (counter6 == 2) {\n          uVar26 = FUN_080082d0(0,0x3ff00000,uVar8,uVar6);\n          if (bVar24) {\n            uVar25 = FUN_0800b2e8(0,0x3ff00000,dataIndex);\n            uVar26 = FUN_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    counter1 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (counter1 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-dataIndex);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      counter2 = FUN_08008b4c(uVar8,uVar6,0,0x41700000);\n      if (counter2 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        coefficients[counter5] = uVar12;\n        counter1 = counter5;\n      }\n      else {\n        FUN_08008640(uVar8,uVar6,0,0x3e700000);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUN_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,0x41700000);\n        FUN_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        dataIndex = dataIndex + 0x18;\n        coefficients[counter5] = uVar3;\n        coefficients[counter5 + 1] = uVar12;\n        counter1 = counter5 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    counter1 = counter5 + -1;\n    if (counter4 <= counter1) {\n      uVar12 = 0;\n      pointer2 = coefficients + counter5 + 0x3fffffff;\n      do {\n        pointer4 = pointer2 + -1;\n        uVar12 = uVar12 | *pointer2;\n        pointer2 = pointer4;\n      } while (pointer4 != resultArray[0]);\n      if (uVar12 != 0) break;\n    }\n    if (coefficients[counter4 + -1] == 0) {\n      lengthCounter = 1;\n      pointerArray = resultArray + counter4;\n      do {\n        pointer2 = *pointerArray;\n        lengthCounter = lengthCounter + 1;\n        pointerArray = pointerArray + -1;\n      } while (pointer2 == (uint *)0x0);\n      lengthCounter = counter5 + lengthCounter;\n    }\n    else {\n      lengthCounter = counter5 + 1;\n    }\n    counter6 = counter5 + 1;\n    pointer9 = (undefined4 *)(constants + (counter6 + divisionResult + 0x3fffffff) * 4);\n    pointer5 = &uStack_208 + counter5 + offset;\n    localResult = &uStack_c8 + counter6;\n    do {\n      pointer9 = pointer9 + 1;\n      uVar26 = FUN_0800856c(*pointer9);\n      *pointer5 = uVar26;\n      pointer8 = pointer5 + 1;\n      if (counter2 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        pointer6 = pointer3;\n        while( true ) {\n          pointer5 = pointer5 + -1;\n          pointer1 = pointer6 + 2;\n          uVar26 = FUN_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*pointer1,pointer6[3]);\n          uVar25 = FUN_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (pointer1 == pointer3 + offset * 2) break;\n          uVar26 = *pointer5;\n          pointer6 = pointer1;\n        }\n      }\n      *localResult = uVar25;\n      counter6 = counter6 + 1;\n      counter5 = lengthCounter;\n      pointer5 = pointer8;\n      localResult = localResult + 1;\n    } while (counter6 <= lengthCounter);\n  } while( true );\n  dataIndex = dataIndex + -0x18;\n  if (coefficients[counter1] == 0) {\n    pointer2 = coefficients + counter5 + 0x3ffffffe;\n    do {\n      uVar12 = *pointer2;\n      counter1 = counter1 + -1;\n      dataIndex = dataIndex + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,0x3ff00000,dataIndex);\n  if (counter1 < 0) {\n    if (2 < mode) {\n      if (mode == 3) {\n        uVar26 = 0;\nLAB_0800abe4:\n        if (counter6 == 0) {\n          *resultArray[1] = (undefined4)rem;\n          *(int *)((int)resultArray[1] + 4) = rem._4_4_;\n          *(undefined8 *)((int)resultArray[1] + 0x10) = uVar26;\n          *(int *)((int)resultArray[1] + 8) = indexArray[0];\n          *(int *)((int)resultArray[1] + 0xc) = indexArray[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)resultArray[1] + 0x10) = (int)uVar26;\n        *(int *)((int)resultArray[1] + 8) = indexArray[0];\n        *(int *)((int)resultArray[1] + 0x14) = (int)((ulonglong)uVar26 >> 0x20) + -0x80000000;\n        *(int *)((int)resultArray[1] + 4) = rem._4_4_ + -0x80000000;\n        *(int *)((int)resultArray[1] + 0xc) = indexArray[1] + -0x80000000;\n        *resultArray[1] = (undefined4)rem;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (mode < 1) {\n      if (mode != 0) goto LAB_0800ab0e;\n      uVar26 = 0;\nLAB_0800aafc:\n      counter2 = (int)((ulonglong)uVar26 >> 0x20);\n      if (counter6 != 0) {\n        counter2 = counter2 + -0x80000000;\n      }\n      *resultArray[1] = (int)uVar26;\n      *(int *)((int)resultArray[1] + 4) = counter2;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar26 = 0;\n  }\n  else {\n    pointer8 = &uStack_c8 + counter1;\n    pointer2 = coefficients + counter1 + 1;\n    pointer5 = &uStack_c8 + counter1 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      pointer2 = pointer2 + -1;\n      uVar25 = FUN_0800856c(*pointer2);\n      uVar25 = FUN_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      pointer5 = pointer5 + -1;\n      *pointer5 = uVar25;\n      uVar26 = FUN_08008640((int)uVar26,uVar8,0,0x3e700000);\n    } while (pointer2 != coefficients);\n    counter2 = 0;\n    do {\n      if (counter4 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar8 = 0x40000000;\n        uVar6 = 0x3ff921fb;\n        uVar26 = 0;\n        counter5 = 0;\n        pointer5 = pointer8;\n        pointer3 = &DAT_0800c028;\n        while( true ) {\n          uVar25 = FUN_08008640(*(undefined4 *)pointer5,*(undefined4 *)((int)pointer5 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          counter5 = counter5 + 1;\n          if ((counter4 < counter5) || (counter2 < counter5)) break;\n          uVar8 = *pointer3;\n          uVar6 = pointer3[1];\n          pointer5 = pointer5 + 1;\n          pointer3 = pointer3 + 2;\n        }\n      }\n      bVar24 = counter2 != counter1;\n      *(int *)(&rem + counter2) = (int)uVar26;\n      *(int *)((int)&rem + (counter2 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      pointer8 = pointer8 + -1;\n      counter2 = counter2 + 1;\n    } while (bVar24);\n    if (2 < mode) {\n      if (mode == 3) {\n        if (counter1 != 0) {\n          pointer5 = &rem + counter1;\n          uVar26 = CONCAT44(*(undefined4 *)((int)&rem + (counter1 * 2 + 1) * 4),\n                            *(undefined4 *)pointer5);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n            uVar8 = (undefined4)uVar26;\n            uVar11 = *(undefined4 *)(pointer5 + -1);\n            uVar20 = *(undefined4 *)((int)pointer5 + -4);\n            uVar26 = FUN_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar25 = FUN_080082d0(uVar11,uVar20,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n            uVar25 = FUN_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),uVar8,uVar6);\n            *pointer5 = uVar25;\n            pointer5 = pointer5 + -1;\n            *pointer5 = uVar26;\n          } while (&rem != pointer5);\n          if (1 < counter1) {\n            pointer5 = &rem + counter1;\n            uVar26 = CONCAT44(*(undefined4 *)((int)&rem + (counter1 * 2 + 1) * 4),\n                              *(undefined4 *)pointer5);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n              uVar8 = (undefined4)uVar26;\n              uVar11 = *(undefined4 *)(pointer5 + -1);\n              uVar20 = *(undefined4 *)((int)pointer5 + -4);\n              uVar26 = FUN_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar25 = FUN_080082d0(uVar11,uVar20,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n              uVar25 = FUN_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),uVar8,uVar6);\n              *pointer5 = uVar25;\n              pointer5 = pointer5 + -1;\n              *pointer5 = uVar26;\n            } while (&rem + 1 != pointer5);\n            uVar26 = 0;\n            pointer5 = &rem + counter1 + 1;\n            do {\n              pointer8 = pointer5 + -1;\n              uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),\n                                    *(undefined4 *)pointer8,*(undefined4 *)((int)pointer5 + -4));\n              pointer5 = pointer8;\n            } while (&rem + 2 != pointer8);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar26 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (mode < 1) {\n      if (mode != 0) goto LAB_0800ab0e;\n      uVar26 = 0;\n      pointer5 = &rem + counter1 + 1;\n      do {\n        pointer8 = pointer5 + -1;\n        uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*(undefined4 *)pointer8,\n                              *(undefined4 *)((int)pointer5 + -4));\n        pointer5 = pointer8;\n      } while (&rem != pointer8);\n      goto LAB_0800aafc;\n    }\n    uVar26 = 0;\n    pointer5 = &rem + counter1 + 1;\n    do {\n      pointer8 = pointer5 + -1;\n      uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*(undefined4 *)pointer8,\n                            *(undefined4 *)((int)pointer5 + -4));\n      pointer5 = pointer8;\n    } while (&rem != pointer8);\n  }\n  counter2 = (int)((ulonglong)uVar26 >> 0x20);\n  uVar8 = (undefined4)uVar26;\n  if (counter6 == 0) {\n    *(undefined8 *)resultArray[1] = uVar26;\n    uVar26 = FUN_080082d0((undefined4)rem,rem._4_4_,uVar8,counter2);\n    if (counter1 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    counter2 = 1;\n    pointer5 = &rem;\n    do {\n      uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),\n                            *(undefined4 *)(pointer5 + 1),*(undefined4 *)((int)pointer5 + 0xc));\n      counter2 = counter2 + 1;\n      pointer5 = pointer5 + 1;\n    } while (counter2 <= counter1);\n    if (counter6 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *resultArray[1] = uVar8;\n    *(int *)((int)resultArray[1] + 4) = counter2 + -0x80000000;\n    uVar26 = FUN_080082d0((undefined4)rem,rem._4_4_,uVar8,counter2);\n    if (0 < counter1) goto LAB_0800ad04;\n  }\n  uVar26 = CONCAT44((int)((ulonglong)uVar26 >> 0x20) + -0x80000000,(int)uVar26);\nLAB_0800ad26:\n  *(undefined8 *)((int)resultArray[1] + 8) = uVar26;\n  return uVar2 & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input",
                "param_2": "result",
                "param_3": "len",
                "param_4": "offset",
                "param_5": "mode",
                "param_6": "constants",
                "puVar1": "pointer1",
                "iVar4": "counter1",
                "puVar5": "pointer2",
                "ppuVar7": "pointerArray",
                "iVar9": "counter2",
                "puVar10": "pointer3",
                "puVar13": "pointer4",
                "iVar14": "counter3",
                "iVar15": "counter4",
                "iVar17": "counter5",
                "iVar21": "counter6",
                "puVar16": "pointer5",
                "puVar18": "pointer6",
                "puVar19": "pointer7",
                "puVar22": "pointer8",
                "puVar23": "pointer9",
                "local_284": "localResult",
                "local_280": "lengthCounter",
                "local_270": "dataIndex",
                "local_26c": "divisionResult",
                "local_260": "resultArray",
                "local_258": "coefficients",
                "local_168": "rem",
                "local_160": "indexArray"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "perform_calculation_0800adf0",
            "code": "\nundefined4\nperformCalculation_0800adf0(undefined4 input1,uint input2,undefined4 input3,undefined4 input4,int flag)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined8 tempVar1;\n  undefined8 tempVar2;\n  \n  if (((input2 & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input1;\n  }\n  tempVar1 = FUN_08008640(input1,input2,input1);\n  var3 = (undefined4)((ulonglong)tempVar1 >> 0x20);\n  var2 = (undefined4)tempVar1;\n  tempVar1 = FUN_08008640(input1,input2,var2,var3);\n  var4 = (undefined4)((ulonglong)tempVar1 >> 0x20);\n  var1 = (undefined4)tempVar1;\n  tempVar1 = FUN_08008640(var2,var3,0x5acfd57c,0x3de5d93a);\n  tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),var2,var3);\n  tempVar1 = FUN_080082d4((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),var2,var3);\n  tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),var2,var3);\n  tempVar1 = FUN_080082d4((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x1110f8a6,0x3f811111);\n  var5 = (undefined4)((ulonglong)tempVar1 >> 0x20);\n  if (flag != 0) {\n    tempVar2 = FUN_08008640(input3,input4,0,0x3fe00000);\n    tempVar1 = FUN_08008640(var1,var4,(int)tempVar1,var5);\n    tempVar1 = FUN_080082d0((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20),(int)tempVar1,\n                         (int)((ulonglong)tempVar1 >> 0x20));\n    tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),var2,var3);\n    tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),input3,input4);\n    tempVar2 = FUN_08008640(var1,var4,0x55555549,0x3fc55555);\n    tempVar1 = FUN_080082d4((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),(int)tempVar2,\n                         (int)((ulonglong)tempVar2 >> 0x20));\n    var2 = FUN_080082d0(input1,input2,(int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n    return var2;\n  }\n  tempVar1 = FUN_08008640(var2,var3,(int)tempVar1,var5);\n  tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x55555549,0x3fc55555);\n  tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),var1,var4);\n  var2 = FUN_080082d4((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),input1,input2);\n  return var2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "perform_calculation_0800adf0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3",
                "uVar5": "var4",
                "uVar6": "var5",
                "uVar7": "tempVar1",
                "uVar8": "tempVar2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  int result;\n  undefined4 temp5;\n  uint temp6;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined4 temp9;\n  \n  temp7 = CONCAT44(input2,input1);\n  temp6 = input2 & 0x7fffffff;\n  if (temp6 < 0x44100000) {\n    if (temp6 < 0x3fdc0000) {\n      if (temp6 < 0x3e200000) {\n        temp8 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        result = FUN_08008b60((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return input1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      temp7 = FUNC_0800b2cc();\n      temp4 = (undefined4)((ulonglong)temp7 >> 0x20);\n      temp1 = (undefined4)temp7;\n      if (temp6 < 0x3ff30000) {\n        if (temp6 < 0x3fe60000) {\n          temp7 = FUN_080082d4(temp1,temp4,temp1,temp4);\n          temp7 = FUN_080082d0((int)temp7,(int)((ulonglong)temp7 >> 0x20),0,0x3ff00000);\n          temp8 = FUN_080082d4(temp1,temp4,0,0x40000000);\n          temp7 = FUN_08008894((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                               (int)((ulonglong)temp8 >> 0x20));\n          result = 0;\n        }\n        else {\n          temp7 = FUN_080082d0(temp1,temp4,0,0x3ff00000);\n          temp8 = FUN_080082d4(temp1,temp4,0,0x3ff00000);\n          temp7 = FUN_08008894((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                               (int)((ulonglong)temp8 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (temp6 < 0x40038000) {\n        temp7 = FUN_080082d0(temp1,temp4,0,0x3ff80000);\n        temp8 = FUN_08008640(temp1,temp4,0,0x3ff80000);\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x3ff00000);\n        temp7 = FUN_08008894((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                             (int)((ulonglong)temp8 >> 0x20));\n        result = 2;\n      }\n      else {\n        temp7 = FUN_08008894(0,0xbff00000,temp1,temp4);\n        result = 3;\n      }\n    }\n    temp9 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp5 = (undefined4)temp7;\n    temp7 = FUN_08008640(temp5,temp9,temp5);\n    temp2 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp1 = (undefined4)temp7;\n    temp7 = FUN_08008640(temp1,temp2,temp1,temp2);\n    temp3 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp4 = (undefined4)temp7;\n    temp7 = FUN_08008640(temp4,temp3,0xe322da11,0x3f90ad3a);\n    temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0x24760deb,0x3fa97b4b);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp4,temp3);\n    temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0xa0d03d51,0x3fb10d66);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp4,temp3);\n    temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0xc54c206e,0x3fb745cd);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp4,temp3);\n    temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0x920083ff,0x3fc24924);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp4,temp3);\n    temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0x5555550d,0x3fd55555);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp1,temp2);\n    temp1 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp8 = FUN_08008640(temp4,temp3,0x2c6a6c2f,0xbfa2b444);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x52defd9a,0x3fadde2d);\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),temp4,temp3);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),temp4,temp3);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0xfe231671,0x3fbc71c6);\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),temp4,temp3);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x9998ebc4,0x3fc99999);\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),temp4,temp3);\n    temp4 = (undefined4)((ulonglong)temp8 >> 0x20);\n    if (result == -1) {\n      temp7 = FUN_080082d4((int)temp7,temp1,(int)temp8,temp4);\n      temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp5,temp9);\n      result = FUN_080082d0(temp5,temp9,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n      return result;\n    }\n    temp7 = FUN_080082d4((int)temp7,temp1,(int)temp8,temp4);\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp5,temp9);\n    temp7 = FUN_080082d0((int)temp7,(int)((ulonglong)temp7 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + result * 8),\n                         *(undefined4 *)(&UNK_0800c094 + result * 8));\n    temp7 = FUN_080082d0((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp5,temp9);\n    result = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + result * 8),\n                         *(undefined4 *)(&UNK_0800c074 + result * 8),(int)temp7,\n                         (int)((ulonglong)temp7 >> 0x20));\n    if ((int)input2 < 0) {\n      return result;\n    }\n  }\n  else {\n    if ((0x7ff00000 < temp6) || ((temp6 == 0x7ff00000 && (input1 != 0)))) {\n      result = FUN_080082d4(input1,input2,input1);\n      return result;\n    }\n    result = 0x54442d18;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "iVar5": "result",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "temp8",
                "local_2c": "temp9"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "calculate_shifted_value_0800b2d4",
            "code": "\nuint calculateShiftedValue_0800b2d4(undefined4 inputValue,uint bitmask)\n\n{\n  return (bitmask | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "calculate_shifted_value_0800b2d4",
                "param_1": "inputValue",
                "param_2": "bitmask"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "get_return_value_0800b2e0",
            "code": "\nundefined4 getReturnValue_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "get_return_value_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_value_0800b2e8",
            "code": "\nuint calculateValue_0800b2e8(uint inputValue1,uint inputValue2,int modifier,undefined4 constantParam)\n\n{\n  uint shiftedValue;\n  int modifiedValue;\n  uint upperBits;\n  undefined8 combinedValues;\n  \n  combinedValues = combine64Bits(inputValue2,inputValue1);\n  shiftedValue = (inputValue2 << 1) >> 0x15;\n  if (shiftedValue == 0) {\n    if ((inputValue1 | inputValue2 & 0x7fffffff) == 0) {\n      return inputValue1;\n    }\n    combinedValues = FUN_08008640(inputValue1,inputValue2,0,0x43500000);\n    if (modifier < -50000) goto LAB_0800b34a;\n    shiftedValue = ((uint)((int)((ulonglong)combinedValues >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedValue == 0x7ff) {\n    shiftedValue = FUN_080082d4(inputValue1,inputValue2,inputValue1,inputValue2,constantParam);\n    return shiftedValue;\n  }\n  upperBits = (uint)((ulonglong)combinedValues >> 0x20);\n  modifiedValue = shiftedValue + modifier;\n  if (modifiedValue < 0x7ff) {\n    if (0 < modifiedValue) {\n      return (uint)combinedValues;\n    }\n    if (modifiedValue + 0x35 < 0 == isCarry(modifiedValue,0x35)) {\n      shiftedValue = FUN_08008640((uint)combinedValues,upperBits & 0x800fffff | (modifiedValue + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedValue;\n    }\n    if (modifier < 0xc351) {\n      combinedValues = combine64Bits(upperBits & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedValue = FUN_08008640((int)combinedValues,(int)((ulonglong)combinedValues >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedValue;\n    }\n  }\n  shiftedValue = FUN_08008640(0x8800759c,upperBits & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_value_0800b2e8",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "modifier",
                "param_4": "constantParam",
                "uVar1": "shiftedValue",
                "iVar2": "modifiedValue",
                "uVar3": "upperBits",
                "uVar4": "combinedValues",
                "SCARRY4": "isCarry",
                "CONCAT44": "combine64Bits"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_global_variable_0800b3dc",
            "code": "\nundefined4 getGlobalVariable_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_global_variable_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_function_set_twice_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunctionSetTwice_0800b3e8(void)\n\n{\n  int counter;\n  code **functionPointers;\n  \n  FUNC_0800b5b0();\n  counter = 0;\n  functionPointers = (code **)&DAT_0800c0b4;\n  do {\n    counter = counter + 1;\n    (**functionPointers)();\n    functionPointers = functionPointers + 1;\n  } while (counter != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_function_set_twice_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "functionPointers"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_with_offset_0800b430",
            "code": "\nvoid memset_with_offset_0800b430(undefined4 *destination,undefined value,uint size)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *dest_ptr_2;\n  uint temp_size;\n  undefined4 concat_value;\n  bool is_zero_size;\n  \n  if (((uint)destination & 3) != 0) {\n    temp_size = size - 1;\n    dest_ptr = destination;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      destination = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      size = temp_size;\n      if (((uint)destination & 3) == 0) break;\n      is_zero_size = temp_size == 0;\n      temp_size = temp_size - 1;\n      dest_ptr = destination;\n      if (is_zero_size) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    concat_value = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      dest_ptr = destination + 4;\n      do {\n        dest_ptr[-4] = concat_value;\n        dest_ptr[-3] = concat_value;\n        dest_ptr[-2] = concat_value;\n        dest_ptr[-1] = concat_value;\n        dest_ptr = dest_ptr + 4;\n      } while (dest_ptr != (undefined4 *)((int)destination + (size - 0x10 & 0xfffffff0) + 0x20));\n      temp_size = size & 0xc;\n      destination = destination + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (temp_size == 0) goto joined_r0x0800b4a8;\n    }\n    dest_ptr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)destination);\n    do {\n      dest_ptr_2 = destination + 1;\n      *destination = concat_value;\n      destination = dest_ptr_2;\n    } while (dest_ptr != dest_ptr_2);\n    size = size & 3;\n    destination = dest_ptr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    dest_ptr = destination;\n    do {\n      dest_ptr_2 = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      dest_ptr = dest_ptr_2;\n    } while ((undefined4 *)(size + (int)destination) != dest_ptr_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_with_offset_0800b430",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "dest_ptr",
                "puVar2": "dest_ptr_2",
                "uVar3": "temp_size",
                "uVar4": "concat_value",
                "bVar5": "is_zero_size"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int updateType,undefined4 newValue,undefined4 value1,undefined4 value2)\n\n{\n  undefined *dataPtr;\n  undefined4 returnValue;\n  uint bitMask;\n  uint dataIndex;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPtr = DAT_20000168;\n  dataIndex = *(uint *)(DAT_20000168 + 4);\n  if ((int)dataIndex < 0x20) {\n    if (updateType != 0) {\n      *(undefined4 *)(DAT_20000168 + dataIndex * 4 + 0x88) = value1;\n      bitMask = 1 << (dataIndex & 0xff);\n      *(uint *)(dataPtr + 0x188) = *(uint *)(dataPtr + 0x188) | bitMask;\n      *(undefined4 *)(dataPtr + dataIndex * 4 + 0x108) = value2;\n      if (updateType == 2) {\n        *(uint *)(dataPtr + 0x18c) = bitMask | *(uint *)(dataPtr + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPtr + 4) = dataIndex + 1;\n    *(undefined4 *)(dataPtr + (dataIndex + 2) * 4) = newValue;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "updateType",
                "param_2": "newValue",
                "param_3": "value1",
                "param_4": "value2",
                "puVar1": "dataPtr",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "dataIndex"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 206238,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}