{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_limits_enabled_status_0800192c",
                "PTR_settings_08001954": "settings",
                "PTR_limits_enabled_08001958": "limits_enabled"
            },
            "code": "void check_limits_enabled_status_0800192c(void)\n{\n  if ((PTR_settings_08001954[0x28] & 8) == 0) {\n    *(int *)PTR_limits_enabled_08001958 = 0;\n  }\n  else {\n    *(int *)PTR_limits_enabled_08001958 = 1;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "grbl_main",
                "settings_store_global_setting"
            ],
            "imported": false,
            "current_name": "check_limits_enabled_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "set_priority_group_08006950",
                "PriorityGroup": "priority_group",
                "reg_value": "reg_value",
                "PriorityGroupTmp": "priority_group_tmp",
                "DAT_08006994": "DAT_08006994",
                "PTR_": "PTR_"
            },
            "code": "void set_priority_group_08006950(uint32_t priority_group)\n{\n  uint32_t reg_value;\n  uint32_t priority_group_tmp;\n  uint32_t *register_ptr = (uint32_t *)(DAT_08006994 + 0xc);\n  uint32_t priority_bits = (priority_group & 7) << 8;\n  uint32_t priority_mask = 0xf8ff;\n  uint32_t priority_value = 0x5fa0000;\n  *register_ptr = (*register_ptr & priority_mask) | priority_bits | priority_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "HAL_NVIC_SetPriorityGrouping"
            ],
            "imported": false,
            "current_name": "set_priority_group_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "calculateValue_08008ba0",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "result1",
                "iVar2": "tempValue1",
                "uVar3": "result2"
            },
            "code": "uint calculateValue_08008ba0(uint inputValue1, uint inputValue2) {\n  uint result1;\n  int tempValue1;\n  uint result2;\n  \n  tempValue1 = inputValue2 * 2 + 0x200000;\n  if (inputValue2 * 2 < 0xffe00000) {\n    if (-1 < tempValue1) {\n      return 0;\n    }\n    result1 = tempValue1 >> 0x15;\n    result2 = -result1 - 0x3e1;\n    if (result1 < 0xfffffc20 && result2 != 0) {\n      result1 = (inputValue2 << 0xb | 0x80000000 | inputValue1 >> 0x15) >> (result2 & 0xff);\n      if ((inputValue2 & 0x80000000) != 0) {\n        result1 = -result1;\n      }\n      return result1;\n    }\n  }\n  else if ((inputValue1 | inputValue2 << 0xc) != 0) {\n    return 0;\n  }\n  inputValue2 = inputValue2 & 0x80000000;\n  if (inputValue2 == 0) {\n    inputValue2 = 0x7fffffff;\n  }\n  return inputValue2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "plan_buffer_line",
                "__kernel_rem_pio2",
                "__kernel_cos",
                "gc_execute_line",
                "lround",
                "__kernel_sin",
                "__ieee754_rem_pio2",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculateValue_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "HAL_DeInit"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005b90": {
            "renaming": {
                "FUN_08005b90": "clear_bit_in_uint32_08005b90",
                "DAT_08005ba8": "ptr_data"
            },
            "code": "void clear_bit_in_uint32_08005b90(uint32_t* DAT_08005ba8){\n    uint32_t* ptr_flag = DAT_08005ba8 + 1;\n    *ptr_flag &= ~(1 << 2);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b90",
            "calling": [],
            "imported": false,
            "current_name": "clear_bit_in_uint32_08005b90"
        },
        "FUN_080071d0": {
            "renaming": {
                "FUN_080071d0": "configure_GPIO_pin_080071d0",
                "GPIOx": "GPIO_port",
                "GPIO_Pin": "pin_config",
                "uVar1": "bit_mask",
                "uVar2": "is_bit_set",
                "tmp": "temporary",
                "iocurrent": "current_io",
                "ioposition": "position_io",
                "position": "position",
                "DAT_08007308": "dat_ptr",
                "*DAT_0800730c": "dat_ptr_0",
                "DAT_0800730c[1]": "dat_ptr_1",
                "DAT_0800730c[2]": "dat_ptr_2",
                "DAT_0800730c[3]": "dat_ptr_3"
            },
            "code": "void configure_GPIO_pin_080071d0(GPIO_TypeDef *GPIOx, uint32_t GPIO_Pin)\n{\n  uint32_t position;\n  for (position = 0; position < 0x10; position++) {\n    uint32_t bit_mask = 1 << position;\n    uint32_t is_bit_set = bit_mask & GPIO_Pin;\n    if (is_bit_set == bit_mask) {\n      GPIOx->MODER &= ~(3 << (position * 2));\n      GPIOx->AFR[position / 8] &= ~(0xf << ((position % 8) * 4));\n      GPIOx->OSPEEDR &= ~(3 << (position * 2));\n      GPIOx->OTYPER &= ~(1 << position);\n      GPIOx->PUPDR &= ~(3 << (position * 2));\n      uint32_t* dat = (uint32_t *)(0x08007308 + ((position >> 2) + 2) * 4);\n      *dat &= ~(0xf << ((position % 4) * 4));\n      *(uint32_t *)(0x0800730c) = ~is_bit_set & *(uint32_t *)(0x0800730c);\n      *(uint32_t *)(0x08007310) = ~is_bit_set & *(uint32_t *)(0x08007310);\n      *(uint32_t *)(0x08007314) = ~is_bit_set & *(uint32_t *)(0x08007314);\n      *(uint32_t *)(0x08007318) = ~is_bit_set & *(uint32_t *)(0x08007318);\n    }\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071d0",
            "calling": [],
            "imported": false,
            "current_name": "configure_GPIO_pin_080071d0"
        },
        "FUN_08008e60": {
            "renaming": {
                "FUN_08008e60": "calculate_hash_08008e60",
                "param_1": "key",
                "param_2": "value",
                "uVar1": "hash_value",
                "uVar2": "temp_value",
                "iVar3": "leading_zeroes_count",
                "uVar4": "shift_value",
                "iVar5": "multiplier_value"
            },
            "code": "uint calculate_hash_08008e60(uint key, uint value)\n{\n  uint hash_value;\n  uint temp_value;\n  int leading_zeroes_count;\n  uint shift_value;\n  int multiplier_value;\n  \n  if ((key | value) == 0) {\n    return key;\n  }\n  hash_value = key;\n  temp_value = value;\n  if (value == 0) {\n    hash_value = 0;\n    temp_value = key;\n  }\n  multiplier_value = 0x5b000000;\n  if (value == 0) {\n    multiplier_value = 0x4b000000;\n  }\n  leading_zeroes_count = count_leading_zeroes(temp_value);\n  shift_value = leading_zeroes_count - 8;\n  multiplier_value = multiplier_value + -0x800000 + shift_value * -0x800000;\n  if (leading_zeroes_count < 8) {\n    shift_value = temp_value << (leading_zeroes_count + 0x18U & 0xff);\n    temp_value = multiplier_value + ((temp_value >> (0x20 - (leading_zeroes_count + 0x18U) & 0xff)) - ((int)shift_value >> 0x1f));\n    if ((hash_value | shift_value << 1) == 0) {\n      temp_value = temp_value & ~(shift_value >> 0x1f);\n    }\n    return temp_value;\n  }\n  shift_value = hash_value << (shift_value & 0xff);\n  temp_value = multiplier_value + (temp_value << (shift_value & 0xff)) + (hash_value >> (0x20 - shift_value & 0xff)) + (uint)(0x7fffffff < (hash_value << shift_value));\n  if (shift_value == 0x80000000) {\n    temp_value = temp_value & 0xfffffffe;\n  }\n  return temp_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e60",
            "calling": [],
            "imported": false,
            "current_name": "calculate_hash_08008e60"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "call_or_not_08005984",
                "ticks": "ticks",
                "uVar1": "result",
                "PTR_noHyperCall_080059b0": "noHyperCall"
            },
            "code": "uint32_t call_or_not_08005984(uint32_t ticks)\n{\n  uint32_t result = 0;\n  int* PTR_noHyperCall_080059b0 = PTR_PTR_noHyperCall_080059b0_080059b0;\n  if (*PTR_noHyperCall_080059b0 == 0) {\n    result = aflCall(1, ticks, 0);\n  }\n  return result;\n}",
            "called": [
                "aflCall"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "call_or_not_08005984"
        },
        "FUN_080082c8": {
            "renaming": {
                "FUN_080082c8": "FUNC_080082c8"
            },
            "code": "\nulonglong FUNC_080082c8(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar4 = param_2 ^ 0x80000000;\n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((uVar4 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = uVar4;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((uVar4 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        uVar4 = param_4;\n      }\n      return CONCAT44(uVar4,param_1);\n    }\n    if (uVar4 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(uVar4,uVar4) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(uVar4 + 0x100000,param_1);\n    }\n    uVar4 = uVar4 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(uVar4 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar12 = uVar4;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar12 = param_4;\n    param_3 = param_1;\n    param_4 = uVar4;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar12,uVar8);\n  }\n  uVar9 = uVar12 & 0xfffff | 0x100000;\n  if ((uVar12 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar4 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar4 = uVar4 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar5 = uVar4 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar5;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar4 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar11 = uVar4 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar4 = (int)uVar4 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar4;\n    uVar9 = uVar9 + ((int)uVar4 >> 0x1f) + (uint)CARRY4(uVar8,uVar4);\n  }\n  uVar4 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | uVar4,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar3 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar3 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar3 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar3 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar3 = uVar3 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | uVar4,uVar3);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar3 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(uVar4 | uVar7 >> (uVar10 & 0xff),\n                    uVar3 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [
                "__aeabi_dadd"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082c8",
            "calling": [],
            "imported": false,
            "current_name": "FUNC_080082c8"
        },
        "FUN_08006718": {
            "renaming": {
                "FUN_08006718": "configure_RCC_oscillators_08006718",
                "RCC_OscInitTypeDef": "RCC_Oscillator_Configuration",
                "RCC_OscInitStruct": "oscillator_config",
                "DAT_080068b8": "rcc_data_array",
                "uVar1": "leading_zeroes_count",
                "result": "result_0",
                "result_1": "result_1",
                "result_2": "result_2",
                "result_3": "result_3",
                "result_4": "result_4",
                "result_5": "result_5",
                "result_6": "result_6",
                "result_7": "result_7"
            },
            "code": "void configure_RCC_oscillators_08006718(RCC_OscInitTypeDef *RCC_OscInitStruct)\n{\n  uint32_t rcc_data_1 = *DAT_080068b8;\n  uint32_t rcc_data_2 = DAT_080068b8[1];\n  uint32_t rcc_data_3 = DAT_080068b8[0x1c];\n  uint32_t rcc_data_4 = DAT_080068b8[0x1d];\n  RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;\n  if ((rcc_data_1 & RCC_FLAG_HSECSS) == RCC_FLAG_HSECSS) {\n    RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS_DIG;\n  }\n  else if ((rcc_data_1 & RCC_FLAG_HSE) == RCC_FLAG_HSE) {\n    RCC_OscInitStruct->HSEState = RCC_HSE_ON;\n  }\n  else {\n    RCC_OscInitStruct->HSEState = RCC_HSE_OFF;\n  }\n  if ((rcc_data_1 & RCC_FLAG_HSI) == RCC_FLAG_HSI) {\n    RCC_OscInitStruct->HSIState = RCC_HSI_ON;\n  }\n  else {\n    RCC_OscInitStruct->HSIState = RCC_HSI_OFF;\n  }\n  RCC_OscInitStruct->HSICalibrationValue = (rcc_data_1 & RCC_CALIBRATION_VALUE_MASK) >> __builtin_ctz(RCC_CALIBRATION_VALUE_MASK);\n  if ((rcc_data_3 & RCC_FLAG_LSECSS) == RCC_FLAG_LSECSS) {\n    RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_DIG;\n  }\n  else if ((rcc_data_3 & RCC_FLAG_LSE) == RCC_FLAG_LSE) {\n    RCC_OscInitStruct->LSEState = RCC_LSE_ON;\n  }\n  else {\n    RCC_OscInitStruct->LSEState = RCC_LSE_OFF;\n  }\n  if ((rcc_data_4 & RCC_FLAG_LSI) == RCC_FLAG_LSI) {\n    RCC_OscInitStruct->LSIState = RCC_LSI_ON;\n  }\n  else {\n    RCC_OscInitStruct->LSIState = RCC_LSI_OFF;\n  }\n  if ((rcc_data_1 & RCC_FLAG_PLLRDY) == RCC_FLAG_PLLRDY) {\n    RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;\n  }\n  else {\n    RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;\n  }\n  RCC_OscInitStruct->PLL.PLLSource = (rcc_data_2 & RCC_PLLSOURCE_MASK) != 0 ? RCC_PLLSOURCE_HSE : RCC_PLLSOURCE_HSI;\n  RCC_OscInitStruct->PLL.PLLM = rcc_data_2 & RCC_PLLM_MASK;\n  RCC_OscInitStruct->PLL.PLLN = (rcc_data_2 & RCC_PLLN_MASK) >> __builtin_ctz(RCC_PLLN_MASK);\n  RCC_OscInitStruct->PLL.PLLP = (((rcc_data_2 & RCC_PLLP_MASK) >> __builtin_ctz(RCC_PLLP_MASK)) + 1) * 2;\n  RCC_OscInitStruct->PLL.PLLQ = (rcc_data_2 & RCC_PLLQ_MASK) >> __builtin_ctz(RCC_PLLQ_MASK);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006718",
            "calling": [],
            "imported": false,
            "current_name": "configure_RCC_oscillators_08006718"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_timer_interrupt_flag_08007a10",
                "tim": "timer",
                "DAT_40000000": "interrupt_flag_register",
                "DAT_08007a64": "unknown_variable",
                "DAT_08007a68": "unknown_variable_2",
                "DAT_08007a6c": "unknown_variable_3"
            },
            "code": "void set_timer_interrupt_flag_08007a10(TIM_TypeDef *timer) {\n  uint32_t *DAT_40000000 = (uint32_t *)&DAT_40000000;\n  if (timer == (TIM_TypeDef *)&DAT_40000000) {\n    *DAT_40000000 |= 1;\n  }\n  else if (timer == DAT_08007a68) {\n    *DAT_40000000 |= 2;\n  }\n  else if (timer == DAT_08007a6c) {\n    *DAT_40000000 |= 4;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "g540_timer_init",
                "step_timer_init"
            ],
            "imported": false,
            "current_name": "set_timer_interrupt_flag_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "calculate_0800856c",
                "param_1": "input",
                "uVar1": "negative",
                "uVar2": "abs_input",
                "uVar3": "shift_remainder",
                "iVar4": "shift_amount",
                "uVar5": "shift_amount_2",
                "uVar6": "negative",
                "in_r12": "unused",
                "bVar7": "shift_overflow",
                "bVar8": "shift_remainder_2 == 0",
                "bVar9": "shift_remainder_2 < 0"
            },
            "code": "ulonglong calculate_0800856c(uint input) {\n  uint negative = 0x80000000;\n  uint abs_input = input;\n  if ((int)input < 0) {\n    abs_input = -input;\n  }\n  uint shift_amount = count_leading_zeroes(abs_input) + 21;\n  bool shift_overflow = shift_amount < 32;\n  uint shift_remainder = shift_overflow ? 0 : shift_amount - 32;\n  uint shifted_input = abs_input << (shift_overflow ? shift_amount : 12);\n  ulonglong result;\n  if (shift_overflow) {\n    result = (ulonglong)shifted_input | ((ulonglong)negative & 0xffffffff00000000);\n  } else {\n    result = ((ulonglong)shifted_input | ((ulonglong)negative & 0xffffffff00000000)) << shift_remainder;\n    result |= shift_remainder != 0 ? (ulonglong)0 << shift_remainder : 0;\n  }\n  if (shift_amount < 1075) {\n    return result | ((ulonglong)abs_input << (1075 - shift_amount) & 0xffffffff00000000);\n  }\n  uint shift_amount_2 = ~(shift_amount - 32) & 0x1f;\n  if (shift_amount_2 > 30) {\n    return result & 0x80000000ffffffff;\n  }\n  int shift_remainder_2 = shift_amount_2 - 19;\n  if (shift_remainder_2 == 0 || (shift_amount_2 - 32) < 0 != (shift_remainder_2 < 0)) {\n    shift_amount_2++;\n    result = ((ulonglong)shifted_input >> shift_amount_2) | (result >> shift_amount_2);\n  } else {\n    result = ((ulonglong)abs_input << (32 - shift_remainder_2)) | (shifted_input >> shift_remainder_2);\n  }\n  return result & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "__kernel_rem_pio2",
                "__ieee754_rem_pio2",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "convert_float_to_double_08008b00",
                "param_1": "float_value"
            },
            "code": "undefined4 convert_float_to_double_08008b00(undefined4 float_value)\n{\n  __nedf2();\n  return float_value;\n}",
            "called": [
                "__nedf2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "__aeabi_cdrcmple",
                "__aeabi_dcmpeq",
                "__aeabi_dcmple",
                "__aeabi_dcmplt"
            ],
            "imported": false,
            "current_name": "convert_float_to_double_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "wake_up_if_flag_set_0800585c",
                "PTR_sys_08005878": "sys_flag_array",
                "st_wake_up": "wake_up_system"
            },
            "code": "void wake_up_if_flag_set_0800585c(void)\n{\n  if (PTR_sys_08005878[1] == '\\x02') {\n    PTR_sys_08005878[1] = 3;\n    wake_up_system();\n  }\n  return;\n}",
            "called": [
                "st_wake_up"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "mc_line",
                "protocol_execute_runtime",
                "mc_go_home"
            ],
            "imported": false,
            "current_name": "wake_up_if_flag_set_0800585c"
        },
        "FUN_08008cd0": {
            "renaming": {
                "FUN_08008cd0": "FUNC_08008cd0"
            },
            "code": "\nuint FUNC_08008cd0(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_1 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = param_2;\n      if (iVar7 == -1) {\n        uVar4 = uVar2;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        param_2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == param_2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        uVar2 = param_2;\n      }\n      return uVar2;\n    }\n    if (uVar2 != param_2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      param_1 = param_1 << 1;\n      if ((uVar2 & 0x80000000) != 0) {\n        param_1 = param_1 | 0x80000000;\n      }\n      return param_1;\n    }\n    if (uVar4 < 0xfe000000) {\n      return uVar2 + 0x800000;\n    }\n    uVar2 = uVar2 & 0x80000000;\nLAB_08008e12:\n    return uVar2 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return uVar2;\n  }\n  uVar4 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  uVar2 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar6 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar6 != 0);\n    uVar6 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar5 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar5 & 0xff);\n      if ((int)uVar6 < (int)uVar5) {\n        uVar4 = uVar4 >> (-(uVar6 - uVar5) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | uVar2;\n    }\n  }\n  else {\n    uVar6 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar6 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar6 != 0) << 0x1f | uVar3 >> 1;\n      uVar6 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | uVar2;\n}\n\n",
            "called": [
                "__addsf3"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd0",
            "calling": [],
            "imported": false,
            "current_name": "FUNC_08008cd0"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "interrupt_and_return_0800597c",
                "a0": "value_to_return",
                "a1": "interrupt_code",
                "a2": "unused_parameter"
            },
            "code": "uint32_t interrupt_and_return_0800597c(uint32_t value_to_return, uint32_t interrupt_code, int32_t unused_parameter)\n{\n  software_interrupt(interrupt_code);\n  return value_to_return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "startForkserver"
            ],
            "imported": false,
            "current_name": "interrupt_and_return_0800597c"
        },
        "FUN_08009314": {
            "renaming": {
                "FUN_08009314": "wait_forever_08009314"
            },
            "code": "void wait_forever_08009314(void)\n{\n  while(true) {\n    // do nothing\n  }\n}",
            "called": [
                "DMA1_Stream3_IRQHandler"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009314",
            "calling": [
                "DMA1_Stream3_IRQHandler"
            ],
            "imported": false,
            "current_name": "wait_forever_08009314"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "calculate_08009798",
                "__x": "input",
                "in_r1": "exponent",
                "iVar1": "exponent",
                "in_d0": "input"
            },
            "code": "double calculate_08009798(double input) {\n  int exponent = ((uint)(input << 1) >> 0x15) - 0x3ff;\n  if (exponent < 0x14) {\n    if (exponent < 0) {\n      return input;\n    }\n  }\n  else {\n    if (exponent < 0x34) {\n      return input;\n    }\n    if (exponent != 0x400) {\n      return input;\n    }\n    input = (double)__aeabi_dadd();\n  }\n  return input;\n}",
            "called": [
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "settings_store_global_setting",
                "gc_execute_line",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "calculate_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "report_realtime_status",
                "plan_buffer_line",
                "mc_dwell",
                "max_allowable_speed",
                "gc_execute_line",
                "mc_arc",
                "intersection_distance",
                "estimate_acceleration_distance"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "debounce_handler_08007930",
                "puVar1": "debounce_pointer",
                "uVar2": "input_bits",
                "uVar3": "changed_bits",
                "iVar4": "current_state",
                "off_bits": "previous_bits",
                "on_bits": "changed_bits",
                "state": "current_state",
                "db": "debounce_control"
            },
            "code": "void debounce_handler_08007930(void)\n{\n  uint32_t input_bits;\n  uint current_state;\n  uint32_t previous_bits;\n  uint32_t changed_bits;\n  DEBOUNCE_CTRL *debounce_control;\n\n  debounce_control = PTR_debounce_080079b8;\n\n  if (*(int *)PTR_debounce_ready_080079bc != 0) {\n    current_state = *(int *)(debounce_control + 0x14);\n    input_bits = debounce_input();\n    *(uint32_t *)(debounce_control + current_state * 4) = input_bits;\n    if (current_state == 3) {\n      current_state = 0;\n    }\n    else {\n      current_state++;\n    }\n    *(int *)(debounce_control + 0x14) = current_state;\n    previous_bits = debounce_rd();\n    changed_bits = previous_bits ^ *(uint32_t *)(debounce_control + 0x10);\n    if ((~previous_bits & changed_bits) != 0) {\n      debounce_on_handler(~previous_bits & changed_bits);\n    }\n    if ((previous_bits & changed_bits) != 0) {\n      debounce_off_handler(previous_bits & changed_bits);\n    }\n    *(uint32_t *)(debounce_control + 0x10) = previous_bits;\n  }\n  return;\n}",
            "called": [
                "debounce_input",
                "debounce_on_handler",
                "debounce_rd",
                "debounce_off_handler"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "SysTick_Handler"
            ],
            "imported": false,
            "current_name": "debounce_handler_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "is_init_needed_08000188",
                "param_1": "init_pointer",
                "PTR_completed_8911_080001a0": "is_completed",
                "DAT_080001a4": "init_value"
            },
            "code": "bool is_init_needed_08000188(bool *PTR_completed_8911_080001a0, int *DAT_080001a4, void *init_pointer) {\n  if (*PTR_completed_8911_080001a0 == false) {\n    if (*DAT_080001a4 != 0) {\n      init_pointer = PTR__init_080001a8;\n    }\n    *PTR_completed_8911_080001a0 = true;\n  }\n  return init_pointer;\n}",
            "called": [
                "_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [
                "__libc_fini_array"
            ],
            "imported": false,
            "current_name": "is_init_needed_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "report_realtime_status",
                "plan_buffer_line",
                "__ieee754_sqrt",
                "atan",
                "__kernel_rem_pio2",
                "__kernel_cos",
                "mc_arc",
                "cos",
                "sin",
                "__ieee754_atan2",
                "__kernel_sin",
                "__ieee754_rem_pio2",
                "__ieee754_hypot"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08008e70": {
            "renaming": {
                "FUN_08008e70": "calculate_absolute_difference_08008e70",
                "param_1": "first_number",
                "param_2": "second_number",
                "uVar1": "absolute_difference",
                "uVar2": "temp_first_number",
                "iVar3": "count_leading_zeroes_result",
                "uVar4": "shift_amount",
                "uVar5": "sign_bit",
                "uVar7": "shifted_first_number",
                "iVar6": "intermediate_result",
                "bVar8": "first_number_is_negative"
            },
            "code": "uint calculate_absolute_difference_08008e70(uint first_number, uint second_number)\n{\n  uint absolute_difference = 0;\n  uint sign_bit = 0x80000000;\n  bool first_number_is_negative = false;\n\n  if ((first_number | second_number) == 0) {\n    return first_number;\n  }\n\n  if ((int)sign_bit < 0) {\n    first_number_is_negative = first_number != 0;\n    first_number = -first_number;\n    second_number = -second_number - (uint)first_number_is_negative;\n  }\n\n  uint temp_first_number = first_number;\n  uint temp_second_number = second_number;\n\n  if (second_number == 0) {\n    temp_first_number = 0;\n    temp_second_number = first_number;\n  }\n\n  sign_bit = sign_bit | 0x5b000000;\n  if (second_number == 0) {\n    sign_bit = sign_bit + 0xf0000000;\n  }\n\n  int count_leading_zeroes_result = count_leading_zeroes(temp_second_number);\n  uint shift_amount = count_leading_zeroes_result - 8;\n  int shift_amount_for_second_number = 0x20 - (count_leading_zeroes_result + 0x18U & 0xff);\n  uint shifted_second_number = temp_second_number << (count_leading_zeroes_result + 0x18U & 0xff);\n\n  int intermediate_result = (sign_bit - 0x800000) + shift_amount * -0x800000;\n\n  if (count_leading_zeroes_result < 8) {\n    uint shifted_first_number = temp_first_number << (count_leading_zeroes_result + 0x18U & 0xff);\n    int shifted_first_number_sign_bit = shifted_first_number >> 0x1f;\n    uint intermediate_result_with_shifted_second_number = intermediate_result + ((shifted_second_number >> shift_amount_for_second_number) - shifted_first_number_sign_bit);\n    if ((temp_first_number | (shifted_first_number << 1)) == 0) {\n      intermediate_result_with_shifted_second_number = intermediate_result_with_shifted_second_number & ~(shifted_first_number_sign_bit);\n    }\n    absolute_difference = intermediate_result_with_shifted_second_number;\n  }\n  else {\n    uint shifted_first_number = temp_first_number << (shift_amount & 0xff);\n    uint shifted_first_number_for_addition = temp_first_number >> (0x20 - shift_amount & 0xff);\n    uint shifted_second_number_for_addition = shifted_second_number >> (0x20 - shift_amount & 0xff);\n    int shifted_first_number_sign_bit = shifted_first_number >> 0x1f;\n    uint intermediate_result_with_shifted_numbers = intermediate_result + (shifted_second_number >> (0x20 - shift_amount & 0xff)) + shifted_first_number_for_addition + (uint)(0x7fffffff < (temp_first_number << shift_amount & 0x80000000));\n    if ((temp_first_number << shift_amount & 0x80000000) == 0x80000000) {\n      intermediate_result_with_shifted_numbers = intermediate_result_with_shifted_numbers & 0xfffffffe;\n    }\n    absolute_difference = intermediate_result_with_shifted_numbers;\n  }\n  return absolute_difference;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e70",
            "calling": [],
            "imported": false,
            "current_name": "calculate_absolute_difference_08008e70"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_08009318",
                "__x": "input",
                "in_r0": "low_bits",
                "in_r1": "high_bits",
                "uVar1": "exponent_diff",
                "uVar2": "exponent",
                "in_d0": "result",
                "extraout_d0": "addend2",
                "extraout_d0_00": "addend1",
                "extraout_d0_01": "addend3",
                "uVar3": "compare_result"
            },
            "code": "double calculate_08009318(double input)\n{\n  uint high_bits;\n  uint low_bits;\n  uint exponent_diff;\n  uint exponent;\n  double result;\n  double addend1;\n  double addend2;\n  double addend3;\n  undefined8 compare_result;\n  high_bits = (low_bits << 1) >> 0x15;\n  exponent_diff = high_bits - 0x3ff;\n  if ((int)exponent_diff < 0x14) {\n    if ((int)exponent_diff < 0) {\n      compare_result = __aeabi_dadd(low_bits, high_bits, PTR_DAT_08009400, PTR_DAT_08009404);\n      __aeabi_dcmpgt((int)compare_result, (int)((ulonglong)compare_result >> 0x20), 0, 0);\n      result = addend1;\n    }\n    else if ((low_bits & PTR_DAT_08009408 >> (exponent_diff & 0xff) | high_bits) != 0) {\n      compare_result = __aeabi_dadd(low_bits, high_bits, PTR_DAT_08009400, PTR_DAT_08009404);\n      __aeabi_dcmpgt((int)compare_result, (int)((ulonglong)compare_result >> 0x20), 0, 0);\n      result = addend2;\n    }\n  }\n  else if ((int)exponent_diff < 0x34) {\n    if ((0xffffffffU >> (high_bits - 0x413 & 0xff) & low_bits) != 0) {\n      compare_result = __aeabi_dadd(low_bits, high_bits, PTR_DAT_08009400, PTR_DAT_08009404);\n      __aeabi_dcmpgt((int)compare_result, (int)((ulonglong)compare_result >> 0x20), 0, 0);\n      result = addend3;\n    }\n  }\n  else if (exponent_diff == 0x400) {\n    result = (double)__aeabi_dadd();\n  }\n  return result;\n}",
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "plan_buffer_line",
                "homing_cycle",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "update_value_080018cc",
                "x": "new_value",
                "val": "val_ptr",
                "*(uint32_t *)(DAT_080018f8 + 0x14)": "current_val",
                "*(uint *)(DAT_080018f8 + 0x14)": "mask"
            },
            "code": "void update_value_080018cc(uint32_t new_value)\n{\n  uint32_t* val_ptr = (uint32_t*)(DAT_080018f8 + 0x14);\n  uint32_t *(uint32_t *)(DAT_080018f8 + 0x14) = *(uint32_t*)(DAT_080018f8 + 0x14);\n  uint32_t *(uint *)(DAT_080018f8 + 0x14) = 0xfffffaaf;\n  *val_ptr = (new_value | (*(uint32_t *)(DAT_080018f8 + 0x14) & *(uint *)(DAT_080018f8 + 0x14)));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "update_value_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_interrupt_priority_080079e0",
                "IRQn": "interrupt_number",
                "DAT_08007a0c": "interrupt_priority_register_base_address"
            },
            "code": "void set_interrupt_priority_080079e0(IRQn_Type interrupt_number)\n{\n  int* interrupt_priority_register = (int*)(DAT_08007a0c + ((uint)(int)interrupt_number >> 5) * 4);\n  int interrupt_priority_bit = 1 << (interrupt_number & 0x1fU);\n  *interrupt_priority_register = interrupt_priority_bit;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "enable_tim_interrupt"
            ],
            "imported": false,
            "current_name": "set_interrupt_priority_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_interrupt_priority_08006a58",
                "IRQn": "interrupt_number",
                "DAT_08006a88": "interrupt_register_base_address"
            },
            "code": "void set_interrupt_priority_08006a58(IRQn_Type interrupt_number)\n{\n  int* interrupt_register_address = (int*)(DAT_08006a88 + (((uint)(int)interrupt_number >> 5) + 0x40) * 4);\n  int interrupt_bit_position = IRQn & 0x1fU;\n  int interrupt_bit_mask = 1 << interrupt_bit_position;\n  *interrupt_register_address = interrupt_bit_mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "HAL_NVIC_SetPendingIRQ"
            ],
            "imported": false,
            "current_name": "set_interrupt_priority_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_uwTick_value_08005a84",
                "*PTR_uwTick_08005a94": "*uwTick_ptr"
            },
            "code": "uint32_t get_uwTick_value_08005a84(void)\n{\n  uint32_t* uwTick_ptr = (uint32_t*)PTR_uwTick_08005a94;\n  return *PTR_uwTick_08005a94;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "HAL_Delay",
                "HAL_RCC_OscConfig",
                "SysTick_Handler",
                "HAL_RCC_ClockConfig",
                "get_current_usecs"
            ],
            "imported": false,
            "current_name": "get_uwTick_value_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "areFloatsEqual_08008b10",
                "in_ZR": "result"
            },
            "code": "bool areFloatsEqual_08008b10(void)\\n{\\n  char result;\\n  __aeabi_cdcmpeq();\\n  return result != \"\\0\";\\n}",
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "__kernel_rem_pio2",
                "__ieee754_rem_pio2"
            ],
            "imported": false,
            "current_name": "areFloatsEqual_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nuint8_t FUNC_08004e30(int parameter,float value)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint in_r1;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  undefined4 extraout_r1_03;\n  undefined4 extraout_r1_04;\n  undefined4 extraout_r1_05;\n  undefined4 extraout_r1_06;\n  \n  switch(parameter) {\n  case 0:\n  case 1:\n  case 2:\n    iVar3 = __aeabi_fcmple(value,in_r1,0);\n    if (iVar3 != 0) {\n      return '\\b';\n    }\n    *(uint *)(PTR_settings_080051a8 + parameter * 4) = in_r1;\n    break;\n  case 3:\n    iVar3 = __aeabi_fcmplt(in_r1,DAT_080051ac);\n    if (iVar3 != 0) {\n      return '\\t';\n    }\n    uVar4 = __aeabi_f2d(in_r1);\n    round((double)CONCAT44(parameter,in_r1));\n    uVar1 = __aeabi_d2uiz(uVar4,extraout_r1);\n    PTR_settings_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_settings_080051a8 + 0x10) = in_r1;\n    break;\n  case 5:\n    *(uint *)(PTR_settings_080051a8 + 0x14) = in_r1;\n    break;\n  case 6:\n    uVar4 = __aeabi_f2d(in_r1);\n    trunc((double)CONCAT44(parameter,in_r1));\n    uVar2 = __aeabi_d2uiz(uVar4,extraout_r1_00);\n    *(undefined2 *)(PTR_settings_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar4 = __aeabi_f2d(in_r1);\n    round((double)CONCAT44(parameter,in_r1));\n    uVar1 = __aeabi_d2uiz(uVar4,extraout_r1_01);\n    PTR_settings_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar4 = __aeabi_fmul(in_r1,DAT_080051b0);\n    uVar4 = __aeabi_fmul(uVar4,DAT_080051b0);\n    *(undefined4 *)(PTR_settings_080051a8 + 0x20) = uVar4;\n    break;\n  case 9:\n    *(uint *)(PTR_settings_080051a8 + 0x24) = in_r1 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_settings_080051a8 + 0x1c) = in_r1;\n    break;\n  case 0xb:\n    uVar4 = __aeabi_f2d(in_r1);\n    round((double)CONCAT44(parameter,in_r1));\n    uVar1 = __aeabi_d2uiz(uVar4,extraout_r1_02);\n    PTR_settings_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar4 = __aeabi_f2d(in_r1);\n    round((double)CONCAT44(parameter,in_r1));\n    uVar1 = __aeabi_d2uiz(uVar4,extraout_r1_03);\n    PTR_settings_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar3 = __aeabi_fcmpeq(in_r1,0);\n    if (iVar3 == 0) {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar3 = __aeabi_fcmpeq(in_r1,0);\n    if (iVar3 == 0) {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar3 = __aeabi_fcmpeq(in_r1,0);\n    if (iVar3 == 0) {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar3 = __aeabi_fcmpeq(in_r1,0);\n    if (iVar3 == 0) {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] & 0xf7;\n    }\n    limits_init();\n    break;\n  case 0x11:\n    iVar3 = __aeabi_fcmpeq(in_r1,0);\n    if (iVar3 == 0) {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_settings_080051a8[0x28] = PTR_settings_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar4 = __aeabi_f2d(in_r1);\n    trunc((double)CONCAT44(parameter,in_r1));\n    uVar2 = __aeabi_d2uiz(uVar4,extraout_r1_04);\n    *(undefined2 *)(PTR_settings_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_settings_080051a8 + 0x2c) = in_r1;\n    break;\n  case 0x14:\n    *(uint *)(PTR_settings_080051a8 + 0x30) = in_r1;\n    break;\n  case 0x15:\n    uVar4 = __aeabi_f2d(in_r1);\n    round((double)CONCAT44(parameter,in_r1));\n    uVar2 = __aeabi_d2uiz(uVar4,extraout_r1_05);\n    *(undefined2 *)(PTR_settings_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_settings_080051a8 + 0x38) = in_r1;\n    break;\n  case 0x17:\n    uVar4 = __aeabi_f2d(in_r1);\n    trunc((double)CONCAT44(parameter,in_r1));\n    uVar2 = __aeabi_d2uiz(uVar4,extraout_r1_06);\n    *(undefined2 *)(PTR_settings_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return '\\x06';\n  }\n  write_global_settings();\n  return '\\0';\n}\n\n",
            "called": [
                "__aeabi_d2uiz",
                "limits_init",
                "round",
                "__aeabi_fmul",
                "__aeabi_fcmple",
                "write_global_settings",
                "__aeabi_fcmplt",
                "__aeabi_fcmpeq",
                "__aeabi_f2d",
                "trunc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_0800736c": {
            "renaming": {
                "FUN_0800736c": "toggle_GPIO_pin_state_0800736c",
                "GPIOx": "GPIO_port",
                "GPIO_Pin": "pin_mask",
                "ODR": "pin_state"
            },
            "code": "void toggle_GPIO_pin_state_0800736c(GPIO_TypeDef *GPIO_port, uint16_t pin_mask)\n{\n  GPIO_port->ODR ^= (uint)pin_mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800736c",
            "calling": [],
            "imported": false,
            "current_name": "toggle_GPIO_pin_state_0800736c"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_float_bits_08008c30",
                "param_1": "float_bits",
                "param_2": "float_bits2",
                "uVar1": "exponent",
                "uVar2": "shifted_bits2",
                "uVar3": "shifted_mantissa",
                "in_r12": "mantissa",
                "bVar4": "is_zero",
                "bVar5": "is_small"
            },
            "code": "uint calculate_float_bits_08008c30(uint float_bits, uint float_bits2)\n{\n  uint exponent;\n  uint mantissa;\n  uint shifted_mantissa;\n  uint shifted_bits2;\n  bool is_small;\n  bool is_zero;\n  \n  shifted_bits2 = float_bits2 * 2;\n  is_small = shifted_bits2 < 0x70000000;\n  shifted_mantissa = shifted_bits2 + 0x90000000;\n  exponent = shifted_mantissa;\n  if (!is_small) {\n    exponent = shifted_bits2 + 0x8fe00000;\n  }\n  is_zero = exponent == 0;\n  if (!is_small && shifted_mantissa >= 0x200000) {\n    is_zero = shifted_bits2 + 0x8fe00000 == 0x1fc00000;\n  }\n  if (((is_small || shifted_mantissa < 0x200000) || 0x1fc00000 < shifted_bits2 + 0x8fe00000) || is_zero) {\n    if ((float_bits2 & 0x40000000) != 0) {\n      if (((int)shifted_bits2 >> 0x15 == -1) && ((float_bits | float_bits2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return float_bits2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shifted_bits2 + 0x92e00000) < 0 != SCARRY4(shifted_mantissa,0x2e00000)) {\n      return float_bits2 & 0x80000000;\n    }\n    exponent = 0x18 - (shifted_bits2 + 0x92e00000 >> 0x15);\n    mantissa = float_bits >> (exponent & 0xff);\n    if (float_bits << (0x20 - exponent & 0xff) != 0) {\n      mantissa |= 1;\n    }\n    shifted_mantissa = float_bits2 & 0x1fffff | 0x100000;\n    float_bits = mantissa | shifted_mantissa << (0x20 - exponent & 0xff);\n    shifted_mantissa = (shifted_mantissa >> (exponent & 0xff)) << 1;\n  }\n  exponent = (float_bits2 & 0x80000000 | float_bits >> 0x1d) + shifted_mantissa * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    exponent &= 0xfffffffe;\n  }\n  return exponent;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "report_realtime_status",
                "plan_buffer_line",
                "report_gcode_modes",
                "read_float",
                "report_gcode_parameters",
                "to_millimeters",
                "homing_cycle",
                "max_allowable_speed",
                "gc_execute_line",
                "mc_arc"
            ],
            "imported": false,
            "current_name": "calculate_float_bits_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "scalbn",
                "round",
                "__ieee754_sqrt",
                "ceil",
                "__aeabi_drsub",
                "atan",
                "__kernel_rem_pio2",
                "__kernel_cos",
                "floor",
                "mc_arc",
                "trunc",
                "__ieee754_atan2",
                "__kernel_sin",
                "__ieee754_rem_pio2",
                "__ieee754_hypot"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "set_timer_ticks_08007bf0",
                "ticks": "new_ticks",
                "saved": "saved_ticks",
                "TIMx": "timer",
                "_DAT_4000002c": "timer_ARR",
                "_DAT_40000024": "timer_CNT"
            },
            "code": "void set_timer_ticks_08007bf0(TIM_TypeDef *timer, uint32_t ticks)\n{\n  uint32_t saved_ticks = ticks;\n  uint32_t current_ticks = timer->CNT;\n  timer->ARR = saved_ticks;\n  if (saved_ticks <= current_ticks) {\n    timer->CNT = saved_ticks;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "set_step_events_per_minute"
            ],
            "imported": false,
            "current_name": "set_timer_ticks_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "calculate_08008590",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "iVar6": "temp6",
                "uVar7": "temp7",
                "in_r12": "in_r12",
                "bVar8": "isZero2",
                "bVar9": "isZero1",
                "bVar10": "isZero3"
            },
            "code": "ulonglong calculate_08008590(uint input, undefined4 param_2, undefined4 param_3, uint param_4) {\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int temp6;\n  uint temp7;\n  uint temp8;\n  uint in_r12;\n  bool isZero1;\n  bool isZero2;\n  bool isZero3;\n  \n  temp5 = input << 1;\n  isZero1 = temp5 == 0;\n  temp1 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  temp4 = (uint)((int)temp5 >> 3) >> 1;\n  temp3 = temp1 | temp4;\n  input = input << 0x1d;\n  if (!isZero1) {\n    param_4 = temp5 & 0xff000000;\n    isZero1 = param_4 == 0;\n  }\n  if (!isZero1) {\n    isZero1 = param_4 == 0xff000000;\n  }\n  if (!isZero1) {\n    return CONCAT44(temp3,input) ^ 0x3800000000000000;\n  }\n  if ((temp5 & 0xffffff) == 0) {\n    return CONCAT44(temp3,input);\n  }\n  if (param_4 == 0xff000000) {\n    return CONCAT44(temp3,input) | 0x8000000000000;\n  }\n  temp2 = input;\n  temp5 = temp4;\n  if (temp4 == 0) {\n    temp2 = 0;\n    temp5 = input;\n  }\n  temp6 = count_leading_zeroes(temp5);\n  if (temp4 == 0) {\n    temp6 = temp6 + 0x20;\n  }\n  temp7 = temp6 - 0xb;\n  isZero3 = SBORROW4(temp7,0x20);\n  temp4 = temp6 - 0x2b;\n  isZero2 = (int)temp4 < 0;\n  bool isZero4 = temp4 == 0;\n  if ((int)temp7 < 0x20) {\n    isZero3 = SCARRY4(temp4,0xc);\n    temp6 = temp6 + -0x1f;\n    isZero2 = temp6 < 0;\n    isZero4 = temp6 == 0;\n    temp4 = temp7;\n    if (!isZero4 && isZero2 == isZero3) {\n      temp2 = temp5 << (temp7 & 0xff);\n      temp5 = temp5 >> (0xcU - temp6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero4 || isZero2 != isZero3) {\n    in_r12 = 0x20 - temp4;\n  }\n  temp5 = temp5 << (temp4 & 0xff);\n  if (isZero4 || isZero2 != isZero3) {\n    temp5 = temp5 | temp2 >> (in_r12 & 0xff);\n  }\n  if (isZero4 || isZero2 != isZero3) {\n    temp2 = temp2 << (temp4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp7 < 0x381) {\n    return CONCAT44(temp5 + (0x380 - temp7) * 0x100000 | temp1,temp2);\n  }\n  temp4 = ~(0x380 - temp7);\n  if (0x1e < (int)temp4) {\n    return CONCAT44(temp3,temp5 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  temp6 = temp4 - 0x13;\n  if (temp6 == 0 || temp6 < 0 != SCARRY4(temp4 - 0x1f,0xc)) {\n    temp4 = temp4 + 1;\n    return CONCAT44(temp1 | temp5 >> (temp4 & 0xff),\n                    temp2 >> (temp4 & 0xff) | temp5 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp3,temp2 >> (0x20 - (0xcU - temp6) & 0xff) | temp5 << (0xcU - temp6 & 0xff)) &\n         0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "report_realtime_status",
                "plan_buffer_line",
                "report_gcode_modes",
                "read_float",
                "report_gcode_parameters",
                "settings_store_global_setting",
                "homing_cycle",
                "max_allowable_speed",
                "protocol_execute_line",
                "mc_dwell",
                "to_millimeters",
                "gc_execute_line",
                "mc_arc",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_timer_08007ad0",
                "TIMx": "timer",
                "_DAT_40000000": "timer->CR1",
                "_DAT_40000004": "timer->CR2",
                "_DAT_40000008": "timer->SMCR",
                "_DAT_4000000c": "timer->DIER",
                "_DAT_40000010": "timer->CNT",
                "_DAT_40000018": "timer->PSC",
                "_DAT_4000001c": "timer->ARR",
                "_DAT_40000020": "timer->RCR",
                "_DAT_40000024": "timer->CCMR1",
                "_DAT_40000028": "timer->CCMR2",
                "_DAT_4000002c": "timer->CCER",
                "_DAT_40000034": "timer->BDTR",
                "_DAT_40000038": "timer->DCR",
                "PTR_SystemCoreClock_08007b68": "*(uint *)SYS_CLOCK_ADDRESS"
            },
            "code": "void initialize_timer_08007ad0(void)\n{\n  TIM_TypeDef *timer;\n  enable_timer_clock((TIM_TypeDef *)&timer);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = ((uint64_t)FREQUENCY * (uint64_t)PTR_SystemCoreClock_08007b68 >> 0x38) - 1;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = 0;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  enable_timer_interrupt((TIM_TypeDef *)&timer,0,0);\n  return;\n}",
            "called": [
                "enable_tim_clock",
                "enable_tim_interrupt"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "timers_init"
            ],
            "imported": false,
            "current_name": "initialize_timer_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint8_t FUNC_080005b4(char *line)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  uint8_t uVar3;\n  int iVar4;\n  float fVar5;\n  undefined4 uVar6;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  undefined4 extraout_r1_03;\n  undefined4 extraout_r1_04;\n  uint uVar7;\n  float fVar8;\n  float value_00;\n  float seconds;\n  undefined8 extraout_d0;\n  undefined8 extraout_d0_00;\n  undefined8 extraout_d0_01;\n  undefined8 extraout_d0_02;\n  undefined8 extraout_d0_03;\n  undefined8 uVar9;\n  undefined8 extraout_d0_04;\n  undefined8 extraout_d0_05;\n  float extraout_s2;\n  float extraout_s2_00;\n  float extraout_s2_01;\n  float extraout_s2_02;\n  float extraout_s2_03;\n  float extraout_s2_04;\n  float extraout_s2_05;\n  float extraout_s3;\n  float extraout_s3_00;\n  float extraout_s3_01;\n  float extraout_s3_02;\n  float extraout_s3_03;\n  float extraout_s3_04;\n  float extraout_s3_05;\n  undefined4 in_stack_ffffff48;\n  undefined4 in_stack_ffffff4c;\n  float coord_data_2 [3];\n  float coord_data_1 [3];\n  float coord_data [3];\n  float offset [3];\n  float target [3];\n  float value;\n  char letter;\n  uint8_t char_counter;\n  float y;\n  float x;\n  uint8_t isclockwise;\n  float h_x2_div_d;\n  uint8_t i_3;\n  uint8_t i_2;\n  uint8_t i_1;\n  uint8_t i;\n  uint8_t l;\n  float r;\n  float p;\n  uint8_t group_number;\n  uint8_t non_modal_action;\n  uint8_t absolute_override;\n  float inverse_feed_rate;\n  uint8_t axis_words;\n  uint16_t modal_group_words;\n  int int_value;\n  \n  if (PTR_sys_08000808[1] == '\\x06') {\n    uVar3 = '\\f';\n  }\n  else {\n    char_counter = '\\0';\n    modal_group_words = 0;\n    axis_words = '\\0';\n    inverse_feed_rate = DAT_0800080c;\n    absolute_override = '\\0';\n    non_modal_action = '\\0';\n    memset(target,0,0xc);\n    memset(offset,0,0xc);\n    *PTR_gc_08000810 = 0;\n    group_number = '\\0';\n    while (iVar4 = next_statement(&letter,&value,line,&char_counter), iVar4 != 0) {\n      uVar6 = __aeabi_f2d(value);\n      trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n      int_value = __aeabi_d2iz(uVar6,extraout_r1);\n      if (letter == 'G') {\n        switch(int_value) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          group_number = '\\x02';\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          group_number = '\\x01';\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          group_number = '\\x03';\n          break;\n        case 0x14:\n        case 0x15:\n          group_number = '\\a';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          group_number = '\\t';\n          break;\n        case 0x5a:\n        case 0x5b:\n          group_number = '\\x04';\n          break;\n        case 0x5d:\n        case 0x5e:\n          group_number = '\\x06';\n        }\n        switch(int_value) {\n        case 0:\n          PTR_gc_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_gc_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_gc_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_gc_08000ca0[1] = 3;\n          break;\n        case 4:\n          non_modal_action = '\\x01';\n          break;\n        default:\n          *PTR_gc_08000ca0 = 3;\n          break;\n        case 10:\n          non_modal_action = '\\x02';\n          break;\n        case 0x11:\n          select_plane('\\0','\\x01','\\x02');\n          break;\n        case 0x12:\n          select_plane('\\x02','\\0','\\x01');\n          break;\n        case 0x13:\n          select_plane('\\x01','\\x02','\\0');\n          break;\n        case 0x14:\n          PTR_gc_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_gc_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar6 = __aeabi_fmul(value,DAT_08000ca4);\n          uVar6 = __aeabi_f2d(uVar6);\n          trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n          int_value = __aeabi_d2iz(uVar6,extraout_r1_00);\n          switch(int_value) {\n          case 0x118:\n            non_modal_action = '\\x03';\n            break;\n          case 0x119:\n            non_modal_action = '\\x04';\n            break;\n          default:\n            *PTR_gc_08000ca0 = 3;\n            break;\n          case 300:\n            non_modal_action = '\\x05';\n            break;\n          case 0x12d:\n            non_modal_action = '\\x06';\n          }\n          break;\n        case 0x35:\n          absolute_override = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_gc_08000ca0[0x1c] = (char)int_value + -0x36;\n          break;\n        case 0x50:\n          PTR_gc_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_gc_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_gc_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar6 = __aeabi_fmul(value,DAT_08000ca4);\n          uVar6 = __aeabi_f2d(uVar6);\n          trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n          int_value = __aeabi_d2iz(uVar6,extraout_r1_01);\n          if (int_value == 0x398) {\n            non_modal_action = '\\a';\n          }\n          else if (int_value == 0x399) {\n            non_modal_action = '\\b';\n          }\n          else {\n            *PTR_gc_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_gc_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_gc_08000ca0[2] = 0;\n        }\n      }\n      else if (letter == 'M') {\n        if (int_value == 0x1e) {\nLAB_08000b96:\n          group_number = '\\x05';\n        }\n        else if (int_value < 0x1f) {\n          if (int_value < 3) {\n            if (-1 < int_value) goto LAB_08000b96;\n          }\n          else if (int_value - 3U < 3) {\n            group_number = '\\b';\n          }\n        }\n        switch(int_value) {\n        case 0:\n          PTR_gc_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_gc_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_gc_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_gc_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_gc_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_gc_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_gc_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_gc_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_gc_08000ca0[7] = 0;\n        }\n      }\n      if (group_number != '\\0') {\n        if (((int)(uint)modal_group_words >> group_number & 1U) == 0) {\n          modal_group_words = modal_group_words | (ushort)(1 << group_number);\n        }\n        else {\n          *PTR_gc_08000ca0 = 5;\n        }\n        group_number = '\\0';\n      }\n    }\n    if (*PTR_gc_08000ff0 == '\\0') {\n      p = 0.0;\n      r = 0.0;\n      l = '\\0';\n      char_counter = '\\0';\nswitchD_08000d18_caseD_47:\n      iVar4 = next_statement(&letter,&value,line,&char_counter);\n      if (iVar4 != 0) {\n        fVar8 = (float)extraout_d0;\n        switch(letter) {\n        case 'F':\n          iVar4 = __aeabi_fcmple(value,0);\n          if (iVar4 != 0) {\n            *PTR_gc_08000ff0 = 6;\n          }\n          if (PTR_gc_08000ff0[2] == '\\0') {\n            fVar8 = value;\n            to_millimeters(value_00);\n            *(float *)(PTR_gc_08000ff0 + 8) = fVar8;\n          }\n          else {\n            fVar8 = value;\n            to_millimeters(value_00);\n            inverse_feed_rate = fVar8;\n          }\n          break;\n        case 'G':\n        case 'M':\n        case 'N':\n          break;\n        default:\n          *PTR_gc_08000ff0 = 3;\n          break;\n        case 'I':\n        case 'J':\n        case 'K':\n          uVar7 = (uint)(byte)letter;\n          fVar5 = value;\n          to_millimeters(fVar8);\n          offset[uVar7 - 0x49] = fVar5;\n          break;\n        case 'L':\n          uVar6 = __aeabi_f2d(value);\n          trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n          l = __aeabi_d2uiz(uVar6,extraout_r1_02);\n          break;\n        case 'P':\n          p = value;\n          break;\n        case 'R':\n          fVar5 = value;\n          to_millimeters(fVar8);\n          r = fVar5;\n          break;\n        case 'S':\n          iVar4 = __aeabi_fcmplt(value,0);\n          if (iVar4 != 0) {\n            *PTR_gc_08000ff0 = 6;\n          }\n          break;\n        case 'T':\n          iVar4 = __aeabi_fcmplt(value,0);\n          if (iVar4 != 0) {\n            *PTR_gc_08000ff0 = 6;\n          }\n          uVar6 = __aeabi_f2d(value);\n          trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n          uVar2 = __aeabi_d2uiz(uVar6,extraout_r1_03);\n          PTR_gc_08000ff0[0x18] = uVar2;\n          break;\n        case 'X':\n          target[0] = value;\n          to_millimeters(fVar8);\n          axis_words = axis_words | 1;\n          break;\n        case 'Y':\n          target[1] = value;\n          to_millimeters(fVar8);\n          axis_words = axis_words | 2;\n          break;\n        case 'Z':\n          target[2] = value;\n          to_millimeters(fVar8);\n          axis_words = axis_words | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_gc_08000ff0 == '\\0') {\n        uVar9 = extraout_d0;\n        fVar8 = extraout_s2;\n        fVar5 = extraout_s3;\n        if (PTR_sys_08000ff4[1] != '\\a') {\n          spindle_run(PTR_gc_08000ff0[6]);\n          coolant_run(PTR_gc_08000ff0[7]);\n          uVar9 = extraout_d0_00;\n          fVar8 = extraout_s2_00;\n          fVar5 = extraout_s3_00;\n        }\n        if ((modal_group_words & 0x200) != 0) {\n          uVar3 = settings_read_coord_data(PTR_gc_08000ff0[0x1c],coord_data);\n          puVar1 = PTR_gc_08000ff0;\n          if (uVar3 == '\\0') {\n            return '\\n';\n          }\n          *(float *)(PTR_gc_08000ff0 + 0x20) = coord_data[0];\n          *(float *)(puVar1 + 0x24) = coord_data[1];\n          *(float *)(puVar1 + 0x28) = coord_data[2];\n          uVar9 = extraout_d0_01;\n          fVar8 = extraout_s2_01;\n          fVar5 = extraout_s3_01;\n        }\n        switch(non_modal_action) {\n        case '\\x01':\n          iVar4 = __aeabi_fcmplt(p,0);\n          if (iVar4 == 0) {\n            if (PTR_sys_08000ff4[1] != '\\a') {\n              mc_dwell(seconds);\n            }\n          }\n          else {\n            *PTR_gc_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar6 = __aeabi_f2d(p);\n          trunc((double)CONCAT44(in_stack_ffffff4c,in_stack_ffffff48));\n          int_value = __aeabi_d2iz(uVar6,extraout_r1_04);\n          if ((((l == '\\x02') || (l == '\\x14')) && (-1 < int_value)) && (int_value < 7)) {\n            if ((axis_words == '\\0') && (l == '\\x02')) {\n              *PTR_gc_08000ff0 = 6;\n            }\n            else {\n              if (int_value < 1) {\n                int_value = (int)(byte)PTR_gc_08001304[0x1c];\n              }\n              else {\n                int_value = int_value + -1;\n              }\n              uVar3 = settings_read_coord_data((uint8_t)int_value,coord_data_2);\n              if (uVar3 == '\\0') {\n                return '\\n';\n              }\n              for (i = '\\0'; i < 3; i = i + '\\x01') {\n                if (((int)(uint)axis_words >> i & 1U) != 0) {\n                  if (l == '\\x14') {\n                    uVar7 = (uint)i;\n                    fVar8 = (float)__aeabi_fsub(*(undefined4 *)(PTR_gc_08001304 + (i + 2) * 4 + 4),\n                                                target[i]);\n                    coord_data_2[uVar7] = fVar8;\n                  }\n                  else {\n                    coord_data_2[i] = target[i];\n                  }\n                }\n              }\n              settings_write_coord_data((uint8_t)int_value,coord_data_2);\n              puVar1 = PTR_gc_08001304;\n              if (int_value == (uint)(byte)PTR_gc_08001304[0x1c]) {\n                *(float *)(PTR_gc_08001304 + 0x20) = coord_data_2[0];\n                *(float *)(puVar1 + 0x24) = coord_data_2[1];\n                *(float *)(puVar1 + 0x28) = coord_data_2[2];\n              }\n            }\n          }\n          else {\n            *PTR_gc_08000ff0 = 3;\n          }\n          axis_words = '\\0';\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (axis_words != '\\0') {\n            for (i_1 = '\\0'; i_1 < 3; i_1 = i_1 + '\\x01') {\n              if (((int)(uint)axis_words >> i_1 & 1U) == 0) {\n                target[i_1] = *(float *)(PTR_gc_08001304 + (i_1 + 2) * 4 + 4);\n              }\n              else if (PTR_gc_08001304[4] == '\\0') {\n                uVar7 = (uint)i_1;\n                fVar8 = (float)__addsf3(target[i_1],\n                                        *(undefined4 *)(PTR_gc_08001304 + (i_1 + 2) * 4 + 4));\n                target[uVar7] = fVar8;\n                uVar9 = extraout_d0_03;\n                fVar8 = extraout_s2_03;\n                fVar5 = extraout_s3_03;\n              }\n              else {\n                fVar8 = target[i_1];\n                uVar6 = __addsf3(*(undefined4 *)(PTR_gc_08001304 + (i_1 + 8) * 4),\n                                 *(undefined4 *)(PTR_gc_08001304 + (i_1 + 10) * 4 + 4));\n                uVar7 = (uint)i_1;\n                fVar8 = (float)__addsf3(fVar8,uVar6);\n                target[uVar7] = fVar8;\n                uVar9 = extraout_d0_02;\n                fVar8 = extraout_s2_02;\n                fVar5 = extraout_s3_02;\n              }\n            }\n            mc_line((float)uVar9,(float)((ulonglong)uVar9 >> 0x20),fVar8,fVar5,SUB41(target[0],0));\n          }\n          if (non_modal_action == '\\x05') {\n            uVar3 = settings_read_coord_data('\\a',coord_data_1);\n            uVar9 = extraout_d0_04;\n            fVar8 = extraout_s2_04;\n            fVar5 = extraout_s3_04;\n            if (uVar3 == '\\0') {\n              return '\\n';\n            }\n          }\n          else {\n            uVar3 = settings_read_coord_data('\\x06',coord_data_1);\n            uVar9 = extraout_d0_05;\n            fVar8 = extraout_s2_05;\n            fVar5 = extraout_s3_05;\n            if (uVar3 == '\\0') {\n              return '\\n';\n            }\n          }\n          mc_line((float)uVar9,(float)((ulonglong)uVar9 >> 0x20),fVar8,fVar5,\n                  SUB41(coord_data_1[0],0));\n          puVar1 = PTR_gc_08001304;\n          *(float *)(PTR_gc_08001304 + 0xc) = coord_data_1[0];\n          *(float *)(puVar1 + 0x10) = coord_data_1[1];\n          *(float *)(puVar1 + 0x14) = coord_data_1[2];\n          axis_words = '\\0';\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (non_modal_action == '\\x06') {\n            settings_write_coord_data('\\a',DAT_0800130c);\n          }\n          else {\n            settings_write_coord_data('\\x06',DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (axis_words == '\\0') {\n            *PTR_gc_08001304 = 6;\n          }\n          else {\n            for (i_2 = '\\0'; i_2 < 3; i_2 = i_2 + '\\x01') {\n              if (((int)(uint)axis_words >> i_2 & 1U) != 0) {\n                uVar6 = __aeabi_fsub(*(undefined4 *)(PTR_gc_08001304 + (i_2 + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_gc_08001304 + (i_2 + 8) * 4));\n                uVar7 = (uint)i_2;\n                uVar6 = __aeabi_fsub(uVar6,target[i_2]);\n                *(undefined4 *)(PTR_gc_08001304 + (uVar7 + 10) * 4 + 4) = uVar6;\n              }\n            }\n          }\n          axis_words = '\\0';\n          break;\n        case '\\b':\n          memset(DAT_08001310,0,0xc);\n        }\n        if (((modal_group_words & 4) != 0) || (axis_words != '\\0')) {\n          if ((PTR_gc_08001574[2] != '\\0') &&\n             ((iVar4 = __aeabi_fcmplt(inverse_feed_rate,0), iVar4 != 0 &&\n              (PTR_gc_08001574[1] != '\\x04')))) {\n            *PTR_gc_08001574 = 6;\n          }\n          if (((absolute_override != '\\0') && (PTR_gc_08001574[1] != '\\0')) &&\n             (PTR_gc_08001574[1] != '\\x01')) {\n            *PTR_gc_08001574 = 6;\n          }\n          if (*PTR_gc_08001574 != '\\0') {\n            return *PTR_gc_08001574;\n          }\n          for (i_3 = '\\0'; puVar1 = PTR_gc_08001840, i_3 < 3; i_3 = i_3 + '\\x01') {\n            if (((int)(uint)axis_words >> i_3 & 1U) == 0) {\n              target[i_3] = *(float *)(PTR_gc_08001574 + (i_3 + 2) * 4 + 4);\n            }\n            else if (absolute_override == '\\0') {\n              if (PTR_gc_08001574[4] == '\\0') {\n                uVar7 = (uint)i_3;\n                fVar8 = (float)__addsf3(target[i_3],\n                                        *(undefined4 *)(PTR_gc_08001574 + (i_3 + 2) * 4 + 4));\n                target[uVar7] = fVar8;\n              }\n              else {\n                fVar8 = target[i_3];\n                uVar6 = __addsf3(*(undefined4 *)(PTR_gc_08001574 + (i_3 + 8) * 4),\n                                 *(undefined4 *)(PTR_gc_08001574 + (i_3 + 10) * 4 + 4));\n                uVar7 = (uint)i_3;\n                fVar8 = (float)__addsf3(fVar8,uVar6);\n                target[uVar7] = fVar8;\n              }\n            }\n          }\n          if ((byte)PTR_gc_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar3 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_gc_08001574[1]])()\n            ;\n            return uVar3;\n          }\n          if (*PTR_gc_08001840 != '\\0') {\n            return *PTR_gc_08001840;\n          }\n          *(float *)(PTR_gc_08001840 + 0xc) = target[0];\n          *(float *)(puVar1 + 0x10) = target[1];\n          *(float *)(puVar1 + 0x14) = target[2];\n        }\n        if (PTR_gc_08001840[5] != '\\0') {\n          plan_synchronize();\n          PTR_sys_08001848[0x10] = 0;\n          if (PTR_gc_08001840[5] == '\\x02') {\n            mc_reset();\n          }\n          else {\n            PTR_gc_08001840[5] = 0;\n          }\n        }\n        uVar3 = *PTR_gc_08001840;\n      }\n      else {\n        uVar3 = *PTR_gc_08000ff0;\n      }\n    }\n    else {\n      uVar3 = *PTR_gc_08000ff0;\n    }\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "coolant_run",
                "__aeabi_fcmple",
                "__addsf3",
                "__aeabi_fcmpeq",
                "plan_synchronize",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "next_statement",
                "to_millimeters",
                "memset",
                "__aeabi_d2iz",
                "select_plane",
                "settings_write_coord_data",
                "__truncdfsf2",
                "__aeabi_f2d",
                "hypot",
                "mc_line",
                "mc_reset",
                "mc_dwell",
                "spindle_run",
                "sqrt",
                "mc_arc",
                "__aeabi_fsub",
                "__aeabi_fcmplt",
                "trunc",
                "settings_read_coord_data",
                "__divdf3"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "protocol_execute_startup",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "resetLineBufferAndInitReport_080039a0",
                "PTR_buttons_enabled_080039b8": "buttonsEnabled",
                "protocol_reset_line_buffer": "resetLineBuffer",
                "report_init_message": "initReport"
            },
            "code": "void resetLineBufferAndInitReport_080039a0() {\n  resetLineBuffer();\n  initReport();\n  *(uint32_t *)PTR_buttons_enabled_080039b8 = 1;\n  return;\n}",
            "called": [
                "protocol_reset_line_buffer",
                "report_init_message"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "resetLineBufferAndInitReport_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "compare_and_concatenate_floats_08009204",
                "param_1": "float1",
                "param_2": "float2"
            },
            "code": "undefined8 compare_and_concatenate_floats_08009204(float float1, float float2)\n{\n  __cmpsf2();\n  return CONCAT44(float2, float1);\n}",
            "called": [
                "__cmpsf2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "__aeabi_cfrcmple",
                "__aeabi_fcmple",
                "__aeabi_fcmplt",
                "__aeabi_fcmpeq"
            ],
            "imported": false,
            "current_name": "compare_and_concatenate_floats_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "update_entry_speed_080029d8",
                "previous": "previous_block",
                "current": "current_block",
                "next": "next_block",
                "iVar1": "comparison_result",
                "uVar2": "max_allowable_speed",
                "fVar3": "max_speed",
                "acceleration": "acceleration",
                "acceleration_00": "acceleration_00",
                "target_velocity": "target_velocity",
                "target_velocity_00": "target_velocity_00",
                "distance": "distance",
                "distance_00": "distance_00"
            },
            "code": "void update_entry_speed_080029d8(block_t *previous_block, block_t *current_block, block_t *next_block) {\n  int comparison_result;\n  uint32_t max_allowable_speed;\n  float acceleration;\n  float acceleration_00;\n  float target_velocity;\n  float target_velocity_00;\n  float distance;\n  float distance_00;\n  \n  if (((current_block != NULL) && (next_block != NULL)) && (comparison_result = __aeabi_fcmpeq(current_block->entry_speed, current_block->max_entry_speed), comparison_result == 0)) {\n    if ((current_block->nominal_length_flag == 0) && (comparison_result = __aeabi_fcmpgt(current_block->max_entry_speed, next_block->entry_speed), comparison_result != 0)) {\n      max_allowable_speed = *(uint32_t *)(PTR_settings_08002a90 + 0x20) ^ 0x80000000;\n      if (__aeabi_fcmplt(current_block->max_entry_speed, max_allowable_speed) == 0) {\n        max_allowable_speed = *(uint32_t *)(PTR_settings_08002a90 + 0x20) ^ 0x80000000;\n        max_allowable_speed_calculation(acceleration_00, target_velocity_00, distance_00);\n      }\n      else {\n        max_allowable_speed_calculation(acceleration, target_velocity, distance);\n      }\n      current_block->entry_speed = max_allowable_speed;\n    }\n    else {\n      current_block->entry_speed = current_block->max_entry_speed;\n    }\n    current_block->recalculate_flag = 1;\n  }\n  return;\n}",
            "called": [
                "__aeabi_fcmpgt",
                "max_allowable_speed",
                "__aeabi_fcmplt",
                "__aeabi_fcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "planner_reverse_pass"
            ],
            "imported": false,
            "current_name": "update_entry_speed_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_timer_ticks_08007c5e",
                "ticks": "ticks",
                "TIMx": "timer",
                "_DAT_40000038": "timer->ARR"
            },
            "code": "void set_timer_ticks_08007c5e(TIM_TypeDef* timer, uint32_t ticks) {\n    _DAT_40000038 = ticks;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "st_wake_up"
            ],
            "imported": false,
            "current_name": "set_timer_ticks_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "write_step_to_settings_08005760",
                "PTR_settings_08005774": "PTR_settings",
                "step_wr": "step_write"
            },
            "code": "void write_step_to_settings_08005760(void)\n{\n  uint16_t current_step = *(uint16_t *)(PTR_settings_08005774_08005774 + 0x18);\n  step_write(current_step);\n  return;\n}",
            "called": [
                "step_wr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "TIM2_IRQHandler"
            ],
            "imported": false,
            "current_name": "write_step_to_settings_08005760"
        },
        "FUN_080078d0": {
            "renaming": {
                "FUN_080078d0": "do_nothing_080078d0"
            },
            "code": "\nvoid do_nothing_080078d0(uint32_t bits)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078d0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080078d0"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "isEndOfString_08008b24",
                "in_CY": "current_char"
            },
            "code": "bool isEndOfString_08008b24(char* str) {\n  char current_char = *str;\n  __aeabi_cdcmpeq();\n  return current_char == '\\0';\n}",
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "plan_buffer_line",
                "sqrt",
                "__ieee754_hypot"
            ],
            "imported": false,
            "current_name": "isEndOfString_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(uint16_t ms)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "limits_go_home",
                "mc_dwell",
                "report_alarm_message"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_sys_info_0800587c",
                "PTR_sys_0800589c": "sys_info"
            },
            "code": "void update_sys_info_0800587c(void)\n{\n  if (PTR_sys_0800589c[1] == '\\x03') {\n    PTR_sys_0800589c[1] = 4;\n    PTR_sys_0800589c[16] = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "protocol_execute_runtime"
            ],
            "imported": false,
            "current_name": "update_sys_info_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_result_08008a02",
                "param_1": "input_val_1",
                "param_2": "input_val_2",
                "param_3": "input_val_3",
                "param_4": "input_val_4",
                "uVar1": "temp_val_1",
                "unaff_r4": "temp_val_2",
                "uVar2": "temp_val_3",
                "uVar3": "temp_val_4",
                "in_r12": "max_val",
                "bVar4": "condition_1"
            },
            "code": "ulonglong calculate_result_08008a02(uint input_val_1, uint input_val_2, uint input_val_3, uint input_val_4) {\n  uint temp_val_1;\n  uint temp_val_2;\n  uint temp_val_3;\n  uint temp_val_4;\n  bool condition_1;\n  uint mask = 0x80000000;\n  uint max_val = 0x100000;\n  uint mask_2 = 0x14;\n  uint mask_3 = 0x20;\n  uint mask_4 = 0x7ff00000;\n  uint mask_5 = 0x7ff8000000000000;\n  temp_val_1 = input_val_4 >> mask_2;\n  temp_val_2 = input_val_2;\n  temp_val_3 = input_val_1;\n  temp_val_4 = input_val_3;\n  if (input_val_4 != input_val_1 || temp_val_1 != input_val_1) {\n    if (input_val_4 == input_val_1) {\n      condition_1 = (input_val_1 | (input_val_2 << 0xc)) == 0;\n      if (condition_1) {\n        temp_val_3 = input_val_3;\n        temp_val_2 = input_val_4;\n        if (temp_val_1 != input_val_1) {\n          return ((temp_val_2 ^ input_val_4) & mask) << mask_3;\n        }\n      }\n    }\n    else if (temp_val_1 == input_val_1) {\n      condition_1 = (input_val_3 | (input_val_4 << 0xc)) == 0;\n      if (condition_1) {\n        return ((temp_val_2 ^ input_val_4) & mask) << mask_3;\n      }\n    }\n    else {\n      condition_1 = (input_val_1 | (input_val_2 << 1)) == 0;\n      if (!condition_1) {\n        condition_1 = (input_val_3 | (input_val_4 << 1)) == 0;\n      }\n      if (!condition_1) {\n        if (input_val_1 == 0) {\n          temp_val_2 = input_val_2 & mask;\n          do {\n            temp_val_1 = input_val_3 & mask;\n            input_val_3 = input_val_3 << 1;\n            input_val_4 = input_val_4 * 2 + (uint)(temp_val_1 != 0);\n          } while ((input_val_4 & max_val) == 0);\n          input_val_4 = input_val_4 | temp_val_2;\n          if (temp_val_1 != 0) {\n            return ((input_val_4 << mask_3) | input_val_3);\n          }\n        }\n        do {\n          temp_val_2 = input_val_4 & mask;\n          input_val_4 = input_val_4 << 1;\n          temp_val_3 = input_val_3 * 2 + (uint)(temp_val_2 != 0);\n        } while ((input_val_3 & max_val) == 0);\n        return ((temp_val_2 ^ input_val_4) & mask) << mask_3 | ((temp_val_3 << mask_3) | input_val_1);\n      }\n      if ((input_val_1 | (input_val_2 << 1)) != 0) {\n        return ((temp_val_2 ^ input_val_4) & mask) << mask_3 | mask_4;\n      }\n      if ((input_val_3 | (input_val_4 << 1)) != 0) {\n        return ((temp_val_2 ^ input_val_4) & mask) << mask_3;\n      }\n    }\n  }\n  return ((temp_val_2 << mask_3) | temp_val_3) | mask_5;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "__divdf3"
            ],
            "imported": false,
            "current_name": "calculate_result_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "print_string_0800369c",
                "s": "string",
                "local_c": "string_ptr",
                "*local_c": "*string_ptr"
            },
            "code": "void print_string_0800369c(char *string)\n{\n  uint8_t *string_ptr;\n  string_ptr = (uint8_t *)string;\n  while (*string_ptr != '\\0') {\n    serial_write(*string_ptr);\n    string_ptr++;\n  }\n  return;\n}",
            "called": [
                "serial_write"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "protocol_execute_startup",
                "report_startup_line"
            ],
            "imported": false,
            "current_name": "print_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "delay_08005a98",
                "Delay": "delay_time",
                "uVar1": "start_time",
                "uVar2": "current_time",
                "timingdelay": "N/A"
            },
            "code": "void delay_08005a98(uint32_t delay_08005a98_time)\n{\n  uint32_t start_time;\n  uint32_t current_time;\n  start_time = HAL_GetTick();\n  do {\n    current_time = HAL_GetTick();\n  } while (current_time < delay_08005a98_time + start_time);\n  return;\n}",
            "called": [
                "HAL_GetTick"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "_delay_ms"
            ],
            "imported": false,
            "current_name": "delay_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "__aeabi_frsub",
                "report_realtime_status",
                "plan_buffer_line",
                "gc_execute_line",
                "max_allowable_speed",
                "mc_arc",
                "printFloat",
                "intersection_distance",
                "estimate_acceleration_distance"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "printCoordinates_080044e8",
                "uVar1": "status",
                "extraout_s0": "currentCoord",
                "extraout_s0_00": "nextCoord",
                "extraout_s0_01": "nextCoord",
                "extraout_s0_02": "nextCoord",
                "extraout_s0_03": "nextCoord",
                "extraout_s0_04": "nextCoord",
                "extraout_s0_05": "nextCoord",
                "extraout_s0_06": "nextCoord",
                "extraout_s0_07": "nextCoord",
                "extraout_s0_08": "nextCoord",
                "extraout_s0_09": "nextCoord",
                "extraout_s0_10": "factor",
                "fVar2": "nextCoord",
                "extraout_s0_11": "nextCoord",
                "extraout_s0_12": "nextCoord",
                "uVar3": "nextCoord",
                "coord_data": "coordData",
                "i": "i",
                "coord_select": "coordSelect",
                "PTR_s__G92__080046c8": "PTR_s__G92__080046c8",
                "PTR_settings_080046bc": "settings",
                "PTR_gc_080046cc": "PTR_gc_080046cc",
                "PTR_DAT_080046c0": "PTR_DAT_080046c0",
                "PTR_DAT_080046c4": "PTR_DAT_080046c4",
                "PTR_DAT_08004698": "PTR_DAT_08004698",
                "PTR_DAT_0800469c": "PTR_DAT_0800469c",
                "PTR_DAT_080046a0": "PTR_DAT_080046a0",
                "PTR_DAT_080046a4": "PTR_DAT_080046a4",
                "PTR_DAT_080046a8": "PTR_DAT_080046a8",
                "PTR_DAT_080046ac": "PTR_DAT_080046ac",
                "PTR_DAT_080046b0": "PTR_DAT_080046b0",
                "PTR_DAT_080046b4": "PTR_DAT_080046b4",
                "PTR_DAT_080046b8": "PTR_DAT_080046b8",
                "DAT_08004690": "DAT_08004690",
                "DAT_08004694": "DAT_08004694"
            },
            "code": "void printCoordinates_080044e8(void)\n{\n  uint8_t status;\n  float currentCoord;\n  float nextCoord;\n  float factor = 1.0;\n  float coordData[3];\n  uint8_t i;\n  uint8_t coordSelect = 0;\n  while (true)\n  {\n    if (coordSelect > 7)\n    {\n      printPgmString(PTR_s__G92__080046c8);\n      currentCoord = factor * coordData[0];\n      for (i = 0; i < 3; i++)\n      {\n        if ((PTR_settings_080046bc[40] & 1) == 0)\n        {\n          printFloat(currentCoord);\n        }\n        else\n        {\n          nextCoord = __aeabi_f2d(coordData[i]);\n          nextCoord = __muldf3((int)nextCoord, (int)((ulonglong)nextCoord >> 0x20), DAT_08004690, DAT_08004694);\n          currentCoord = (float)__truncdfsf2((int)nextCoord, (int)((ulonglong)nextCoord >> 0x20));\n          printFloat(currentCoord);\n        }\n        if (i < 2)\n        {\n          printPgmString(PTR_DAT_080046c0);\n          currentCoord = factor * coordData[i + 1];\n        }\n        else\n        {\n          printPgmString(PTR_DAT_080046c4);\n          currentCoord = factor * coordData[0];\n        }\n      }\n      return;\n    }\n    status = PTR_settings_080046bc_read_coord_data(coordSelect, coordData);\n    if (status == 0) break;\n    printPgmString(PTR_DAT_08004698);\n    switch (coordSelect)\n    {\n      case 0:\n        printPgmString(PTR_DAT_0800469c);\n        currentCoord = factor * coordData[0];\n        break;\n      case 1:\n        printPgmString(PTR_DAT_080046a0);\n        currentCoord = factor * coordData[1];\n        break;\n      case 2:\n        printPgmString(PTR_DAT_080046a4);\n        currentCoord = factor * coordData[2];\n        break;\n      case 3:\n        printPgmString(PTR_DAT_080046a8);\n        currentCoord = factor * coordData[3];\n        break;\n      case 4:\n        printPgmString(PTR_DAT_080046ac);\n        currentCoord = factor * coordData[4];\n        break;\n      case 5:\n        printPgmString(PTR_DAT_080046b0);\n        currentCoord = factor * coordData[5];\n        break;\n      case 6:\n        printPgmString(PTR_DAT_080046b4);\n        currentCoord = factor * coordData[6];\n        break;\n      case 7:\n        printPgmString(PTR_DAT_080046b8);\n        currentCoord = factor * coordData[7];\n        break;\n    }\n    for (i = 0; i < 3; i++)\n    {\n      if ((PTR_settings_080046bc[40] & 1) == 0)\n      {\n        printFloat(currentCoord);\n      }\n      else\n      {\n        nextCoord = __aeabi_f2d(coordData[i]);\n        nextCoord = __muldf3((int)nextCoord, (int)((ulonglong)nextCoord >> 0x20), DAT_08004690, DAT_08004694);\n        currentCoord = (float)__truncdfsf2((int)nextCoord, (int)((ulonglong)nextCoord >> 0x20));\n        printFloat(currentCoord);\n      }\n      if (i < 2)\n      {\n        printPgmString(PTR_DAT_080046c0);\n        currentCoord = factor * coordData[i + 1];\n      }\n      else\n      {\n        printPgmString(PTR_DAT_080046c4);\n        currentCoord = factor * coordData[0];\n      }\n    }\n    coordSelect++;\n  }\n  report_status_message('\\n');\n  return;\n}",
            "called": [
                "report_status_message",
                "__muldf3",
                "printPgmString",
                "__truncdfsf2",
                "__aeabi_f2d",
                "printFloat",
                "settings_read_coord_data"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "printCoordinates_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "calculateTicks_08006c9c",
                "ticks": "inputTicks",
                "bVar1": "isLessThanMax",
                "DAT_08006cdc": "dataArray"
            },
            "code": "uint32_t calculateTicks_08006c9c(uint32_t ticks)\n{\n  bool isLessThanMax = ticks - 1 < 0x1000000;\n  if (isLessThanMax) {\n    ticks--; \n    DAT_08006cdc[1] = ticks;\n    NVIC_SetPriority(SysTick_IRQn, 0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return (uint)!isLessThanMax;\n}",
            "called": [
                "NVIC_SetPriority"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "HAL_SYSTICK_Config"
            ],
            "imported": false,
            "current_name": "calculateTicks_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,\n                      int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined4 extraout_r1;\n  int iVar5;\n  uint *puVar6;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  undefined4 uVar7;\n  uint **ppuVar8;\n  int iVar9;\n  int iVar10;\n  undefined4 *puVar11;\n  undefined4 uVar12;\n  uint uVar13;\n  uint *puVar14;\n  int iVar15;\n  int iVar16;\n  undefined8 *puVar17;\n  undefined8 *puVar18;\n  undefined8 *puVar19;\n  undefined4 *puVar20;\n  undefined8 *puVar21;\n  undefined4 uVar22;\n  int iVar23;\n  undefined4 *puVar24;\n  bool bVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  undefined8 uVar29;\n  ulonglong uVar30;\n  undefined4 in_stack_fffffd78;\n  int local_280;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined4 local_168;\n  undefined4 uStack_164;\n  undefined8 local_160;\n  undefined8 uStack_c8;\n  \n  uVar29 = CONCAT44(param_5,param_5);\n  iVar16 = *(int *)(PTR_init_jk_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    iVar10 = (local_26c + 1) * -0x18;\n  }\n  else {\n    iVar10 = -0x18;\n    local_26c = 0;\n  }\n  param_3 = param_3 + iVar10;\n  iVar10 = local_26c - iVar9;\n  if (-1 < iVar16 + iVar9) {\n    iVar23 = iVar16 + iVar9 + 1 + iVar10;\n    puVar19 = &uStack_208;\n    do {\n      while (iVar10 < 0) {\n        iVar10 = iVar10 + 1;\n        *(undefined4 *)puVar19 = 0;\n        *(undefined4 *)((int)puVar19 + 4) = 0;\n        puVar19 = puVar19 + 1;\n        if (iVar10 == iVar23) goto LAB_0800a626;\n      }\n      uVar27 = __aeabi_i2d(*(undefined4 *)(param_6 + iVar10 * 4));\n      iVar10 = iVar10 + 1;\n      *puVar19 = uVar27;\n      puVar19 = puVar19 + 1;\n    } while (iVar10 != iVar23);\n  }\nLAB_0800a626:\n  puVar11 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar16) {\n    puVar17 = &uStack_208 + param_4;\n    iVar23 = iVar16 + param_4;\n    iVar10 = iVar9;\n    puVar19 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar27 = 0;\n      }\n      else {\n        uVar27 = 0;\n        puVar24 = puVar11;\n        puVar21 = puVar17;\n        do {\n          puVar20 = puVar24 + 2;\n          uVar26 = __muldf3(*puVar20,puVar24[3],*(undefined4 *)(puVar21 + -1),\n                            *(undefined4 *)((int)puVar21 + -4));\n          uVar27 = __aeabi_dadd((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          puVar24 = puVar20;\n          puVar21 = puVar21 + -1;\n        } while (puVar20 != puVar11 + param_4 * 2);\n      }\n      iVar10 = iVar10 + 1;\n      *puVar19 = uVar27;\n      puVar17 = puVar17 + 1;\n      puVar19 = puVar19 + 1;\n    } while (iVar10 != iVar23);\n  }\n  local_260[0] = local_258 + iVar16 + -1;\n  local_280 = iVar16;\n  do {\n    iVar23 = *(int *)(&uStack_c8 + local_280);\n    uVar27 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + local_280 * 8 + 4),iVar23);\n    iVar10 = local_280;\n    if (0 < local_280) {\n      puVar19 = &uStack_c8 + local_280;\n      puVar6 = local_258;\n      do {\n        uVar7 = (undefined4)((ulonglong)uVar27 >> 0x20);\n        __muldf3((int)uVar27,uVar7,0,DAT_0800a89c);\n        __aeabi_d2iz();\n        uVar26 = __aeabi_i2d();\n        uVar3 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        uVar28 = __muldf3((int)uVar26,uVar3,0,DAT_0800a8a0);\n        __subdf3((int)uVar27,uVar7,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n        uVar2 = __aeabi_d2iz();\n        puVar17 = puVar19 + -1;\n        uVar7 = *(undefined4 *)puVar17;\n        uVar12 = *(undefined4 *)((int)puVar19 + -4);\n        *puVar6 = uVar2;\n        uVar27 = __aeabi_dadd((int)uVar26,uVar3,uVar7,uVar12);\n        iVar23 = (int)uVar27;\n        puVar19 = puVar17;\n        puVar6 = puVar6 + 1;\n      } while (puVar17 != &uStack_c8);\n    }\n    scalbn((double)CONCAT44(iVar10,in_stack_fffffd78),iVar23);\n    __muldf3();\n    floor((double)CONCAT44(iVar10,in_stack_fffffd78));\n    uVar27 = __muldf3();\n    uVar27 = __subdf3(iVar23,extraout_r1,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n    uVar2 = __aeabi_d2iz();\n    uVar26 = __aeabi_i2d();\n    uVar27 = __subdf3((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),(int)uVar26,\n                      (int)((ulonglong)uVar26 >> 0x20));\n    uVar7 = (undefined4)((ulonglong)uVar27 >> 0x20);\n    uVar3 = (undefined4)uVar27;\n    if (param_3 < 1) {\n      if (param_3 == 0) {\n        iVar23 = (int)local_258[iVar10 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar23 = __aeabi_dcmpge(uVar3,uVar7,0,DAT_0800ac3c);\n      if (iVar23 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar10 < 1) {\n          uVar27 = __subdf3(0,DAT_0800ac38,uVar3,uVar7);\n          iVar23 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar23 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar5 = (int)local_258[iVar10 + -1] >> (0x18U - param_3 & 0xff);\n      uVar13 = local_258[iVar10 + -1] - (iVar5 << (0x18U - param_3 & 0xff));\n      iVar23 = (int)uVar13 >> (0x17U - param_3 & 0xff);\n      local_258[iVar10 + -1] = uVar13;\n      uVar2 = uVar2 + iVar5;\njoined_r0x0800a8b8:\n      if (0 < iVar23) {\n        uVar2 = uVar2 + 1;\n        if (iVar10 < 1) {\n          uVar13 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar13 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar10 != 1) {\n              puVar6 = local_258;\n              iVar5 = 1;\n              do {\n                puVar6 = puVar6 + 1;\n                uVar13 = *puVar6;\n                if (uVar13 != 0) {\n                  iVar15 = iVar5 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar5 = iVar5 + 1;\n              } while (iVar5 != iVar10);\n            }\n          }\n          else {\n            iVar15 = 1;\n            iVar5 = 0;\nLAB_0800a8e2:\n            local_258[iVar5] = 0x1000000 - uVar13;\n            if (iVar15 < iVar10) {\n              uVar13 = local_258[iVar15];\n              puVar6 = local_258 + iVar15;\n              while( true ) {\n                puVar14 = puVar6 + 1;\n                *puVar6 = 0xffffff - uVar13;\n                if (puVar14 == local_258 + iVar10) break;\n                uVar13 = *puVar14;\n                puVar6 = puVar14;\n              }\n            }\n            uVar13 = 1;\n          }\n        }\n        if (0 < param_3) {\n          if (param_3 == 1) {\n            local_258[iVar10 + -1] = local_258[iVar10 + -1] & 0x7fffff;\n          }\n          else if (param_3 == 2) {\n            local_258[iVar10 + -1] = local_258[iVar10 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar23 == 2) {\n          uVar27 = __subdf3(0,DAT_0800ac38,uVar3,uVar7);\n          if (uVar13 != 0) {\n            uVar3 = 0;\n            scalbn((double)CONCAT44(iVar10,in_stack_fffffd78),0);\n            uVar27 = __subdf3((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),uVar3,extraout_r1_00);\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    iVar15 = (int)uVar27;\n    iVar5 = __aeabi_dcmpeq(iVar15,(int)((ulonglong)uVar27 >> 0x20),0,0);\n    if (iVar5 == 0) {\n      scalbn((double)CONCAT44(iVar10,in_stack_fffffd78),iVar15);\n      iVar9 = __aeabi_dcmpge();\n      if (iVar9 == 0) {\n        iVar5 = iVar10;\n        uVar13 = __aeabi_d2iz(iVar15,extraout_r1_02);\n        local_258[iVar5] = uVar13;\n        iVar10 = iVar5;\n      }\n      else {\n        __muldf3(iVar15,extraout_r1_02,0,DAT_0800ade8);\n        uVar13 = __aeabi_d2iz();\n        uVar27 = __aeabi_i2d();\n        uVar27 = __muldf3((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),0,DAT_0800ade4);\n        __subdf3(iVar15,extraout_r1_02,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        iVar9 = iVar10;\n        uVar4 = __aeabi_d2iz();\n        iVar5 = iVar10 + 1;\n        local_258[iVar10] = uVar4;\n        local_258[iVar5] = uVar13;\n        iVar10 = iVar9;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar5 = iVar10 + -1;\n    if (iVar16 <= iVar5) {\n      uVar13 = 0;\n      puVar6 = local_258 + iVar10 + 0x3fffffff;\n      do {\n        puVar14 = puVar6 + -1;\n        uVar13 = uVar13 | *puVar6;\n        puVar6 = puVar14;\n      } while (puVar14 != local_260[0]);\n      if (uVar13 != 0) break;\n    }\n    if (local_258[iVar16 + -1] == 0) {\n      local_280 = 1;\n      ppuVar8 = local_260 + iVar16;\n      do {\n        puVar6 = *ppuVar8;\n        local_280 = local_280 + 1;\n        ppuVar8 = ppuVar8 + -1;\n      } while (puVar6 == (uint *)0x0);\n      local_280 = iVar10 + local_280;\n    }\n    else {\n      local_280 = iVar10 + 1;\n    }\n    iVar23 = iVar10 + 1;\n    puVar24 = (undefined4 *)(param_6 + (iVar23 + local_26c + 0x3fffffff) * 4);\n    puVar19 = &uStack_208 + iVar10 + param_4;\n    puVar17 = &uStack_c8 + iVar23;\n    do {\n      puVar24 = puVar24 + 1;\n      uVar27 = __aeabi_i2d(*puVar24);\n      *puVar19 = uVar27;\n      puVar21 = puVar19 + 1;\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar20 = puVar11;\n        while( true ) {\n          puVar19 = puVar19 + -1;\n          puVar1 = puVar20 + 2;\n          uVar27 = __muldf3((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),*puVar1,puVar20[3]);\n          uVar26 = __aeabi_dadd((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar27,\n                                (int)((ulonglong)uVar27 >> 0x20));\n          if (puVar1 == puVar11 + param_4 * 2) break;\n          uVar27 = *puVar19;\n          puVar20 = puVar1;\n        }\n      }\n      *puVar17 = uVar26;\n      iVar23 = iVar23 + 1;\n      puVar19 = puVar21;\n      puVar17 = puVar17 + 1;\n    } while (iVar23 <= local_280);\n  } while( true );\n  if (local_258[iVar5] == 0) {\n    puVar6 = local_258 + iVar10 + 0x3ffffffe;\n    do {\n      uVar13 = *puVar6;\n      iVar5 = iVar5 + -1;\n      puVar6 = puVar6 + -1;\n    } while (uVar13 == 0);\n  }\nLAB_0800a9f6:\n  uVar3 = 0;\n  scalbn((double)CONCAT44(iVar10,in_stack_fffffd78),0);\n  uVar27 = CONCAT44(extraout_r1_01,uVar3);\n  if (iVar5 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        puVar19 = (undefined8 *)&local_168;\n        uVar29 = 0;\nLAB_0800abe4:\n        if (iVar23 == 0) {\n          uVar3 = *(undefined4 *)(puVar19 + 1);\n          uVar7 = *(undefined4 *)((int)puVar19 + 0xc);\n          *local_260[1] = local_168;\n          *(undefined4 *)((int)local_260[1] + 4) = uStack_164;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar29;\n          *(undefined4 *)((int)local_260[1] + 8) = uVar3;\n          *(undefined4 *)((int)local_260[1] + 0xc) = uVar7;\n          return uVar2 & 7;\n        }\n        iVar9 = *(int *)((int)puVar19 + 4);\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar29;\n        iVar16 = *(int *)((int)puVar19 + 0xc);\n        *(undefined4 *)((int)local_260[1] + 8) = *(undefined4 *)(puVar19 + 1);\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar29 >> 0x20) + -0x80000000;\n        uVar3 = *(undefined4 *)puVar19;\n        *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = iVar16 + -0x80000000;\n        *local_260[1] = uVar3;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar29 >> 0x20);\n      if (iVar23 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar29;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar29 = 0;\n  }\n  else {\n    puVar17 = &uStack_c8 + iVar5;\n    puVar6 = local_258 + iVar5 + 1;\n    puVar19 = &uStack_c8 + iVar5 + 1;\n    do {\n      uVar3 = (undefined4)((ulonglong)uVar27 >> 0x20);\n      puVar6 = puVar6 + -1;\n      uVar26 = __aeabi_i2d(*puVar6);\n      uVar26 = __muldf3((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar27,uVar3);\n      puVar19 = puVar19 + -1;\n      *puVar19 = uVar26;\n      uVar27 = __muldf3((int)uVar27,uVar3,0,DAT_0800ac40);\n    } while (puVar6 != local_258);\n    puVar19 = (undefined8 *)&local_168;\n    iVar9 = 0;\n    uVar3 = DAT_0800ac30;\n    uVar7 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar3;\n      DAT_0800ac34 = uVar7;\n      if (iVar16 < 0) {\n        uVar27 = 0;\n      }\n      else {\n        uVar27 = 0;\n        iVar10 = 0;\n        puVar21 = puVar17;\n        puVar11 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar26 = __muldf3(*(undefined4 *)puVar21,*(undefined4 *)((int)puVar21 + 4),uVar3,uVar7);\n          uVar27 = __aeabi_dadd((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          iVar10 = iVar10 + 1;\n          if ((iVar16 < iVar10) || (iVar9 < iVar10)) break;\n          uVar3 = *puVar11;\n          uVar7 = puVar11[1];\n          puVar21 = puVar21 + 1;\n          puVar11 = puVar11 + 2;\n        }\n      }\n      bVar25 = iVar9 != iVar5;\n      puVar19[iVar9] = uVar27;\n      puVar17 = puVar17 + -1;\n      iVar9 = iVar9 + 1;\n      uVar3 = DAT_0800ac30;\n      uVar7 = DAT_0800ac34;\n    } while (bVar25);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar5 != 0) {\n          puVar17 = puVar19 + iVar5;\n          uVar29 = *puVar17;\n          do {\n            uVar7 = (undefined4)((ulonglong)uVar29 >> 0x20);\n            uVar3 = (undefined4)uVar29;\n            uVar12 = *(undefined4 *)(puVar17 + -1);\n            uVar22 = *(undefined4 *)((int)puVar17 + -4);\n            uVar29 = __aeabi_dadd(uVar3,uVar7,uVar12,uVar22);\n            uVar27 = __subdf3(uVar12,uVar22,(int)uVar29,(int)((ulonglong)uVar29 >> 0x20));\n            uVar27 = __aeabi_dadd((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),uVar3,uVar7);\n            *puVar17 = uVar27;\n            puVar17 = puVar17 + -1;\n            *puVar17 = uVar29;\n          } while (puVar19 != puVar17);\n          if (1 < iVar5) {\n            puVar21 = puVar19 + iVar5;\n            uVar29 = *puVar21;\n            puVar17 = puVar21;\n            do {\n              uVar7 = (undefined4)((ulonglong)uVar29 >> 0x20);\n              uVar3 = (undefined4)uVar29;\n              uVar12 = *(undefined4 *)(puVar17 + -1);\n              uVar22 = *(undefined4 *)((int)puVar17 + -4);\n              uVar29 = __aeabi_dadd(uVar3,uVar7,uVar12,uVar22);\n              uVar27 = __subdf3(uVar12,uVar22,(int)uVar29,(int)((ulonglong)uVar29 >> 0x20));\n              uVar27 = __aeabi_dadd((int)uVar27,(int)((ulonglong)uVar27 >> 0x20),uVar3,uVar7);\n              *puVar17 = uVar27;\n              puVar17 = puVar17 + -1;\n              *puVar17 = uVar29;\n            } while (&local_160 != puVar17);\n            uVar29 = 0;\n            puVar18 = puVar19 + 2;\n            puVar17 = puVar21 + 1;\n            do {\n              puVar21 = puVar17 + -1;\n              uVar29 = __aeabi_dadd((int)uVar29,(int)((ulonglong)uVar29 >> 0x20),\n                                    *(undefined4 *)puVar21,*(undefined4 *)((int)puVar17 + -4));\n              puVar17 = puVar21;\n            } while (puVar18 != puVar21);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar29 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar17 = puVar19 + iVar5 + 1;\n      do {\n        puVar21 = puVar17 + -1;\n        uVar29 = __aeabi_dadd((int)uVar29,(int)((ulonglong)uVar29 >> 0x20),*(undefined4 *)puVar21,\n                              *(undefined4 *)((int)puVar17 + -4));\n        puVar17 = puVar21;\n      } while (puVar19 != puVar21);\n      goto LAB_0800aafc;\n    }\n    uVar29 = 0;\n    puVar17 = puVar19 + iVar5 + 1;\n    do {\n      puVar21 = puVar17 + -1;\n      uVar29 = __aeabi_dadd((int)uVar29,(int)((ulonglong)uVar29 >> 0x20),*(undefined4 *)puVar21,\n                            *(undefined4 *)((int)puVar17 + -4));\n      puVar17 = puVar21;\n    } while (puVar19 != puVar21);\n  }\n  iVar9 = (int)((ulonglong)uVar29 >> 0x20);\n  uVar3 = (undefined4)uVar29;\n  if (iVar23 == 0) {\n    *(undefined8 *)local_260[1] = uVar29;\n    uVar30 = __subdf3(local_168,uStack_164,uVar3,iVar9);\n    if (iVar5 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar19 = (undefined8 *)&local_168;\n    do {\n      uVar30 = __aeabi_dadd((int)uVar30,(int)(uVar30 >> 0x20),*(undefined4 *)(puVar19 + 1),\n                            *(undefined4 *)((int)puVar19 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar19 = puVar19 + 1;\n    } while (iVar9 <= iVar5);\n    if (iVar23 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar3;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar30 = __subdf3(local_168,uStack_164,uVar3,iVar9);\n    if (0 < iVar5) goto LAB_0800ad04;\n  }\n  uVar30 = uVar30 & 0xffffffff | (ulonglong)((int)(uVar30 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar30;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "__muldf3",
                "scalbn",
                "__subdf3",
                "__aeabi_i2d",
                "__aeabi_dcmpeq",
                "floor",
                "__aeabi_d2iz",
                "__aeabi_dadd",
                "__aeabi_dcmpge"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "__ieee754_rem_pio2"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_and_reset_machine_0800195c",
                "PTR_sys_08001990": "sys_data"
            },
            "code": "void check_and_reset_machine_0800195c() {\n  if ((PTR_sys_08001990[1] != '\\x06') && ((PTR_sys_08001990[2] & 0x20) == 0)) {\n    reset_machine();\n    PTR_sys_08001990[2] = PTR_sys_08001990[2] | 0x40;\n  }\n  return;\n}",
            "called": [
                "mc_reset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "debounce_on_handler"
            ],
            "imported": false,
            "current_name": "check_and_reset_machine_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "check_not_null_08009214",
                "in_ZR": "character"
            },
            "code": "bool check_not_null_08009214(char character) {\n  __aeabi_cfcmpeq();\n  return character != '\\0';\n}",
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "planner_reverse_pass_kernel",
                "read_float",
                "settings_store_global_setting",
                "gc_execute_line",
                "mc_arc",
                "planner_forward_pass_kernel"
            ],
            "imported": false,
            "current_name": "check_not_null_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_version_and_copy_settings_08004dd2",
                "bVar1": "version_from_eeprom",
                "iVar2": "copy_result",
                "version": "return_value",
                "PTR_settings_08004e2c": "settings_array",
                "settings_reset": "settings_reset"
            },
            "code": "uint8_t check_version_and_copy_settings_08004dd2(void)\n{\n  byte version_from_eeprom;\n  int copy_result;\n  uint8_t return_value;\n  version_from_eeprom = eeprom_get_char(0);\n  if (version_from_eeprom == 5) {\n    copy_result = memcpy_from_eeprom_with_checksum(PTR_settings_08004e2c, 1, 0x40);\n    if (copy_result == 0) {\n      return_value = 0;\n    }\n  }\n  else {\n    if (version_from_eeprom > 4) {\n      return_value = 0;\n    }\n    else {\n      copy_result = memcpy_from_eeprom_with_checksum(PTR_settings_08004e2c, 1, 0x28);\n      if (copy_result == 0) {\n        return_value = 0;\n      }\n      else {\n        settings_reset(false);\n      }\n    }\n  }\n  return_value = 1;\n}",
            "called": [
                "eeprom_get_char",
                "settings_reset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "settings_init"
            ],
            "imported": false,
            "current_name": "check_version_and_copy_settings_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "write_step_bits_08005778",
                "PTR_saved_step_bits_0800578c": "step_bits_ptr"
            },
            "code": "void write_step_bits_08005778() {\n  uint16_t* PTR_saved_step_bits_0800578c = (uint16_t*)PTR_saved_step_bits_0800578c;\n  uint16_t step_bits = *PTR_saved_step_bits_0800578c;\n  step_wr(step_bits);\n  return;\n}",
            "called": [
                "step_wr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "TIM2_IRQHandler"
            ],
            "imported": false,
            "current_name": "write_step_bits_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculateAcceleration_080028bc",
                "in_r0": "timeToAccelerateSquared",
                "in_r1": "targetSpeed",
                "in_r2": "timeToAccelerate",
                "uVar1": "targetSpeedSquared",
                "uVar2": "initialSpeedSquared",
                "fVar3": "acceleration"
            },
            "code": "float calculateAcceleration_080028bc(float initialSpeed, float targetSpeed, float timeToAccelerate)\n{\n  float initialSpeedSquared = initialSpeed * initialSpeed;\n  float targetSpeedSquared = targetSpeed * targetSpeed;\n  float speedDifferenceSquared = targetSpeedSquared - initialSpeedSquared;\n  float timeToAccelerateSquared = timeToAccelerate * timeToAccelerate;\n  float acceleration = speedDifferenceSquared / (2 * timeToAccelerateSquared);\n  return acceleration;\n}",
            "called": [
                "__aeabi_fmul",
                "__aeabi_fsub",
                "__addsf3",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculateAcceleration_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "get_system_core_clock_frequency_08006628",
                "uVar1": "sys_clock_freq",
                "uVar2": "leading_zeroes",
                "result": "unused",
                "result_1": "unused",
                "PTR_SystemCoreClock_0800667c": "ptr_system_core_clock",
                "PTR_APBAHBPrescTable_08006678": "ptr_apb_ahb_presc_table",
                "DAT_08006674": "unused",
                "apb_ahb_presc_index": "apb_ahb_presc_index",
                "apb_ahb_prescaler": "apb_ahb_prescaler"
            },
            "code": "uint32_t get_system_core_clock_frequency_08006628(void)\n{\n  uint32_t sys_clock_freq = HAL_RCC_GetSysClockFreq();\n  uint leading_zeroes = count_leading_zeroes(0xf000000);\n  uint32_t* PTR_SystemCoreClock_0800667c = (uint32_t*)PTR_SystemCoreClock_0800667c;\n  uint32_t* PTR_APBAHBPrescTable_08006678 = (uint32_t*)PTR_APBAHBPrescTable_08006678;\n  uint apb_ahb_presc_index = (*(uint*)(DAT_08006674 + 8) & 0xf0) >> (leading_zeroes & 0xff);\n  uint32_t apb_ahb_prescaler = PTR_APBAHBPrescTable_08006678[apb_ahb_presc_index];\n  *PTR_SystemCoreClock_0800667c = sys_clock_freq >> apb_ahb_prescaler;\n  return *PTR_SystemCoreClock_0800667c;\n}",
            "called": [
                "HAL_RCC_GetSysClockFreq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "HAL_RCC_GetPCLK1Freq",
                "HAL_RCC_ClockConfig",
                "HAL_RCC_GetPCLK2Freq"
            ],
            "imported": false,
            "current_name": "get_system_core_clock_frequency_08006628"
        },
        "FUN_080078e2": {
            "renaming": {
                "FUN_080078e2": "do_nothing_080078e2"
            },
            "code": "\nvoid do_nothing_080078e2(uint32_t bits)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078e2",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080078e2"
        },
        "FUN_08008b38": {
            "renaming": {
                "FUN_08008b38": "is_double_equal_08008b38",
                "in_CY": "is_CY_zero",
                "in_ZR": "is_ZR_nonzero"
            },
            "code": "bool is_double_equal_08008b38() {\n  bool is_CY_zero = false;\n  bool is_ZR_nonzero = false;\n  __aeabi_cdcmpeq();\n  return !is_CY_zero || is_ZR_nonzero;\n}",
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b38",
            "calling": [],
            "imported": false,
            "current_name": "is_double_equal_08008b38"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "handle_gpio_interrupt_0800738e",
                "GPIO_Pin": "pin_number",
                "uint": "uint32_t",
                "DAT_080073bc": "gpio_base_address"
            },
            "code": "void handle_gpio_interrupt_0800738e(uint16_t pin_number)\n{\n  uint32_t* gpio_pin_mask_ptr = (uint32_t*)(DAT_080073bc + 0x14);\n  uint32_t gpio_pin_mask = *gpio_pin_mask_ptr;\n  if ((pin_number & gpio_pin_mask) != 0) {\n    *gpio_pin_mask_ptr = pin_number;\n    HAL_GPIO_EXTI_Callback(pin_number);\n  }\n  return;\n}",
            "called": [
                "HAL_GPIO_EXTI_Callback"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "handle_gpio_interrupt_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(uint32_t us)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  block_t *pbVar1;\n  int iVar2;\n  \n  dirn_wr((uint)*(ushort *)PTR_dirn_bits_080055f0);\n  *(undefined2 *)PTR_saved_step_bits_080055f8 = *(undefined2 *)PTR_step_bits_080055f4;\n  if (*(int *)PTR_current_block_080055fc == 0) {\n    pbVar1 = plan_get_current_block();\n    *(block_t **)PTR_current_block_080055fc = pbVar1;\n    if (*(int *)PTR_current_block_080055fc == 0) {\n      st_go_idle();\n      PTR_sys_08005600[2] = PTR_sys_08005600[2] | 4;\n    }\n    else {\n      if (PTR_sys_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_st_08005604 + 0x1c) =\n             *(undefined4 *)(*(int *)PTR_current_block_080055fc + 0x28);\n        set_step_events_per_minute(*(uint32_t *)(PTR_st_08005604 + 0x1c));\n        *(undefined4 *)(PTR_st_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_st_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_current_block_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_current_block_080055fc + 0x30);\n      *(int *)PTR_st_08005604 = -(*(int *)(*(int *)PTR_current_block_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_st_08005604 + 4) = *(undefined4 *)PTR_st_08005604;\n      *(undefined4 *)(PTR_st_08005604 + 8) = *(undefined4 *)PTR_st_08005604;\n      *(undefined4 *)(PTR_st_08005604 + 0xc) =\n           *(undefined4 *)(*(int *)PTR_current_block_080055fc + 0x10);\n      *(undefined4 *)(PTR_st_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_current_block_080055fc != 0) {\n    *(undefined2 *)PTR_dirn_bits_080055f0 = **(undefined2 **)PTR_current_block_080055fc;\n    *(undefined2 *)PTR_step_bits_080055f4 = 0;\n    *(int *)PTR_st_08005604 =\n         *(int *)(*(int *)PTR_current_block_080055fc + 4) + *(int *)PTR_st_08005604;\n    if (0 < *(int *)PTR_st_08005604) {\n      *(ushort *)PTR_step_bits_080055f4 = *(ushort *)PTR_step_bits_080055f4 | 0x10;\n      *(int *)PTR_st_08005604 = *(int *)PTR_st_08005604 - *(int *)(PTR_st_08005604 + 0xc);\n      if ((*(ushort *)PTR_dirn_bits_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_sys_08005600 + 4) = *(int *)(PTR_sys_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_sys_08005600 + 4) = *(int *)(PTR_sys_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_st_08005604 + 4) =\n         *(int *)(*(int *)PTR_current_block_080055fc + 8) + *(int *)(PTR_st_08005604 + 4);\n    if (0 < *(int *)(PTR_st_08005604 + 4)) {\n      *(ushort *)PTR_step_bits_080055f4 = *(ushort *)PTR_step_bits_080055f4 | 0x440;\n      *(int *)(PTR_st_08005604 + 4) =\n           *(int *)(PTR_st_08005604 + 4) - *(int *)(PTR_st_08005604 + 0xc);\n      if ((*(ushort *)PTR_dirn_bits_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_sys_08005600 + 8) = *(int *)(PTR_sys_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_sys_08005600 + 8) = *(int *)(PTR_sys_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_st_08005604 + 8) =\n         *(int *)(*(int *)PTR_current_block_080055fc + 0xc) + *(int *)(PTR_st_08005604 + 8);\n    if (0 < *(int *)(PTR_st_08005604 + 8)) {\n      *(ushort *)PTR_step_bits_080055f4 = *(ushort *)PTR_step_bits_080055f4 | 0x100;\n      *(int *)(PTR_st_08005604 + 8) =\n           *(int *)(PTR_st_08005604 + 8) - *(int *)(PTR_st_08005604 + 0xc);\n      if ((*(ushort *)PTR_dirn_bits_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_sys_08005600 + 0xc) = *(int *)(PTR_sys_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_sys_08005600 + 0xc) = *(int *)(PTR_sys_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_st_08005604 + 0x10) = *(int *)(PTR_st_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_st_08005604 + 0x10) < *(uint *)(*(int *)PTR_current_block_080055fc + 0x10)) {\n      if (PTR_sys_08005600[1] == '\\x04') {\n        iVar2 = iterate_trapezoid_cycle_counter();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_current_block_080055fc + 0x30) <\n              *(uint *)(PTR_st_08005604 + 0x1c)) {\n            *(int *)(PTR_st_08005604 + 0x1c) =\n                 *(int *)(PTR_st_08005604 + 0x1c) -\n                 *(int *)(*(int *)PTR_current_block_080055fc + 0x30);\n            set_step_events_per_minute(*(uint32_t *)(PTR_st_08005604 + 0x1c));\n          }\n          else {\n            st_go_idle();\n            PTR_sys_08005600[2] = PTR_sys_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_st_08005748 + 0x10) <\n               *(uint *)(*(int *)PTR_current_block_0800574c + 0x34)) {\n        iVar2 = iterate_trapezoid_cycle_counter();\n        if (iVar2 != 0) {\n          *(int *)(PTR_st_08005748 + 0x1c) =\n               *(int *)(PTR_st_08005748 + 0x1c) +\n               *(int *)(*(int *)PTR_current_block_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_current_block_0800574c + 0x3c) <=\n              *(uint *)(PTR_st_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_st_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_current_block_0800574c + 0x3c);\n          }\n          set_step_events_per_minute(*(uint32_t *)(PTR_st_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_st_08005748 + 0x10) <\n               *(uint *)(*(int *)PTR_current_block_0800574c + 0x38)) {\n        if (*(int *)(PTR_st_08005748 + 0x1c) != *(int *)(*(int *)PTR_current_block_0800574c + 0x3c))\n        {\n          *(undefined4 *)(PTR_st_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_current_block_0800574c + 0x3c);\n          set_step_events_per_minute(*(uint32_t *)(PTR_st_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_st_08005748 + 0x10) ==\n               *(int *)(*(int *)PTR_current_block_0800574c + 0x38)) {\n        if (*(int *)(PTR_st_08005748 + 0x1c) == *(int *)(*(int *)PTR_current_block_0800574c + 0x3c))\n        {\n          *(undefined4 *)(PTR_st_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_st_08005748 + 0x18) = 420000 - *(int *)(PTR_st_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = iterate_trapezoid_cycle_counter();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_st_08005748 + 0x20) < *(uint *)(PTR_st_08005748 + 0x1c)) {\n            *(int *)(PTR_st_08005748 + 0x1c) =\n                 *(int *)(PTR_st_08005748 + 0x1c) -\n                 *(int *)(*(int *)PTR_current_block_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_st_08005748 + 0x1c) = *(uint *)(PTR_st_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_st_08005748 + 0x1c) <\n              *(uint *)(*(int *)PTR_current_block_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_st_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_current_block_0800574c + 0x2c);\n          }\n          set_step_events_per_minute(*(uint32_t *)(PTR_st_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_step_bits_08005754 = 0;\n      *(undefined4 *)PTR_current_block_0800574c = 0;\n      plan_discard_current_block();\n    }\n  }\n  *(ushort *)PTR_step_bits_08005754 =\n       *(ushort *)PTR_step_bits_08005754 ^ *(ushort *)(PTR_settings_08005758 + 0x18);\n  *(ushort *)PTR_dirn_bits_0800575c =\n       *(ushort *)PTR_dirn_bits_0800575c ^ *(ushort *)(PTR_settings_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "dirn_wr",
                "plan_discard_current_block",
                "iterate_trapezoid_cycle_counter",
                "set_step_events_per_minute",
                "st_go_idle",
                "plan_get_current_block"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "TIM2_IRQHandler"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "initialize_system_080092c4",
                "iVar1": "index",
                "puVar2": "completed_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void initialize_system_080092c4(void)\n{\n  int index;\n  undefined4 *completed_ptr = (undefined4 *)PTR_completed_8911_0800930c;\n  undefined4 *clock_ptr = PTR_SystemCoreClock_08009304;\n  undefined4 *ebss_ptr = PTR__ebss_08009310;\n  code *jump_table;\n  for (index = 0; clock_ptr + index < PTR_completed_8911_08009308; index += 4)\n  {\n    *(undefined4 *)(clock_ptr + index) = *(undefined4 *)(PTR___fini_array_end_08009300 + index);\n  }\n  for (; completed_ptr < ebss_ptr; completed_ptr++)\n  {\n    *completed_ptr = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  jump_table = (code *)0x80092fa;\n  main();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "main",
                "SystemInit",
                "__libc_init_array"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "initialize_system_080092c4"
        },
        "FUN_0800770e": {
            "renaming": {
                "FUN_0800770e": "do_nothing_0800770e"
            },
            "code": "\nvoid do_nothing_0800770e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800770e",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800770e"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "send_data_via_usart_08008250",
                "data": "data"
            },
            "code": "void send_data_via_usart_08008250(uint8_t data)\n{\n  usart_putc(data);\n  return;\n}",
            "called": [
                "usart_putc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "printPgmString",
                "printString",
                "print_base2",
                "printInteger",
                "print_uint32_base10",
                "printFloat"
            ],
            "imported": false,
            "current_name": "send_data_via_usart_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "check_and_read_letter_0800184c",
                "letter": "current_letter",
                "float_ptr": "float_ptr",
                "line": "line",
                "char_counter": "char_counter",
                "iVar1": "result"
            },
            "code": "int check_and_read_letter_0800184c(char *current_letter, float *float_ptr, char *line, uint8_t *char_counter) {\n  int result = 0;\n  if (line[*char_counter] == '\\0') {\n    result = 0;\n  }\n  else {\n    *current_letter = line[*char_counter];\n    if (((byte)*current_letter < 0x41) || (0x5a < (byte)*current_letter)) {\n      *PTR_gc_080018c8 = 2;\n      result = 0;\n    }\n    else {\n      *char_counter = *char_counter + '\\x01';\n      result = read_float(line, char_counter, float_ptr);\n      if (result == 0) {\n        *PTR_gc_080018c8 = 1;\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "read_float"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "check_and_read_letter_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(float *position,float *target,float *offset,uint8_t axis_0,uint8_t axis_1,\n           uint8_t axis_linear,float feed_rate,uint8_t invert_feed_rate,float radius,\n           uint8_t isclockwise)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  float fVar7;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  undefined8 extraout_d0;\n  undefined8 extraout_d0_00;\n  undefined8 extraout_d0_01;\n  float extraout_s2;\n  float z;\n  float extraout_s2_00;\n  float extraout_s3;\n  float feed_rate_00;\n  float extraout_s3_00;\n  float feed_rate_01;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  undefined3 in_stack_00000009;\n  undefined4 in_stack_00000010;\n  char in_stack_00000014;\n  uint in_stack_ffffff78;\n  undefined4 in_stack_ffffff7c;\n  undefined3 in_stack_ffffff80;\n  uint uVar10;\n  byte bVar11;\n  float arc_target [3];\n  float r_axisi;\n  float sin_Ti;\n  float cos_Ti;\n  float sin_T;\n  float cos_T;\n  float linear_per_segment;\n  float theta_per_segment;\n  uint16_t segments;\n  float millimeters_of_travel;\n  float rt_axis1;\n  float rt_axis0;\n  float linear_travel;\n  float center_axis1;\n  float center_axis0;\n  int8_t count;\n  uint16_t i;\n  float angular_travel;\n  float r_axis1;\n  float r_axis0;\n  \n  uVar10 = CONCAT13(axis_0,in_stack_ffffff80);\n  center_axis0 = (float)__addsf3(feed_rate,position[axis_0],offset[axis_0]);\n  center_axis1 = (float)__addsf3(position[axis_1],offset[axis_1]);\n  uVar1 = __aeabi_fsub(target[axis_linear],position[axis_linear]);\n  bVar11 = (byte)(uVar10 >> 0x18);\n  r_axis0 = (float)((uint)offset[bVar11] ^ 0x80000000);\n  r_axis1 = (float)((uint)offset[axis_1] ^ 0x80000000);\n  uVar2 = __aeabi_fsub(target[bVar11],center_axis0);\n  uVar3 = __aeabi_fsub(target[axis_1],center_axis1);\n  uVar4 = __aeabi_fmul(r_axis0,uVar3);\n  uVar5 = __aeabi_fmul(r_axis1,uVar2);\n  uVar4 = __aeabi_fsub(uVar4,uVar5);\n  uVar8 = __aeabi_f2d(uVar4);\n  uVar2 = __aeabi_fmul(r_axis0,uVar2);\n  uVar3 = __aeabi_fmul(r_axis1,uVar3);\n  uVar2 = __addsf3(uVar2,uVar3);\n  uVar9 = __aeabi_f2d(uVar2);\n  uVar8 = atan2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),(int)uVar9,\n                (int)((ulonglong)uVar9 >> 0x20));\n  angular_travel = (float)__truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n  if (in_stack_00000014 == '\\0') {\n    iVar6 = __aeabi_fcmple(angular_travel,0);\n    if (iVar6 != 0) {\n      uVar8 = __aeabi_f2d(angular_travel);\n      uVar8 = __aeabi_dadd((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),DAT_08002240,DAT_08002244);\n      angular_travel = (float)__truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n    }\n  }\n  else {\n    iVar6 = __aeabi_fcmpge(angular_travel,0);\n    if (iVar6 != 0) {\n      uVar8 = __aeabi_f2d(angular_travel);\n      uVar8 = __subdf3((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),DAT_08002240,DAT_08002244);\n      angular_travel = (float)__truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n    }\n  }\n  uVar2 = __aeabi_fmul(angular_travel,in_stack_00000010);\n  uVar2 = __aeabi_f2d(uVar2);\n  __aeabi_f2d(uVar1 & 0x7fffffff);\n  hypot((double)CONCAT44(in_stack_ffffff7c,in_stack_ffffff78),(double)CONCAT44(offset,uVar10));\n  uVar2 = __truncdfsf2(uVar2,extraout_r1);\n  iVar6 = __aeabi_fcmpeq(uVar2,0);\n  if (iVar6 == 0) {\n    uVar2 = __aeabi_fdiv(uVar2,*(undefined4 *)(PTR_settings_08002248 + 0x1c));\n    uVar2 = __aeabi_f2d(uVar2);\n    floor((double)CONCAT44(in_stack_ffffff7c,in_stack_ffffff78));\n    segments = __aeabi_d2uiz(uVar2,extraout_r1_00);\n    if (isclockwise != '\\0') {\n      uVar2 = __floatsisf(segments);\n      __aeabi_fmul(_invert_feed_rate,uVar2);\n    }\n    uVar2 = __floatsisf(segments);\n    sin_T = (float)__aeabi_fdiv(angular_travel,uVar2);\n    uVar2 = __floatsisf(segments);\n    linear_per_segment = (float)__aeabi_fdiv(uVar1,uVar2);\n    uVar8 = __aeabi_f2d(sin_T);\n    uVar8 = __muldf3((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),0,DAT_0800224c);\n    uVar9 = __aeabi_f2d(sin_T);\n    uVar8 = __muldf3((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),(int)uVar9,\n                     (int)((ulonglong)uVar9 >> 0x20));\n    uVar8 = __subdf3(0,DAT_08002250,(int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n    cos_T = (float)__truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n    count = '\\0';\n    theta_per_segment = sin_T;\n    arc_target[axis_linear] = position[axis_linear];\n    uVar8 = extraout_d0;\n    fVar7 = extraout_s2;\n    feed_rate_01 = extraout_s3;\n    for (i = 1; i < segments; i = i + 1) {\n      if ((int)count < (int)(uint)(byte)PTR_settings_08002248[0x3e]) {\n        uVar2 = __aeabi_fmul(r_axis0,sin_T);\n        uVar3 = __aeabi_fmul(r_axis1,cos_T);\n        fVar7 = (float)__addsf3(uVar2,uVar3);\n        uVar2 = __aeabi_fmul(r_axis0,cos_T);\n        uVar3 = __aeabi_fmul(r_axis1,sin_T);\n        r_axis0 = (float)__aeabi_fsub(uVar2,uVar3);\n        count = count + '\\x01';\n        r_axis1 = fVar7;\n      }\n      else {\n        uVar2 = __floatsisf(i);\n        uVar2 = __aeabi_fmul(uVar2,theta_per_segment);\n        uVar2 = __aeabi_f2d(uVar2);\n        cos((double)CONCAT44(in_stack_ffffff7c,in_stack_ffffff78));\n        uVar2 = __truncdfsf2(uVar2,extraout_r1_01);\n        uVar3 = __floatsisf(i);\n        uVar3 = __aeabi_fmul(uVar3,theta_per_segment);\n        uVar3 = __aeabi_f2d(uVar3);\n        sin((double)CONCAT44(in_stack_ffffff7c,in_stack_ffffff78));\n        uVar3 = __truncdfsf2(uVar3,extraout_r1_02);\n        uVar4 = __aeabi_fmul((uint)offset[uVar10 >> 0x18] ^ 0x80000000,uVar2);\n        uVar5 = __aeabi_fmul(offset[axis_1],uVar3);\n        r_axis0 = (float)__addsf3(uVar4,uVar5);\n        uVar3 = __aeabi_fmul((uint)offset[uVar10 >> 0x18] ^ 0x80000000,uVar3);\n        uVar2 = __aeabi_fmul(offset[axis_1],uVar2);\n        r_axis1 = (float)__aeabi_fsub(uVar3,uVar2);\n        count = '\\0';\n      }\n      uVar1 = uVar10 >> 0x18;\n      fVar7 = (float)__addsf3(center_axis0,r_axis0);\n      arc_target[uVar1] = fVar7;\n      fVar7 = (float)__addsf3(center_axis1,r_axis1);\n      arc_target[axis_1] = fVar7;\n      fVar7 = (float)__addsf3(arc_target[axis_linear],linear_per_segment);\n      arc_target[axis_linear] = fVar7;\n      in_stack_ffffff78 = (uint)isclockwise;\n      mc_line((float)extraout_d0_00,(float)((ulonglong)extraout_d0_00 >> 0x20),z,feed_rate_00,\n              SUB41(arc_target[0],0));\n      if (*PTR_sys_08002404 != '\\0') {\n        return;\n      }\n      uVar8 = extraout_d0_01;\n      fVar7 = extraout_s2_00;\n      feed_rate_01 = extraout_s3_00;\n    }\n    mc_line((float)uVar8,(float)((ulonglong)uVar8 >> 0x20),fVar7,feed_rate_01,SUB41(*target,0));\n  }\n  return;\n}\n\n",
            "called": [
                "__subdf3",
                "atan2",
                "__truncdfsf2",
                "__aeabi_fcmple",
                "__aeabi_f2d",
                "__addsf3",
                "__aeabi_fcmpeq",
                "__aeabi_dadd",
                "hypot",
                "__aeabi_fdiv",
                "__floatsisf",
                "__muldf3",
                "mc_line",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "__aeabi_fcmpge",
                "floor",
                "__aeabi_fsub",
                "cos",
                "sin"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08005ad4": {
            "renaming": {
                "FUN_08005ad4": "get_high_word_08005ad4",
                "*DAT_08005ae8": "data_pointer",
                "data": "data",
                "high_word": "high_word"
            },
            "code": "uint32_t get_high_word_08005ad4(void)\n{\n    uint32_t* *DAT_08005ae8 = DAT_08005ae8;\n    uint32_t data = **DAT_08005ae8;\n    uint32_t high_word = data >> 16;\n    return high_word;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005ad4",
            "calling": [],
            "imported": false,
            "current_name": "get_high_word_08005ad4"
        },
        "FUN_08005b3c": {
            "renaming": {
                "FUN_08005b3c": "set_flag_for_data_access_08005b3c",
                "DAT_08005b54": "data_access_flag_address"
            },
            "code": "void set_flag_for_data_access_08005b3c(void)\n{\n  uint32_t* data_access_flag_ptr = (uint32_t*)(DAT_08005b54 + 4);\n  uint32_t current_flag_value = *data_access_flag_ptr;\n  uint32_t flag_to_set = 2;\n  *data_access_flag_ptr = current_flag_value | flag_to_set;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b3c",
            "calling": [],
            "imported": false,
            "current_name": "set_flag_for_data_access_08005b3c"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "setNVICPriorityGrouping_08006ce0",
                "PriorityGroup": "priorityGroup"
            },
            "code": "void setNVICPriorityGrouping_08006ce0(uint32_t priorityGroup) {\n  NVIC_SetPriorityGrouping(priorityGroup);\n  return;\n}",
            "called": [
                "NVIC_SetPriorityGrouping"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "HAL_Init"
            ],
            "imported": false,
            "current_name": "setNVICPriorityGrouping_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "disableIRQ_08006d4a",
                "IRQn": "IRQn"
            },
            "code": "void disableIRQ_08006d4a(IRQn_Type IRQn)\n{\n  NVIC_DisableIRQ(IRQn);\n  return;\n}",
            "called": [
                "NVIC_DisableIRQ"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "disableIRQ_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculate_result_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "atan",
                "plan_buffer_line",
                "__ieee754_sqrt",
                "homing_cycle",
                "sqrt",
                "gc_execute_line",
                "__ieee754_atan2"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "writeDataToEEPROM_08000374",
                "destination": "destination",
                "source": "source",
                "size": "size",
                "local_1c": "dataSize",
                "local_18": "dataPtr",
                "local_14": "eepromAddr",
                "checksum": "checksum"
            },
            "code": "void writeDataToEEPROM_08000374(uint destination, char* source, uint size) {\n  uint dataSize = size;\n  uchar* dataPtr = (uchar*)source;\n  uint eepromAddr = destination;\n  uchar checksum = 0;\n\n  if (*(int*)PTR_eeprom_ready_080003e8 == 0) {\n    eeprom_init();\n    dataPtr = (uchar*)source;\n    eepromAddr = destination;\n  }\n\n  for (; dataSize != 0; dataSize--) {\n    checksum = (checksum != 0) + *dataPtr;\n    eeprom_put_char(eepromAddr, *dataPtr);\n    dataPtr++;\n    eepromAddr++;\n  }\n\n  eeprom_put_char(eepromAddr, checksum);\n  return;\n}",
            "called": [
                "eeprom_init",
                "eeprom_put_char"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "settings_write_coord_data",
                "write_global_settings",
                "settings_store_startup_line"
            ],
            "imported": false,
            "current_name": "writeDataToEEPROM_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_unsigned_long_080037fc",
                "n": "number",
                "local_c": "absolute_value"
            },
            "code": "void print_unsigned_long_080037fc(long number) {\n  unsigned long absolute_value;\n  absolute_value = number;\n  if (number < 0) {\n    serial_write('-');\n    absolute_value = -number;\n  }\n  print_uint32_base10(absolute_value);\n  return;\n}",
            "called": [
                "serial_write",
                "print_uint32_base10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "report_gcode_modes",
                "report_grbl_settings",
                "report_startup_line"
            ],
            "imported": false,
            "current_name": "print_unsigned_long_080037fc"
        },
        "FUN_08007dd8": {
            "renaming": {
                "FUN_08007dd8": "disable_timer_interrupt_08007dd8",
                "puVar1": "timer_registers",
                "TIMx": "timer_instance",
                "DAT_08007e04": "timer_registers"
            },
            "code": "void disable_timer_interrupt_08007dd8(void)\n{\n  uint *DAT_08007e04;\n  TIM_TypeDef *timer_instance;\n  \n  DAT_08007e04 = DAT_08007e04;\n  *DAT_08007e04 &= 0xfffffffe;\n  DAT_08007e04[8] &= 0xffffffef;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007dd8",
            "calling": [],
            "imported": false,
            "current_name": "disable_timer_interrupt_08007dd8"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "multiply_and_add_0800a1bc",
                "param_1": "a",
                "param_2": "b",
                "uVar1": "result",
                "uVar2": "shift_count",
                "iVar3": "quotient",
                "uVar4": "remainder",
                "uVar5": "divisor",
                "uVar6": "multiplier",
                "uVar8": "temp_result",
                "uVar9": "bit_index",
                "uVar10": "mask",
                "uVar11": "quotient_bit",
                "uVar12": "dividend",
                "uVar13": "quotient_shifted",
                "uVar14": "temp_double",
                "DAT_0800a340": "MASK",
                "__muldf3": "multiply_double",
                "__aeabi_dadd": "add_double",
                "__subdf3": "subtract_double",
                "__divdf3": "divide_double"
            },
            "code": "uint multiply_and_add_0800a1bc(uint a, uint b)\n{\n  uint result;\n  uint shift_count;\n  uint quotient;\n  uint remainder;\n  uint divisor;\n  uint multiplier;\n  uint temp_result;\n  uint bit_index;\n  uint mask;\n  uint quotient_bit;\n  \n  if ((0xFFFFFFF0 & ~b) == 0)\n  {\n    result = a + b;\n  }\n  else if ((int)b < 1)\n  {\n    if ((b & 0x7FFFFFFF | a) == 0)\n    {\n      result = a;\n    }\n    else if (b != 0)\n    {\n      temp_result = a - b;\n      divisor = (uint)((ulonglong)temp_result >> 32);\n      quotient = divide(temp_result, divisor, temp_result, divisor);\n      result = quotient;\n    }\n    else\n    {\n      shift_count = 0;\n      multiplier = a;\n      do\n      {\n        divisor = multiplier << 21;\n        quotient_bit = divisor >> 31;\n        multiplier = (multiplier << 1) | quotient_bit;\n        shift_count++;\n      } while (quotient_bit == 0);\n      mask = (1 << shift_count) - 1;\n      result = a >> (32 - shift_count) | (mask & divisor);\n    }\n  }\n  else\n  {\n    shift_count = b >> 20;\n    divisor = a;\n    if (shift_count != 0)\n    {\n      quotient = divide(divisor, shift_count, divisor, shift_count);\n      divisor = quotient;\n      multiplier = 1 << shift_count;\n    }\n    else\n    {\n      bit_index = 0;\n      mask = 0xFFFFFFFF;\n      multiplier = divisor;\n      do\n      {\n        divisor = mask & (multiplier << 1);\n        quotient_bit = divisor >> 31;\n        multiplier = (multiplier << 1) | quotient_bit;\n        bit_index++;\n      } while (bit_index <= 31 && divisor < 0);\n      shift_count = 32 - bit_index;\n      divisor = divisor >> shift_count;\n    }\n    temp_result = multiplier * 2 - ((int)divisor >> 31);\n    remainder = divisor << 1;\n    quotient = 0;\n    bit_index = 22;\n    while (bit_index != 0)\n    {\n      divisor = remainder;\n      remainder = remainder << 1;\n      quotient = quotient << 1;\n      if ((int)divisor < (int)temp_result)\n      {\n        quotient++;\n        remainder += multiplier;\n      }\n      bit_index--;\n    }\n    if ((divisor | remainder) != 0)\n    {\n      quotient++;\n    }\n    result = quotient | (shift_count << 16);\n  }\n  return result;\n}\n",
            "called": [
                "__muldf3",
                "__subdf3",
                "__aeabi_dadd",
                "__divdf3"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "sqrt",
                "__ieee754_hypot"
            ],
            "imported": false,
            "current_name": "multiply_and_add_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "change_spindle_direction_0800525c",
                "direction": "new_direction",
                "PTR_current_direction_080052a8": "current_direction_ptr",
                "plan_synchronize": "synchronize_plans",
                "spindle_stop": "stop_spindle",
                "spindle_rev": "reverse_spindle",
                "spindle_fwd": "forward_spindle",
                "spindle_on": "start_spindle"
            },
            "code": "void change_spindle_direction_0800525c(int8_t new_direction)\\n{\\n  if ((int)new_direction != (uint)(byte)*PTR_current_direction_080052a8) {\\n    synchronize_plans();\\n    if (new_direction == \"\\0\") {\\n      stop_spindle();\\n    }\\n    else {\\n      if (new_direction < \"\\x01\") {\\n        reverse_spindle();\\n      }\\n      else {\\n        forward_spindle();\\n      }\\n      start_spindle();\\n    }\\n    *PTR_current_direction_080052a8 = new_direction;\\n  }\\n  return;\\n}",
            "called": [
                "spindle_on",
                "plan_synchronize",
                "spindle_stop",
                "spindle_fwd",
                "spindle_rev"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "change_spindle_direction_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_in_short_array_080073d4",
                "n": "position",
                "PTR_": "array",
                "DAT_": "bit_mask"
            },
            "code": "void set_bit_in_short_array_080073d4(int position)\n{\n    short* PTR_ = (short*)((position >> 4) * 0x400 + 0x4002001a);\n    short DAT_ = (short)(1 << (position & 0xfU));\n    *PTR_ = DAT_;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "debounce_off_handler"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_array_080073d4"
        },
        "FUN_080085e4": {
            "renaming": {
                "FUN_080085e4": "calculate_fractional_part_080085e4",
                "param_1": "numerator",
                "param_2": "denominator",
                "bVar1": "is_negative",
                "uVar2": "quotient",
                "uVar3": "remainder",
                "uVar4": "shift_amount",
                "iVar5": "guard_bit",
                "uVar6": "round_bit",
                "iVar7": "sticky_bit",
                "uVar8": "sign_bit",
                "uVar9": "guard_bit",
                "bVar10": "round_bit",
                "bVar11": "sticky_bit"
            },
            "code": "ulonglong calculate_fractional_part_080085e4(uint numerator, uint denominator)\n{\n  byte is_negative = 0;\n  uint quotient;\n  uint remainder;\n  int shift_amount;\n  uint guard_bit;\n  uint round_bit;\n  uint sticky_bit;\n  uint sign_bit = numerator & 0x80000000;\n\n  if ((numerator | denominator) == 0) {\n    return CONCAT44(denominator, numerator);\n  }\n\n  if ((int)sign_bit < 0) {\n    is_negative = denominator != 0;\n    numerator = -numerator;\n    remainder = -denominator - (uint)is_negative;\n  } else {\n    remainder = denominator;\n  }\n\n  shift_amount = leading_zero_bits(remainder) - 11;\n  if (shift_amount > 0) {\n    quotient = numerator << shift_amount;\n    remainder = remainder << shift_amount;\n    guard_bit = remainder >> 31;\n    round_bit = quotient >> 31;\n    sticky_bit = (quotient << 1) != 0;\n    quotient = quotient >> 1 | guard_bit | round_bit | sticky_bit;\n  } else {\n    quotient = numerator;\n  }\n\n  if (remainder > 0x7FFFFF) {\n    guard_bit = quotient & 1;\n    round_bit = (quotient >> 1) & 1;\n    sticky_bit = (quotient & 0x7FFFFF) != 0;\n    quotient = quotient >> 1 | guard_bit | round_bit | sticky_bit;\n    shift_amount++;\n  }\n\n  if (shift_amount >= 0) {\n    quotient = quotient + (shift_amount << 20);\n  } else {\n    shift_amount = -shift_amount;\n    if (shift_amount < 32) {\n      quotient = (sign_bit | quotient) >> shift_amount;\n    } else {\n      quotient = sign_bit;\n    }\n  }\n\n  return CONCAT44(sign_bit | remainder >> 31, quotient);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080085e4",
            "calling": [],
            "imported": false,
            "current_name": "calculate_fractional_part_080085e4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "clear_pending_irq_08006dfe",
                "IRQn": "irq"
            },
            "code": "void clear_pending_irq_08006dfe(IRQn_Type irq)\n{\n  NVIC_ClearPendingIRQ(irq);\n  return;\n}",
            "called": [
                "NVIC_ClearPendingIRQ"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "clear_pending_irq_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "reset_system_08006d66"
            },
            "code": "void reset_system_08006d66(void)\n{\n  NVIC_SystemReset();\n  return;\n}",
            "called": [
                "NVIC_SystemReset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "reset_system_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "configure_GPIO_08006e88",
                "GPIOx": "GPIO",
                "GPIO_Init": "GPIO_Init",
                "uVar1": "alternate_function",
                "uVar2": "pin_mask",
                "uVar3": "pin_value",
                "iVar4": "port_number",
                "DAT_0800719c": "EXTI_BASE_ADDRESS",
                "DAT_080071a0": "EXTI_CR_ADDRESS",
                "DAT_080071a4": "GPIOA",
                "DAT_080071a8": "GPIOB",
                "DAT_080071ac": "GPIOC",
                "DAT_080071b0": "GPIOD",
                "DAT_080071b4": "GPIOE",
                "DAT_080071b8": "GPIOF",
                "DAT_080071bc": "GPIOG",
                "DAT_080071c0": "GPIOH",
                "DAT_080071c4": "GPIOI",
                "DAT_080071c8": "GPIOJ",
                "GPIO_MODE_AF_PP": "Alternate_Function_Push_Pull",
                "GPIO_MODE_AF_OD": "Alternate_Function_Open_Drain",
                "GPIO_MODE_INPUT": "Input",
                "GPIO_MODE_OUTPUT_PP": "Output_Push_Pull",
                "GPIO_MODE_OUTPUT_OD": "Output_Open_Drain",
                "GPIO_MODE_IT_RISING_FALLING": "Interrupt_Rising_Falling",
                "GPIO_Init->Pin": "GPIO_Init.Pin",
                "GPIO_Init->Mode": "GPIO_Init.Mode",
                "GPIO_Init->Alternate": "GPIO_Init.Alternate",
                "GPIO_Init->Speed": "GPIO_Init.Speed",
                "GPIO_Init->Pull": "GPIO_Init.Pull",
                "GPIOx->AFR": "GPIO->AFR",
                "GPIOx->MODER": "GPIO->MODER",
                "GPIOx->OSPEEDR": "GPIO->OSPEEDR",
                "GPIOx->OTYPER": "GPIO->OTYPER",
                "GPIOx->PUPDR": "GPIO->PUPDR",
                "EXTI->RTSR": "EXTI->Rising_Trigger_Selection_Register",
                "EXTI->FTSR": "EXTI->Falling_Trigger_Selection_Register",
                "EXTI->EXTICR": "EXTI->External_Interrupt_Configuration_Register",
                "GPIO == GPIOA": "GPIO == GPIO_A",
                "GPIO == GPIOB": "GPIO == GPIO_B",
                "GPIO == GPIOC": "GPIO == GPIO_C",
                "GPIO == GPIOD": "GPIO == GPIO_D",
                "GPIO == GPIOE": "GPIO == GPIO_E",
                "GPIO == GPIOF": "GPIO == GPIO_F",
                "GPIO == GPIOG": "GPIO == GPIO_G",
                "GPIO == GPIOH": "GPIO == GPIO_H",
                "GPIO == GPIOI": "GPIO == GPIO_I",
                "GPIO == GPIOJ": "GPIO == GPIO_J",
                "EXTI_BASE_ADDRESS + 0x44": "EXTI_BASE_ADDRESS + EXTI_IMR_OFFSET",
                "DAT_080071cc": "EXTI_PR_ADDRESS",
                "DAT_080071cc[1]": "EXTI_PR_ADDRESS + 4",
                "DAT_080071cc[2]": "EXTI_PR_ADDRESS + 8",
                "DAT_080071cc[3]": "EXTI_PR_ADDRESS + 12"
            },
            "code": "void configure_GPIO_08006e88(GPIO_TypeDef *GPIO, GPIO_InitTypeDef *GPIO_Init) {\n  uint32_t pin_mask;\n  uint32_t alternate_function;\n  uint32_t position;\n  for (position = 0; position < 16; position++) {\n    pin_mask = 1 << position;\n    if (GPIO_Init->Pin & pin_mask) {\n      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) {\n        alternate_function = GPIO_Init->Alternate;\n        GPIO->AFR[position >> 3] &= ~(0xf << ((position & 7) << 2));\n        GPIO->AFR[position >> 3] |= alternate_function << ((position & 7) << 2);\n      }\n      GPIO->MODER &= ~(3 << ((position & 0x7f) << 1));\n      GPIO->MODER |= (GPIO_Init->Mode & 3) << ((position & 0x7f) << 1);\n      if (((GPIO_Init->Mode == GPIO_MODE_INPUT) || (GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP)) || (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) {\n        GPIO->OSPEEDR &= ~(3 << ((position & 0x7f) << 1));\n        GPIO->OSPEEDR |= GPIO_Init->Speed << ((position & 0x7f) << 1);\n        GPIO->OTYPER &= ~(1 << position);\n        GPIO->OTYPER |= (GPIO_Init->Mode >> 4 & 1) << position;\n      }\n      GPIO->PUPDR &= ~(3 << ((position & 0x7f) << 1));\n      GPIO->PUPDR |= GPIO_Init->Pull << ((position & 0x7f) << 1);\n      if ((GPIO_Init->Mode & GPIO_MODE_IT_RISING_FALLING) != 0) {\n        EXTI->RTSR |= GPIO_Init->Pin;\n        EXTI->FTSR |= GPIO_Init->Pin;\n        if (GPIO == DAT_080071a4) {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 0 << ((position & 3) << 2);\n        }\n        else if (GPIO == DAT_080071a8) {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 1 << ((position & 3) << 2);\n        }\n        else if (GPIO == DAT_080071ac) {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 2 << ((position & 3) << 2);\n        }\n        else if (GPIO == DAT_080071b0) {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 3 << ((position & 3) << 2);\n        }\n        else if (GPIO == DAT_080071b4) {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 4 << ((position & 3) << 2);\n        }\n        else {\n          EXTI->EXTICR[position >> 2] &= ~(0xf << ((position & 3) << 2));\n          EXTI->EXTICR[position >> 2] |= 5 << ((position & 3) << 2);\n        }\n      }\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "gpio_init",
                "HAL_RCC_MCOConfig"
            ],
            "imported": false,
            "current_name": "configure_GPIO_08006e88"
        },
        "FUN_0800b4f0": {
            "renaming": {
                "FUN_0800b4f0": "execute_global_destructors_0800b4f0",
                "iVar1": "num_destructors",
                "ppcVar2": "destructor"
            },
            "code": "void execute_global_destructors_0800b4f0(void)\n{\n  int num_destructors = (int)PTR___fini_array_end_0800b514 - (int)PTR___do_global_dtors_aux_fini_array_entry_0800b518 >> 2;\n  if (num_destructors != 0) {\n    code **destructor = (code **)(PTR___do_global_dtors_aux_fini_array_entry_0800b518 + ((int)PTR___fini_array_end_0800b514 - (int)PTR___do_global_dtors_aux_fini_array_entry_0800b518) - 4);\n    do {\n      num_destructors--;\n      (**destructor)();\n      destructor--;\n    } while (num_destructors != 0);\n  }\n  _fini();\n  return;\n}",
            "called": [
                "frame_dummy",
                "_fini",
                "__do_global_dtors_aux"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4f0",
            "calling": [],
            "imported": false,
            "current_name": "execute_global_destructors_0800b4f0"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "coolant_run"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_bits_080036f0",
                "n": "num",
                "bits": "num_bits",
                "data": "bit",
                "i": "i",
                "mask": "mask"
            },
            "code": "void print_bits_080036f0(uint num, int num_bits) {\n  uint8_t bit;\n  int i;\n  uint32_t mask;\n  mask = 1 << (num_bits - 1U & 0xff);\n  for (i = 0; i < num_bits; ++i) {\n    bit = (mask & num) ? '1' : '0';\n    serial_write(bit);\n    mask >>= 1;\n  }\n}",
            "called": [
                "serial_write"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "print_uint16_base2",
                "print_uint8_base2"
            ],
            "imported": false,
            "current_name": "print_bits_080036f0"
        },
        "FUN_08005c74": {
            "renaming": {
                "FUN_08005c74": "set_flags_08005c74",
                "DAT_08005ce4": "flags_ptr",
                "DAT_08005ce8": "FLAG_8"
            },
            "code": "void set_flags_08005c74(void)\n{\n  unsigned int *DAT_08005ce4 = DAT_08005ce4;\n\n  // Set flag 0x81\n  *DAT_08005ce4 |= 0x81;\n\n  // Clear flag 0x40000 and set flag 0x20003000\n  DAT_08005ce4[0x21] = (DAT_08005ce4[0x21] & 0xfffbffff) | 0x20003000;\n\n  // Clear flag 0x400000\n  *DAT_08005ce4 &= 0xfaf6ffff;\n\n  // OR flag 0x400000 with flag 0x8\n  DAT_08005ce4[1] |= DAT_08005ce8;\n\n  // Clear flag 0x4\n  DAT_08005ce4[3] = 0;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c74",
            "calling": [],
            "imported": false,
            "current_name": "set_flags_08005c74"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "execute_planner_08002edc",
                "planner_reverse_pass": "run_reverse_pass",
                "planner_forward_pass": "run_forward_pass",
                "FUN_08002edc_trapezoids": "generate_trapezoids"
            },
            "code": "void execute_planner_08002edc(void)\n{\n  run_reverse_pass();\n  run_forward_pass();\n  generate_trapezoids();\n  return;\n}",
            "called": [
                "planner_forward_pass",
                "planner_recalculate_trapezoids",
                "planner_reverse_pass"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "plan_buffer_line",
                "plan_cycle_reinitialize"
            ],
            "imported": false,
            "current_name": "execute_planner_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "print_binary_0800375c",
                "n": "number"
            },
            "code": "void print_binary_0800375c(uint16_t number)\n{\n  uint16_t base = 0x10;\n  print_base2((uint)number, base);\n  return;\n}",
            "called": [
                "print_base2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "report_grbl_settings"
            ],
            "imported": false,
            "current_name": "print_binary_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_tangent_08009990",
                "param_1": "x1",
                "param_2": "x2",
                "param_3": "y1",
                "param_4": "y2",
                "param_5": "angle",
                "uVar2": "sign_x2",
                "uVar3": "abs_y2",
                "uVar4": "abs_y1",
                "uVar5": "sub_result",
                "iVar1": "diff"
            },
            "code": "void calculate_tangent_08009990(uint32_t x1, uint32_t x2, uint32_t y1, uint32_t y2, double angle){\n  int diff;\n  uint32_t abs_y2 = y2 & 0x7fffffff;\n  uint32_t abs_y1 = y1 & 0x7fffffff;\n  if ((DAT_08009b18 < (abs_y2 | (-y1 | y1) >> 0x1f)) || (DAT_08009b18 < (abs_y1 | (-x1 | x1) >> 0x1f))) {\n    __aeabi_dadd(y1, y2, x1, x2);\n  }\n  else {\n    if ((y2 + 0xc0100000 | y1) == 0) {\n      atan(angle);\n      return;\n    }\n    uint32_t sign_x2 = (int)y2 >> 0x1e & 2U | x2 >> 0x1f;\n    if (((((abs_y1 | y1) != 0) && ((abs_y2 | y2) != 0)) && (abs_y2 != DAT_08009b18)) && (abs_y1 != DAT_08009b18)) {\n      diff = (int)(abs_y1 - abs_y2) >> 0x14;\n      if (((int)(abs_y1 - abs_y2) < 0x3d00000) && ((-1 < (int)y2 || (diff + 0x3c < 0 == SCARRY4(diff,0x3c))))) {\n        __divdf3(x1, x2, y1, y2);\n        double abs_y2_double = fabs((double)CONCAT44(unaff_r4, y2));\n        atan(abs_y2_double);\n      }\n      if (sign_x2 != 1) {\n        if (sign_x2 == 2) {\n          double sub_result = __subdf3();\n          __subdf3(DAT_08009af0, DAT_08009af4, (int)sub_result, (int)((ulonglong)sub_result >> 0x20));\n        }\n        else if (sign_x2 != 0) {\n          double sub_result = __subdf3();\n          __subdf3((int)sub_result, (int)((ulonglong)sub_result >> 0x20), DAT_08009af0, DAT_08009af4);\n        }\n      }\n    }\n  }\n}",
            "called": [
                "fabs",
                "__subdf3",
                "atan",
                "__aeabi_dadd",
                "__divdf3"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "atan2"
            ],
            "imported": false,
            "current_name": "calculate_tangent_08009990"
        },
        "FUN_08005b58": {
            "renaming": {
                "FUN_08005b58": "clear_bit_in_uint32_memory_location_08005b58",
                "DAT_08005b70": "memory_location"
            },
            "code": "void clear_bit_in_uint32_memory_location_08005b58(void)\n{\n  uint32_t* DAT_08005b70 = (uint32_t*)(DAT_08005b70 + 4);\n  uint32_t mask = 0xfffffffd;\n  *DAT_08005b70 = *DAT_08005b70 & mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b58",
            "calling": [],
            "imported": false,
            "current_name": "clear_bit_in_uint32_memory_location_08005b58"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "check_usart_transmission_complete_08007e58",
                "usart": "usart_interface",
                "transmission_complete": "transmission_complete"
            },
            "code": "int check_usart_transmission_complete_08007e58(void)\n{\n  USART_TypeDef *usart_interface = PTR_08007e80;\n  uint transmission_complete = (uint)((*DAT_08007e80 & 0x20) != 0);\n  return transmission_complete;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "serial_read"
            ],
            "imported": false,
            "current_name": "check_usart_transmission_complete_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "reset_device_080059f8",
                "DAT_08005a4c": "ptr_dat_08005a4c"
            },
            "code": "HAL_StatusTypeDef reset_device_080059f8(void)\n{\n    uint32_t* DAT_08005a4c = (uint32_t*)DAT_08005a4c;\n    DAT_08005a4c[8] = UINT32_MAX;\n    DAT_08005a4c[8] = 0;\n    DAT_08005a4c[9] = UINT32_MAX;\n    DAT_08005a4c[9] = 0;\n    DAT_08005a4c[4] = UINT32_MAX;\n    DAT_08005a4c[4] = 0;\n    DAT_08005a4c[5] = UINT32_MAX;\n    DAT_08005a4c[5] = 0;\n    DAT_08005a4c[6] = UINT32_MAX;\n    DAT_08005a4c[6] = 0;\n    HAL_MspDeInit();\n    return HAL_OK;\n}",
            "called": [
                "HAL_MspDeInit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "reset_device_080059f8"
        },
        "FUN_08009194": {
            "renaming": {
                "FUN_08009194": "calculate_result_08009194",
                "param_1": "first_num",
                "param_2": "second_num",
                "uVar2": "doubled_first_num",
                "uVar3": "doubled_second_num",
                "uVar4": "combined_nums",
                "bVar1": "is_negative",
                "bVar5": "is_combined_zero"
            },
            "code": "uint calculate_result_08009194(uint first_num, uint second_num)\n{\n  bool is_negative;\n  uint doubled_first_num = first_num * 2;\n  uint doubled_second_num = second_num * 2;\n  if (((int)doubled_first_num >> 0x18 == -1 || (int)doubled_second_num >> 0x18 == -1) && ((((int)doubled_first_num >> 0x18 == -1 && ((first_num & 0x7fffff) != 0)) || (((int)doubled_second_num >> 0x18 == -1 && ((second_num & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uint combined_nums = doubled_first_num | second_num & 0x7fffffff;\n  bool is_combined_zero = combined_nums == 0;\n  if (!is_combined_zero) {\n    combined_nums = first_num ^ second_num;\n    is_combined_zero = combined_nums == 0;\n  }\n  is_negative = -1 < (int)combined_nums;\n  if (is_negative) {\n    first_num = doubled_first_num + second_num * -2;\n    is_combined_zero = first_num == 0;\n  }\n  if ((is_negative && doubled_second_num <= doubled_first_num) && !is_combined_zero) {\n    first_num = (int)second_num >> 0x1f;\n  }\n  if (!is_negative || doubled_second_num > doubled_first_num) {\n    first_num = ~((int)second_num >> 0x1f);\n  }\n  if (!is_combined_zero) {\n    first_num = first_num | 1;\n  }\n  return first_num;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009194",
            "calling": [],
            "imported": false,
            "current_name": "calculate_result_08009194"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "process_input_line_08003f34",
                "bVar1": "current_byte",
                "status_code": "status_code",
                "bVar2": "current_char",
                "c": "temp",
                "*PTR_iscomment_08004028": "is_comment",
                "*PTR_char_counter_08004020": "char_counter",
                "report_status_message": "report_status_message",
                "protocol_reset_line_buffer": "protocol_reset_line_buffer",
                "PTR_line_08004024": "line",
                "protocol_execute_runtime": "protocol_execute_runtime",
                "*PTR_sys_0800401c": "sys"
            },
            "code": "void process_input_line_08003f34(void)\\n{\\n  char current_char;\\n  uint8_t status_code;\\n  bool *PTR_iscomment_08004028 = false;\\n\\n  while(true) {\\n    current_char = serial_read();\\n    if (current_char == 0xff) {\\n      return;\\n    }\\n    if ((current_char == 10) || (current_char == 0xd)) {\\n      protocol_execute_runtime();\\n      if (*PTR_*PTR_sys_0800401c_0800401c != \"\\0\") {\\n        break;\\n      }\\n      if (*PTR_*PTR_char_counter_08004020_08004020 == \"\\0\") {\\n        report_status_message(\"\\0\");\\n      }\\n      else {\\n        PTR_PTR_line_08004024_08004024[(byte)*PTR_*PTR_char_counter_08004020_08004020] = 0;\\n        status_code = protocol_execute_PTR_line_08004024(PTR_PTR_line_08004024_08004024);\\n        report_status_message(status_code);\\n      }\\n      protocol_reset_PTR_line_08004024_buffer();\\n    }\\n    else if (!*PTR_iscomment_08004028) {\\n      if ((current_char > 0x20) && (current_char != 0x2f)) {\\n        if (current_char == 0x28) {\\n          *PTR_iscomment_08004028 = true;\\n        }\\n        else if (*PTR_*PTR_char_counter_08004020_08004020 == -1) {\\n          report_status_message(\"\\r\");\\n          protocol_reset_PTR_line_08004024_buffer();\\n        }\\n        else if ((current_char < 0x61) || (current_char > 0x7a)) {\\n          *PTR_char_counter_08004020 = *PTR_*PTR_char_counter_08004020_08004020;\\n          *PTR_*PTR_char_counter_08004020_08004020 = *PTR_char_counter_08004020 + 1;\\n          PTR_line_08004024[*PTR_char_counter_08004020] = current_char;\\n        }\\n        else {\\n          *PTR_char_counter_08004020 = *PTR_*PTR_char_counter_08004020_08004020;\\n          *PTR_*PTR_char_counter_08004020_08004020 = *PTR_char_counter_08004020 + 1;\\n          PTR_line_08004024[*PTR_char_counter_08004020] = current_char - 0x20;\\n        }\\n      }\\n      else if (current_char == 0x29) {\\n        *PTR_iscomment_08004028 = false;\\n      }\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "report_status_message",
                "serial_read",
                "protocol_execute_runtime",
                "protocol_reset_line_buffer",
                "protocol_execute_line"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "process_input_line_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_080095b8",
                "__x": "x",
                "in_r0": "mantissa_lower",
                "in_r1": "mantissa",
                "uVar1": "high_bits",
                "uVar2": "exponent",
                "uVar3": "mantissa_with_hidden_bit",
                "uVar5": "exponent_diff",
                "lVar4": "sign"
            },
            "code": "long calculate_080095b8(double x) {\n  uint exponent = (mantissa << 1) >> 0x15;\n  uint exponent_diff = exponent - 0x3ff;\n  long sign;\n  uint mantissa_with_hidden_bit = mantissa & 0xfffff | 0x100000;\n  if ((int)mantissa < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  if ((int)exponent_diff < 0x14) {\n    if ((int)exponent_diff < 0) {\n      if (exponent_diff != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    mantissa_with_hidden_bit = mantissa_with_hidden_bit + (0x80000 >> (exponent_diff & 0xff)) >> (0x14 - exponent_diff & 0xff);\n  }\n  else {\n    if (0x1e < exponent_diff) {\n      sign = __aeabi_d2iz();\n      return sign;\n    }\n    if ((int)exponent_diff < 0x34) {\n      uint high_bits = 0x80000000 >> (exponent - 0x413 & 0xff);\n      if (CARRY4(high_bits,mantissa_lower) != false) {\n        mantissa_with_hidden_bit = mantissa_with_hidden_bit + 1;\n      }\n      mantissa_with_hidden_bit = mantissa_with_hidden_bit << (exponent - 0x413 & 0xff);\n      if (exponent_diff != 0x14) {\n        mantissa_with_hidden_bit = mantissa_with_hidden_bit | high_bits + mantissa_lower >> (0x34 - exponent_diff & 0xff);\n      }\n    }\n    else {\n      mantissa_with_hidden_bit = mantissa_with_hidden_bit << (exponent - 0x413 & 0xff) | mantissa_lower << (exponent - 0x433 & 0xff);\n    }\n  }\n  return mantissa_with_hidden_bit * sign;\n}",
            "called": [
                "__aeabi_d2iz"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "plan_buffer_line",
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "calculate_080095b8"
        },
        "FUN_08007e4c": {
            "renaming": {
                "FUN_08007e4c": "do_nothing_08007e4c"
            },
            "code": "\nvoid do_nothing_08007e4c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e4c",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08007e4c"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "setIRQPriority_08006cf6",
                "IRQn": "irq",
                "PreemptPriority": "preemptPriority",
                "SubPriority": "subPriority",
                "uVar1": "priorityGrouping",
                "prioritygroup": "N/A",
                "priority": "N/A"
            },
            "code": "void setIRQPriority_08006cf6(IRQn_Type irq, uint32_t preemptPriority, uint32_t subPriority)\n{\n  uint32_t priorityGrouping = NVIC_GetPriorityGrouping();\n  uint32_t priority = NVIC_EncodePriority(priorityGrouping, preemptPriority, subPriority);\n  NVIC_SetPriority(irq, priority);\n  return;\n}",
            "called": [
                "NVIC_SetPriority",
                "NVIC_GetPriorityGrouping",
                "NVIC_EncodePriority"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "enable_tim_interrupt"
            ],
            "imported": false,
            "current_name": "setIRQPriority_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_next_block_to_buffer_08002ef0",
                "uVar1": "next_block_index_value",
                "*PTR_block_buffer_tail_08002f1c": "*block_buffer_tail",
                "*PTR_block_buffer_head_08002f18": "*block_buffer_head",
                "*PTR_next_buffer_head_08002f20": "*next_buffer_head",
                "next_block_index": "get_next_block_index"
            },
            "code": "void copy_next_block_to_buffer_08002ef0(void)\n{\n  uint8_t next_block_index_value;\n  *PTR_block_buffer_tail_08002f1c = *PTR_block_buffer_head_08002f18;\n  next_block_index_value = get_next_block_index(*PTR_block_buffer_head_08002f18);\n  *PTR_next_buffer_head_08002f20 = next_block_index_value;\n  return;\n}",
            "called": [
                "next_block_index"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "plan_init"
            ],
            "imported": false,
            "current_name": "copy_next_block_to_buffer_08002ef0"
        },
        "FUN_08006e7c": {
            "renaming": {
                "FUN_08006e7c": "do_nothing_08006e7c"
            },
            "code": "\nvoid do_nothing_08006e7c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e7c",
            "calling": [
                "HAL_SYSTICK_IRQHandler"
            ],
            "imported": false,
            "current_name": "do_nothing_08006e7c"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "wake_up_and_home_08001d4c",
                "homing_rate": "homing_rate_1",
                "homing_rate_00": "homing_rate_2",
                "homing_rate_01": "homing_rate_3",
                "homing_rate_02": "homing_rate_4",
                "extraout_s0": "temp_rate",
                "extraout_s0_00": "temp_delay",
                "n_cycle": "cycle_count"
            },
            "code": "void wake_up_and_home_08001d4c(void)\n{\n  char cycle_count;\n  float homing_rate_1;\n  float homing_rate_2;\n  float homing_rate_3;\n  float temp_rate;\n  float temp_delay;\n  float homing_rate_4;\n  cycle_count = 2;\n  st_wake_up();\n  homing_cycle(4, 1, false, homing_rate_1);\n  homing_cycle(3, 1, false, homing_rate_2);\n  temp_delay = *(uint16_t *)(PTR_settings_08001dd8 + 0x34);\n  delay_ms(temp_delay);\n  homing_rate_4 = homing_rate_3;\n  while (cycle_count != 0) {\n    homing_cycle(7, 0, true, homing_rate_4);\n    temp_delay = *(uint16_t *)(PTR_settings_08001dd8 + 0x34);\n    delay_ms(temp_delay);\n    homing_rate_4 = temp_rate;\n    cycle_count = cycle_count - 1;\n    if (cycle_count > 0) {\n      homing_cycle(7, 1, false, temp_rate);\n      temp_delay = *(uint16_t *)(PTR_settings_08001dd8 + 0x34);\n      delay_ms(temp_delay);\n      homing_rate_4 = homing_rate_3;\n    }\n  }\n  st_go_idle();\n  return;\n}",
            "called": [
                "homing_cycle",
                "delay_ms",
                "st_wake_up",
                "st_go_idle"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "mc_go_home"
            ],
            "imported": false,
            "current_name": "wake_up_and_home_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculateElapsedTimeInMilliseconds_08000268",
                "uVar1": "currentTick",
                "DAT_0800029c": "ticksPerMillisecond",
                "PTR_DAT_08000298": "pointerToTicksPerMillisecond"
            },
            "code": "uint64_t calculateElapsedTimeInMilliseconds_08000268(void)\n{\n  uint32_t currentTick = HAL_GetTick();\n  uint32_t DAT_0800029c = (*(uint *)(DAT_08000298 + 8) >> 3);\n  uint64_t elapsedTimeInMilliseconds = (uint64_t)((currentTick + 1) * 1000 - ((uint64_t)DAT_0800029c * (uint64_t)DAT_0800029c) >> 33);\n  return elapsedTimeInMilliseconds;\n}",
            "called": [
                "HAL_GetTick"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "_delay_us"
            ],
            "imported": false,
            "current_name": "calculateElapsedTimeInMilliseconds_08000268"
        },
        "FUN_0800918c": {
            "renaming": {
                "FUN_0800918c": "calculate_result_0800918c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "is_negative",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "combined_inputs",
                "bVar5": "is_zero"
            },
            "code": "uint calculate_result_0800918c(uint input_1, uint input_2)\n{\n  bool is_negative;\n  uint doubled_input_1;\n  uint doubled_input_2;\n  uint combined_inputs;\n  bool is_zero;\n\n  doubled_input_1 = input_1 * 2;\n  doubled_input_2 = input_2 * 2;\n\n  if (((int)doubled_input_1 >> 0x18 == -1 || (int)doubled_input_2 >> 0x18 == -1) && ((((int)doubled_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) || (((int)doubled_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 0xffffffff;\n  }\n\n  combined_inputs = doubled_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = doubled_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && doubled_input_2 <= doubled_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || doubled_input_2 > doubled_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800918c",
            "calling": [],
            "imported": false,
            "current_name": "calculate_result_0800918c"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_ulong_as_string_08003778",
                "n": "number",
                "uVar1": "current_digit_index",
                "local_1c": "remaining_number",
                "uStack_15": "unused",
                "buf": "digit_buffer",
                "i": "digit_index"
            },
            "code": "void print_ulong_as_string_08003778(ulong number)\n{\n  uint8_t digit_index = 0;\n  ulong remaining_number = number;\n  uint8_t digit_buffer[10];\n  \n  if (number == 0) {\n    serial_write('0');\n  }\n  else {\n    while (remaining_number != 0) {\n      uint8_t current_digit = (uint8_t)(remaining_number % 10);\n      remaining_number /= 10;\n      digit_buffer[digit_index] = current_digit + '0';\n      digit_index++;\n    }\n    while (digit_index != 0) {\n      digit_index--;\n      serial_write(digit_buffer[digit_index]);\n    }\n  }\n  return;\n}",
            "called": [
                "serial_write"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "printInteger"
            ],
            "imported": false,
            "current_name": "print_ulong_as_string_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "getImpurePtrValue_0800b3dc",
                "PTR__impure_ptr_0800b3e4": "impure_ptr"
            },
            "code": "getImpurePtrValue_0800b3dc() {\n  return *(undefined4 *)PTR__impure_ptr_0800b3e4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "sqrt",
                "hypot"
            ],
            "imported": false,
            "current_name": "getImpurePtrValue_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "printData_080046d0"
            },
            "code": "void printData_080046d0(){\\n  byte data1 = PTR_gc_08004890[0x1c];\\n  byte data2 = PTR_gc_08004890[0x19];\\n  byte data3 = PTR_gc_08004890[0x1a];\\n  byte data4 = PTR_gc_08004890[3];\\n  byte data5 = PTR_gc_08004890[4];\\n  byte data6 = PTR_gc_08004890[2];\\n  byte data7 = PTR_gc_08004890[5];\\n  char data8 = PTR_gc_08004890[6];\\n  byte data9 = PTR_gc_08004890[7];\\n  if (data7 == 2) {\\n    printPgmString(PTR_DAT_080048d8);\\n  }\\n  else if (data7 < 3) {\\n    if (data7 == 0) {\\n      printPgmString(PTR_DAT_080048d0);\\n    }\\n    else if (data7 == 1) {\\n      printPgmString(PTR_DAT_080048d4);\\n    }\\n  }\\n  if (data2 == \"\\0\") {\\n    if (data3 == \"\\x01\") {\\n      printPgmString(PTR_DAT_080048ac);\\n    }\\n    else {\\n      printPgmString(PTR_DAT_080048b0);\\n    }\\n  }\\n  else {\\n    printPgmString(PTR_DAT_080048b4);\\n  }\\n  if (data4 == \"\\0\") {\\n    printPgmString(PTR_DAT_080048bc);\\n  }\\n  else {\\n    printPgmString(PTR_DAT_080048b8);\\n  }\\n  if (data5 == \"\\0\") {\\n    printPgmString(PTR_DAT_080048c4);\\n  }\\n  else {\\n    printPgmString(PTR_DAT_080048c0);\\n  }\\n  if (data6 == \"\\0\") {\\n    printPgmString(PTR_DAT_080048cc);\\n  }\\n  else {\\n    printPgmString(PTR_DAT_080048c8);\\n  }\\n  if (data8 == \"\\x01\") {\\n    printPgmString(PTR_DAT_080048dc);\\n  }\\n  else if (data8 < \"\\x02\") {\\n    if (data8 == -1) {\\n      printPgmString(PTR_DAT_080048e0);\\n    }\\n    else if (data8 == \"\\0\") {\\n      printPgmString(PTR_DAT_080048e4);\\n    }\\n  }\\n  if (data9 == 2) {\\n    printPgmString(PTR_DAT_080048f0);\\n  }\\n  else if (data9 < 3) {\\n    if (data9 == 0) {\\n      printPgmString(PTR_DAT_080048e8);\\n    }\\n    else if (data9 == 1) {\\n      printPgmString(PTR_DAT_080048ec);\\n    }\\n  }\\n  printPgmString(PTR_DAT_080048f4);\\n  printInteger(data1 + 0x36);\\n  printPgmString(PTR_DAT_080048f8);\\n  if (data4 == \"\\0\") {\\n    printFloat(n);\\n  }\\n  else {\\n    float f1 = *(float *)(PTR_gc_08004890 + 8);\\n    float f2 = f1 * 1.23456789;\\n    float f3 = (float)(int)f2;\\n    printFloat(f3);\\n  }\\n  printPgmString(PTR_DAT_080048fc);\\n}",
            "called": [
                "__muldf3",
                "printPgmString",
                "__truncdfsf2",
                "printInteger",
                "__aeabi_f2d",
                "printFloat"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "printData_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "configureSysTick_08006d72",
                "TicksNumb": "ticksNumber",
                "uVar1": "configResult"
            },
            "code": "uint32_t configureSysTick_08006d72(uint32_t ticksNumber)\n{\n  uint32_t configResult;\n  configResult = SysTick_Config(ticksNumber);\n  return configResult;\n}",
            "called": [
                "SysTick_Config"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "HAL_Init"
            ],
            "imported": false,
            "current_name": "configureSysTick_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_bit_and_clear_others_0800756c",
                "DAT_080075bc": "data_register_1",
                "DAT_080075c0": "constant_value_1",
                "DAT_080075c4": "data_register_2"
            },
            "code": "void set_bit_and_clear_others_0800756c(void)\n{\n  *DAT_080075bc |= 1;\n  DAT_080075bc[2] = 0;\n  *DAT_080075bc &= 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  *DAT_080075bc &= 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  *(undefined4 *)(DAT_080075c4 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "Reset_Handler"
            ],
            "imported": false,
            "current_name": "set_bit_and_clear_others_0800756c"
        },
        "FUN_0800691c": {
            "renaming": {
                "FUN_0800691c": "checkAndHandleCCSInterrupt_0800691c",
                "DAT_0800693c": "PTR_dataOffset",
                "DAT_08006940": "PTR_flagAddress"
            },
            "code": "void checkAndHandleCCSInterrupt_0800691c(void)\n{\n  uint32_t regValue = *(uint32_t *)(DAT_0800693c + 0xc);\n  if ((regValue & 0x80) == 0x80) {\n    HAL_RCC_CCSCallback();\n    *DAT_08006940 = 0x80;\n  }\n  return;\n}",
            "called": [
                "HAL_RCC_CCSCallback"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800691c",
            "calling": [],
            "imported": false,
            "current_name": "checkAndHandleCCSInterrupt_0800691c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "set_current_coolant_mode_to_zero_and_stop_coolant_flow_080001f8",
                "PTR_current_coolant_mode_0800020c": "current_coolant_mode_ptr",
                "coolant_stop": "stop_coolant_flow"
            },
            "code": "void set_current_coolant_mode_to_zero_and_stop_coolant_flow_080001f8(void)\n{\n  *PTR_current_coolant_mode_0800020c = 0;\n  stop_coolant_flow();\n  return;\n}",
            "called": [
                "coolant_stop"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "set_current_coolant_mode_to_zero_and_stop_coolant_flow_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "get_next_block_08002f74",
                "pbVar1": "next_block"
            },
            "code": "block_t * get_next_block_08002f74(void)\n{\n  block_t *next_block;\n  if (*PTR_block_buffer_head_08002fa0 == *PTR_block_buffer_tail_08002fa4) {\n    next_block = NULL;\n  }\n  else {\n    next_block = (block_t *)(PTR_block_buffer_08002fa8 + (uint)(byte)*PTR_block_buffer_tail_08002fa4 * 0x40);\n  }\n  return next_block;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "plan_synchronize",
                "step_period_isr"
            ],
            "imported": false,
            "current_name": "get_next_block_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "initialize_EVP_PKEY_ctx_0800b3e8",
                "param_1": "ctx",
                "iVar1": "i",
                "ppcVar2": "preinit_func",
                "iVar3": "num_preinit_funcs",
                "PTR___preinit_array_end_0800b420": "PTR_preinit_array_end_0800b420",
                "PTR___preinit_array_end_0800b424": "PTR_preinit_array_end_0800b424",
                "PTR___preinit_array_end_0800b42c": "PTR_preinit_array_end_0800b42c",
                "PTR___do_global_dtors_aux_fini_array_entry_0800b428": "PTR_do_global_dtors_aux_fini_array_entry_0800b428",
                "_init": "_init"
            },
            "code": "void initialize_EVP_PKEY_ctx_0800b3e8(EVP_PKEY_CTX *ctx)\n{\n  int num_preinit_funcs = (int)PTR___preinit_array_end_0800b420 - (int)PTR___preinit_array_end_0800b424 >> 2;\n  if (num_preinit_funcs != 0) {\n    int i = 0;\n    code **preinit_func = (code **)PTR___preinit_array_end_0800b424;\n    do {\n      i++;\n      ctx = (EVP_PKEY_CTX *)(**preinit_func)();\n      preinit_func++;\n    } while (num_preinit_funcs != i);\n  }\n  code **global_dtor_func = (code **)PTR___preinit_array_end_0800b42c;\n  int num_global_dtor_funcs = (int)PTR___do_global_dtors_aux_fini_array_entry_0800b428 - (int)PTR___preinit_array_end_0800b42c;\n  _init(ctx);\n  num_global_dtor_funcs = num_global_dtor_funcs >> 2;\n  if (num_global_dtor_funcs != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**global_dtor_func)();\n      global_dtor_func++;\n    } while (num_global_dtor_funcs != i);\n  }\n  return;\n}",
            "called": [
                "frame_dummy",
                "register_fini",
                "_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "Reset_Handler"
            ],
            "imported": false,
            "current_name": "initialize_EVP_PKEY_ctx_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "calculate_cosine_080096e8",
                "__x": "angle",
                "in_r0": "unused_parameter",
                "in_r1": "abs_angle",
                "dVar2": "result",
                "local_28": "unused_variable",
                "uStack_24": "unused_variable",
                "local_20": "unused_variable",
                "uStack_1c": "unused_variable"
            },
            "code": "double calculate_cosine_080096e8(double angle)\n{\n  uint abs_angle = abs((int) angle);\n  double result;\n  if (abs_angle > DAT_08009790) {\n    if (abs_angle > DAT_08009794) {\n      result = (double)__subdf3();\n    }\n    else {\n      uint quadrant = __ieee754_rem_pio2(angle, &abs_angle);\n      quadrant &= 3;\n      if (quadrant == 1) {\n        result = (double)__kernel_cos(abs_angle, 0, 0, 0);\n      }\n      else if (quadrant == 2) {\n        result = (double)__kernel_calculate_cosine_080096e8(abs_angle, 0, 0, 0, 1);\n      }\n      else {\n        result = (double)__kernel_calculate_cosine_080096e8(abs_angle, 0, 0, 0, 1);\n      }\n    }\n  }\n  else {\n    result = (double)__kernel_calculate_cosine_080096e8(0, abs_angle, 0, 0, 0);\n  }\n  return result;\n}",
            "called": [
                "__subdf3",
                "__kernel_cos",
                "__kernel_sin",
                "__ieee754_rem_pio2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "mc_arc"
            ],
            "imported": false,
            "current_name": "calculate_cosine_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "is_interrupt_enabled_08006a18",
                "IRQn": "irq",
                "DAT_08006a54": "irq_mask"
            },
            "code": "bool is_interrupt_enabled_08006a18(IRQn_Type irq) {\n    uint32_t *DAT_08006a54 = (uint32_t *)(DAT_08006a54 + (((uint32_t)irq >> 5) + 0x40) * 4);\n    uint32_t bit_mask = 1 << (irq & 0x1f);\n    return (*DAT_08006a54 & bit_mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "HAL_NVIC_GetPendingIRQ"
            ],
            "imported": false,
            "current_name": "is_interrupt_enabled_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_rate_08002c18",
                "block_t": "block",
                "entry_factor": "entry_factor",
                "exit_factor": "exit_factor",
                "uVar1": "rate",
                "uVar2": "rate_uint",
                "iVar3": "acceleration_steps",
                "iVar4": "plateau_steps",
                "uVar5": "uint_temp",
                "in_r1": "temp_float",
                "extraout_r1": "temp_float_1",
                "extraout_r1_00": "temp_float_2",
                "extraout_r1_01": "temp_float_3",
                "extraout_r1_02": "temp_float_4",
                "extraout_r1_03": "temp_float_5",
                "in_r2": "temp_float_6",
                "acceleration": "acceleration",
                "acceleration_00": "acceleration_neg",
                "acceleration_01": "acceleration_pos",
                "distance": "distance",
                "uVar6": "temp_double",
                "in_stack_ffffffc8": "temp_int",
                "decelerate_steps": "decelerate_steps",
                "acceleration_per_minute": "acceleration_per_minute",
                "plateau_steps": "plateau_steps",
                "accelerate_steps": "acceleration_steps",
                "estimate_acceleration_distance": "estimate_distance",
                "intersection_distance": "estimate_distance",
                "DAT_08002e04": "60"
            },
            "code": "void calculate_rate_08002c18(block_t *block,float entry_factor,float exit_factor)\n{\n  uint32_t initial_rate, final_rate;\n  float acceleration, acceleration_neg, acceleration_pos, distance;\n  int32_t decelerate_steps, acceleration_steps, plateau_steps;\n  \n  initial_rate = (uint32_t)(entry_factor * block->nominal_rate);\n  final_rate = (uint32_t)(exit_factor * block->nominal_rate);\n  \n  acceleration_steps = estimate_acceleration_steps(initial_rate, final_rate);\n  acceleration = estimate_acceleration(initial_rate, final_rate, acceleration_steps);\n  \n  decelerate_steps = estimate_deceleration_steps(final_rate, acceleration_steps);\n  acceleration_neg = estimate_acceleration(-decelerate_steps, 0, decelerate_steps);\n  acceleration_pos = estimate_acceleration(0, acceleration_steps, decelerate_steps);\n  \n  plateau_steps = block->step_event_count - acceleration_steps - decelerate_steps;\n  if (plateau_steps < 0) {\n    acceleration_steps = estimate_acceleration_steps(initial_rate, final_rate, block->step_event_count);\n    acceleration = estimate_acceleration(initial_rate, final_rate, acceleration_steps);\n    decelerate_steps = 0;\n    plateau_steps = 0;\n    acceleration_neg = 0;\n    acceleration_pos = 0;\n  }\n  \n  block->accelerate_until = acceleration_steps;\n  block->decelerate_after = acceleration_steps + plateau_steps;\n  block->acceleration_neg = acceleration_neg;\n  block->acceleration_pos = acceleration_pos;\n  block->acceleration = acceleration;\n  block->distance = estimate_distance(initial_rate, final_rate, acceleration_steps, decelerate_steps, plateau_steps);\n}",
            "called": [
                "__floatsisf",
                "__muldf3",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "__aeabi_i2d",
                "ceil",
                "floor",
                "__floatunsisf",
                "__aeabi_d2iz",
                "__aeabi_f2d",
                "intersection_distance",
                "estimate_acceleration_distance"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "planner_recalculate_trapezoids"
            ],
            "imported": false,
            "current_name": "calculate_rate_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "is_interrupt_enabled_08006ac0",
                "IRQn": "irq",
                "DAT_08006afc": "interrupt_enable_reg"
            },
            "code": "bool is_interrupt_enabled_08006ac0(IRQn_Type irq) {\n    uint32_t* DAT_08006afc = (uint32_t*)(DAT_08006afc + (((uint32_t)irq >> 5) + 0x80) * 4);\n    uint32_t interrupt_enable_bit = 1 << (irq & 0x1fU);\n    return ((*DAT_08006afc) & interrupt_enable_bit) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "HAL_NVIC_GetActive"
            ],
            "imported": false,
            "current_name": "is_interrupt_enabled_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "coolant_stop"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "HAL_Init"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "process_blocks_08002ba8",
                "previous": "previous_block",
                "next": "next_block",
                "block": "blocks",
                "block_index": "block_index",
                "FUN_08002ba8_kernel": "process_block_kernel"
            },
            "code": "void process_blocks_08002ba8(void)\n{\n  block_t *previous_block;\n  block_t *next_block;\n  block_t *blocks[3];\n  uint8_t block_index;\n  block_index = *PTR_block_buffer_tail_08002c0c;\n  blocks[1] = NULL;\n  blocks[2] = NULL;\n  while (previous_block = blocks[1], block_index != *PTR_block_buffer_head_08002c14) {\n    blocks[1] = blocks[2];\n    next_block = (block_t *)(PTR_block_buffer_08002c10 + (uint)block_index * 0x40);\n    process_block_kernel(previous_block, blocks[2], next_block);\n    block_index = next_block_index(block_index);\n    blocks[2] = next_block;\n  }\n  process_block_kernel(blocks[1], blocks[2], NULL);\n  return;\n}",
            "called": [
                "planner_forward_pass_kernel",
                "next_block_index"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "planner_recalculate"
            ],
            "imported": false,
            "current_name": "process_blocks_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input1",
                "param_2": "input2",
                "uVar2": "double_input1",
                "uVar3": "double_input2",
                "uVar4": "or_input1_input2",
                "bVar1": "is_negative1",
                "bVar5": "is_or_input1_input2_zero"
            },
            "code": "uint calculate_result_0800919c(uint input1, uint input2)\n{\n  bool is_negative1;\n  uint double_input1 = input1 * 2;\n  uint double_input2 = input2 * 2;\n  if (((int)double_input1 >> 0x18 == -1 || (int)double_input2 >> 0x18 == -1) && ((((int)double_input1 >> 0x18 == -1 && ((input1 & 0x7fffff) != 0)) || (((int)double_input2 >> 0x18 == -1 && ((input2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uint or_input1_input2 = double_input1 | input2 & 0x7fffffff;\n  bool is_or_input1_input2_zero = or_input1_input2 == 0;\n  if (!is_or_input1_input2_zero) {\n    or_input1_input2 = input1 ^ input2;\n    is_or_input1_input2_zero = or_input1_input2 == 0;\n  }\n  is_negative1 = -1 < (int)or_input1_input2;\n  if (is_negative1) {\n    input1 = double_input1 + input2 * -2;\n    is_or_input1_input2_zero = input1 == 0;\n  }\n  if ((is_negative1 && double_input2 <= double_input1) && !is_or_input1_input2_zero) {\n    input1 = (int)input2 >> 0x1f;\n  }\n  if (!is_negative1 || double_input2 > double_input1) {\n    input1 = ~((int)input2 >> 0x1f);\n  }\n  if (!is_or_input1_input2_zero) {\n    input1 = input1 | 1;\n  }\n  return input1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "__aeabi_cfcmpeq"
            ],
            "imported": false,
            "current_name": "calculate_result_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "calculate_0800b2cc",
                "__x": "input",
                "in_d0": "result"
            },
            "code": "double calculate_0800b2cc(double input)\n{\n  double result;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "atan",
                "__ieee754_atan2",
                "__ieee754_rem_pio2"
            ],
            "imported": false,
            "current_name": "calculate_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "reverse_bits_0800854c",
                "param_1": "input",
                "uVar1": "result_low",
                "uVar2": "shift_amount",
                "iVar3": "leading_zero_count",
                "uVar4": "shift_amount_overflow",
                "in_r12": "shift_amount_underflow",
                "bVar5": "shift_amount_underflowed",
                "bVar6": "shift_amount_equal",
                "bVar7": "shift_amount_overflowed"
            },
            "code": "ulonglong reverse_bits_0800854c(uint input)\n{\n  uint leading_zero_count = count_leading_zeroes(input);\n  uint shift_amount = leading_zero_count + 0x15;\n  uint shift_amount_overflow = shift_amount - 0x20;\n  bool shift_amount_overflowed = shift_amount_overflow > 0;\n  uint shift_amount_underflow = 0xb - leading_zero_count;\n  bool shift_amount_underflowed = shift_amount_underflow > 0;\n  uint result_high = 0;\n  uint result_low = 0;\n  if (input != 0)\n  {\n    if (shift_amount_overflowed)\n    {\n      shift_amount = 0x20 - shift_amount_underflow;\n      result_high = input << shift_amount_underflow;\n      result_low = 0U >> (0x20 - shift_amount_underflow);\n    }\n    else if (shift_amount_underflowed)\n    {\n      result_high = 0 << shift_amount_underflow;\n      result_low = input << shift_amount_underflow;\n    }\n    else\n    {\n      result_high = input << shift_amount;\n      result_low = input >> (0xcU - leading_zero_count & 0xff);\n    }\n  }\n  return CONCAT44(result_high + (0x432 - shift_amount) * 0x100000, result_low);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "reverse_bits_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "leading_zero_bits_count_08008e44",
                "param_1": "number",
                "iVar1": "leading_zeroes_count",
                "uVar2": "shifted_bits",
                "uVar3": "result",
                "iVar4": "base_value",
                "uVar5": "carry_bit"
            },
            "code": "uint leading_zero_bits_count_08008e44(uint number)\n{\n  int leading_zeroes_count;\n  uint sign_bit;\n  uint shifted_number;\n  uint result;\n  sign_bit = number & 0x80000000;\n  if ((int)sign_bit < 0)\n  {\n    number = -number;\n  }\n  if (number == 0)\n  {\n    return 0;\n  }\n  leading_zeroes_count = count_leading_zeroes(number);\n  shifted_number = number << (leading_zeroes_count + 0x18U & 0xff);\n  if (leading_zeroes_count > 7)\n  {\n    result = ((sign_bit | 0x4b000000) - 0x800000) + (leading_zeroes_count - 8) * -0x800000;\n    result += (number << (leading_zeroes_count - 0x18U & 0xff)) + (0U >> (0x20 - (leading_zeroes_count - 8 & 0xff))) + (uint)(0x7fffffff < 0);\n    if ((0U << (leading_zeroes_count - 8 & 0xff)) == 0x80000000)\n    {\n      result = result & 0xfffffffe;\n    }\n  }\n  else\n  {\n    result = ((sign_bit | 0x4b000000) - 0x800000) + (leading_zeroes_count - 1) * -0x800000;\n    result += (number >> (0x20 - (leading_zeroes_count + 0x18U & 0xff))) - ((int)shifted_number >> 0x1f);\n    if ((shifted_number & 0x7fffffff) == 0)\n    {\n      result = result & ~(shifted_number >> 0x1f);\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "gc_set_current_position",
                "report_realtime_status",
                "plan_buffer_line",
                "mc_dwell",
                "plan_cycle_reinitialize",
                "mc_arc",
                "mc_go_home",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "leading_zero_bits_count_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "set_GPIO_PinState_0800733e",
                "GPIOx": "GPIO_port",
                "GPIO_Pin": "GPIO_pin",
                "PinState": "pin_state",
                "GPIO_PIN_RESET": "PIN_RESET",
                "GPIOx->BSRRH": "GPIO_port_clear",
                "GPIOx->BSRRL": "GPIO_port_set"
            },
            "code": "void set_GPIO_PinState_0800733e(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)\n{\n  if (PinState == GPIO_PIN_RESET) {\n    GPIOx->BSRRH = GPIO_Pin;\n  }\n  else {\n    GPIOx->BSRRL = GPIO_Pin;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "gpio_init"
            ],
            "imported": false,
            "current_name": "set_GPIO_PinState_0800733e"
        },
        "FUN_08005aec": {
            "renaming": {
                "FUN_08005aec": "get_first_twelve_bits_of_value_at_address_08005aec",
                "DAT_08005b00": "address",
                "*DAT_08005b00": "value_at_address"
            },
            "code": "uint32_t get_first_twelve_bits_of_value_at_address_08005aec(void)\n{\n    uint32_t* DAT_08005b00 = DAT_08005b00;\n    uint32_t *DAT_08005b00 = *DAT_08005b00;\n    uint32_t first_twelve_bits = *DAT_08005b00 & 0xfff;\n    return first_twelve_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005aec",
            "calling": [],
            "imported": false,
            "current_name": "get_first_twelve_bits_of_value_at_address_08005aec"
        },
        "FUN_08005b74": {
            "renaming": {
                "FUN_08005b74": "set_flag_for_data_08005b74",
                "DAT_08005b8c": "data_address"
            },
            "code": "void set_flag_for_data_08005b74(void)\n{\n  uint* data_ptr = (uint*)(DAT_08005b8c + 4);\n  uint current_data = *data_ptr;\n  uint flag_to_set = 4;\n  *data_ptr = current_data | flag_to_set;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b74",
            "calling": [],
            "imported": false,
            "current_name": "set_flag_for_data_08005b74"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "perform_settings_update_0800583c",
                "step_wr": "step_write",
                "st_wake_up": "system_wake_up",
                "st_go_idle": "system_go_idle",
                "*(ushort *)(PTR_settings_08005858 + 0x18)": "current_setting_value"
            },
            "code": "void perform_settings_update_0800583c(void)\n{\n  uint16_t *(ushort *)(PTR_settings_08005858 + 0x18) = *(uint16_t *)(PTR_settings_08005858 + 0x18);\n  step_write(*(ushort *)(PTR_settings_08005858 + 0x18));\n  system_wake_up();\n  system_go_idle();\n  return;\n}",
            "called": [
                "step_wr",
                "st_go_idle",
                "st_wake_up"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "perform_settings_update_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "execute_printing_move_08001e98",
                "x": "x_pos",
                "y": "y_pos",
                "z": "z_pos",
                "feed_rate": "feed_rate",
                "invert_feed_rate": "invert_feed_rate",
                "uVar1": "buffer_check_result",
                "x_00": "x_pos_buffered",
                "y_00": "y_pos_buffered",
                "z_00": "z_pos_buffered",
                "feed_rate_00": "feed_rate_buffered"
            },
            "code": "void execute_printing_move_08001e98(float x_pos, float y_pos, float z_pos, float feed_rate, uint8_t invert_feed_rate){\n  uint8_t buffer_check_result;\n  float x_pos_buffered;\n  float y_pos_buffered;\n  float z_pos_buffered;\n  float feed_rate_buffered;\n  \n  if (PTR_sys_08001efc[1] != \"\\a\") {\n    do {\n      execute_runtime_protocol();\n      if (*PTR_sys_08001efc != \"\\0\") {\n        return;\n      }\n      buffer_check_result = check_full_buffer();\n    } while (buffer_check_result != \"\\0\");\n    buffer_line(x_pos_buffered, y_pos_buffered, z_pos_buffered, feed_rate_buffered, invert_feed_rate);\n    if (PTR_sys_08001efc[1] == \"\\0\") {\n      PTR_sys_08001efc[1] = 2;\n    }\n    if (PTR_sys_08001efc[0x10] != \"\\0\") {\n      start_cycle();\n    }\n  }\n  return;\n}",
            "called": [
                "plan_buffer_line",
                "protocol_execute_runtime",
                "plan_check_full_buffer",
                "st_cycle_start"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "mc_arc",
                "gc_execute_line",
                "mc_go_home"
            ],
            "imported": false,
            "current_name": "execute_printing_move_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_interrupt_priority_080069e4",
                "IRQn": "interrupt_number",
                "DAT_08006a14": "interrupt_register_base_address"
            },
            "code": "void set_interrupt_priority_080069e4(IRQn_Type interrupt_number) {\n    int* interrupt_register_address = (int*)(DAT_08006a14 + (((uint)(int)interrupt_number >> 5) + 0x20) * 4);\n    int interrupt_mask = 1 << (interrupt_number & 0x1fU);\n    *interrupt_register_address = interrupt_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "HAL_NVIC_DisableIRQ"
            ],
            "imported": false,
            "current_name": "set_interrupt_priority_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_sign_bit_0800b2d4",
                "__value": "value",
                "in_r1": "sign_bit",
                "return": "result"
            },
            "code": "int set_sign_bit_0800b2d4(double value) {\n  uint sign_bit = 0x80000000;\n  uint result = (sign_bit | *(uint*)&value) + 0x100000;\n  return result >> 0x1f;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "hypot"
            ],
            "imported": false,
            "current_name": "set_sign_bit_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "shifted_input",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08008e3c(uint input)\n{\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_amount & 0xff);\n    uint shifted_max = 0x7fffffff < 0 ? 1 : 0;\n    uint result = multiplier + shifted_input + shifted_zero + shifted_max;\n    if (shifted_input == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_right = (input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_right = shifted_right & ~(shifted_input >> 0x1f);\n  }\n  return multiplier + shifted_right;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "read_float",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_08009654",
                "__x": "x",
                "in_r1": "shift",
                "iVar1": "exponent",
                "in_d0": "result"
            },
            "code": "double calculate_08009654(double x)\n{\n  int shift;\n  int exponent;\n  double result;\n  shift = ((uint)(x << 1) >> 0x15) - 0x3ff;\n  if (((0x13 < shift) && (0x33 < shift)) && (shift == 0x400)) {\n    result = (double)__aeabi_dadd();\n  }\n  return result;\n}",
            "called": [
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "settings_store_global_setting"
            ],
            "imported": false,
            "current_name": "calculate_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_TIMx_registers_08007bc2",
                "TIMx": "timer",
                "_DAT_40000000": "TIM1_BASE",
                "_DAT_4000000c": "TIM_CR1_CEN"
            },
            "code": "void clear_TIMx_registers_08007bc2(void)\n{\n  TIM_TypeDef *timer;\n  timer = (TIM_TypeDef *)_DAT_40000000;\n  timer->CR1 &= ~_DAT_4000000c;\n  timer->CR1 &= ~TIM_CR1_DIR;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "st_go_idle"
            ],
            "imported": false,
            "current_name": "clear_TIMx_registers_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "calculate_sine_08009410",
                "__x": "angle",
                "in_r0": "remainder",
                "in_r1": "angle_int",
                "dVar2": "result",
                "local_28": "remainder",
                "uStack_24": "remainder",
                "local_20": "remainder",
                "uStack_1c": "remainder",
                "DAT_080094b4": "max_value",
                "DAT_080094b8": "max_value"
            },
            "code": "double calculate_sine_08009410(double angle)\n{\n  int DAT_080094b4 = 2147483647;\n  int angle_int = (int)(angle * (double)2.147483647e9);\n  double result;\n  if (2147483564 < (int)(angle_int & DAT_080094b4)) {\n    if (2147483560 < (int)(angle_int & DAT_080094b4)) {\n      result = (double)__subdf3();\n    }\n    else {\n      uint remainder = __ieee754_rem_pio2(0, angle_int, &remainder, &remainder);\n      remainder = remainder & 3;\n      if (remainder == 1) {\n        result = (double)__kernel_sin(remainder, remainder, remainder, remainder, 1);\n      }\n      else if (remainder == 2 || remainder == 0) {\n        result = (double)__kernel_calculate_sine_08009410(remainder, remainder, remainder, remainder);\n      }\n      else {\n        result = (double)__kernel_sin(remainder, remainder, remainder, remainder, 1);\n      }\n    }\n    return result;\n  }\n  result = (double)__kernel_calculate_sine_08009410(0, angle_int, 0, 0);\n  return result;\n}",
            "called": [
                "__subdf3",
                "__kernel_cos",
                "__kernel_sin",
                "__ieee754_rem_pio2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "mc_arc"
            ],
            "imported": false,
            "current_name": "calculate_sine_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "set_coordinates_080035ec",
                "x": "x_coord",
                "y": "y_coord",
                "z": "z_coord",
                "PTR_pl_08003614": "PTR_pl"
            },
            "code": "void set_coordinates_080035ec(int32_t x_coord, int32_t y_coord, int32_t z_coord) {\n  *(int32_t *)PTR_pl_08003614_08003614 = x_coord;\n  *(int32_t *)(PTR_pl_08003614_08003614 + 4) = y_coord;\n  *(int32_t *)(PTR_pl_08003614_08003614 + 8) = z_coord;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "sys_sync_current_position"
            ],
            "imported": false,
            "current_name": "set_coordinates_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "synchronizeData_08006c70",
                "DAT_08006c94": "PTR_dataStart",
                "DAT_08006c98": "dataMask",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void synchronizeData_08006c70(void)\n{\n  DataSynchronizationBarrier(0xf);\n  uint* PTR_data = (uint*)(DAT_08006c94 + 0xc);\n  uint DAT_value = DAT_08006c98 | (*PTR_data & 0x700);\n  *PTR_data = DAT_value;\n  DataSynchronizationBarrier(0xf);\n  while(true){}\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "HAL_NVIC_SystemReset"
            ],
            "imported": false,
            "current_name": "synchronizeData_08006c70"
        },
        "FUN_080068bc": {
            "renaming": {
                "FUN_080068bc": "setClockConfig_080068bc",
                "RCC_ClkInitStruct": "clockConfig",
                "pFLatency": "flashLatency",
                "ClockType": "RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2",
                "SYSCLKSource": "RCC_SYSCLKSOURCE_STATUS_MASK",
                "AHBCLKDivider": "RCC_SYSCLK_DIVIDER_MASK",
                "APB1CLKDivider": "RCC_HCLK_DIVIDER_MASK",
                "APB2CLKDivider": "RCC_HCLK_DIVIDER_MASK",
                "DAT_08006914": "SYS_CLOCK_CONFIG_BASE",
                "DAT_08006918": "FLASH_LATENCY_REG",
                "uint": "uint32_t"
            },
            "code": "void setClockConfig_080068bc(RCC_ClkInitTypeDef *clockConfig, uint32_t *flashLatency)\n{\n  clockConfig->ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;\n  clockConfig->SYSCLKSource = *(uint32_t *)(DAT_08006914 + 8) & RCC_SYSCLKSOURCE_STATUS_MASK;\n  clockConfig->AHBCLKDivider = *(uint32_t *)(DAT_08006914 + 8) & RCC_SYSCLK_DIVIDER_MASK;\n  clockConfig->APB1CLKDivider = *(uint32_t *)(DAT_08006914 + 8) & RCC_HCLK_DIVIDER_MASK;\n  clockConfig->APB2CLKDivider = (*(uint32_t *)(DAT_08006914 + 8) >> 3) & RCC_HCLK_DIVIDER_MASK;\n  *flashLatency = *DAT_08006918 & FLASH_LATENCY_MASK;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080068bc",
            "calling": [],
            "imported": false,
            "current_name": "setClockConfig_080068bc"
        },
        "FUN_08006944": {
            "renaming": {
                "FUN_08006944": "do_nothing_08006944"
            },
            "code": "\nvoid do_nothing_08006944(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006944",
            "calling": [
                "HAL_RCC_NMI_IRQHandler"
            ],
            "imported": false,
            "current_name": "do_nothing_08006944"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "decode_priority_and_get_preempt_sub_priority_08006d98",
                "IRQn": "irq",
                "PriorityGroup": "priority_group",
                "pPreemptPriority": "preempt_priority",
                "pSubPriority": "sub_priority",
                "Priority": "priority"
            },
            "code": "void decode_priority_and_get_preempt_sub_priority_08006d98(IRQn_Type irq, uint32_t priority_group, uint32_t *preempt_priority, uint32_t *sub_priority) {\n  uint32_t priority = NVIC_GetPriority(irq);\n  NVIC_DecodePriority(priority, priority_group, preempt_priority, sub_priority);\n  return;\n}",
            "called": [
                "NVIC_GetPriority",
                "NVIC_DecodePriority"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "decode_priority_and_get_preempt_sub_priority_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_uwTick_08005a68",
                "PTR_uwTick_08005a80": "uwTick"
            },
            "code": "void increment_uwTick_08005a68(void)\n{\n  int* PTR_uwTick_08005a80 = (int*) PTR_PTR_uwTick_08005a80_08005a80;\n  *PTR_uwTick_08005a80 = *PTR_uwTick_08005a80 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "SysTick_Handler"
            ],
            "imported": false,
            "current_name": "increment_uwTick_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initializeDebounce_080079c0",
                "PTR_debounce_080079d8": "debounceArray",
                "PTR_debounce_ready_080079dc": "debounceReady"
            },
            "code": "void initializeDebounce_080079c0(void)\n{\n  memset(PTR_debounce_080079d8,0,sizeof(PTR_debounce_080079d8));\n  *PTR_debounce_ready_080079dc = 1;\n  return;\n}",
            "called": [
                "memset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "initializeDebounce_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "handle_exception_0800b2e0",
                "__exc": "__exception_ptr"
            },
            "code": "int handle_exception_0800b2e0(exception *__exception_ptr) {\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "sqrt",
                "hypot"
            ],
            "imported": false,
            "current_name": "handle_exception_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_distance_08002908",
                "initial_rate": "initial_velocity",
                "final_rate": "final_velocity",
                "acceleration": "acceleration",
                "distance": "time",
                "in_r0": "initial_velocity",
                "in_r1": "final_velocity",
                "in_r2": "acceleration",
                "in_r3": "time",
                "uVar1": "velocity_difference",
                "uVar2": "velocity_sum_squared",
                "fVar3": "distance"
            },
            "code": "float calculate_distance_08002908(float initial_velocity, float final_velocity, float acceleration, float time)\n{\n  float distance;\n  float double_acceleration = 2 * acceleration;\n  float time_squared = time * time;\n  float velocity_difference = final_velocity - initial_velocity;\n  float velocity_sum = final_velocity + initial_velocity;\n  float velocity_sum_squared = velocity_sum * velocity_sum;\n  float distance_times_double_acceleration = velocity_sum_squared - (double_acceleration * velocity_difference * time);\n  distance = distance_times_double_acceleration / (2 * acceleration);\n  return distance;\n}",
            "called": [
                "__aeabi_fmul",
                "__aeabi_fsub",
                "__addsf3",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_distance_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_timer_ticks_08007c40",
                "ticks": "ticks",
                "TIMx": "timer",
                "_DAT_40000034": "timer->ARR"
            },
            "code": "void set_timer_ticks_08007c40(TIM_TypeDef *timer, uint32_t ticks) {\n  _DAT_40000034 = ticks;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "st_wake_up"
            ],
            "imported": false,
            "current_name": "set_timer_ticks_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_080094c0",
                "__x": "input",
                "in_r0": "left_bits",
                "in_r1": "right_bits",
                "uVar1": "exponent",
                "uVar2": "mantissa",
                "in_d0": "output",
                "extraout_d0": "pos_inf",
                "extraout_d0_00": "neg_inf",
                "extraout_d0_01": "nan",
                "uVar3": "temp"
            },
            "code": "double calculate_080094c0(double input){\n  uint left_bits;\n  uint right_bits;\n  uint exponent;\n  uint mantissa;\n  double output;\n  double pos_inf = 1.0/0.0;\n  double neg_inf = -1.0/0.0;\n  double nan = 0.0/0.0;\n\n  left_bits = ((uint*)&input)[0];\n  right_bits = ((uint*)&input)[1];\n  exponent = (left_bits >> 20) & 0x7FF;\n  mantissa = left_bits & 0xFFFFF;\n  if (exponent == 0x7FF){\n    if (mantissa != 0 || right_bits != 0){\n      output = nan;\n    }\n    else{\n      output = input;\n    }\n  }\n  else if (exponent == 0){\n    if ((mantissa | right_bits) == 0){\n      output = input;\n    }\n    else{\n      output = input + pos_inf;\n    }\n  }\n  else{\n    exponent = exponent - 0x3FF;\n    if (exponent < 0x14){\n      if (exponent < 0){\n        output = input + neg_inf;\n      }\n      else if ((right_bits & (1 << (0x13 - exponent))) | mantissa){\n        output = input + pos_inf;\n      }\n      else{\n        output = input;\n      }\n    }\n    else if (exponent < 0x34){\n      if ((right_bits & (0xFFFFFFFF >> (exponent - 0x413))) != 0){\n        output = input + pos_inf;\n      }\n      else{\n        output = input;\n      }\n    }\n    else{\n      output = input;\n    }\n  }\n  return output;\n}",
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "__kernel_rem_pio2",
                "mc_dwell",
                "mc_arc",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "plan_buffer_line",
                "read_float",
                "settings_store_global_setting",
                "homing_cycle",
                "plan_cycle_reinitialize",
                "max_allowable_speed",
                "mc_go_home",
                "intersection_distance",
                "estimate_acceleration_distance",
                "mc_dwell",
                "gc_execute_line",
                "mc_arc",
                "printFloat",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_priority_level_08006b54",
                "IRQn": "irq",
                "bVar1": "priority_level",
                "DAT_08006b98": "priority_register_offset",
                "DAT_08006b9c": "priority_register_offset_high"
            },
            "code": "uint32_t get_priority_level_08006b54(IRQn_Type irq)\n{\n  uint8_t priority_level;\n  if (irq < WWDG_IRQn) {\n    priority_level = *(uint8_t *)(((uint8_t)irq & 0xf) + DAT_08006b98 + 0x14);\n  }\n  else {\n    priority_level = *(uint8_t *)(irq + DAT_08006b9c + 0x300);\n  }\n  return (uint32_t)(priority_level >> 4);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "imported": false,
            "current_name": "get_priority_level_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_USART_data_08007e84",
                "usart": "usart_data",
                "DAT_08007ea0": "data_pointer"
            },
            "code": "char get_USART_data_08007e84(void)\n{\n  USART_TypeDef *usart_data;\n  return (char)*(undefined4 *)(DAT_08007ea0 + 4);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "serial_read"
            ],
            "imported": false,
            "current_name": "get_USART_data_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "disable_stepper_motor_if_necessary_080057e4",
                "PTR_settings_0800580c": "settings",
                "PTR_sys_08005810": "sys",
                "disable_step_isr": "step_isr_disable",
                "disable_stepper_motor": "stepper_motor_disable"
            },
            "code": "void disable_stepper_motor_if_necessary_080057e4(void)\n{\n  disable_step_isr();\n  if ((PTR_settings_0800580c[0x3c] != -1) || ((PTR_sys_08005810[2] & 0x20) != 0)) {\n    disable_stepper_motor();\n  }\n  return;\n}",
            "called": [
                "step_isr_disable",
                "stepper_motor_disable"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "st_init",
                "mc_reset",
                "limits_go_home",
                "step_period_isr"
            ],
            "imported": false,
            "current_name": "disable_stepper_motor_if_necessary_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "getNVICPriorityGrouping_08006d8a",
                "uVar1": "priorityGrouping"
            },
            "code": "uint32_t getNVICPriorityGrouping_08006d8a(void)\n{\n  uint32_t priorityGrouping = NVIC_GetPriorityGrouping();\n  return priorityGrouping;\n}",
            "called": [
                "NVIC_GetPriorityGrouping"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "getNVICPriorityGrouping_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_0800b2e8",
                "__x": "x",
                "__n": "n",
                "in_r1": "r1",
                "in_r2": "r2",
                "uVar1": "var1",
                "iVar2": "var2",
                "uVar3": "var3",
                "in_d0": "d0",
                "extraout_d0": "d1",
                "dVar4": "d2",
                "uVar5": "uVar4"
            },
            "code": "double calculate_0800b2e8(double x, int n) {\n  uint r1;\n  int r2;\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  double d0;\n  double d1;\n  double d2;\n  ulonglong uVar4;\n  \n  uVar4 = CONCAT44(r1,n);\n  uVar1 = (r1 << 1) >> 0x15;\n  if (uVar1 == 0) {\n    if ((n | r1 & 0x7fffffff) == 0) {\n      return d0;\n    }\n    uVar4 = __muldf3(n,r1,0,DAT_0800b3c8);\n    if (r2 < DAT_0800b3cc) goto LAB_0800b34a;\n    uVar1 = ((uint)((int)(uVar4 >> 0x20) << 1) >> 0x15) - 0x36;\n    d0 = d1;\n  }\n  else if (uVar1 == 0x7ff) {\n    d2 = (double)__aeabi_dadd(n,r1,n);\n    return d2;\n  }\n  uVar3 = (uint)(uVar4 >> 0x20);\n  iVar2 = uVar1 + r2;\n  if (iVar2 < 0x7ff) {\n    if (0 < iVar2) {\n      return d0;\n    }\n    if (iVar2 + 0x35 < 0 == SCARRY4(iVar2,0x35)) {\n      d2 = (double)__muldf3((int)uVar4,uVar3 & 0x800fffff | (iVar2 + 0x36) * 0x100000,0,DAT_0800b3d8);\n      return d2;\n    }\n    if (r2 < 0xc351) {\n      uVar4 = uVar4 & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\nLAB_0800b34a:\n      d2 = (double)__muldf3((int)uVar4,(int)(uVar4 >> 0x20),DAT_0800b3b8,DAT_0800b3bc);\n      return d2;\n    }\n  }\n  d2 = (double)__muldf3(DAT_0800b3d4,uVar3 & 0x80000000 | 0x7e37e43c,DAT_0800b3c0,DAT_0800b3c4);\n  return d2;\n}",
            "called": [
                "__muldf3",
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "__kernel_rem_pio2"
            ],
            "imported": false,
            "current_name": "calculate_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "spindle_run"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "set_gpio_output_if_bit_is_set_08007520",
                "bits": "input_bits",
                "gpio_clr": "gpio_clear_output_pin"
            },
            "code": "void set_gpio_output_if_bit_is_set_08007520(uint32_t bits)\n{\n  if ((bits & 1) != 0) {\n    gpio_clear_output_pin(0x3e);\n  }\n  return;\n}",
            "called": [
                "gpio_clr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "debounce_isr"
            ],
            "imported": false,
            "current_name": "set_gpio_output_if_bit_is_set_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "read_gpio_values_08007884",
                "iVar1": "gpio_36_value",
                "iVar2": "gpio_37_value",
                "iVar3": "gpio_38_value",
                "iVar4": "gpio_39_value",
                "iVar5": "gpio_f_value",
                "uVar6": "gpio_0_value"
            },
            "code": "uint32_t read_gpio_values_08007884(void)\n{\n  int gpio_36_value;\n  int gpio_37_value;\n  int gpio_38_value;\n  int gpio_39_value;\n  int gpio_f_value;\n  uint32_t gpio_0_value;\n  \n  gpio_36_value = gpio_rd(0x36);\n  gpio_37_value = gpio_rd(0x37);\n  gpio_38_value = gpio_rd(0x38);\n  gpio_39_value = gpio_rd(0x39);\n  gpio_f_value = gpio_rd(0xf);\n  gpio_0_value = gpio_rd(0);\n  \n  return gpio_0_value | (gpio_36_value << 4) | (gpio_37_value << 3) | (gpio_38_value << 2) | (gpio_39_value << 1) | (gpio_f_value << 7);\n}",
            "called": [
                "gpio_rd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "debounce_isr"
            ],
            "imported": false,
            "current_name": "read_gpio_values_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "printSettings_08004250",
                "n": "nStepsPerMmX",
                "n_00": "nStepsPerMmY",
                "n_01": "nStepsPerMmZ",
                "n_02": "nStepPulseWidth",
                "n_03": "nDefaultFeedRate",
                "n_04": "nStepPulseWidth",
                "n_05": "nAcceleration",
                "n_06": "nJunctionDeviation",
                "n_07": "nHomingFeedRate",
                "n_08": "nHomingSeekRate",
                "n_09": "nHomingPullOff"
            },
            "code": "void printSettings_08004250(void)\n{\n  float nStepsPerMmX;\n  float nStepsPerMmY;\n  float nStepsPerMmZ;\n  float nStepPulseWidth;\n  float nDefaultFeedRate;\n  float nDefaultSeekRate;\n  float nAcceleration;\n  float nJunctionDeviation;\n  float nArcSegment;\n  float nHomingFeedRate;\n  float nHomingSeekRate;\n  float nHomingPullOff;\n  float nHomingDebounce;\n  uint16_t nStepPortInvertMask;\n  uint16_t nDirectionPortInvertMask;\n  uint8_t nArcCorrection;\n  uint8_t nDecimals;\n  uint8_t nHardLimits;\n  uint8_t nHomingCycle;\n  uint8_t nHomingDirInvertMask;\n\n  printPgmString(PTR_DAT_08004470);\n  printFloat(nStepsPerMmX);\n  printPgmString(PTR_s___x__step_mm___1__08004478);\n  printFloat(nStepsPerMmY);\n  printPgmString(PTR_s___y__step_mm___2__0800447c);\n  printFloat(nStepsPerMmZ);\n  printPgmString(PTR_s___z__step_mm___3__08004480);\n  printInteger((uint)(byte)PTR_settings_08004474[0xd]);\n  printPgmString(PTR_s___step_pulse__usec___4__08004484);\n  printFloat(nStepPulseWidth);\n  printPgmString(PTR_s___default_feed__mm_min___5__08004488);\n  printFloat(nDefaultFeedRate);\n  printPgmString(PTR_s___default_seek__mm_min___6__0800448c);\n  printInteger((uint)*(ushort *)(PTR_settings_08004474 + 0x18));\n  printPgmString(PTR_s___step_port_invert_mask__int__08004490);\n  print_uint16_base2(nStepPortInvertMask);\n  printPgmString(PTR_s____7__08004494);\n  printInteger((uint)(byte)PTR_settings_08004474[0x3c]);\n  printPgmString(PTR_s___step_idle_delay__msec___8__08004498);\n  nStepPulseWidth = (float)__aeabi_fdiv(*(undefined4 *)(PTR_settings_08004474 + 0x20),DAT_0800449c);\n  printFloat(nStepPulseWidth);\n  printPgmString(PTR_s___acceleration__mm_sec_2___9__080044a0);\n  printFloat(nAcceleration);\n  printPgmString(PTR_s___junction_deviation__mm___10__080044a4);\n  printFloat(nJunctionDeviation);\n  printPgmString(PTR_s___arc__mm_segment___11__080044a8);\n  printInteger((uint)(byte)PTR_settings_08004474[0x3e]);\n  printPgmString(PTR_s___n_arc_correction__int___12__080044ac);\n  printInteger(nArcCorrection);\n  printPgmString(PTR_s___n_decimals__int___13__080044b0);\n  printInteger((uint)((PTR_settings_08004474[0x28] & 1) != 0));\n  printPgmString(PTR_s___report_inches__bool___14__080044b4);\n  printInteger((uint)((PTR_settings_08004474[0x28] & 2) != 0));\n  printPgmString(PTR_s___auto_start__bool___15__080044b8);\n  printInteger((uint)((PTR_settings_08004474[0x28] & 4) != 0));\n  printPgmString(PTR_s___invert_step_enable__bool___16__080044bc);\n  printInteger((uint)((PTR_settings_08004474[0x28] & 8) != 0));\n  printPgmString(PTR_s___hard_limits__bool___17__080044c0);\n  printInteger((uint)((PTR_settings_08004474[0x28] & 0x10) != 0));\n  printPgmString(PTR_s___homing_cycle__bool___18__080044c4);\n  printInteger(nHomingCycle);\n  printPgmString(PTR_s___homing_dir_invert_mask__int__080044c8);\n  print_uint16_base2(nHomingDirInvertMask);\n  printPgmString(PTR_s____19__080044cc);\n  printFloat(nHomingFeedRate);\n  printPgmString(PTR_s___homing_feed__mm_min___20__080044d0);\n  printFloat(nHomingSeekRate);\n  printPgmString(PTR_s___homing_seek__mm_min___21__080044d4);\n  printInteger((uint)*(ushort *)(PTR_settings_08004474 + 0x34));\n  printPgmString(PTR_s___homing_debounce__msec___22__080044d8);\n  printFloat(nHomingDebounce);\n  printPgmString(PTR_s___homing_pull_off__mm___23__080044dc);\n  printInteger((uint)*(ushort *)(PTR_settings_08004474 + 0x1a));\n  printPgmString(PTR_s___dir_port_invert_mask__int__080044e0);\n  print_uint16_base2(nDirectionPortInvertMask);\n  printPgmString(PTR_DAT_080044e4);\n  return;\n}",
            "called": [
                "printPgmString",
                "printInteger",
                "printFloat",
                "print_uint16_base2",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "protocol_execute_line",
                "settings_init"
            ],
            "imported": false,
            "current_name": "printSettings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "trigger_interrupt_08006dc4",
                "IRQn": "interrupt_number"
            },
            "code": "void trigger_interrupt_08006dc4(IRQn_Type interrupt_number)\n{\n  NVIC_SetPendingIRQ(interrupt_number);\n  return;\n}",
            "called": [
                "NVIC_SetPendingIRQ"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "trigger_interrupt_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_in_short_array_08007402",
                "n": "bit_index",
                "PTR_": "array_ptr",
                "DAT_": "bit_mask",
                "array_index": "array_index",
                "bit_offset": "bit_offset"
            },
            "code": "void set_bit_in_short_array_08007402(int bit_index) {\n    int array_index = bit_index >> 4;\n    short* PTR_ = (short*)(array_index * 0x400 + 0x40020018);\n    int bit_offset = bit_index & 0xF;\n    short DAT_ = (short)(1 << bit_offset);\n    *PTR_ = DAT_;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "debounce_on_handler"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_array_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_block_index_08002870",
                "block_index": "block_index",
                "local_9": "incremented_index"
            },
            "code": "uint8_t increment_block_index_08002870(uint8_t block_index) {\n  uint8_t incremented_index;\n  incremented_index = block_index + 1;\n  if (incremented_index == 18) {\n    incremented_index = 0;\n  }\n  return incremented_index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "planner_forward_pass",
                "plan_buffer_line",
                "plan_discard_current_block",
                "planner_recalculate_trapezoids",
                "plan_reset_buffer"
            ],
            "imported": false,
            "current_name": "increment_block_index_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "turnOffCoolantSystem_08000210",
                "coolant_mist_off": "turnOffCoolantMist",
                "coolant_flood_off": "turnOffCoolantFlood"
            },
            "code": "void turnOffCoolantSystem_08000210(void)\n{\n  turnOffCoolantMist();\n  turnOffCoolantFlood();\n  return;\n}",
            "called": [
                "coolant_mist_off",
                "coolant_flood_off"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "coolant_run",
                "mc_reset",
                "coolant_init"
            ],
            "imported": false,
            "current_name": "turnOffCoolantSystem_08000210"
        },
        "FUN_08008a64": {
            "renaming": {
                "FUN_08008a64": "check_parameters_08008a64",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "result",
                "bVar2": "is_zero",
                "bVar3": "is_less"
            },
            "code": "uint check_parameters_08008a64(uint first_param, uint second_param, uint third_param, uint fourth_param) {\n  uint result;\n  bool is_zero;\n  bool is_less;\n  \n  if (((int)(second_param << 1) >> 0x15 == -1 || (int)(fourth_param << 1) >> 0x15 == -1) && ((((int)(second_param << 1) >> 0x15 == -1 && ((first_param | second_param << 0xc) != 0)) || (((int)(fourth_param << 1) >> 0x15 == -1 && ((third_param | fourth_param << 0xc) != 0)))))) {\n    return 0xffffffff;\n  }\n  is_zero = (first_param | second_param << 1) == 0;\n  if (is_zero) {\n    is_zero = (third_param | fourth_param << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = second_param == fourth_param;\n  }\n  if (is_zero) {\n    is_zero = first_param == third_param;\n  }\n  if (!is_zero) {\n    result = second_param ^ fourth_param;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = second_param == fourth_param;\n    }\n    is_less = -1 < (int)result && fourth_param <= second_param;\n    if (is_zero) {\n      is_less = third_param <= first_param;\n    }\n    fourth_param = (int)fourth_param >> 0x1f;\n    if (!is_less) {\n      fourth_param = ~fourth_param;\n    }\n    return fourth_param | 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a64",
            "calling": [],
            "imported": false,
            "current_name": "check_parameters_08008a64"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "data": "input",
                "rc": "result",
                "PTR_sys_08005978": "sys_flags"
            },
            "code": "int process_data_08005900(uint8_t input) {\n  int result = 0;\n  if (input == '~') {\n    PTR_sys_08005978[2] |= 2;\n    result = 1;\n  }\n  else if (input < 0x7f) {\n    if (input == '?') {\n      PTR_sys_08005978[2] |= 1;\n      result = 1;\n    }\n    else if (input < 0x40) {\n      if (input == '\\x18') {\n        mc_reset();\n        result = 1;\n      }\n      else if (input == '!') {\n        PTR_sys_08005978[2] |= 8;\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "mc_reset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "serial_read"
            ],
            "imported": false,
            "current_name": "process_data_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_float_08002638",
                "line": "input_string",
                "char_counter": "current_char_index",
                "float_ptr": "output_float_ptr",
                "bVar1": "digit",
                "bVar2": "is_negative",
                "bVar3": "seen_decimal",
                "puVar4": "next_ptr",
                "puVar5": "current_ptr",
                "iVar6": "return_value",
                "uVar7": "temp_double",
                "fval": "float_val",
                "isdecimal": "seen_decimal",
                "ndigit": "num_digits",
                "exp": "exponent",
                "intval": "integer_part",
                "isnegative": "is_negative",
                "c": "current_char",
                "ptr": "current_ptr"
            },
            "code": "int parse_float_08002638(char *line, uint8_t *char_counter, float *float_ptr) {\n  byte current_char;\n  bool is_negative = false;\n  bool seen_decimal = false;\n  uchar *current_ptr;\n  uchar *next_ptr;\n  uint8_t num_digits = 0;\n  int8_t exponent = 0;\n  uint32_t integer_part = 0;\n  float float_val;\n\n  current_ptr = (uchar *)(line + *char_counter);\n  next_ptr = current_ptr + 1;\n  current_char = *current_ptr;\n\n  if (current_char == '-') {\n    is_negative = true;\n    current_char = *next_ptr;\n    current_ptr = next_ptr + 1;\n  }\n  else if (current_char == '+') {\n    current_char = *next_ptr;\n    current_ptr = next_ptr + 1;\n  }\n  else {\n    current_ptr = next_ptr;\n  }\n\n  while (true) {\n    byte digit = current_char - 0x30;\n    if (digit < 10) {\n      num_digits++;\n      if (num_digits < 9) {\n        if (seen_decimal) {\n          exponent--;\n        }\n        integer_part = (uint)digit + integer_part * 10;\n      }\n      else if (!seen_decimal) {\n        exponent++;\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (seen_decimal)) {\n        if (num_digits == 0) {\n          return 0;\n        }\n        else {\n          float_val = (float)__floatunsisf(integer_part);\n          int comparison = __aeabi_fcmpeq(float_val,0);\n          if (comparison == 0) {\n            for (; exponent < -1; exponent += 2) {\n              float_val *= 0.5;\n            }\n            if (exponent < 0) {\n              float_val *= 5.0;\n            }\n            else {\n              for (; exponent > 0; exponent--) {\n                float_val *= 2.0;\n              }\n            }\n          }\n          if (is_negative) {\n            *float_ptr = (float)((uint)float_val ^ 0x80000000);\n          }\n          else {\n            *float_ptr = float_val;\n          }\n          *char_counter = ((char *)current_ptr - line) + 0xff;\n          return 1;\n        }\n      }\n      seen_decimal = true;\n    }\n    current_char = *current_ptr;\n    current_ptr++;\n  }\n}",
            "called": [
                "__muldf3",
                "__aeabi_fmul",
                "__truncdfsf2",
                "__floatunsisf",
                "__aeabi_f2d",
                "__aeabi_fcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "next_statement",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "parse_float_08002638"
        },
        "FUN_08005bac": {
            "renaming": {
                "FUN_08005bac": "set_dat_08005bc0_to_1_08005bac",
                "DAT_08005bc0": "dat_08005bc0_ptr"
            },
            "code": "void set_dat_08005bc0_to_1_08005bac(void)\n{\n  *DAT_08005bc0 = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bac",
            "calling": [],
            "imported": false,
            "current_name": "set_dat_08005bc0_to_1_08005bac"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "checkSettingsAndReport_080051b4",
                "uVar1": "globalSettings",
                "coord_data": "coordData",
                "i": "loopIndex",
                "read_global_settings": "readGlobalSettings",
                "report_status_message": "reportStatusMessage",
                "settings_reset": "resetSettings",
                "report_grbl_settings": "reportGrblSettings",
                "settings_read_coord_data": "readCoordData"
            },
            "code": "void checkSettingsAndReport_080051b4(void)\n{\n  uint8_t globalSettings = readGlobalSettings();\n  if (globalSettings == 0)\n  {\n    reportStatusMessage('\n');\n    resetSettings(true);\n    reportGrblSettings();\n  }\n  for (uint8_t i = 0; i < 8; i++)\n  {\n    uint8_t readResult = readCoordData(i, coordData);\n    if (readResult == 0)\n    {\n      reportStatusMessage('\n');\n    }\n  }\n  return;\n}",
            "called": [
                "report_status_message",
                "read_global_settings",
                "report_grbl_settings",
                "settings_reset",
                "settings_read_coord_data"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "checkSettingsAndReport_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "calculate_function_080098d0",
                "__x": "input",
                "cVar1": "version",
                "iVar2": "error_code",
                "puVar3": "errno_ptr",
                "piVar4": "error_ptr",
                "dVar5": "result",
                "extraout_d0": "result",
                "extraout_d0_00": "result",
                "extraout_d0_01": "result",
                "extraout_d0_02": "result",
                "extraout_d0_03": "result",
                "local_50": "error_info",
                "local_38": "zero_double",
                "local_30": "error_code"
            },
            "code": "double calculate_function_080098d0(double input)\\n{\\n  double result;\\n  char version;\\n  int error_code;\\n  undefined4 *errno_ptr;\\n  int *error_ptr;\\n  undefined error_info[24];\\n  undefined8 zero_double;\\n  zero_double = 0.0;\\n  result = (double)__ieee754_calculate_function_080098d0();\\n  version = *PTR___fdlib_version_08009988;\\n  if (((version == -1) || (error_code = __unorddf2(), result = result, error_code != 0)) ||\\n     (error_code = __aeabi_dcmplt(), result = result, error_code == 0)) {\\n    return result;\\n  }\\n  error_info._0_4_ = 1;\\n  error_info._4_4_ = PTR_DAT_0800998c;\\n  if (version == \"\\0\") {\\n    zero_double = 0.0;\\nLAB_0800996c:\\n    error_code = matherr((exception *)error_info);\\n    result = extraout_d0_02;\\n    if (error_code != 0) goto joined_r0x0800997a;\\n  }\\n  else {\\n    zero_double = (double)__divdf3(0,0,0,0);\\n    if (version != \"\\x02\") goto LAB_0800996c;\\n  }\\n  errno_ptr = (undefined4 *)__errno();\\n  *errno_ptr = 0x21;\\n  result = extraout_d0_01;\\njoined_r0x0800997a:\\n  if (error_code != 0) {\\n    error_ptr = (int *)__errno();\\n    *error_ptr = error_code;\\n    result = extraout_d0_03;\\n  }\\n  return result;\\n}",
            "called": [
                "__unorddf2",
                "__ieee754_sqrt",
                "__divdf3",
                "matherr",
                "__aeabi_dcmplt",
                "__errno"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "plan_buffer_line",
                "homing_cycle",
                "max_allowable_speed",
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "calculate_function_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "calculate_systick_priority_08005c30",
                "ticks": "ticks",
                "bVar1": "ticks_less_than_16M",
                "DAT_08005c70": "systick_priority_array"
            },
            "code": "uint32_t calculate_systick_priority_08005c30(uint32_t ticks)\n{\n  bool ticks_less_than_16M = ticks - 1 < 0x1000000;\n  if (ticks_less_than_16M)\n  {\n    DAT_08005c70[1] = ticks - 1;\n    NVIC_SetPriority(SysTick_IRQn, 0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return (uint)!ticks_less_than_16M;\n}",
            "called": [
                "NVIC_SetPriority"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "HAL_RCC_ClockConfig"
            ],
            "imported": false,
            "current_name": "calculate_systick_priority_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "__register_exitproc"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "calculate_value_0800056c",
                "value": "input_value",
                "in_r0": "N/A",
                "uVar1": "N/A"
            },
            "code": "float calculate_value_0800056c(float input_value)\\n{\\n  if (PTR_gc_080005b0[3] != \"\\0\") {\\n    double converted_value = (double)input_value;\\n    double multiplied_value = converted_value * DAT_080005a8 * DAT_080005ac;\\n    input_value = (float)multiplied_value;\\n  }\\n  return input_value;\\n}",
            "called": [
                "__muldf3",
                "__truncdfsf2",
                "__aeabi_f2d"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "calculate_value_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "resetPlanBufferAndSetZeroValues_08002f24",
                "PTR_pl_08002f3c": "planBuffer"
            },
            "code": "void resetPlanBufferAndSetZeroValues_08002f24(void)\n{\n  resetPlanBuffer();\n  memset(PTR_pl_08002f3c, 0, sizeof(PTR_pl_08002f3c));\n  return;\n}",
            "called": [
                "memset",
                "plan_reset_buffer"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "resetPlanBufferAndSetZeroValues_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_0800981c",
                "__x": "x",
                "__y": "y",
                "cVar1": "version",
                "puVar2": "version_ptr",
                "iVar3": "is_finite",
                "puVar4": "errno_ptr",
                "dVar5": "result",
                "extraout_d0": "temp_result",
                "extraout_d0_00": "temp_result_2",
                "extraout_d0_01": "temp_result_3",
                "extraout_d0_02": "temp_result_4",
                "extraout_d0_03": "temp_result_4",
                "in_stack_ffffffb0": "stack_int",
                "in_stack_ffffffb4": "stack_char_ptr"
            },
            "code": "double calculate_0800981c(double x, double y) {\n  char version;\n  undefined *version_ptr;\n  int is_finite;\n  undefined4 *errno_ptr;\n  double result;\n  double temp_result;\n  double temp_result_2;\n  double temp_result_3;\n  double temp_result_4;\n  int stack_int;\n  char *stack_char_ptr;\n  version_ptr = PTR___fdlib_version_080098cc;\n  result = (double)__ieee754_calculate_0800981c();\n  if ((((*version_ptr != -1) &&\n       (is_finite = finite((double)CONCAT44(stack_char_ptr,stack_int)), result = temp_result,\n       is_finite == 0)) &&\n      (is_finite = finite((double)CONCAT44(stack_char_ptr,stack_int)), result = temp_result_2,\n       is_finite != 0)) &&\n     ((is_finite = finite((double)CONCAT44(stack_char_ptr,stack_int)), result = temp_result_3,\n      is_finite != 0 &&\n      (((version = *version_ptr, version != '\\0' && (version == '\\x02')) ||\n       (is_finite = matherr((exception *)&stack_int), result = temp_result_4, is_finite == 0)))))) {\n    errno_ptr = (undefined4 *)__errno();\n    *errno_ptr = 0x22;\n    result = temp_result_4;\n  }\n  return result;\n}",
            "called": [
                "finite",
                "__ieee754_hypot",
                "matherr",
                "__errno"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "gc_execute_line",
                "mc_arc"
            ],
            "imported": false,
            "current_name": "calculate_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4",
                "*DAT_080059f4": "data_ptr"
            },
            "code": "HAL_StatusTypeDef initialize_system_080059b4(void) {\n  uint32_t **DAT_080059f4 = DAT_080059f4;\n  **DAT_080059f4 |= 0x200;\n  **DAT_080059f4 |= 0x400;\n  **DAT_080059f4 |= 0x100;\n  HAL_SYSTICK_Config(16000);\n  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);\n  HAL_MspInit();\n  return HAL_OK;\n}",
            "called": [
                "HAL_NVIC_SetPriorityGrouping",
                "HAL_MspInit",
                "HAL_SYSTICK_Config"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "initialize_system_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "calculate_priority_08006c04",
                "Priority": "priority_value",
                "PriorityGroup": "priority_group_value",
                "pPreemptPriority": "preempt_priority",
                "pSubPriority": "sub_priority",
                "SubPriorityBits": "sub_priority_bits",
                "PreemptPriorityBits": "preempt_priority_bits",
                "PriorityGroupTmp": "priority_group_tmp",
                "uVar1": "group_value_mod_8",
                "uVar2": "inverted_group_value_mod_8"
            },
            "code": "void calculate_priority_08006c04(uint32_t priority_value, uint32_t priority_group_value, uint32_t *preempt_priority, uint32_t *sub_priority)\n{\n  uint32_t sub_priority_bits;\n  uint32_t preempt_priority_bits;\n  uint32_t priority_group_tmp;\n  \n  uint32_t group_value_mod_8 = priority_group_value & 7;\n  uint32_t inverted_group_value_mod_8 = 7 - group_value_mod_8;\n  if (inverted_group_value_mod_8 > 3) {\n    inverted_group_value_mod_8 = 4;\n  }\n  if (group_value_mod_8 + 4 < 7) {\n    group_value_mod_8 = 0;\n  }\n  else {\n    group_value_mod_8 = group_value_mod_8 - 3;\n  }\n  *preempt_priority = (1 << (inverted_group_value_mod_8 & 0xff)) - 1U & priority_value >> (group_value_mod_8 & 0xff);\n  *sub_priority = (1 << (group_value_mod_8 & 0xff)) - 1U & priority_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "imported": false,
            "current_name": "calculate_priority_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "calculate_block_trapezoids_08002e08",
                "pbVar1": "current_block",
                "uVar2": "current_entry_speed_ratio",
                "next": "next_block",
                "block_index": "block_index",
                "*PTR_block_buffer_tail_08002ed0": "*block_buffer_tail",
                "*PTR_block_buffer_head_08002ed8": "*block_buffer_head",
                "PTR_block_buffer_08002ed4": "block_buffer",
                "calculate_trapezoid_for_block": "calculate_trapezoid_for_block",
                "recalculate_flag": "recalculate_flag",
                "entry_speed": "entry_speed",
                "nominal_speed": "nominal_speed"
            },
            "code": "void calculate_block_trapezoids_08002e08(void)\\n{\\n  block_t *current_block;\\n  block_t *next_block;\\n  uint8_t block_index;\\n  block_index = *PTR_PTR_block_buffer_08002ed4_tail_08002ed0;\\n  next_block = (block_t *)0x0;\\n  while (block_index != *PTR_PTR_block_buffer_08002ed4_head_08002ed8) {\\n    current_block = (block_t *)(PTR_PTR_block_buffer_08002ed4_08002ed4 + (uint)block_index * 0x40);\\n    if ((next_block != (block_t *)0x0) &&\\n       ((next_block->recalculate_flag != \"\\0\" || (current_block->recalculate_flag != \"\\0\")))) {\\n      __aeabi_fdiv(next_block->entry_speed,next_block->nominal_speed);\\n      float current_entry_speed_ratio = __aeabi_fdiv(current_block->entry_speed,next_block->nominal_speed);\\n      calculate_trapezoid_for_block(next_block,current_entry_speed_ratio,(float)((ulonglong)current_entry_speed_ratio >> 0x20));\\n      next_block->recalculate_flag = \"\\0\";\\n    }\\n    block_index = next_block_index(block_index);\\n    next_block = current_block;\\n  }\\n  __aeabi_fdiv(next_block->entry_speed,next_block->nominal_speed);\\n  float last_entry_speed_ratio = __aeabi_fdiv(0,next_block->nominal_speed);\\n  calculate_trapezoid_for_block(next_block,last_entry_speed_ratio,(float)((ulonglong)last_entry_speed_ratio >> 0x20));\\n  next_block->recalculate_flag = \"\\0\";\\n  return;\\n}",
            "called": [
                "__aeabi_fdiv",
                "next_block_index",
                "calculate_trapezoid_for_block"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "planner_recalculate"
            ],
            "imported": false,
            "current_name": "calculate_block_trapezoids_08002e08"
        },
        "FUN_08005bc4": {
            "renaming": {
                "FUN_08005bc4": "clear_data_08005bc4",
                "DAT_08005bd8": "data_pointer"
            },
            "code": "void clear_data_08005bc4(void)\n{\n  *DAT_08005bd8 = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc4",
            "calling": [],
            "imported": false,
            "current_name": "clear_data_08005bc4"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "get_HCLK_frequency_divider_08006680",
                "uVar1": "HCLK_frequency",
                "uVar2": "leading_zero_count",
                "result": "N/A",
                "result_1": "N/A",
                "PTR_APBAHBPrescTable_080066c8": "APBAHB_prescaler_table",
                "DAT_080066c4": "N/A"
            },
            "code": "uint32_t get_HCLK_frequency_divider_08006680(void)\n{\n  uint32_t HCLK_frequency = HAL_RCC_GetHCLKFreq();\n  uint leading_zero_count = count_leading_zeroes(0x380000);\n  uint32_t* PTR_APBAHBPrescTable_080066c8 = PTR_APBAHBPrescTable_080066c8;\n  uint32_t APBAHB_prescaler_setting = (*(uint *)(DAT_080066c4 + 8) & 0x1c00) >> (leading_zero_count & 0xff);\n  return HCLK_frequency >> PTR_APBAHBPrescTable_080066c8[APBAHB_prescaler_setting];\n}",
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "set_baud_rate"
            ],
            "imported": false,
            "current_name": "get_HCLK_frequency_divider_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "write_to_eeprom_08000340",
                "addr": "address",
                "new_value": "value",
                "PTR_eeprom_ready_0800036c": "eeprom_ready",
                "eeprom_init": "eeprom_initialize",
                "PTR_eeprom_data_08000370": "eeprom_data"
            },
            "code": "void write_to_eeprom_08000340(uint address, uchar value)\n{\n  if (*PTR_eeprom_ready_0800036c == 0) {\n    eeprom_initialize();\n  }\n  PTR_eeprom_data_08000370[address & 0x3ff] = value;\n  return;\n}",
            "called": [
                "eeprom_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "write_global_settings",
                "memcpy_to_eeprom_with_checksum"
            ],
            "imported": false,
            "current_name": "write_to_eeprom_08000340"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "write_coord_data_to_eeprom_08004bf4",
                "coord_select": "coord_index",
                "coord_data": "coord_data",
                "addr": "eeprom_address",
                "memcpy_to_eeprom_with_checksum": "memcpy_to_eeprom_with_checksum"
            },
            "code": "void write_coord_data_to_eeprom_08004bf4(uint8_t coord_index, float *coord_data)\n{\n  uint16_t eeprom_address = (coord_index * 13) + 0x200;\n  memcpy_to_eeprom_with_checksum((uint)eeprom_address, (char *)coord_data, 12);\n  return;\n}",
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "gc_execute_line",
                "settings_read_coord_data"
            ],
            "imported": false,
            "current_name": "write_coord_data_to_eeprom_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "read_coordinate_data_08004d7c",
                "coord_select": "selected_coordinate",
                "coord_data": "coordinate_data",
                "iVar1": "mem_copy_result",
                "addr": "address",
                "memcpy_from_eeprom_with_checksum": "memcpy_from_eeprom_with_checksum",
                "memset": "memset",
                "settings_write_coord_data": "settings_write_coordinate_data"
            },
            "code": "bool read_coordinate_data_08004d7c(uint8_t selected_coordinate, float *coordinate_data) {\n  int mem_copy_result;\n  uint16_t address = (uint16_t)((uint16_t)selected_coordinate * 0xd + 0x200);\n  \n  mem_copy_result = memcpy_from_eeprom_with_checksum((char *)coordinate_data, address, 0xc);\n  \n  if (mem_copy_result == 0) {\n    memset(coordinate_data, 0, 0xc);\n    settings_write_coordinate_data(selected_coordinate, coordinate_data);\n  }\n  \n  return mem_copy_result != 0;\n}",
            "called": [
                "settings_write_coord_data",
                "memset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "report_gcode_parameters",
                "gc_execute_line",
                "gc_init",
                "settings_init"
            ],
            "imported": false,
            "current_name": "read_coordinate_data_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_uint_to_int_08009278",
                "param_1": "input",
                "uVar1": "shift_amount",
                "uVar2": "shift_difference",
                "shifted_input": "shifted_input",
                "shifted_output": "shifted_output"
            },
            "code": "int32_t convert_uint_to_int_08009278(int32_t input)\n{\n  int32_t shifted_input = input << 1;\n  if (shifted_input < 0x7f000000) {\n    return 0;\n  }\n  int32_t shift_amount = shifted_input >> 0x18;\n  int32_t shift_difference = 0x9e - shift_amount;\n  if (shift_amount < 0x9f && shift_difference != 0) {\n    int32_t shifted_output = (input << 8 | 0x80000000) >> (shift_difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shifted_output = -shifted_output;\n    }\n    return shifted_output;\n  }\n  if ((shift_difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "printFloat",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "convert_uint_to_int_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "normalize_coordinates_080004fc",
                "x": "x_coord",
                "y": "y_coord",
                "z": "z_coord",
                "uVar1": "x_float, y_float, z_float, x_normalized, y_normalized, z_normalized"
            },
            "code": "void normalize_coordinates_080004fc(int32_t x_coord, int32_t y_coord, int32_t z_coord)\n{\n  float x_float = __floatsisf(x_coord);\n  float y_float = __floatsisf(y_coord);\n  float z_float = __floatsisf(z_coord);\n  float x_normalized = __aeabi_fdiv(x_float,*(undefined4 *)PTR_settings_08000564);\n  float y_normalized = __aeabi_fdiv(y_float,*(undefined4 *)(PTR_settings_08000564 + 4));\n  float z_normalized = __aeabi_fdiv(z_float,*(undefined4 *)(PTR_settings_08000564 + 8));\n  *(undefined4 *)(PTR_gc_08000568 + 0xc) = x_normalized;\n  *(undefined4 *)(PTR_gc_08000568 + 0x10) = y_normalized;\n  *(undefined4 *)(PTR_gc_08000568 + 0x14) = z_normalized;\n  return;\n}",
            "called": [
                "__floatsisf",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "sys_sync_current_position"
            ],
            "imported": false,
            "current_name": "normalize_coordinates_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "coolant_control_08000220",
                "mode": "coolant_mode",
                "*PTR_current_coolant_mode_08000264": "*current_coolant_mode",
                "'\\x01'": "COOLANT_FLOOD_MODE",
                "'\\x02'": "COOLANT_MIST_MODE"
            },
            "code": "void coolant_control_08000220(uint8_t mode)\n{\n  uint8_t* current_coolant_mode = PTR_current_coolant_mode_08000264;\n\n  if (mode != *PTR_current_coolant_mode_08000264) {\n    plan_synchronize();\n    if (mode == COOLANT_FLOOD_MODE) {\n      coolant_flood_on();\n    }\n    else if (mode == COOLANT_MIST_MODE) {\n      coolant_mist_on();\n    }\n    else {\n      coolant_stop();\n    }\n    *PTR_current_coolant_mode_08000264 = mode;\n  }\n  return;\n}",
            "called": [
                "plan_synchronize",
                "coolant_flood_on",
                "coolant_stop",
                "coolant_mist_on"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "coolant_control_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "stop_spindle_and_reset_direction_08005238",
                "PTR_current_direction_0800524c": "current_direction"
            },
            "code": "void stop_spindle_and_reset_direction_08005238(void)\n{\n  *PTR_current_direction_0800524c = 0;\n  stop_spindle();\n  return;\n}",
            "called": [
                "spindle_stop"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "stop_spindle_and_reset_direction_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_timer_interrupt_08007da8",
                "puVar1": "timer_status_register",
                "TIMx": "timer_instance"
            },
            "code": "void set_timer_interrupt_08007da8(void)\n{\n  uint *timer_status_register;\n  TIM_TypeDef *timer_instance;\n  \n  timer_status_register = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *timer_status_register |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "timers_init"
            ],
            "imported": false,
            "current_name": "set_timer_interrupt_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "alarm_code": "alarm_code",
                "PTR_s_ALARM__08004190": "alarm_header",
                "PTR_s_Abort_during_cycle_08004198": "abort_msg",
                "PTR_s_Hard_limit_08004194": "hard_limit_msg",
                "PTR_s___MPos__0800419c": "mpos_msg",
                "delay_ms": "delay_ms"
            },
            "code": "void display_alarm_message_08004148(int8_t alarm_code)\n{\n  printPgmString(PTR_s_ALARM__08004190);\n  if (alarm_code == -2) {\n    printPgmString(PTR_s_Abort_during_cycle_08004198);\n  }\n  else if (alarm_code == -1) {\n    printPgmString(PTR_s_Hard_limit_08004194);\n  }\n  printPgmString(PTR_s___MPos__0800419c);\n  delay_ms(500);\n  return;\n}",
            "called": [
                "printPgmString",
                "delay_ms"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "protocol_execute_runtime"
            ],
            "imported": false,
            "current_name": "display_alarm_message_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "print_position_and_wpos_08004940",
                "print_position": "print_pos",
                "current_position": "current_pos",
                "i": "i"
            },
            "code": "void print_position_and_wpos_08004940() {\n  undefined4 current_pos[3];\n  float print_pos[3];\n  uint8_t i;\n  \n  current_pos[0] = *(int32_t *)(PTR_sys_08004b88 + 4);\n  current_pos[1] = *(int32_t *)(PTR_sys_08004b88 + 8);\n  current_pos[2] = *(int32_t *)(PTR_sys_08004b88 + 0xc);\n  if ((byte)PTR_sys_08004b88[1] < 8) {\n    (*(code *)(&switchD_0800495e::switchdataD_08004964)[(byte)PTR_sys_08004b88[1]])();\n    return;\n  }\n  printPgmString(PTR_s__MPos__08004ba8);\n  for (i = 0; i < 3; i++) {\n    float current_pos_f = (float)current_pos[i];\n    float divisor = *(undefined4 *)(PTR_settings_08004bac + (uint)i * 4);\n    float print_pos_f = current_pos_f / divisor;\n    print_pos[i] = print_pos_f;\n    if ((PTR_settings_08004bac[0x28] & 1) != 0) {\n      double print_pos_d = (double)print_pos_f;\n      double mul_result = print_pos_d * (double)(*(float *)(&DAT_08004b80));\n      mul_result = mul_result + (double)(*(float *)(&DAT_08004b84));\n      print_pos_f = (float)mul_result;\n      print_pos[i] = print_pos_f;\n    }\n    printFloat(print_pos_f);\n    printPgmString(PTR_DAT_08004bb0);\n  }\n  printPgmString(PTR_s_WPos__08004bb4);\n  for (i = 0; i < 3; i++) {\n    if ((PTR_settings_08004bac[0x28] & 1) == 0) {\n      float print_pos_f = print_pos[i];\n      float gc_i_8 = *(undefined4 *)(PTR_gc_08004bb8 + (i + 8) * 4);\n      float gc_i_10 = *(undefined4 *)(PTR_gc_08004bb8 + (i + 10) * 4 + 4);\n      float sub_result = print_pos_f - gc_i_8 - gc_i_10;\n      print_pos[i] = sub_result;\n    }\n    else {\n      double print_pos_d = (double)print_pos[i];\n      float gc_i_8 = *(undefined4 *)(PTR_gc_08004bb8 + (i + 8) * 4);\n      float gc_i_10 = *(undefined4 *)(PTR_gc_08004bb8 + (i + 10) * 4 + 4);\n      double gc_i_8_d = (double)gc_i_8;\n      double gc_i_10_d = (double)gc_i_10;\n      double add_result = print_pos_d + gc_i_8_d + gc_i_10_d;\n      double mul_result = add_result * (double)(*(float *)(&DAT_08004b80));\n      mul_result = mul_result + (double)(*(float *)(&DAT_08004b84));\n      double sub_result = print_pos_d - mul_result;\n      print_pos[i] = (float)sub_result;\n    }\n    printFloat(print_pos[i]);\n    if (i < 2) {\n      printPgmString(PTR_DAT_08004bb0);\n    }\n  }\n  printPgmString(PTR_DAT_08004bbc);\n}",
            "called": [
                "__muldf3",
                "__floatsisf",
                "printPgmString",
                "__subdf3",
                "__truncdfsf2",
                "__aeabi_fsub",
                "__aeabi_f2d",
                "__addsf3",
                "printFloat",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "protocol_execute_runtime"
            ],
            "imported": false,
            "current_name": "print_position_and_wpos_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "CheckIfCoordinatesMatch_08008a74",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "xor_result",
                "bVar2": "x1y1_zero",
                "bVar3": "y2_less_than_y1"
            },
            "code": "uint CheckIfCoordinatesMatch_08008a74(uint x1, uint y1, uint x2, uint y2)\n{\n  bool x1y1_zero = (x1 | y1 << 1) == 0;\n  bool x2y2_zero = (x2 | y2 << 1) == 0;\n  if (x1y1_zero && x2y2_zero)\n  {\n    return 1;\n  }\n  if (x2 == x1 && y2 == y1)\n  {\n    return 0;\n  }\n  uint xor_result = x2 ^ x1;\n  bool xor_is_zero = xor_result == 0;\n  if (-1 < (int)xor_result)\n  {\n    xor_is_zero = y2 == y1;\n  }\n  bool y2_less_than_y1 = -1 < (int)xor_result && y2 <= y1;\n  bool y1_less_than_y2 = y2_less_than_y1 ? false : true;\n  if (xor_is_zero)\n  {\n    y1_less_than_y2 = y2 <= y1;\n  }\n  uint result = (int)y2 >> 0x1f;\n  if (!y1_less_than_y2)\n  {\n    result = ~result;\n  }\n  return result | 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "__aeabi_cdcmpeq"
            ],
            "imported": false,
            "current_name": "CheckIfCoordinatesMatch_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "execute_protocol_until_block_complete_08002fd4",
                "pbVar1": "current_block",
                "plan_get_current_block": "get_current_block",
                "protocol_execute_runtime": "execute_runtime_protocol",
                "PTR_sys_08003000": "sys_08003000"
            },
            "code": "void execute_protocol_until_block_complete_08002fd4(void)\\n{\\n  block_t *current_block;\\n  while ((current_block = get_current_block(), current_block != (block_t *)0x0 || (PTR_sys_08003000[1] == \"\\x03\"))) {\\n    execute_runtime_protocol();\\n    if (*PTR_sys_08003000 != \"\\0\") {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "protocol_execute_runtime",
                "plan_get_current_block"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "coolant_run",
                "mc_dwell",
                "spindle_run",
                "gc_execute_line",
                "mc_go_home"
            ],
            "imported": false,
            "current_name": "execute_protocol_until_block_complete_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "synchronize_plan_execution_08002408",
                "seconds": "total_execution_time_seconds",
                "ms": "milliseconds_to_delay",
                "in_r0": "in_register_0",
                "uVar1": "temporary_variable_1",
                "uVar2": "temporary_variable_2",
                "extraout_r1": "extraout_register_1",
                "extraout_r1_00": "extraout_register_1_00",
                "in_stack_ffffffe0": "in_stack_offset",
                "i": "remaining_iterations"
            },
            "code": "void synchronize_plan_execution_08002408(float total_execution_time_seconds)\\n{\\n  uint16_t milliseconds_to_delay;\\n  undefined4 in_register_0;\\n  undefined4 uVar1;\\n  undefined4 uVar2;\\n  undefined4 extraout_register_1;\\n  undefined4 extraout_register_1_00;\\n  undefined4 in_stack_ffffffe0;\\n  uint16_t remaining_iterations;\\n  \\n  uVar1 = __aeabi_fmul(total_execution_time_seconds,in_register_0,DAT_080024b8);\\n  uVar1 = __aeabi_f2d(uVar1);\\n  floor((double)CONCAT44(in_register_0,in_stack_ffffffe0));\\n  remaining_iterations = __aeabi_d2uiz(uVar1,extraout_register_1);\\n  plan_synchronize();\\n  uVar1 = __aeabi_fmul(in_register_0,DAT_080024bc);\\n  uVar2 = __floatsisf((uint)remaining_iterations * 0x32);\\n  uVar1 = __aeabi_fsub(uVar1,uVar2);\\n  uVar1 = __aeabi_f2d(uVar1);\\n  floor((double)CONCAT44(in_register_0,in_stack_ffffffe0));\\n  milliseconds_to_delay = __aeabi_d2uiz(uVar1,extraout_register_1_00);\\n  delay_ms(milliseconds_to_delay);\\n  while ((remaining_iterations != 0 && (protocol_execute_runtime(), *PTR_sys_080024c0 == \"\\0\"))) {\\n    _delay_ms(0x32);\\n    remaining_iterations = remaining_iterations - 1;\\n  }\\n  return;\\n}",
            "called": [
                "__floatsisf",
                "plan_synchronize",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "protocol_execute_runtime",
                "_delay_ms",
                "delay_ms",
                "floor",
                "__aeabi_fsub",
                "__aeabi_f2d"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "gc_execute_line"
            ],
            "imported": false,
            "current_name": "synchronize_plan_execution_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "iterate_blocks_08002a94",
                "block": "block_t",
                "next": "current_block",
                "previous": "previous_block",
                "block_index": "current_block_index",
                "block[0]": "blocks[0]",
                "block[1]": "blocks[1]"
            },
            "code": "void iterate_blocks_08002a94(void)\n{\n  block_t *current_block = NULL;\n  block_t *previous_block = NULL;\n  block_t *blocks[2] = {NULL, NULL};\n  uint8_t current_block_index = *PTR_block_buffer_head_08002af0;\n  while (current_block_index != *PTR_block_buffer_tail_08002af8) {\n    current_block_index = prev_block_index(current_block_index);\n    blocks[1] = blocks[0];\n    previous_block = (block_t *)(PTR_block_buffer_08002af4 + (uint)current_block_index * 0x40);\n    iterate_blocks_08002a94_kernel(previous_block, blocks[0], current_block);\n    blocks[0] = previous_block;\n  }\n  return;\n}",
            "called": [
                "planner_reverse_pass_kernel",
                "prev_block_index"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "planner_recalculate"
            ],
            "imported": false,
            "current_name": "iterate_blocks_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "calculate_block_execution_time_08003618",
                "step_events_remaining": "remaining_step_events",
                "puVar2": "current_block",
                "bVar1": "current_block_index",
                "uVar3": "execution_time",
                "uVar4": "time_per_step_event",
                "block": "N/A"
            },
            "code": "void calculate_block_execution_time_08003618(int32_t remaining_step_events) {\n  byte current_block_index = *block_buffer_tail;\n  block_t *current_block = block_buffer + current_block_index * 0x40;\n  float time_per_step_event = *(float *)(current_block + 0x20);\n  float execution_time = remaining_step_events * time_per_step_event / *(float *)(current_block + 0x10);\n  *(float *)(current_block + 0x20) = execution_time;\n  *(int32_t *)(current_block + 0x10) = remaining_step_events;\n  *(current_block + 0x18) = 0;\n  *(current_block + 0x1c) = 0;\n  current_block[0x25] = 0;\n  current_block[0x24] = 1;\n  planner_recalculate();\n  return;\n}",
            "called": [
                "__floatsisf",
                "__aeabi_fmul",
                "planner_recalculate",
                "__aeabi_fdiv"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "st_cycle_reinitialize"
            ],
            "imported": false,
            "current_name": "calculate_block_execution_time_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "spindle_run"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\ndouble FUNC_0800af78(double __x)\n\n{\n  undefined *puVar1;\n  int in_r0;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint in_r1;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 extraout_r1;\n  uint uVar6;\n  int iVar7;\n  double in_d0;\n  double dVar8;\n  double extraout_d0;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 in_stack_ffffffd0;\n  uint uVar11;\n  \n  uVar6 = in_r1 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar6) {\n    if ((uVar6 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar6) ||\n       ((uVar6 == DAT_0800b29c && (in_r0 != 0)))) {\n      dVar8 = (double)__aeabi_dadd();\n      return dVar8;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar6) {\n      fabs((double)CONCAT44(in_r1,in_stack_ffffffd0));\n      if (DAT_0800b2bc < (int)uVar6) {\n        if ((int)uVar6 < DAT_0800b2c0) {\n          uVar9 = __subdf3();\n          uVar10 = __muldf3(in_r0,extraout_r1,0,DAT_0800b2c4);\n          uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = __divdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                           (int)((ulonglong)uVar10 >> 0x20));\n          uVar11 = (uint)((ulonglong)uVar9 >> 0x20);\n          in_r0 = (int)uVar9;\n          iVar7 = 2;\n        }\n        else {\n          uVar9 = __divdf3(0,DAT_0800b2c8,in_r0,extraout_r1);\n          uVar11 = (uint)((ulonglong)uVar9 >> 0x20);\n          in_r0 = (int)uVar9;\n          iVar7 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar6) {\n        uVar9 = __subdf3();\n        uVar10 = __aeabi_dadd(in_r0,extraout_r1,0,DAT_0800b2b8);\n        uVar9 = __divdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n        uVar11 = (uint)((ulonglong)uVar9 >> 0x20);\n        in_r0 = (int)uVar9;\n        iVar7 = 1;\n      }\n      else {\n        uVar9 = __aeabi_dadd();\n        uVar9 = __subdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = __aeabi_dadd(in_r0,extraout_r1,0,0x40000000);\n        uVar9 = __divdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n        uVar11 = (uint)((ulonglong)uVar9 >> 0x20);\n        in_r0 = (int)uVar9;\n        iVar7 = 0;\n      }\n    }\n    else {\n      uVar11 = in_r1;\n      if ((int)uVar6 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar9 = __aeabi_dadd(in_r0,in_r1,DAT_0800b290,DAT_0800b294);\n        iVar7 = __aeabi_dcmpgt((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        if (iVar7 != 0) {\n          return extraout_d0;\n        }\n      }\n      iVar7 = -1;\n    }\n    uVar9 = __muldf3(in_r0,uVar11,in_r0);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar2 = (undefined4)uVar9;\n    uVar9 = __muldf3(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = __muldf3(uVar3,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar5);\n    uVar9 = __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar5);\n    uVar9 = __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar5);\n    uVar9 = __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar5);\n    uVar9 = __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = __muldf3(uVar3,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar7 == -1) {\n      uVar9 = __aeabi_dadd((int)uVar9,uVar2,(int)uVar10,uVar3);\n      uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),in_r0,uVar11);\n      dVar8 = (double)__subdf3(in_r0,uVar11,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return dVar8;\n    }\n    uVar9 = __aeabi_dadd((int)uVar9,uVar2,(int)uVar10,uVar3);\n    puVar1 = PTR_FUNC_0800af78hi_0800b2b0;\n    uVar9 = __muldf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),in_r0,uVar11);\n    uVar9 = __subdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                     *(undefined4 *)(PTR_FUNC_0800af78lo_0800b2b4 + iVar7 * 8),\n                     *(undefined4 *)((int)(PTR_FUNC_0800af78lo_0800b2b4 + iVar7 * 8) + 4));\n    uVar9 = __subdf3((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),in_r0,uVar11);\n    in_d0 = (double)__subdf3(*(undefined4 *)(puVar1 + iVar7 * 8),\n                             *(undefined4 *)((int)(puVar1 + iVar7 * 8) + 4),(int)uVar9,\n                             (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)in_r1 < 0) {\n      return in_d0;\n    }\n  }\n  return in_d0;\n}\n\n",
            "called": [
                "__muldf3",
                "__aeabi_dcmpgt",
                "__subdf3",
                "fabs",
                "__aeabi_dadd",
                "__divdf3"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "__ieee754_atan2"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08005b20": {
            "renaming": {
                "FUN_08005b20": "clear_least_significant_bit_of_second_uint_08005b20",
                "DAT_08005b38": "data_at_08005b38",
                "uint": "unsigned_int",
                "PTR_": "pointer_",
                "DAT_": "data_"
            },
            "code": "void clear_least_significant_bit_of_second_uint_08005b20(void)\n{\n  uint *second_uint_ptr = (uint *)(DAT_08005b38 + 4);\n  *second_uint_ptr = (*second_uint_ptr) & 0xfffffffe;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b20",
            "calling": [],
            "imported": false,
            "current_name": "clear_least_significant_bit_of_second_uint_08005b20"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_timer_08007d08",
                "pTVar1": "timer",
                "TIMx": "timer_instance",
                "DAT_08007d9c": "timer_instance",
                "DAT_08007da4": "timer_prescaler_ratio",
                "PTR_SystemCoreClock_08007da0": "timer_clock_frequency"
            },
            "code": "void initialize_timer_08007d08(void)\n{\n  TIM_TypeDef *timer;\n  uint32_t prescaler_value;\n  timer = DAT_08007d9c;\n  enable_timer_clock(DAT_08007d9c);\n  timer->CR1 = TIM_CR1_CEN;\n  timer->CR2 = 0;\n  timer->SMCR = 0;\n  timer->DIER = 0;\n  timer->SR = 0;\n  timer->CCMR1 = TIM_CCMR1_OC1M_PWM1;\n  timer->CCMR2 = 0;\n  timer->CCER = 0;\n  timer->CNT = 0;\n  prescaler_value = (uint32_t)PTR_SystemCoreClock_08007da0 * (uint32_t)DAT_08007da4 >> 0x35 - 1;\n  timer->PSC = prescaler_value;\n  timer->ARR = 199;\n  timer->CCR1 = 0;\n  timer->CCR2 = 100;\n  timer->CCR3 = 0;\n  timer->CCR4 = 0;\n  timer->DCR = 0;\n  timer->DMAR = 0;\n  timer->EGR = TIM_EGR_UG;\n  return;\n}",
            "called": [
                "enable_tim_clock"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "timers_init"
            ],
            "imported": false,
            "current_name": "initialize_timer_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "compareFloats_080091fc",
                "param_1": "firstFloat",
                "param_2": "secondFloat"
            },
            "code": "void compareFloats_080091fc(float firstFloat, float secondFloat) {\n  __aeabi_cfcmpeq(secondFloat, firstFloat);\n  return;\n}",
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "__aeabi_fcmpgt",
                "__aeabi_fcmpge"
            ],
            "imported": false,
            "current_name": "compareFloats_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "plan_cycle_reinitialize_if_needed_080058a0",
                "PTR_current_block_080058f0": "current_block_ptr",
                "PTR_sys_080058fc": "system_state",
                "PTR_st_080058f4": "step_timer_ptr",
                "DAT_080058f8": "step_duration"
            },
            "code": "void plan_cycle_reinitialize_if_needed_080058a0(void)\n{\n  if (*block_counter == 0) {\n    PTR_sys_080058fc[1] = 0;\n  }\n  else {\n    int cycle_duration = *(int *)(*PTR_current_block_080058f0 + 0x10) - *(int *)(PTR_st_080058f4 + 0x10);\n    plan_cycle_reinitialize(cycle_duration);\n    *(undefined4 *)(PTR_st_080058f4 + 0x1c) = 0;\n    set_step_events_per_minute(*(uint32_t *)(PTR_st_080058f4 + 0x1c));\n    *(undefined4 *)(PTR_st_080058f4 + 0x18) = DAT_080058f8;\n    *(undefined4 *)(PTR_st_080058f4 + 0x10) = 0;\n    PTR_sys_080058fc[1] = 2;\n  }\n  return;\n}",
            "called": [
                "plan_cycle_reinitialize",
                "set_step_events_per_minute"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "protocol_execute_runtime"
            ],
            "imported": false,
            "current_name": "plan_cycle_reinitialize_if_needed_080058a0"
        },
        "FUN_08008a6c": {
            "renaming": {
                "FUN_08008a6c": "CheckValues_08008a6c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "xorValue",
                "bVar2": "isValue1Zero",
                "bVar3": "isValue4LessThanOrEqualToValue2"
            },
            "code": "uint CheckValues_08008a6c(uint value1,uint value2,uint value3,uint value4)\n{\n  uint result;\n  bool isNegative1 = ((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1);\n  bool isNegative2 = ((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0));\n  bool isNegative3 = ((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0));\n  if (isNegative1 && (isNegative2 || isNegative3)) {\n    return 1;\n  }\n  bool isValue1Zero = (value1 | value2 << 1) == 0;\n  bool isValue3Zero = (value3 | value4 << 1) == 0;\n  if (!isValue1Zero && !isValue3Zero && value2 != value4) {\n    if (value1 == value3) {\n      uint xorValue = value2 ^ value4;\n      bool isXorValueZero = xorValue == 0;\n      if (-1 < (int)xorValue) {\n        isXorValueZero = value2 == value4;\n      }\n      bool isValue4LessThanOrEqualToValue2 = -1 < (int)xorValue && value4 <= value2;\n      if (isXorValueZero) {\n        isValue4LessThanOrEqualToValue2 = value3 <= value1;\n      }\n      result = (int)value4 >> 0x1f;\n      if (!isValue4LessThanOrEqualToValue2) {\n        result = ~result;\n      }\n      return result | 1;\n    }\n    return 0;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a6c",
            "calling": [],
            "imported": false,
            "current_name": "CheckValues_08008a6c"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "s": "string",
                "local_c": "byte_pointer"
            },
            "code": "void print_string_080036c6(char *string)\\n{\\n  uint8_t *byte_pointer;\\n  byte_pointer = (uint8_t *)string;\\n  while (*byte_pointer != \"\\0\") {\\n    serial_write(*byte_pointer);\\n    byte_pointer++;\\n  }\\n  return;\\n}",
            "called": [
                "serial_write"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "report_status_message",
                "report_grbl_help",
                "report_realtime_status",
                "report_gcode_modes",
                "report_grbl_settings",
                "report_gcode_parameters",
                "report_feedback_message",
                "report_startup_line",
                "report_init_message",
                "report_alarm_message"
            ],
            "imported": false,
            "current_name": "print_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "configure_usart_08008190",
                "usart_00": "usart_ptr",
                "value": "baud_rate",
                "usart": "usart_reg"
            },
            "code": "void configure_usart_08008190(void)\n{\n  USART_TypeDef *usart;\n  uint32_t value;\n  USART_TypeDef *usart_00 = DAT_08008240;\n  enable_usart_clock(usart_00);\n  usart_00->CR1 &= ~(1 << 13);\n  usart_00->CR1 &= ~(1 << 28);\n  usart_00->CR1 |= (1 << 2) | (1 << 3);\n  usart_00->CR2 &= ~(1 << 12);\n  usart_00->CR3 &= ~(0b1111 << 12);\n  usart_00->SR &= ~(0b11111111 << 0);\n  set_baud_rate(usart_00, 0x1c200);\n  usart_00->GTPR = usart_00->GTPR;\n  usart_00->CR1 |= (1 << 13);\n}\n",
            "called": [
                "set_baud_rate",
                "enable_usart_clock"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "configure_usart_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "check_and_handle_input_080074c8",
                "bits": "input_bits",
                "PTR_limits_enabled_08007518": "PTR_limits_enabled_08007518",
                "PTR_buttons_enabled_0800751c": "PTR_buttons_enabled_0800751c",
                "limits_isr": "handle_limits_input",
                "buttons_isr": "handle_buttons_input"
            },
            "code": "void check_and_handle_input_080074c8(uint32_t input_bits) {\n  if ((input_bits & 1) != 0) {\n    gpio_set(0x3e);\n  }\n  if ((*(int *)PTR_limits_enabled_08007518 != 0) && ((input_bits & 0x1e) != 0)) {\n    handle_limits_input();\n  }\n  if ((*(int *)PTR_buttons_enabled_0800751c != 0) && ((input_bits & 0x80) != 0)) {\n    handle_buttons_input(input_bits);\n  }\n  return;\n}",
            "called": [
                "limits_isr",
                "buttons_isr",
                "gpio_set"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "debounce_isr"
            ],
            "imported": false,
            "current_name": "check_and_handle_input_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "memset_custom_0800b430",
                "__s": "ptr",
                "__c": "value",
                "__n": "num",
                "uVar1": "uValue",
                "puVar2": "pPtr1",
                "puVar3": "pPtr2",
                "puVar4": "pPtr3",
                "uVar5": "uNum",
                "bVar6": "bIsNumZero"
            },
            "code": "void * memset_custom_0800b430(void *ptr, int value, size_t num)\n{\n  uint uValue;\n  uint *pPtr1;\n  uint *pPtr2;\n  uint *pPtr3;\n  uint uNum;\n  bool bIsNumZero;\n  \n  pPtr1 = (uint *)ptr;\n  if (((uint)ptr & 3) != 0) {\n    uNum = num - 1;\n    pPtr2 = (uint *)ptr;\n    if (num == 0) {\n      return ptr;\n    }\n    while( true ) {\n      pPtr1 = (uint *)((int)pPtr2 + 1);\n      *(char *)pPtr2 = (char)value;\n      num = uNum;\n      if (((uint)pPtr1 & 3) == 0) break;\n      bIsNumZero = uNum == 0;\n      uNum = uNum - 1;\n      pPtr2 = pPtr1;\n      if (bIsNumZero) {\n        return ptr;\n      }\n    }\n  }\n  if (3 < num) {\n    uValue = value & 0xffU | (value & 0xffU) << 8;\n    uValue = uValue | uValue << 0x10;\n    if (0xf < num) {\n      pPtr2 = pPtr1 + 4;\n      do {\n        pPtr2[-4] = uValue;\n        pPtr2[-3] = uValue;\n        pPtr2[-2] = uValue;\n        pPtr2[-1] = uValue;\n        pPtr2 = pPtr2 + 4;\n      } while (pPtr2 != (uint *)((int)pPtr1 + (num - 0x10 & 0xfffffff0) + 0x20));\n      uNum = num & 0xc;\n      pPtr1 = pPtr1 + ((num - 0x10 >> 4) + 1) * 4;\n      num = num & 0xf;\n      if (uNum == 0) goto joined_r0x0800b4a8;\n    }\n    pPtr2 = (uint *)((num - 4 & 0xfffffffc) + 4 + (int)pPtr1);\n    do {\n      pPtr3 = pPtr1 + 1;\n      *pPtr1 = uValue;\n      pPtr1 = pPtr3;\n    } while (pPtr2 != pPtr3);\n    num = num & 3;\n    pPtr1 = pPtr2;\n  }\njoined_r0x0800b4a8:\n  if (num != 0) {\n    pPtr2 = pPtr1;\n    do {\n      pPtr3 = (uint *)((int)pPtr2 + 1);\n      *(char *)pPtr2 = (char)value;\n      pPtr2 = pPtr3;\n    } while ((uint *)(num + (int)pPtr1) != pPtr3);\n  }\n  return ptr;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "eeprom_init",
                "grbl_main",
                "plan_init",
                "homing_cycle",
                "gc_execute_line",
                "st_reset",
                "mc_go_home",
                "gc_init",
                "settings_read_coord_data",
                "debounce_init"
            ],
            "imported": false,
            "current_name": "memset_custom_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "printErrorMessage_08004030",
                "status_code": "errorCode",
                "PTR__etext_08004108": "errorMessages[0]",
                "PTR_s_error__0800410c": "errorMessages[1]",
                "PTR_s_Bad_number_format_08004110": "errorMessages[2]",
                "PTR_s_Expected_command_letter_08004114": "errorMessages[3]",
                "PTR_s_Unsupported_statement_08004118": "errorMessages[4]",
                "PTR_s_Invalid_radius_0800411c": "errorMessages[5]",
                "PTR_s_Modal_group_violation_08004120": "errorMessages[6]",
                "PTR_s_Invalid_statement_08004124": "errorMessages[7]",
                "PTR_s_Setting_disabled_08004128": "errorMessages[8]",
                "PTR_s_Value___0_0_0800412c": "errorMessages[9]",
                "PTR_s_Value___3_usec_08004130": "errorMessages[10]",
                "PTR_s_EEPROM_read_fail__Using_defaults_08004134": "errorMessages[11]",
                "PTR_s_Busy_or_queued_08004138": "errorMessages[12]",
                "PTR_s_Alarm_lock_0800413c": "errorMessages[13]",
                "PTR_s_Line_overflow_08004140": "errorMessages[14]",
                "PTR_DAT_08004144": "errorMessages[15]"
            },
            "code": "void printErrorMessage_08004030(uint8_t errorCode) {\n  if (errorCode == '\\0') {\n    printPgmString(PTR__etext_08004108);\n  }\n  else {\n    printPgmString(PTR_s_error__0800410c);\n    switch(errorCode) {\n      case 1:\n        printPgmString(PTR_s_Bad_number_format_08004110);\n        break;\n      case 2:\n        printPgmString(PTR_s_Expected_command_letter_08004114);\n        break;\n      case 3:\n        printPgmString(PTR_s_Unsupported_statement_08004118);\n        break;\n      case 4:\n        printPgmString(PTR_s_Invalid_radius_0800411c);\n        break;\n      case 5:\n        printPgmString(PTR_s_Modal_group_violation_08004120);\n        break;\n      case 6:\n        printPgmString(PTR_s_Invalid_statement_08004124);\n        break;\n      case '\\a':\n        printPgmString(PTR_s_Setting_disabled_08004128);\n        break;\n      case '\\b':\n        printPgmString(PTR_s_Value___0_0_0800412c);\n        break;\n      case '\\t':\n        printPgmString(PTR_s_Value___3_usec_08004130);\n        break;\n      case '\\n':\n        printPgmString(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n        break;\n      case '\\v':\n        printPgmString(PTR_s_Busy_or_queued_08004138);\n        break;\n      case '\\f':\n        printPgmString(PTR_s_Alarm_lock_0800413c);\n        break;\n      case '\\r':\n        printPgmString(PTR_s_Line_overflow_08004140);\n    }\n    printPgmString(PTR_DAT_08004144);\n  }\n}",
            "called": [
                "printPgmString"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "report_gcode_parameters",
                "gc_init",
                "protocol_process",
                "protocol_execute_startup",
                "protocol_execute_line",
                "settings_init"
            ],
            "imported": false,
            "current_name": "printErrorMessage_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "calculate_comparison_result_08005360"
            },
            "code": "int calculate_comparison_result_08005360(void)\n{\n  int sum = *(int *)(PTR_st_08005398 + 0x14) + *(int *)(PTR_st_08005398 + 0x18);\n  *(int *)(PTR_st_08005398 + 0x18) = sum;\n  uint upper_limit = DAT_0800539c;\n  uint sum_value = *(uint *)(PTR_st_08005398 + 0x18);\n  if (upper_limit < sum_value) {\n    *(int *)(PTR_st_08005398 + 0x18) = sum - 420000;\n  }\n  return (uint)(upper_limit < sum_value);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "step_period_isr"
            ],
            "imported": false,
            "current_name": "calculate_comparison_result_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "reset_char_counter_and_comment_flag_08003980",
                "PTR_char_counter_08003998": "char_counter",
                "PTR_iscomment_0800399c": "is_comment"
            },
            "code": "void reset_char_counter_and_comment_flag_08003980(void)\n{\n  *PTR_char_counter_08003998 = 0;\n  *PTR_iscomment_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "protocol_init",
                "protocol_process"
            ],
            "imported": false,
            "current_name": "reset_char_counter_and_comment_flag_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "get_pending_interrupt_08006de0",
                "IRQn": "irq",
                "uVar1": "pending_irq"
            },
            "code": "uint32_t get_pending_interrupt_08006de0(IRQn_Type irq)\n{\n  uint32_t pending_irq = NVIC_GetPendingIRQ(irq);\n  return pending_irq;\n}",
            "called": [
                "NVIC_GetPendingIRQ"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "get_pending_interrupt_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "initialize_and_run_grbl_08007540",
                "gpio_init": "initialize_gpio",
                "timers_init": "initialize_timers",
                "debounce_init": "initialize_debounce",
                "usart_init": "initialize_usart",
                "startForkserver": "start_forkserver",
                "grbl_FUN_08007540": "run_grbl"
            },
            "code": "int initialize_and_run_grbl_08007540(void)\n{\n  HAL_Init();\n  SystemClock_Config();\n  initialize_gpio();\n  initialize_timers();\n  initialize_debounce();\n  initialize_usart();\n  start_forkserver(0);\n  run_grbl();\n  return 0;\n}",
            "called": [
                "SystemClock_Config",
                "gpio_init",
                "grbl_main",
                "usart_init",
                "startForkserver",
                "timers_init",
                "debounce_init",
                "HAL_Init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "Reset_Handler"
            ],
            "imported": false,
            "current_name": "initialize_and_run_grbl_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_bits_in_register_080052dc",
                "x": "value",
                "val": "original_value",
                "*(uint32_t *)(DAT_08005308 + 0x14)": "register_ptr",
                "*(uint *)(DAT_08005308 + 0x14)": "original_value",
                "0xfffff55f": "mask",
                "masked_original_value": "masked_original_value",
                "masked_new_value": "masked_new_value"
            },
            "code": "void set_bits_in_register_080052dc(uint32_t value) {\n  uint32_t* *(uint32_t *)(DAT_08005308 + 0x14) = (uint32_t*)(DAT_08005308 + 0x14);\n  uint32_t *(uint *)(DAT_08005308 + 0x14) = *(uint32_t*)*(uint32_t *)(DAT_08005308 + 0x14);\n  uint32_t mask = 0xfffff55f;\n  uint32_t masked_*(uint *)(DAT_08005308 + 0x14) = *(uint *)(DAT_08005308 + 0x14) & mask;\n  uint32_t masked_new_value = value | masked_*(uint *)(DAT_08005308 + 0x14);\n  **(uint32_t *)(DAT_08005308 + 0x14) = masked_new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "step_period_isr"
            ],
            "imported": false,
            "current_name": "set_bits_in_register_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_sysclock_frequency_080064ec",
                "uVar1": "pll_input_frequency_divider",
                "uVar2": "pll_input_frequency",
                "result_6": "count_leading_zeroes_input",
                "result_7": "count_leading_zeroes_output",
                "result_4": "count_leading_zeroes_vco",
                "result_5": "pll_vco_frequency",
                "result_2": "DAT_08006620",
                "result_3": "DAT_08006624",
                "result": "sysclock_frequency",
                "result_1": "pll_output_divider",
                "pllp": "unused_pllp",
                "pllm": "unused_pllm",
                "sysclockfreq": "unused_sysclockfreq",
                "pllvco": "unused_pllvco"
            },
            "code": "uint32_t calculate_sysclock_frequency_080064ec(void)\n{\n  uint pll_output_divider;\n  uint pll_multiplier;\n  uint32_t sysclock_frequency;\n  uint32_t pll_vco_frequency;\n  \n  uint pll_input_frequency_divider = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (pll_input_frequency_divider == 8) {\n    uint pll_input_frequency = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    uint count_leading_zeroes_input = count_leading_zeroes(0x200);\n    if ((*(uint *)(DAT_0800661c + 4) & 0x400000) >> (count_leading_zeroes_input & 0xff) == 0) {\n      uint count_leading_zeroes_vco = count_leading_zeroes(0x3fe0000);\n      pll_vco_frequency = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (count_leading_zeroes_vco & 0xff)) * (DAT_08006620 / pll_input_frequency);\n    }\n    else {\n      uint count_leading_zeroes_vco = count_leading_zeroes(0x3fe0000);\n      pll_vco_frequency = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (count_leading_zeroes_vco & 0xff)) * (DAT_08006624 / pll_input_frequency);\n    }\n    uint count_leading_zeroes_output = count_leading_zeroes(0xc000);\n    sysclock_frequency = pll_vco_frequency / ((((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (count_leading_zeroes_output & 0xff)) + 1) * 2);\n  }\n  else if (pll_input_frequency_divider < 9) {\n    if (pll_input_frequency_divider == 0) {\n      sysclock_frequency = DAT_08006620;\n    }\n    else if (pll_input_frequency_divider == 4) {\n      sysclock_frequency = DAT_08006624;\n    }\n  }\n  else {\n    sysclock_frequency = DAT_08006620;\n  }\n  return sysclock_frequency;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "imported": false,
            "current_name": "calculate_sysclock_frequency_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "calculatePriority_08006ba0",
                "PriorityGroup": "priorityGroup",
                "PreemptPriority": "preemptPriority",
                "SubPriority": "subPriority",
                "SubPriorityBits": "subPriorityBits",
                "PreemptPriorityBits": "preemptPriorityBits",
                "PriorityGroupTmp": "priorityGroupTmp",
                "uVar1": "priorityGroupTmp",
                "uVar2": "groupOffset"
            },
            "code": "uint32_t calculatePriority_08006ba0(uint32_t priorityGroup, uint32_t preemptPriority, uint32_t subPriority) {\n  uint32_t subPriorityBits;\n  uint32_t preemptPriorityBits;\n  uint32_t priorityGroupTmp = priorityGroup & 7;\n  uint32_t groupOffset = 7 - priorityGroupTmp;\n  if (groupOffset > 3) {\n    groupOffset = 4;\n  }\n  uint32_t subOffset = 0;\n  if (priorityGroupTmp + 4 < 7) {\n    subOffset = 0;\n  }\n  else {\n    subOffset = priorityGroupTmp - 3;\n  }\n  return subPriority & ((1 << (subOffset & 0xff)) - 1U) |\n         (((1 << (groupOffset & 0xff)) - 1U) & preemptPriority) << (subOffset & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "HAL_NVIC_SetPriority"
            ],
            "imported": false,
            "current_name": "calculatePriority_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "read_and_verify_eeprom_080003ec",
                "destination": "destination",
                "source": "eeprom_address",
                "size": "size",
                "local_1c": "remaining_size",
                "local_18": "current_address",
                "local_14": "current_destination",
                "data": "current_byte",
                "checksum": "checksum"
            },
            "code": "int read_and_verify_eeprom_080003ec(char *destination, uint eeprom_address, uint size) {\\n  char current_byte;\\n  uint remaining_size = size;\\n  uint current_address = eeprom_address;\\n  char *current_destination = destination;\\n  uchar checksum = \"\\0\";\\n  uchar expected_checksum = \"\\0\";\\n  if (*(int *)PTR_eeprom_ready_08000470 == 0) {\\n    eeprom_init();\\n    current_address = eeprom_address;\\n    current_destination = destination;\\n  }\\n  while (remaining_size--) {\\n    current_byte = eeprom_get_char(current_address++);\\n    checksum += (current_byte != \"\\0\");\\n    *current_destination++ = current_byte;\\n  }\\n  expected_checksum = eeprom_get_char(current_address);\\n  return (uint)(checksum == expected_checksum);\\n}",
            "called": [
                "eeprom_init",
                "eeprom_get_char"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "read_global_settings",
                "settings_read_startup_line",
                "settings_read_coord_data"
            ],
            "imported": false,
            "current_name": "read_and_verify_eeprom_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "addConstantToBlockIndex_08002896",
                "block_index": "blockIndex",
                "local_9": "modifiedBlockIndex"
            },
            "code": "uint8_t addConstantToBlockIndex_08002896(uint8_t blockIndex) {\\n  uint8_t modifiedBlockIndex = blockIndex;\\n  if (blockIndex == \"\\0\") {\\n    modifiedBlockIndex = 0x12;\\n  }\\n  return modifiedBlockIndex + 0xFF;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "planner_reverse_pass"
            ],
            "imported": false,
            "current_name": "addConstantToBlockIndex_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = __aeabi_d2iz();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = __muldf3(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = __muldf3(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = __muldf3(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = __muldf3(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = __aeabi_dadd((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = __subdf3(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = __muldf3(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = __subdf3((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = __muldf3(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = __muldf3(param_1,param_2,param_3,param_4);\n      uVar6 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = __subdf3((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = __subdf3(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = __muldf3((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = __muldf3((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = __muldf3(param_1,param_2,param_3,param_4);\n  uVar5 = __subdf3((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                   (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                   (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = __subdf3(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "__muldf3",
                "__subdf3",
                "__aeabi_d2iz",
                "__aeabi_dadd"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "cos",
                "sin"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_080001ac",
                "param_1": "first",
                "param_2": "second",
                "DAT_080001bc": "DAT_initialized",
                "PTR__init_080001c4": "PTR_init",
                "PTR_object_8916_080001c0": "PTR_object"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_080001ac(uint64_t *first, uint64_t *second){\n  if (DAT_080001bc != 0) {\n    first = PTR__init_080001c4;\n    second = PTR_object_8916_080001c0;\n  }\n  return ((uint64_t)(*second) << 32) | (*first);\n}",
            "called": [
                "_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "__libc_fini_array",
                "__libc_init_array"
            ],
            "imported": false,
            "current_name": "concatenate_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "print_binary_08003740",
                "n": "number"
            },
            "code": "void print_binary_08003740(uint8_t number)\n{\n  print_base2((uint)number,8);\n  return;\n}",
            "called": [
                "print_base2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "print_binary_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_axis_values_08000478",
                "axis_0": "x_axis",
                "axis_1": "y_axis",
                "axis_2": "z_axis"
            },
            "code": "void set_axis_values_08000478(uint8_t x_axis, uint8_t y_axis, uint8_t z_axis) {\n  PTR_gc_080004a8[0x19] = x_axis;\n  PTR_gc_080004a8[0x1a] = y_axis;\n  PTR_gc_080004a8[0x1b] = z_axis;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "gc_execute_line",
                "gc_init"
            ],
            "imported": false,
            "current_name": "set_axis_values_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "enable_interrupt_08006d2e",
                "IRQn": "interrupt_number"
            },
            "code": "void enable_interrupt_08006d2e(IRQn_Type interrupt_number)\n{\n  NVIC_EnableIRQ(interrupt_number);\n  return;\n}",
            "called": [
                "NVIC_EnableIRQ"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "enable_interrupt_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "wait_until_ready_to_transmit_08007e1c",
                "c": "data",
                "usart": "usart"
            },
            "code": "void wait_until_ready_to_transmit_08007e1c(USART_TypeDef *usart, char data) {\n  while ((*usart->SR & USART_SR_TXE) == 0);\n  usart->DR = (uint32_t)(uint8_t)data;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "__io_putchar",
                "serial_write"
            ],
            "imported": false,
            "current_name": "wait_until_ready_to_transmit_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "calculate_result_with_params_0800adf0",
                "param_1": "base_number",
                "param_2": "multiplier",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "iVar1": "integer_value",
                "uVar2": "multiplication_result_2_low_32bit",
                "uVar3": "multiplication_result_2_high_32bit",
                "uVar4": "multiplication_result_3_low_32bit",
                "uVar5": "multiplication_result_3_high_32bit",
                "uVar6": "multiplication_result_7_low_32bit",
                "uVar7": "multiplication_result_7_high_32bit",
                "uVar8": "multiplication_result_8_64bit_low_32bit",
                "DAT_0800af40": "CONSTANT_A",
                "DAT_0800af44": "CONSTANT_B",
                "DAT_0800af48": "CONSTANT_C",
                "DAT_0800af4c": "CONSTANT_D",
                "DAT_0800af50": "CONSTANT_E",
                "DAT_0800af54": "CONSTANT_F",
                "DAT_0800af58": "CONSTANT_G",
                "DAT_0800af5c": "CONSTANT_H",
                "DAT_0800af60": "CONSTANT_I",
                "DAT_0800af64": "CONSTANT_J",
                "DAT_0800af68": "CONSTANT_K",
                "DAT_0800af6c": "CONSTANT_L",
                "DAT_0800af70": "CONSTANT_M"
            },
            "code": "undefined4 calculate_result_with_params_0800adf0(undefined4 base_number, uint32_t multiplier, undefined4 param_3, undefined4 param_4, int param_5)\n{\n  int integer_value;\n  undefined8 multiplication_result_1;\n  undefined8 multiplication_result_2;\n  undefined8 multiplication_result_3;\n  undefined8 multiplication_result_4;\n  undefined8 multiplication_result_5;\n  undefined8 multiplication_result_6;\n  undefined8 multiplication_result_7;\n  undefined4 subtraction_result_1;\n  undefined4 subtraction_result_2;\n  undefined4 subtraction_result_3;\n  undefined4 multiplication_result_8;\n  undefined4 multiplication_result_9;\n  undefined8 multiplication_result_8_64bit;\n  undefined8 multiplication_result_9_64bit;\n  if (((multiplier & 0x7fffffff) < 0x3e400000) && (integer_value = __aeabi_d2iz(), integer_value == 0)) {\n    return base_number;\n  }\n  multiplication_result_1 = __muldf3(base_number, multiplier, base_number);\n  multiplication_result_2 = __muldf3(base_number, multiplier, (undefined4)multiplication_result_1, (undefined4)((ulonglong)multiplication_result_1 >> 0x20));\n  multiplication_result_3 = __muldf3((undefined4)multiplication_result_1, (undefined4)((ulonglong)multiplication_result_1 >> 0x20), DAT_0800af40, DAT_0800af44);\n  multiplication_result_4 = __subdf3((int)multiplication_result_3, (int)((ulonglong)multiplication_result_3 >> 0x20), DAT_0800af48, DAT_0800af4c);\n  multiplication_result_5 = __muldf3((int)multiplication_result_4, (int)((ulonglong)multiplication_result_4 >> 0x20), (undefined4)multiplication_result_2, (undefined4)((ulonglong)multiplication_result_2 >> 0x20));\n  multiplication_result_6 = __aeabi_dadd((int)multiplication_result_5, (int)((ulonglong)multiplication_result_5 >> 0x20), DAT_0800af50, DAT_0800af54);\n  multiplication_result_7 = __muldf3((int)multiplication_result_6, (int)((ulonglong)multiplication_result_6 >> 0x20), (undefined4)multiplication_result_2, (undefined4)((ulonglong)multiplication_result_2 >> 0x20));\n  multiplication_result_8_64bit = __subdf3((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), DAT_0800af58, DAT_0800af5c);\n  multiplication_result_8 = (undefined4)((ulonglong)multiplication_result_8_64bit >> 0x20);\n  multiplication_result_9 = (undefined4)multiplication_result_8_64bit;\n  multiplication_result_7 = __muldf3((int)multiplication_result_8_64bit, (int)((ulonglong)multiplication_result_8_64bit >> 0x20), (undefined4)multiplication_result_2, (undefined4)((ulonglong)multiplication_result_2 >> 0x20));\n  multiplication_result_7 = __aeabi_dadd((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), DAT_0800af60, DAT_0800af64);\n  if (param_5 != 0) {\n    multiplication_result_8_64bit = __muldf3(param_3, param_4, 0, DAT_0800af70);\n    multiplication_result_7 = __muldf3((undefined4)multiplication_result_2, (undefined4)multiplication_result_5, (int)multiplication_result_7, multiplication_result_8);\n    multiplication_result_7 = __subdf3((int)multiplication_result_8_64bit, (int)((ulonglong)multiplication_result_8_64bit >> 0x20), (int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20));\n    multiplication_result_7 = __muldf3((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), (undefined4)multiplication_result_1, (undefined4)((ulonglong)multiplication_result_1 >> 0x20));\n    subtraction_result_1 = __subdf3((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), param_3, param_4);\n    multiplication_result_9_64bit = __muldf3((undefined4)multiplication_result_2, (undefined4)multiplication_result_5, DAT_0800af68, DAT_0800af6c);\n    multiplication_result_7 = __aeabi_dadd((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), (int)multiplication_result_9_64bit, (int)((ulonglong)multiplication_result_9_64bit >> 0x20));\n    subtraction_result_2 = __subdf3(base_number, multiplier, (int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20));\n    return subtraction_result_2;\n  }\n  multiplication_result_7 = __muldf3((undefined4)multiplication_result_1, (undefined4)((ulonglong)multiplication_result_1 >> 0x20), (int)multiplication_result_7, multiplication_result_8);\n  multiplication_result_7 = __subdf3((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), DAT_0800af68, DAT_0800af6c);\n  multiplication_result_7 = __muldf3((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), (undefined4)multiplication_result_2, (undefined4)((ulonglong)multiplication_result_2 >> 0x20));\n  subtraction_result_3 = __aeabi_dadd((int)multiplication_result_7, (int)((ulonglong)multiplication_result_7 >> 0x20), base_number, multiplier);\n  return subtraction_result_3;\n}",
            "called": [
                "__muldf3",
                "__subdf3",
                "__aeabi_d2iz",
                "__aeabi_dadd"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "cos",
                "sin"
            ],
            "imported": false,
            "current_name": "calculate_result_with_params_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_alarm_08003a74",
                "rt_exec": "alarm_flags",
                "bVar1": "alarm_flags"
            },
            "code": "void process_alarm_08003a74() {\n  byte alarm_flags = PTR_sys_08003b90[2];\n  if (alarm_flags != 0) {\n    if ((alarm_flags & 0x60) != 0) {\n      PTR_sys_08003b90[1] = 6;\n      if ((alarm_flags & 0x40) == 0) {\n        report_alarm_message(-2);\n      }\n      else {\n        report_alarm_message(-1);\n        report_feedback_message('\\x01');\n        PTR_sys_08003b90[2] &= 0xef;\n        while ((PTR_sys_08003b90[2] & 0x10) == 0);\n      }\n      PTR_sys_08003b90[2] &= 0x9f;\n    }\n    if ((alarm_flags & 0x10) == 0) {\n      if ((alarm_flags & 1) != 0) {\n        report_realtime_status();\n        PTR_sys_08003b90[2] &= 0xfe;\n      }\n      if ((alarm_flags & 8) != 0) {\n        feed_hold();\n        PTR_sys_08003b90[2] &= 0xf7;\n      }\n      if ((alarm_flags & 4) != 0) {\n        cycle_reinitialize();\n        PTR_sys_08003b90[2] &= 0xfb;\n      }\n      if ((alarm_flags & 2) != 0) {\n        cycle_start();\n        if ((PTR_settings_08003b94[0x28] & 2) != 0) {\n          PTR_sys_08003b90[0x10] = 1;\n        }\n        PTR_sys_08003b90[2] &= 0xfd;\n      }\n    }\n    else {\n      *PTR_sys_08003b90 = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "st_feed_hold",
                "report_realtime_status",
                "st_cycle_reinitialize",
                "report_feedback_message",
                "report_alarm_message",
                "st_cycle_start"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "mc_line",
                "grbl_main",
                "plan_synchronize",
                "mc_dwell",
                "mc_go_home",
                "protocol_process"
            ],
            "imported": false,
            "current_name": "process_alarm_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nHAL_StatusTypeDef FUNC_08005cec(RCC_OscInitTypeDef *RCC_OscInitStruct)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint32_t result_2;\n  uint32_t result_3;\n  uint32_t result_4;\n  uint32_t result_5;\n  uint32_t result_6;\n  uint32_t result_7;\n  uint32_t result;\n  uint32_t result_1;\n  uint32_t timeout;\n  \n  if ((RCC_OscInitStruct->OscillatorType & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (RCC_OscInitStruct->HSEState != 1)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 5000 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n      *DAT_08005fb0 = (char)RCC_OscInitStruct->HSEState;\n      if (RCC_OscInitStruct->HSEState == 1) {\n        uVar1 = HAL_GetTick();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = HAL_GetTick();\n          if (uVar1 + 5000 <= uVar2) {\n            return HAL_TIMEOUT;\n          }\n        }\n      }\n      else {\n        uVar1 = HAL_GetTick();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = HAL_GetTick();\n          if (uVar1 + 5000 <= uVar2) {\n            return HAL_TIMEOUT;\n          }\n        }\n      }\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (RCC_OscInitStruct->HSIState != 1)) {\n        return HAL_ERROR;\n      }\n    }\n    else if (RCC_OscInitStruct->HSIState == 0) {\n      *DAT_08005fb4 = 0;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n      uVar3 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac =\n           RCC_OscInitStruct->HSICalibrationValue << (uVar3 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 8) != 0) {\n    if (RCC_OscInitStruct->LSIState == 0) {\n      *DAT_08005fb8 = 0;\n      uVar1 = HAL_GetTick();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      uVar1 = HAL_GetTick();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    uVar1 = HAL_GetTick();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = HAL_GetTick();\n      if (uVar1 + 100 <= uVar2) {\n        return HAL_TIMEOUT;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    uVar1 = HAL_GetTick();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = HAL_GetTick();\n      if (uVar1 + 5000 <= uVar2) {\n        return HAL_TIMEOUT;\n      }\n    }\n    *DAT_08006184 = (char)RCC_OscInitStruct->LSEState;\n    if (RCC_OscInitStruct->LSEState == 1) {\n      uVar1 = HAL_GetTick();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 5000 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      uVar1 = HAL_GetTick();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 5000 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\n  if ((RCC_OscInitStruct->PLL).PLLState != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return HAL_ERROR;\n    }\n    if ((RCC_OscInitStruct->PLL).PLLState == 2) {\n      *DAT_08006188 = 0;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n      uVar3 = count_leading_zeroes(0x3fe0000);\n      uVar4 = count_leading_zeroes(0xc000);\n      uVar5 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           (RCC_OscInitStruct->PLL).PLLQ << (uVar5 & 0xff) |\n           (RCC_OscInitStruct->PLL).PLLM | (RCC_OscInitStruct->PLL).PLLN << (uVar3 & 0xff) |\n           ((RCC_OscInitStruct->PLL).PLLP >> 1) - 1 << (uVar4 & 0xff) |\n           (RCC_OscInitStruct->PLL).PLLSource | 0x20000000;\n      *DAT_08006188 = 1;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = HAL_GetTick();\n        if (uVar1 + 100 <= uVar2) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\n  return HAL_OK;\n}\n\n",
            "called": [
                "HAL_GetTick"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "SystemClock_Config"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "set_irq_priority_08006b00",
                "IRQn": "irq",
                "priority": "priority",
                "DAT_08006b4c": "NVIC",
                "DAT_08006b50": "NVIC",
                "WWDG_IRQn": "WWDG_IRQn"
            },
            "code": "void set_irq_priority_08006b00(IRQn_Type irq, uint32_t priority) {\n  if (irq < WWDG_IRQn) {\n    uint32_t* priority_reg = (uint32_t*)((uint32_t)&DAT_08006b4c->IPR[irq / 4] + ((irq % 4) * 8));\n    *priority_reg = (*priority_reg & ~(0xff << ((irq % 4) * 8))) | ((priority & 0xff) << ((irq % 4) * 8));\n  }\n  else {\n    DAT_08006b4c->IPR[irq - 16] = (char)((priority & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "SysTick_Config",
                "HAL_NVIC_SetPriority"
            ],
            "imported": false,
            "current_name": "set_irq_priority_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "check_if_exit_function_registered_0800b4d0",
                "DAT_0800b4dc": "is_exit_function_registered",
                "DAT_0800b4e0": "exit_function",
                "atexit": "register_exit_function"
            },
            "code": "void check_if_exit_function_registered_0800b4d0(void)\n{\n  if (DAT_0800b4dc != 0) {\n    register_DAT_0800b4e0(DAT_0800b4e0);\n    return;\n  }\n  return;\n}",
            "called": [
                "atexit"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "__libc_init_array"
            ],
            "imported": false,
            "current_name": "check_if_exit_function_registered_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculateBaudRate_08007f54",
                "usart": "usart",
                "baud": "baudRate",
                "uVar1": "mantissa",
                "uVar2": "APB1Freq/APB2Freq",
                "uVar3": "APB1Freq/APB2Freq",
                "uVar4": "APB1Freq/APB2Freq",
                "DAT_08008184": "USART1",
                "DAT_08008188": "USART2",
                "DAT_0800818c": "16"
            },
            "code": "void calculateBaudRate_08007f54(USART_TypeDef *usart, int baudRate) {\n  \n  if ((usart->CR1 & USART_CR1_UE) == 0) {\n    if ((usart == DAT_08008184) || (usart == DAT_08008188)) {\n      uint32_t APB2Freq = HAL_RCC_GetPCLK2Freq();\n      uint32_t mantissa = DAT_0800818c * APB2Freq / (baudRate * 100);\n      uint32_t fraction = (DAT_0800818c * APB2Freq - mantissa * baudRate * 100) * DAT_0800818c / (baudRate * 100);\n      usart->BRR = (mantissa << 4) | fraction;\n    }\n    else {\n      uint32_t APB1Freq = HAL_RCC_GetPCLK1Freq();\n      uint32_t mantissa = DAT_0800818c * APB1Freq / (baudRate * 100);\n      uint32_t fraction = (DAT_0800818c * APB1Freq - mantissa * baudRate * 100) * DAT_0800818c / (baudRate * 100);\n      usart->BRR = (mantissa << 4) | fraction;\n    }\n  }\n  else if ((usart == DAT_08008184) || (usart == DAT_08008188)) {\n    uint32_t APB2Freq = HAL_RCC_GetPCLK2Freq();\n    uint32_t mantissa = 8 * APB2Freq / (baudRate * 100);\n    uint32_t fraction = (8 * APB2Freq - mantissa * baudRate * 100) * 8 / (baudRate * 100);\n    usart->BRR = (mantissa << 4) | fraction;\n  }\n  else {\n    uint32_t APB1Freq = HAL_RCC_GetPCLK1Freq();\n    uint32_t mantissa = 8 * APB1Freq / (baudRate * 100);\n    uint32_t fraction = (8 * APB1Freq - mantissa * baudRate * 100) * 8 / (baudRate * 100);\n    usart->BRR = (mantissa << 4) | fraction;\n  }\n}",
            "called": [
                "HAL_RCC_GetPCLK1Freq",
                "HAL_RCC_GetPCLK2Freq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "usart_init"
            ],
            "imported": false,
            "current_name": "calculateBaudRate_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "execute_gcode_command_08003b98",
                "line": "gcode_line",
                "bVar1": "command",
                "uVar2": "return_value",
                "iVar3": "read_result",
                "uVar4": "unused_var",
                "extraout_r1": "unused_var",
                "uVar5": "unused_var",
                "value_00": "unused_var",
                "in_stack_ffffffe0": "unused_var",
                "value": "value",
                "parameter": "parameter_value",
                "char_counter": "char_counter",
                "helper_var": "helper_var",
                "PTR_sys_08003f2c": "system_08003f2c",
                "PTR_settings_08003f30": "settings_08003f30"
            },
            "code": "uint8_t execute_gcode_command_08003b98(char *gcode_line)\n{\n  uint8_t return_value;\n  uint8_t char_counter = 1;\n  uint8_t helper_var = 0;\n  char command = gcode_line[0];\n  if (command != '$') {\n    return_value = execute_grbl_command(gcode_line);\n    return return_value;\n  }\n  if (gcode_line[1] == 0) {\n    report_grbl_help();\n    return 0;\n  }\n  if ((command < 0x23) || (command > 0x58)) {\n    goto switchD_08003bdc_caseD_25;\n  }\n  switch(command) {\n    case 0x23:\n      char_counter = 2;\n      if (gcode_line[2] != 0) {\n        return 3;\n      }\n      report_gcode_parameters();\n      break;\n    case 0x24:\n      char_counter = 2;\n      if (gcode_line[2] != 0) {\n        return 3;\n      }\n      report_grbl_settings();\n      break;\n    case 0x43:\n      char_counter = 2;\n      if (gcode_line[2] != 0) {\n        return 3;\n      }\n      if (PTR_sys_08003f2c[1] == 7) {\n        reset_machine();\n        report_feedback_message(5);\n      }\n      else {\n        if (PTR_sys_08003f2c[1] != 0) {\n          return 11;\n        }\n        PTR_sys_08003f2c[1] = 7;\n        report_feedback_message(4);\n      }\n      break;\n    case 0x47:\n      char_counter = 2;\n      if (gcode_line[2] != 0) {\n        return 3;\n      }\n      report_gcode_modes();\n      break;\n    case 0x48:\n      if ((PTR_settings_08003f30[0x28] & 0x10) == 0) {\n        return 7;\n      }\n      if ((PTR_sys_08003f2c[1] != 0) && (PTR_sys_08003f2c[1] != 6)) {\n        return 11;\n      }\n      go_home();\n      if (PTR_sys_08003f2c[0] == 0) {\n        execute_startup_protocol();\n      }\n      break;\n    case 0x4e:\n      char_counter = 2;\n      if (gcode_line[2] == 0) {\n        for (helper_var = 0; helper_var < 2; helper_var++) {\n          return_value = read_startup_line(helper_var, gcode_line);\n          if (return_value == 0) {\n            report_status_message('\\n');\n          }\n          else {\n            report_startup_line(helper_var, gcode_line);\n          }\n        }\n        return 0;\n      }\n      helper_var = 1;\n    default:\nswitchD_08003bdc_caseD_25:\n      float parameter_value;\n      int read_result = read_float(gcode_line, &char_counter, &parameter_value);\n      if (read_result == 0) {\n        return 1;\n      }\n      char_counter++;\n      if (gcode_line[char_counter - 1] != '=') {\n        return 3;\n      }\n      if (helper_var == 0) {\n        float value;\n        read_result = read_float(gcode_line, &char_counter, &value);\n        if (read_result == 0) {\n          return 1;\n        }\n        if (gcode_line[char_counter] == 0) {\n          int int_value = (int)parameter_value;\n          return_value = store_global_setting(int_value, value);\n          return return_value;\n        }\n        return 3;\n      }\n      uint8_t index = char_counter - 1;\n      while (gcode_line[index] != 0) {\n        gcode_line[index - 1] = gcode_line[index];\n        index++;\n      }\n      helper_var = char_counter;\n      return_value = execute_grbl_command(gcode_line);\n      if (return_value != 0) {\n        return return_value;\n      }\n      double parameter_double = (double)parameter_value;\n      trunc(parameter_double);\n      int int_parameter = (int)parameter_double;\n      store_startup_line(int_parameter, gcode_line);\n      break;\n    case 0x58:\n      char_counter = 2;\n      if (gcode_line[2] != 0) {\n        return 3;\n      }\n      if (PTR_sys_08003f2c[1] == 6) {\n        report_feedback_message(3);\n        PTR_sys_08003f2c[1] = 0;\n      }\n  }\n  return 0;\n}",
            "called": [
                "report_grbl_help",
                "report_gcode_modes",
                "read_float",
                "settings_store_global_setting",
                "report_gcode_parameters",
                "__aeabi_f2iz",
                "mc_go_home",
                "__aeabi_f2d",
                "settings_store_startup_line",
                "report_status_message",
                "mc_reset",
                "__aeabi_d2uiz",
                "report_grbl_settings",
                "gc_execute_line",
                "report_feedback_message",
                "settings_read_startup_line",
                "trunc",
                "report_startup_line",
                "protocol_execute_startup"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "protocol_process"
            ],
            "imported": false,
            "current_name": "execute_gcode_command_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "initialize_motion_080024c4",
                "z": "z_position",
                "feed_rate": "feed_rate_float",
                "invert_feed_rate": "invert_feed_rate",
                "z_dir": "z_direction",
                "y_dir": "y_direction",
                "x_dir": "x_direction"
            },
            "code": "void initialize_motion_080024c4(void)\n{\n  uint8_t invert_feed_rate;\n  undefined4 x_dir_float;\n  undefined4 y_dir_float;\n  undefined4 z_dir_float;\n  undefined4 feed_rate_float;\n  float z_position;\n  int8_t x_direction;\n  int8_t y_direction;\n  int8_t z_direction;\n  PTR_sys_080025d8[1] = 5;\n  *(undefined4 *)PTR_limits_enabled_080025dc = 0;\n  limits_go_home();\n  protocol_execute_runtime();\n  if (*PTR_sys_080025d8 == '\\0') {\n    memset(DAT_080025e0,0,0xc);\n    sys_sync_current_position();\n    PTR_sys_080025d8[1] = 0;\n    if ((*(ushort *)(PTR_settings_080025e4 + 0x2a) & 0x20) == 0) {\n      x_direction = -1;\n    }\n    else {\n      x_direction = 1;\n    }\n    if ((*(ushort *)(PTR_settings_080025e4 + 0x2a) & 0x80) == 0) {\n      y_direction = -1;\n    }\n    else {\n      y_direction = 1;\n    }\n    if ((*(ushort *)(PTR_settings_080025e4 + 0x2a) & 0x200) == 0) {\n      z_direction = -1;\n    }\n    else {\n      z_direction = 1;\n    }\n    x_dir_float = __floatsisf((int)x_direction);\n    invert_feed_rate = __aeabi_fmul(x_dir_float,*(undefined4 *)(PTR_settings_080025e4 + 0x38));\n    y_dir_float = __floatsisf((int)y_direction);\n    feed_rate_float = __aeabi_fmul(y_dir_float,*(undefined4 *)(PTR_settings_080025e4 + 0x38));\n    z_dir_float = __floatsisf((int)z_direction);\n    z_position = 0.0f;\n    mc_line((float)z_dir_float,(float)((ulonglong)z_dir_float >> 0x20),z_position,feed_rate_float,invert_feed_rate);\n    st_cycle_start();\n    plan_synchronize();\n    sys_sync_current_position();\n    if ((PTR_settings_080025e4[0x28] & 8) != 0) {\n      *(undefined4 *)PTR_limits_enabled_080025dc = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "__floatsisf",
                "sys_sync_current_position",
                "mc_line",
                "limits_go_home",
                "plan_synchronize",
                "__aeabi_fmul",
                "protocol_execute_runtime",
                "memset",
                "st_cycle_start"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "initialize_motion_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "update_block_buffer_tail_if_not_empty_08002f40",
                "*PTR_block_buffer_head_08002f6c": "current_head_value",
                "*PTR_block_buffer_tail_08002f70": "current_tail_value",
                "next_block_index": "next_block_index",
                "uVar1": "new_tail_value"
            },
            "code": "void update_block_buffer_tail_if_not_empty_08002f40() {\n  uint8_t *PTR_block_buffer_head_08002f6c = *PTR_block_buffer_head_08002f6c;\n  uint8_t *PTR_block_buffer_tail_08002f70 = *PTR_block_buffer_tail_08002f70;\n  if (*PTR_block_buffer_head_08002f6c != *PTR_block_buffer_tail_08002f70) {\n    uint8_t new_tail_value = next_block_index(*PTR_block_buffer_tail_08002f70);\n    *PTR_block_buffer_tail_08002f70 = new_tail_value;\n  }\n  return;\n}",
            "called": [
                "next_block_index"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "step_period_isr"
            ],
            "imported": false,
            "current_name": "update_block_buffer_tail_if_not_empty_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "gc_set_current_position",
                "report_realtime_status",
                "plan_buffer_line",
                "planner_recalculate_trapezoids",
                "report_grbl_settings",
                "homing_cycle",
                "plan_cycle_reinitialize",
                "mc_arc",
                "intersection_distance",
                "estimate_acceleration_distance"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "initialize_spindle_and_coolant_if_not_initialized_080025e8",
                "PTR_sys_08002634": "system_status",
                "DAT_0800263e": "byte"
            },
            "code": "void initialize_spindle_and_coolant_if_not_initialized_080025e8(void) {\n  if ((PTR_sys_08002634[2] & 0x10) == 0) {\n    PTR_sys_08002634[2] |= 0x10;\n    spindle_stop();\n    coolant_stop();\n    if ((DAT_0800263e)PTR_sys_08002634[1] - 3 < 3) {\n      PTR_sys_08002634[2] |= 0x20;\n      set_state_to_idle();\n    }\n  }\n  return;\n}",
            "called": [
                "spindle_stop",
                "coolant_stop",
                "st_go_idle"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "limits_isr",
                "buttons_isr",
                "gc_execute_line",
                "serial_rx_hook",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "initialize_spindle_and_coolant_if_not_initialized_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "coolant_run"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005ac4": {
            "renaming": {
                "FUN_08005ac4": "getMemorySize_08005ac4"
            },
            "code": "uint32_t getMemorySize_08005ac4() {\n  uint32_t memorySize = 0x1000000;\n  return memorySize;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005ac4",
            "calling": [],
            "imported": false,
            "current_name": "getMemorySize_08005ac4"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "turn_off_spindle_08005250"
            },
            "code": "void turn_off_spindle_08005250(void)\n{\n  spindle_off();\n  return;\n}",
            "called": [
                "spindle_off"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "mc_reset",
                "spindle_run",
                "spindle_init"
            ],
            "imported": false,
            "current_name": "turn_off_spindle_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "wait_forever_08007430"
            },
            "code": "void wait_forever_08007430(void)\n{\n  while(true)\n  {\n    // do nothing\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "SystemClock_Config"
            ],
            "imported": false,
            "current_name": "wait_forever_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = calculate_result_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "scalbn",
                "report_realtime_status",
                "plan_buffer_line",
                "report_gcode_modes",
                "read_float",
                "report_gcode_parameters",
                "__ieee754_sqrt",
                "homing_cycle",
                "atan",
                "__kernel_rem_pio2",
                "__kernel_cos",
                "to_millimeters",
                "mc_arc",
                "__kernel_sin",
                "__ieee754_rem_pio2",
                "__ieee754_hypot",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007310": {
            "renaming": {
                "FUN_08007310": "get_gpio_pin_state_08007310",
                "GPIOx": "gpio",
                "GPIO_Pin": "pin",
                "bitstatus": "state"
            },
            "code": "GPIO_PinState get_gpio_pin_state_08007310(GPIO_TypeDef *gpio, uint16_t pin) {\n  GPIO_PinState state;\n  state = ((uint)pin & gpio->IDR) != 0;\n  return state;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007310",
            "calling": [],
            "imported": false,
            "current_name": "get_gpio_pin_state_08007310"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "configure_RCC_08007436",
                "RCC_OscInitStruct": "RCC_OscInit",
                "RCC_ClkInitStruct": "RCC_ClkInit",
                "HVar1": "status",
                "OscillatorType": "RCC_OSCILLATORTYPE_HSE",
                "HSEState": "RCC_HSE_ON",
                "PLLState": "RCC_PLL_ON",
                "PLLSource": "RCC_PLLSOURCE_HSE",
                "PLLM": "8",
                "PLLN": "336",
                "PLLP": "RCC_PLLP_DIV2",
                "PLLQ": "7",
                "ClockType": "RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2",
                "SYSCLKSource": "RCC_SYSCLKSOURCE_PLLCLK",
                "AHBCLKDivider": "RCC_SYSCLK_DIV1",
                "APB1CLKDivider": "RCC_HCLK_DIV4",
                "APB2CLKDivider": "RCC_HCLK_DIV2"
            },
            "code": "void configure_RCC_08007436(void)\n{\n  HAL_StatusTypeDef status;\n  RCC_OscInitTypeDef RCC_OscInit;\n  RCC_ClkInitTypeDef RCC_ClkInit;\n  \n  *(uint *)(DAT_080074c0 + 0x40) |= 0x10000000;\n  *DAT_080074c4 |= 0xc000;\n  \n  RCC_OscInit.OscillatorType = RCC_OSCILLATORTYPE_HSE;\n  RCC_OscInit.HSEState = RCC_HSE_ON;\n  RCC_OscInit.PLL.PLLState = RCC_PLL_ON;\n  RCC_OscInit.PLL.PLLSource = RCC_PLLSOURCE_HSE;\n  RCC_OscInit.PLL.PLLM = 8;\n  RCC_OscInit.PLL.PLLN = 336;\n  RCC_OscInit.PLL.PLLP = RCC_PLLP_DIV2;\n  RCC_OscInit.PLL.PLLQ = 7;\n  status = HAL_RCC_OscConfig(&RCC_OscInit);\n  if (status != HAL_OK) {\n    Error_Handler();\n  }\n  RCC_ClkInit.ClockType = RCC_CLOCKTYPE_SYSCLK|RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;\n  RCC_ClkInit.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;\n  RCC_ClkInit.AHBCLKDivider = RCC_SYSCLK_DIV1;\n  RCC_ClkInit.APB1CLKDivider = RCC_HCLK_DIV4;\n  RCC_ClkInit.APB2CLKDivider = RCC_HCLK_DIV2;\n  status = HAL_RCC_ClockConfig(&RCC_ClkInit, FLASH_LATENCY_5);\n  if (status != HAL_OK) {\n    Error_Handler();\n  }\n  return;\n}\n",
            "called": [
                "HAL_RCC_OscConfig",
                "Error_Handler",
                "HAL_RCC_ClockConfig"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "configure_RCC_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_step_events_08005814",
                "PTR_st_08005834": "step_events",
                "PTR_current_block_08005838": "current_block"
            },
            "code": "void initialize_step_events_08005814(void)\n{\n  memset(PTR_st_08005834, 0, sizeof(PTR_st_08005834));\n  set_PTR_st_08005834_per_minute(800);\n  *PTR_current_block_08005838 = 0;\n  return;\n}",
            "called": [
                "memset",
                "set_step_events_per_minute"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "initialize_step_events_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "set_irq_priority_08005bdc",
                "IRQn": "irq_num",
                "priority": "priority",
                "DAT_08005c28": "nvic_ipr_base",
                "DAT_08005c2c": "extint_base"
            },
            "code": "void set_irq_priority_08005bdc(IRQn_Type irq_num, uint32_t priority) {\n  if (irq_num < WWDG_IRQn) {\n    uint32_t* nvic_ipr = (uint32_t*) (0xE000E400 + 0x20 * ((uint32_t) irq_num >> 5));\n    uint8_t priority_shift = (irq_num & 0x1F) << 2;\n    *nvic_ipr |= (priority & 0xFF) << priority_shift;\n  }\n  else {\n    *(volatile uint8_t*) (0xE000E400 + 0x300 + irq_num - 0x40) = (priority & 0xFF) << 4;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "SysTick_Config"
            ],
            "imported": false,
            "current_name": "set_irq_priority_08005bdc"
        },
        "FUN_080085d4": {
            "renaming": {
                "FUN_080085d4": "calculate_double_080085d4",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar2": "numerator_shifted",
                "uVar3": "shift_count",
                "uVar4": "denominator_shifted",
                "iVar5": "shift_amount",
                "uVar6": "numerator_carry",
                "iVar7": "shift_count",
                "uVar8": "high_bits",
                "bVar1": "carry_bit",
                "bVar9": "denominator_high_bit",
                "bVar10": "carry_bit1",
                "bVar11": "carry_bit2"
            },
            "code": "ulonglong calculate_double_080085d4(uint numerator, uint denominator)\n{\n  byte carry_bit;\n  uint numerator_shifted;\n  uint denominator_shifted;\n  int shift_amount;\n  uint numerator_carry;\n  int shift_count;\n  uint high_bits;\n  bool denominator_high_bit;\n  bool carry_bit1;\n  bool carry_bit2;\n  \n  if ((numerator | denominator) == 0) {\n    return CONCAT44(denominator, numerator);\n  }\n  shift_amount = 0x432;\n  high_bits = denominator >> 0x16;\n  if (high_bits != 0) {\n    shift_amount = 3;\n    if (denominator >> 0x19 != 0) {\n      shift_amount = 6;\n    }\n    if (denominator >> 0x1c != 0) {\n      shift_amount = shift_amount + 3;\n    }\n    shift_count = shift_amount - ((int)denominator >> 0x1f);\n    numerator_shifted = numerator << (0x20 - shift_count & 0xff);\n    numerator = numerator >> (shift_count & 0xff) | denominator << (0x20 - shift_count & 0xff);\n    denominator = denominator >> (shift_count & 0xff);\n    shift_amount = shift_count + 0x432;\n  }\n  if (0xfffff < denominator) {\n    if (0x1fffff < denominator) {\n      numerator_carry = denominator & 1;\n      denominator = denominator >> 1;\n      carry_bit = (byte)numerator;\n      numerator = (uint)(numerator_carry != 0) << 0x1f | numerator >> 1;\n      high_bits = (uint)(carry_bit & 1) << 0x1f | high_bits >> 1;\n      shift_amount = shift_amount + 1;\n      if (0xffbfffff < (uint)(shift_amount * 0x200000)) {\n        return 0x7ff0000000000000;\n      }\n    }\nLAB_080083e0:\n    denominator_high_bit = 0x7fffffff < high_bits;\n    if (high_bits == 0x80000000) {\n      denominator_high_bit = (numerator & 1) != 0;\n    }\n    return CONCAT44(denominator + shift_amount * 0x100000 + (uint)CARRY4(numerator,(uint)denominator_high_bit),numerator + denominator_high_bit\n                   );\n  }\n  carry_bit1 = (high_bits & 0x80000000) != 0;\n  high_bits = high_bits << 1;\n  numerator_carry = numerator * 2;\n  carry_bit2 = CARRY4(numerator,numerator);\n  numerator = numerator * 2 + (uint)carry_bit1;\n  denominator = denominator * 2 + (uint)(carry_bit2 || CARRY4(numerator_carry,(uint)carry_bit1));\n  carry_bit1 = shift_amount != 0;\n  shift_amount = shift_amount + -1;\n  if (carry_bit1 && 0xfffff < denominator) goto LAB_080083e0;\n  numerator_shifted = numerator;\n  denominator_shifted = denominator;\n  if (denominator == 0) {\n    numerator_shifted = 0;\n    denominator_shifted = numerator;\n  }\n  shift_count = count_leading_zeroes(denominator_shifted);\n  if (denominator == 0) {\n    shift_count = shift_count + 0x20;\n  }\n  shift_count = shift_count - 0xb;\n  carry_bit1 = SBORROW4(shift_count,0x20);\n  shift_amount = shift_count - 0x2b;\n  carry_bit2 = (int)shift_amount < 0;\n  denominator_high_bit = shift_amount == 0;\n  if ((int)shift_count < 0x20) {\n    carry_bit1 = SCARRY4(shift_amount,0xc);\n    shift_count = shift_count + -0x1f;\n    carry_bit2 = shift_count < 0;\n    denominator_high_bit = shift_count == 0;\n    shift_count = shift_count & 0xff;\n    if (!denominator_high_bit && carry_bit2 == carry_bit1) {\n      numerator_shifted = denominator_shifted << shift_count;\n      denominator_shifted = denominator_shifted >> (0xcU - shift_amount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (denominator_high_bit || carry_bit2 != carry_bit1) {\n    shift_count = 0x20 - shift_count;\n  }\n  denominator_shifted = denominator_shifted << (shift_count & 0xff);\n  if (denominator_high_bit || carry_bit2 != carry_bit1) {\n    denominator_shifted = denominator_shifted | numerator_shifted >> (shift_count & 0xff);\n  }\n  if (denominator_high_bit || carry_bit2 != carry_bit1) {\n    numerator_shifted = numerator_shifted << (shift_count & 0xff);\n  }\nLAB_08008458:\n  if ((int)shift_count <= shift_amount) {\n    return CONCAT44(denominator_shifted + (shift_amount - shift_count) * 0x100000,numerator_shifted);\n  }\n  shift_count = ~(shift_amount - shift_count);\n  if ((int)shift_count < 0x1f) {\n    shift_amount = shift_count - 0x13;\n    if (shift_amount != 0 && shift_amount < 0 == SCARRY4(shift_count - 0x1f,0xc)) {\n      return (ulonglong)(numerator_shifted >> (0x20 - (0xcU - shift_amount) & 0xff) | denominator_shifted << (0xcU - shift_amount & 0xff));\n    }\n    shift_count = shift_count + 1;\n    return CONCAT44(denominator_shifted >> (shift_count & 0xff),numerator_shifted >> (shift_count & 0xff) | denominator_shifted << (0x20 - shift_count & 0xff)\n                   );\n  }\n  return (ulonglong)(denominator_shifted >> (shift_count - 0x1f & 0xff));\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080085d4",
            "calling": [],
            "imported": false,
            "current_name": "calculate_double_080085d4"
        },
        "FUN_08006e70": {
            "renaming": {
                "FUN_08006e70": "execute_systick_callback_08006e70"
            },
            "code": "void execute_systick_callback_08006e70(void)\n{\n  HAL_SYSTICK_Callback();\n  return;\n}",
            "called": [
                "HAL_SYSTICK_Callback"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e70",
            "calling": [],
            "imported": false,
            "current_name": "execute_systick_callback_08006e70"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "clear_eeprom_data_080002f0",
                "PTR_eeprom_data_08000308": "eeprom_data",
                "PTR_eeprom_ready_0800030c": "eeprom_ready"
            },
            "code": "void clear_eeprom_data_080002f0(void)\n{\n  memset(PTR_eeprom_data_08000308, 0xff, 4);\n  *PTR_eeprom_ready_0800030c = 1;\n  return;\n}",
            "called": [
                "memset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "eeprom_put_char",
                "eeprom_get_char",
                "memcpy_to_eeprom_with_checksum",
                "memcpy_from_eeprom_with_checksum"
            ],
            "imported": false,
            "current_name": "clear_eeprom_data_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(uint16_t GPIO_Pin)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "HAL_GPIO_EXTI_IRQHandler"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "initialize_gpio_pins_0800778c",
                "GPIO_InitStruct": "gpio_init_struct",
                "gpio": "gpio_info",
                "puVar1": "gpio_info_ptr",
                "i": "i"
            },
            "code": "void initialize_gpio_pins_0800778c(void)\n{\n  uint *gpio_info_ptr;\n  GPIO_InitTypeDef gpio_init_struct;\n  GPIO_INFO *gpio_info;\n  int i;\n  for (i = 0; (uint)i < 0x11; i++) {\n    gpio_info_ptr = (uint *)(PTR_gpio_info_0800784c + i * 0x18);\n    *(uint *)(DAT_08007850 + 0x30) = *(uint *)(DAT_08007850 + 0x30) | 1 << (*gpio_info_ptr >> 4 & 0xff);\n    gpio_init_struct.Pin = 1 << (*gpio_info_ptr & 0xf);\n    gpio_init_struct.Mode = gpio_info_ptr[1];\n    gpio_init_struct.Pull = gpio_info_ptr[2];\n    gpio_init_struct.Speed = gpio_info_ptr[3];\n    gpio_init_struct.Alternate = gpio_info_ptr[4];\n    HAL_GPIO_Init((GPIO_TypeDef *)(((*gpio_info_ptr >> 4) + 0x100080) * 0x400),&gpio_init_struct);\n    if (-1 < (int)gpio_info_ptr[5]) {\n      HAL_GPIO_WritePin((GPIO_TypeDef *)(((*gpio_info_ptr >> 4) + 0x100080) * 0x400),(uint16_t)(1 << (*gpio_info_ptr & 0xf)),(GPIO_PinState)gpio_info_ptr[5]);\n    }\n  }\n  return;\n}",
            "called": [
                "HAL_GPIO_WritePin",
                "HAL_GPIO_Init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "initialize_gpio_pins_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "coolant_stop"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "main_loop_08001ddc",
                "serial_init": "initialize_serial_port",
                "settings_init": "initialize_settings",
                "st_init": "initialize_st",
                "PTR_sys_08001e90": "sys_flags",
                "memset": "memset",
                "PTR_settings_08001e94": "settings",
                "serial_reset_read_buffer": "reset_serial_read_buffer",
                "plan_init": "initialize_planner",
                "gc_init": "initialize_gcode",
                "protocol_init": "initialize_protocol",
                "spindle_init": "initialize_spindle",
                "coolant_init": "initialize_coolant",
                "limits_init": "initialize_limits",
                "st_reset": "initialize_st",
                "sys_sync_current_position": "sync_current_position",
                "STATUS_OK": "STATUS_OK",
                "protocol_execute_startup": "execute_startup_protocol",
                "protocol_execute_runtime": "execute_runtime_protocol",
                "protocol_process": "process_protocol"
            },
            "code": "int main_loop_08001ddc(void)\n{\n  initialize_serial_port();\n  initialize_PTR_settings_08001e94();\n  initialize_st();\n  memset(PTR_sys_08001e90,0,sizeof(PTR_sys_08001e90));\n  PTR_sys_08001e90[0] = 1;\n  PTR_sys_08001e90[1] = 1;\n  do {\n    if (PTR_sys_08001e90[0] != 0) {\n      reset_serial_read_buffer();\n      initialize_planner();\n      initialize_gcode();\n      initialize_protocol();\n      initialize_spindle();\n      initialize_coolant();\n      initialize_limits();\n      initialize_st();\n      sync_current_position();\n      PTR_sys_08001e90[0] = 0;\n      PTR_sys_08001e90[2] = 0;\n      if ((PTR_settings_08001e94[0x28] & 2) != 0) {\n        PTR_sys_08001e90[0x10] = 1;\n      }\n      if ((PTR_sys_08001e90[1] == 1) && ((PTR_settings_08001e94[0x28] & 0x10) != 0)) {\n        PTR_sys_08001e90[1] = 6;\n      }\n      if (PTR_sys_08001e90[1] == 6) {\n        report_feedback_message(STATUS_OK);\n      }\n      else {\n        PTR_sys_08001e90[1] = 0;\n        execute_startup_protocol();\n      }\n    }\n    execute_runtime_protocol();\n    process_protocol();\n  } while( true );\n}",
            "called": [
                "sys_sync_current_position",
                "st_init",
                "plan_init",
                "serial_reset_read_buffer",
                "spindle_init",
                "coolant_init",
                "gc_init",
                "protocol_init",
                "protocol_execute_runtime",
                "limits_init",
                "report_feedback_message",
                "memset",
                "st_reset",
                "protocol_process",
                "protocol_execute_startup",
                "serial_init",
                "settings_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "main_loop_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_interrupt_handler_080069b4",
                "IRQn": "irq_number",
                "DAT_080069e0": "interrupt_register_base"
            },
            "code": "void set_interrupt_handler_080069b4(IRQn_Type irq_number) {\n    uint32_t* interrupt_register = (uint32_t*)(DAT_080069e0 + ((uint32_t)irq_number >> 5) * 4);\n    uint32_t interrupt_bit = 1 << (irq_number & 0x1fU);\n    *interrupt_register = interrupt_bit;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "HAL_NVIC_EnableIRQ"
            ],
            "imported": false,
            "current_name": "set_interrupt_handler_080069b4"
        },
        "FUN_0800b4e4": {
            "renaming": {
                "FUN_0800b4e4": "register_exit_process_0800b4e4",
                "__func": "function_pointer",
                "iVar1": "return_value"
            },
            "code": "int register_exit_process_0800b4e4(__func *function_pointer) {\n  int return_value;\n  return_value = __register_exitproc(0, function_pointer, 0);\n  return return_value;\n}",
            "called": [
                "__register_exitproc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4e4",
            "calling": [
                "register_fini"
            ],
            "imported": false,
            "current_name": "register_exit_process_0800b4e4"
        },
        "FUN_08007720": {
            "renaming": {
                "FUN_08007720": "wait_forever_08007720"
            },
            "code": "void wait_forever_08007720(void)\n{\n  while(true)\n  {\n    // Do nothing\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007720",
            "calling": [],
            "imported": false,
            "current_name": "wait_forever_08007720"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "isEndOfInput_08009228",
                "in_CY": "currentChar"
            },
            "code": "bool isEndOfInput_08009228(void)\n{\n  char currentChar;\n  __aeabi_cfcmpeq();\n  return currentChar == '\\0';\n}",
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "planner_reverse_pass_kernel",
                "plan_buffer_line",
                "settings_store_global_setting",
                "gc_execute_line",
                "printFloat",
                "planner_forward_pass_kernel"
            ],
            "imported": false,
            "current_name": "isEndOfInput_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "process_interrupts_08007c7c",
                "TIMx": "timx",
                "_DAT_40000010": "GPIOA->BSRR",
                "_DAT_4000000c": "GPIOA->IDR",
                "step_delay_isr": "step_delay_isr",
                "step_pulse_isr": "step_pulse_isr",
                "step_period_isr": "step_period_isr"
            },
            "code": "void process_interrupts_08007c7c(void)\n{\n  TIM_TypeDef *timx;\n  if (((_DAT_4000000c & GPIO_PIN_1) != 0) && ((_DAT_4000000c & GPIO_PIN_0) != 0)) {\n    _DAT_40000010 = GPIO_PIN_0 << 16 | GPIO_PIN_1 << 16;\n    step_delay_isr();\n  }\n  if (((_DAT_4000000c & GPIO_PIN_2) != 0) && ((_DAT_4000000c & GPIO_PIN_0) != 0)) {\n    _DAT_40000010 = GPIO_PIN_0 << 16 | GPIO_PIN_2 << 16;\n    step_pulse_isr();\n  }\n  if (((_DAT_4000000c & GPIO_PIN_0) != 0) && ((_DAT_4000000c & GPIO_PIN_1) == 0) && ((_DAT_4000000c & GPIO_PIN_2) == 0)) {\n    _DAT_40000010 = GPIO_PIN_1 << 16 | GPIO_PIN_2 << 16;\n    step_period_isr();\n  }\n  return;\n}",
            "called": [
                "step_pulse_isr",
                "step_delay_isr",
                "step_period_isr"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "process_interrupts_08007c7c"
        },
        "FUN_08007726": {
            "renaming": {
                "FUN_08007726": "wait_forever_08007726"
            },
            "code": "void wait_forever_08007726(void)\n{\n  while(true) {\n    // Do nothing, just wait\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007726",
            "calling": [],
            "imported": false,
            "current_name": "wait_forever_08007726"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "enable_timer_08007b70",
                "TIMx": "timer",
                "_DAT_40000034": "timer->CR1",
                "_DAT_40000038": "timer->CR2",
                "_DAT_4000000c": "timer->DIER",
                "_DAT_40000000": "timer->CR1",
                "enable": "enable"
            },
            "code": "void enable_timer_08007b70(TIM_TypeDef *timer){\n  uint32_t enable = 1;\n  if (_DAT_40000034 != 0){\n    enable = 3;\n  }\n  if (_DAT_40000038 != 0){\n    enable |= 4;\n  }\n  _DAT_4000000c |= enable;\n  _DAT_40000034 |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "st_wake_up"
            ],
            "imported": false,
            "current_name": "enable_timer_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "readLineFromEEPROM_08004d2c",
                "n": "lineNumber",
                "line": "lineBuffer",
                "iVar1": "readResult",
                "addr": "address",
                "memcpy_from_eeprom_with_checksum": "memcpyFromEEPROMWithChecksum",
                "settings_store_startup_line": "storeStartupLine"
            },
            "code": "bool readLineFromEEPROM_08004d2c(uint8_t lineNumber, char *lineBuffer) {\n  int readResult;\n  uint16_t address = (uint16_t)(lineNumber * 0x101 + 0x300);\n  readResult = memcpyFromEEPROMWithChecksum(lineBuffer, address, 0x100);\n  if (readResult == 0) {\n    *lineBuffer = '\\0';\n    storeStartupLine(lineNumber, lineBuffer);\n  }\n  return readResult != 0;\n}",
            "called": [
                "settings_store_startup_line",
                "memcpy_from_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "protocol_execute_startup",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "readLineFromEEPROM_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(float x,float y,float z,float feed_rate,uint8_t invert_feed_rate)\n\n{\n  undefined *puVar1;\n  uint8_t uVar2;\n  undefined4 uVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  float fVar11;\n  undefined4 in_r1;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  undefined4 extraout_r1_03;\n  undefined4 extraout_r1_04;\n  undefined4 in_r2;\n  uint uVar12;\n  undefined4 in_r3;\n  ushort *puVar13;\n  int iVar14;\n  uint uVar15;\n  float fVar16;\n  undefined8 extraout_d0;\n  undefined8 extraout_d0_00;\n  undefined8 extraout_d0_01;\n  undefined8 extraout_d0_02;\n  undefined8 extraout_d0_03;\n  undefined8 extraout_d0_04;\n  float extraout_s2;\n  float extraout_s2_00;\n  float extraout_s2_01;\n  float extraout_s2_02;\n  float extraout_s2_03;\n  float extraout_s2_04;\n  undefined8 uVar17;\n  undefined8 uVar18;\n  undefined8 uVar19;\n  char in_stack_00000000;\n  float unit_vec [3];\n  float delta_mm [3];\n  int32_t target [3];\n  float v_allowable;\n  float sin_theta_d2;\n  float cos_theta;\n  float inverse_millimeters;\n  block_t *block;\n  float vmax_junction;\n  float inverse_minute;\n  \n  puVar13 = (ushort *)\n            (PTR_block_buffer_08003234 + (uint)(byte)*PTR_block_buffer_head_08003230 * 0x40);\n  uVar3 = __aeabi_fmul(x,*(undefined4 *)PTR_settings_08003238,invert_feed_rate);\n  __aeabi_f2d(uVar3);\n  lVar4 = lround((double)CONCAT44(in_r2,in_r3));\n  uVar3 = __aeabi_fmul(*(undefined4 *)(PTR_settings_08003238 + 4),in_r1);\n  __aeabi_f2d(uVar3);\n  lVar5 = lround((double)CONCAT44(in_r2,in_r3));\n  uVar3 = __aeabi_fmul(*(undefined4 *)(PTR_settings_08003238 + 8),in_r2);\n  __aeabi_f2d(uVar3);\n  lVar6 = lround((double)CONCAT44(in_r2,in_r3));\n  *puVar13 = 0;\n  if (lVar4 < *(int *)PTR_pl_0800323c) {\n    *puVar13 = *puVar13 | 0x20;\n  }\n  if (lVar5 < *(int *)(PTR_pl_0800323c + 4)) {\n    *puVar13 = *puVar13 | 0x880;\n  }\n  if (lVar6 < *(int *)(PTR_pl_0800323c + 8)) {\n    *puVar13 = *puVar13 | 0x200;\n  }\n  iVar14 = lVar4 - *(int *)PTR_pl_0800323c;\n  if (iVar14 < 0) {\n    iVar14 = -iVar14;\n  }\n  *(int *)(puVar13 + 2) = iVar14;\n  iVar14 = lVar5 - *(int *)(PTR_pl_0800323c + 4);\n  if (iVar14 < 0) {\n    iVar14 = -iVar14;\n  }\n  *(int *)(puVar13 + 4) = iVar14;\n  iVar14 = lVar6 - *(int *)(PTR_pl_0800323c + 8);\n  if (iVar14 < 0) {\n    iVar14 = -iVar14;\n  }\n  *(int *)(puVar13 + 6) = iVar14;\n  uVar12 = *(uint *)(puVar13 + 6);\n  if (*(uint *)(puVar13 + 6) < *(uint *)(puVar13 + 4)) {\n    uVar12 = *(uint *)(puVar13 + 4);\n  }\n  uVar15 = *(uint *)(puVar13 + 2);\n  if (*(uint *)(puVar13 + 2) < uVar12) {\n    uVar15 = uVar12;\n  }\n  *(uint *)(puVar13 + 8) = uVar15;\n  if (*(int *)(puVar13 + 8) != 0) {\n    uVar3 = __floatsisf(lVar4 - *(int *)PTR_pl_0800323c);\n    uVar3 = __aeabi_fdiv(uVar3,*(undefined4 *)PTR_settings_08003238);\n    uVar7 = __floatsisf(lVar5 - *(int *)(PTR_pl_0800323c + 4));\n    uVar7 = __aeabi_fdiv(uVar7,*(undefined4 *)(PTR_settings_08003238 + 4));\n    uVar8 = __floatsisf(lVar6 - *(int *)(PTR_pl_0800323c + 8));\n    uVar8 = __aeabi_fdiv(uVar8,*(undefined4 *)(PTR_settings_08003238 + 8));\n    uVar9 = __aeabi_fmul(uVar3,uVar3);\n    uVar10 = __aeabi_fmul(uVar7,uVar7);\n    uVar9 = __addsf3(uVar9,uVar10);\n    uVar10 = __aeabi_fmul(uVar8,uVar8);\n    uVar9 = __addsf3(uVar9,uVar10);\n    uVar9 = __aeabi_f2d(uVar9);\n    sqrt((double)CONCAT44(in_r2,in_r3));\n    uVar9 = __truncdfsf2(uVar9,extraout_r1);\n    *(undefined4 *)(puVar13 + 0x10) = uVar9;\n    uVar9 = __aeabi_fdiv(0x3f800000,*(undefined4 *)(puVar13 + 0x10));\n    if (in_stack_00000000 == '\\0') {\n      inverse_minute = (float)__aeabi_fmul(in_r3,uVar9);\n    }\n    else {\n      inverse_minute = (float)__aeabi_fdiv(0x3f800000,in_r3);\n    }\n    uVar10 = __aeabi_fmul(*(undefined4 *)(puVar13 + 0x10),inverse_minute);\n    *(undefined4 *)(puVar13 + 10) = uVar10;\n    uVar10 = __floatsisf(*(undefined4 *)(puVar13 + 8));\n    uVar10 = __aeabi_fmul(uVar10,inverse_minute);\n    uVar10 = __aeabi_f2d(uVar10);\n    ceil((double)CONCAT44(in_r2,in_r3));\n    uVar10 = __aeabi_d2uiz(uVar10,extraout_r1_00);\n    *(undefined4 *)(puVar13 + 0x1e) = uVar10;\n    uVar10 = __floatsisf(*(undefined4 *)(puVar13 + 8));\n    uVar10 = __aeabi_fmul(uVar10,uVar9);\n    uVar10 = __aeabi_fmul(uVar10,*(undefined4 *)(PTR_settings_08003560 + 0x20));\n    uVar10 = __aeabi_fdiv(uVar10,DAT_08003564);\n    uVar10 = __aeabi_f2d(uVar10);\n    ceil((double)CONCAT44(in_r2,in_r3));\n    uVar10 = __aeabi_d2iz(uVar10,extraout_r1_01);\n    *(undefined4 *)(puVar13 + 0x18) = uVar10;\n    uVar3 = __aeabi_fmul(uVar3,uVar9);\n    uVar7 = __aeabi_fmul(uVar7,uVar9);\n    uVar8 = __aeabi_fmul(uVar8,uVar9);\n    vmax_junction = 0.0;\n    uVar17 = extraout_d0;\n    fVar16 = extraout_s2;\n    if ((*PTR_block_buffer_head_08003568 != *PTR_block_buffer_tail_0800356c) &&\n       (iVar14 = __aeabi_fcmpgt(*(undefined4 *)(PTR_pl_08003570 + 0x18),0), uVar17 = extraout_d0_00,\n       fVar16 = extraout_s2_00, iVar14 != 0)) {\n      uVar9 = __aeabi_fmul(*(uint *)(PTR_pl_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = __aeabi_fmul(*(undefined4 *)(PTR_pl_08003570 + 0x10),uVar7);\n      uVar9 = __aeabi_fsub(uVar9,uVar10);\n      uVar10 = __aeabi_fmul(*(undefined4 *)(PTR_pl_08003570 + 0x14),uVar8);\n      uVar9 = __aeabi_fsub(uVar9,uVar10);\n      uVar17 = __aeabi_f2d(uVar9);\n      iVar14 = __aeabi_dcmplt((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),DAT_08003550,DAT_08003554\n                             );\n      uVar17 = extraout_d0_01;\n      fVar16 = extraout_s2_01;\n      if (iVar14 != 0) {\n        iVar14 = __aeabi_fcmplt(*(undefined4 *)(PTR_pl_08003570 + 0x18),\n                                *(undefined4 *)(puVar13 + 10));\n        if (iVar14 == 0) {\n          vmax_junction = *(float *)(puVar13 + 10);\n        }\n        else {\n          vmax_junction = *(float *)(PTR_pl_08003570 + 0x18);\n        }\n        uVar17 = __aeabi_f2d(uVar9);\n        iVar14 = __aeabi_dcmpgt((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),DAT_08003558,\n                                DAT_0800355c);\n        uVar17 = extraout_d0_02;\n        fVar16 = extraout_s2_02;\n        if (iVar14 != 0) {\n          uVar17 = __aeabi_f2d(uVar9);\n          uVar17 = __subdf3(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar9 = __muldf3((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),0,DAT_08003578);\n          sqrt((double)CONCAT44(in_r2,in_r3));\n          uVar9 = __truncdfsf2(uVar9,extraout_r1_02);\n          uVar17 = __aeabi_f2d(vmax_junction);\n          uVar10 = __aeabi_fmul(*(undefined4 *)(PTR_settings_08003560 + 0x20),\n                                *(undefined4 *)(PTR_settings_08003560 + 0x24));\n          uVar10 = __aeabi_fmul(uVar10,uVar9);\n          uVar18 = __aeabi_f2d(uVar10);\n          uVar19 = __aeabi_f2d(uVar9);\n          uVar19 = __subdf3(0,DAT_08003574,(int)uVar19,(int)((ulonglong)uVar19 >> 0x20));\n          uVar10 = __divdf3((int)uVar18,(int)((ulonglong)uVar18 >> 0x20),(int)uVar19,\n                            (int)((ulonglong)uVar19 >> 0x20));\n          sqrt((double)CONCAT44(in_r2,in_r3));\n          iVar14 = __aeabi_dcmplt((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar10,extraout_r1_03\n                                 );\n          uVar17 = extraout_d0_03;\n          fVar16 = extraout_s2_03;\n          if (iVar14 == 0) {\n            uVar10 = __aeabi_fmul(*(undefined4 *)(PTR_settings_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_settings_08003560 + 0x24));\n            uVar10 = __aeabi_fmul(uVar10,uVar9);\n            uVar17 = __aeabi_f2d(uVar10);\n            uVar18 = __aeabi_f2d(uVar9);\n            uVar18 = __subdf3(0,DAT_08003574,(int)uVar18,(int)((ulonglong)uVar18 >> 0x20));\n            uVar9 = __divdf3((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar18,\n                             (int)((ulonglong)uVar18 >> 0x20));\n            sqrt((double)CONCAT44(in_r2,in_r3));\n            vmax_junction = (float)__truncdfsf2(uVar9,extraout_r1_04);\n            uVar17 = extraout_d0_04;\n            fVar16 = extraout_s2_04;\n          }\n        }\n      }\n    }\n    *(float *)(puVar13 + 0xe) = vmax_junction;\n    fVar11 = (float)(*(uint *)(PTR_settings_08003560 + 0x20) ^ 0x80000000);\n    max_allowable_speed((float)uVar17,(float)((ulonglong)uVar17 >> 0x20),fVar16);\n    iVar14 = __aeabi_fcmplt(vmax_junction,fVar11);\n    fVar16 = fVar11;\n    if (iVar14 != 0) {\n      fVar16 = vmax_junction;\n    }\n    *(float *)(puVar13 + 0xc) = fVar16;\n    iVar14 = __aeabi_fcmpge(fVar11,*(undefined4 *)(puVar13 + 10));\n    if (iVar14 == 0) {\n      *(undefined *)((int)puVar13 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar13 + 0x25) = 1;\n    }\n    *(undefined *)(puVar13 + 0x12) = 1;\n    puVar1 = PTR_pl_080035e0;\n    *(undefined4 *)(PTR_pl_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_pl_080035e0 + 0x18) = *(undefined4 *)(puVar13 + 10);\n    *PTR_block_buffer_head_080035e8 = *PTR_next_buffer_head_080035e4;\n    uVar2 = next_block_index(*PTR_block_buffer_head_080035e8);\n    *PTR_next_buffer_head_080035e4 = uVar2;\n    puVar1 = PTR_pl_080035e0;\n    *(long *)PTR_pl_080035e0 = lVar4;\n    *(long *)(puVar1 + 4) = lVar5;\n    *(long *)(puVar1 + 8) = lVar6;\n    planner_recalculate();\n  }\n  return;\n}\n\n",
            "called": [
                "__subdf3",
                "__truncdfsf2",
                "ceil",
                "max_allowable_speed",
                "__aeabi_f2d",
                "__addsf3",
                "__aeabi_fdiv",
                "__muldf3",
                "__floatsisf",
                "__aeabi_dcmpgt",
                "__aeabi_fcmpgt",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "__aeabi_fcmpge",
                "sqrt",
                "__aeabi_d2iz",
                "__aeabi_fcmplt",
                "__aeabi_fsub",
                "planner_recalculate",
                "lround",
                "__divdf3",
                "__aeabi_dcmplt",
                "next_block_index"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "mc_line"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "calculate_HCLK_frequency_divider_080066cc",
                "uVar1": "HCLK_frequency",
                "uVar2": "leading_zeroes",
                "result": "APB_to_AHB_prescaler_value",
                "result_1": "unused",
                "PTR_APBAHBPrescTable_08006714": "APB_to_AHB_prescaler_table",
                "DAT_08006710": "APB_to_AHB_prescaler_register"
            },
            "code": "uint32_t calculate_HCLK_frequency_divider_080066cc(void)\n{\n  uint32_t HCLK_frequency = HAL_RCC_GetHCLKFreq();\n  uint leading_zeroes = count_leading_zeroes(0x70000);\n  uint32_t APB_to_AHB_prescaler_index = (*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leading_zeroes & 0xff);\n  uint32_t APB_to_AHB_prescaler_value = PTR_APBAHBPrescTable_08006714[APB_to_AHB_prescaler_index];\n  return HCLK_frequency >> APB_to_AHB_prescaler_value;\n}",
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "set_baud_rate"
            ],
            "imported": false,
            "current_name": "calculate_HCLK_frequency_divider_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_value_in_memory_080018fc",
                "x": "new_value",
                "val": "current_value",
                "*(uint32_t *)(DAT_08001928 + 0x14)": "updated_value",
                "*(uint *)(DAT_08001928 + 0x14)": "masked_value"
            },
            "code": "void update_value_in_memory_080018fc(uint32_t new_value)\n{\n  uint32_t current_value = *(uint32_t *)(DAT_08001928 + 0x14);\n  uint32_t *(uint *)(DAT_08001928 + 0x14) = current_value & 0xfffff55f;\n  uint32_t *(uint32_t *)(DAT_08001928 + 0x14) = new_value | *(uint *)(DAT_08001928 + 0x14);\n  *(uint32_t *)(DAT_08001928 + 0x14) = *(uint32_t *)(DAT_08001928 + 0x14);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "update_value_in_memory_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "read_and_execute_startup_lines_080039bc",
                "uVar1": "read_status",
                "n": "line_number",
                "PTR_line_08003a14": "PTR_startup_line"
            },
            "code": "void read_and_execute_startup_lines_080039bc(void)\n{\n  uint8_t line_number;\n  for (line_number = 0; line_number < 2; line_number++) {\n    uint8_t read_status = settings_read_startup_line(line_number, PTR_line_08003a14);\n    if (read_status == 0) {\n      report_status_message('\\n');\n    }\n    else if (*PTR_line_08003a14 != 0) {\n      printString(PTR_line_08003a14);\n      uint8_t execute_status = gc_execute_line(PTR_line_08003a14);\n      report_status_message(execute_status);\n    }\n  }\n  return;\n}",
            "called": [
                "report_status_message",
                "printString",
                "gc_execute_line",
                "settings_read_startup_line"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "grbl_main",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "read_and_execute_startup_lines_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "configureClocks_0800618c",
                "RCC_ClkInitStruct": "clockInit",
                "FLatency": "flashLatency",
                "DAT_08006400": "FLASH_ACR",
                "RCC_CR": "RCC_CR",
                "SYSCLKSource": "SYSCLKSource",
                "RCC_CLOCKTYPE_SYSCLK": "RCC_CLOCKTYPE_SYSCLK",
                "RCC_SYSCLKSOURCE_PLLCLK": "RCC_SYSCLKSOURCE_PLLCLK",
                "RCC_CR_PLLRDY": "RCC_CR_PLLRDY",
                "RCC_SYSCLKSOURCE_HSE": "RCC_SYSCLKSOURCE_HSE",
                "RCC_CR_HSIRDY": "RCC_CR_HSIRDY",
                "RCC_CFGR": "RCC_CFGR",
                "RCC_CFGR_SW": "RCC_CFGR_SW",
                "RCC_CFGR_SWS": "RCC_CFGR_SWS",
                "RCC_CFGR_SWS_Pos": "RCC_CFGR_SWS_Pos",
                "RCC_CLOCKTYPE_HCLK": "RCC_CLOCKTYPE_HCLK",
                "RCC_CFGR_HPRE": "RCC_CFGR_HPRE",
                "RCC_CLOCKTYPE_PCLK1": "RCC_CLOCKTYPE_PCLK1",
                "RCC_CFGR_PPRE1": "RCC_CFGR_PPRE1",
                "RCC_CFGR_PPRE1_Pos": "RCC_CFGR_PPRE1_Pos",
                "RCC_CLOCKTYPE_PCLK2": "RCC_CLOCKTYPE_PCLK2",
                "RCC_CFGR_PPRE2": "RCC_CFGR_PPRE2",
                "RCC_CFGR_PPRE2_Pos": "RCC_CFGR_PPRE2_Pos",
                "HAL_RCC_GetHCLKFreq": "HAL_RCC_GetHCLKFreq",
                "SystemCoreClock": "SystemCoreClock",
                "SYSCLKDivider": "SYSCLKDivider"
            },
            "code": "HAL_StatusTypeDef configureClocks_0800618c(RCC_ClkInitTypeDef *clockInit, uint32_t flashLatency)\n{\n  uint32_t timeout;\n  uint32_t currentLatency = *DAT_08006400 & 0xf;\n  if (currentLatency < flashLatency) {\n    *DAT_08006400 = (*DAT_08006400 & 0xfffffff0) | flashLatency;\n    if (flashLatency != (*DAT_08006400 & 0xf)) {\n      return HAL_ERROR;\n    }\n    if ((clockInit->ClockType & RCC_CLOCKTYPE_SYSCLK) != 0) {\n      if (clockInit->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK) {\n        if ((*RCC_CR & RCC_CR_PLLRDY) == 0) {\n          return HAL_ERROR;\n        }\n      }\n      else if ((clockInit->SYSCLKSource != RCC_SYSCLKSOURCE_HSE) && ((*RCC_CR & RCC_CR_HSIRDY) == 0)) {\n        return HAL_ERROR;\n      }\n      *RCC_CFGR &= ~(RCC_CFGR_SW);\n      *RCC_CFGR |= clockInit->SYSCLKSource;\n      timeout = HAL_GetTick() + 5000;\n      while (((*RCC_CFGR & RCC_CFGR_SWS) >> RCC_CFGR_SWS_Pos) != clockInit->SYSCLKSource) {\n        if (HAL_GetTick() > timeout) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\n  if ((clockInit->ClockType & RCC_CLOCKTYPE_HCLK) != 0) {\n    *RCC_CFGR &= ~(RCC_CFGR_HPRE);\n    *RCC_CFGR |= clockInit->AHBCLKDivider;\n  }\n  if ((clockInit->ClockType & RCC_CLOCKTYPE_PCLK1) != 0) {\n    *RCC_CFGR &= ~(RCC_CFGR_PPRE1);\n    *RCC_CFGR |= clockInit->APB1CLKDivider << RCC_CFGR_PPRE1_Pos;\n  }\n  if ((clockInit->ClockType & RCC_CLOCKTYPE_PCLK2) != 0) {\n    *RCC_CFGR &= ~(RCC_CFGR_PPRE2);\n    *RCC_CFGR |= clockInit->APB2CLKDivider << RCC_CFGR_PPRE2_Pos;\n  }\n  uint32_t hclkFreq = HAL_RCC_GetHCLKFreq();\n  SysTick_Config((uint)((uint64_t)SystemCoreClock * (uint64_t)clockInit->SYSCLKDivider / 1000000));\n  return HAL_OK;\n}",
            "called": [
                "HAL_RCC_GetHCLKFreq",
                "SysTick_Config",
                "HAL_GetTick"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "SystemClock_Config"
            ],
            "imported": false,
            "current_name": "configureClocks_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_bits_from_data_08006998",
                "DAT_080069b0": "data_start_address"
            },
            "code": "uint32_t get_bits_from_data_08006998(void)\n{\n  uint32_t data_ptr = *(uint *)(DAT_080069b0 + 0xc);\n  uint32_t shifted_data = data_ptr >> 8;\n  uint32_t masked_data = shifted_data & 7;\n  return masked_data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "HAL_NVIC_SetPriority",
                "HAL_NVIC_GetPriorityGrouping"
            ],
            "imported": false,
            "current_name": "get_bits_from_data_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "init_and_read_settings_080004ac",
                "PTR_gc_080004f0": "gc_buffer",
                "PTR_settings_080004f4": "settings_buffer",
                "DAT_080004f8": "settings_data",
                "uVar1": "coord_data_status"
            },
            "code": "void init_and_read_settings_080004ac(void)\n{\n  uint8_t coord_data_status;\n  memset(PTR_gc_080004f0, 0, GC_BUFFER_SIZE);\n  *(undefined4 *)(PTR_gc_080004f0 + GC_BUFFER_SETTING_OFFSET) = *(undefined4 *)(PTR_settings_080004f4 + SETTINGS_BUFFER_OFFSET);\n  select_plane(PLANE_XY, PLANE_YZ, PLANE_ZX);\n  PTR_gc_080004f0[GC_BUFFER_FLAG_OFFSET] = 1;\n  coord_data_status = settings_read_coord_data(PTR_gc_080004f0[GC_BUFFER_COORD_OFFSET], DAT_080004f8);\n  if (coord_data_status == COORD_DATA_READ_SUCCESS) {\n    report_status_message('\n');\n  }\n  return;\n}",
            "called": [
                "report_status_message",
                "select_plane",
                "memset",
                "settings_read_coord_data"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "grbl_main"
            ],
            "imported": false,
            "current_name": "init_and_read_settings_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_debounce_state_080078f4",
                "i": "index",
                "state": "state",
                "PTR_debounce_0800792c": "PTR_debounce_0800792c"
            },
            "code": "uint32_t calculate_debounce_state_080078f4(void)\n{\n  int index;\n  uint32_t state = 0;\n  for (index = 0; index < 4; index++) {\n    state |= *(uint *)(PTR_debounce_0800792c + index * 4);\n  }\n  return state;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "debounce_isr",
                "homing_cycle"
            ],
            "imported": false,
            "current_name": "calculate_debounce_state_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "displayMessage_080041a0",
                "message_code": "messageCode",
                "PTR_DAT_0800420c": "messageHeader",
                "PTR_s_Reset_to_continue_08004210": "resetMessage",
                "PTR_s___H____X__to_unlock_08004214": "unlockMessage",
                "PTR_s_Caution__Unlocked_08004218": "cautionMessage",
                "PTR_s_Enabled_0800421c": "enabledMessage",
                "PTR_s_Disabled_08004220": "disabledMessage",
                "PTR_DAT_08004224": "messageFooter"
            },
            "code": "void displayMessage_080041a0(uint8_t messageCode)\n{\n  printPgmString(PTR_DAT_0800420c);\n  switch(messageCode) {\n    case RESET:\n      printPgmString(PTR_s_Reset_to_continue_08004210);\n      break;\n    case UNLOCK:\n      printPgmString(PTR_s___H____X__to_unlock_08004214);\n      break;\n    case CAUTION:\n      printPgmString(PTR_s_Caution__Unlocked_08004218);\n      break;\n    case ENABLED:\n      printPgmString(PTR_s_Enabled_0800421c);\n      break;\n    case DISABLED:\n      printPgmString(PTR_s_Disabled_08004220);\n      break;\n  }\n  printPgmString(PTR_DAT_08004224);\n  return;\n}",
            "called": [
                "printPgmString"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "grbl_main",
                "protocol_execute_runtime",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "displayMessage_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "value",
                "param_2": "shift_amount",
                "iVar1": "shifted_value_times_2",
                "uVar2": "shift"
            },
            "code": "uint calculate_shifted_value_08008bf0(uint value, uint shift_amount)\n{\n  int shifted_value_times_2 = shift_amount * 2 + 0x200000;\n  if ((shift_amount & 0x80000000) != 0 || (shift_amount * 2 < 0xffe00000 && shifted_value_times_2 >= 0)) {\n    return 0;\n  }\n  uint shift = -(shifted_value_times_2 >> 0x15) - 0x3e1;\n  if ((int)shift >= 0) {\n    return (value << 0xb | 0x80000000 | (shift_amount >> 0x15)) >> (shift & 0xff);\n  }\n  else if ((value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "plan_buffer_line",
                "mc_dwell",
                "settings_store_global_setting",
                "homing_cycle",
                "mc_arc",
                "gc_execute_line",
                "protocol_execute_line",
                "calculate_trapezoid_for_block"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_0800771a": {
            "renaming": {
                "FUN_0800771a": "wait_forever_0800771a"
            },
            "code": "void wait_forever_0800771a(void)\n{\n  while(true) {\n    // Do nothing and wait forever\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800771a",
            "calling": [],
            "imported": false,
            "current_name": "wait_forever_0800771a"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "handle_button_press_08003a18",
                "buttons": "button_state",
                "PTR_sys_08003a70": "sys_ptr"
            },
            "code": "void handle_button_press_08003a18(uint32_t buttons)\n{\n  bool button_a_pressed = (buttons & 0x80) == 0;\n  bool button_b_pressed = (buttons & 0x40) == 0;\n  bool button_c_pressed = (buttons & 0x20) != 0;\n  if (button_a_pressed) {\n    mc_reset();\n  } else {\n    if (button_b_pressed) {\n      PTR_sys_08003a70[2] |= 8;\n    } else if (button_c_pressed) {\n      PTR_sys_08003a70[2] |= 2;\n    }\n  }\n  return;\n}",
            "called": [
                "mc_reset"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "debounce_on_handler"
            ],
            "imported": false,
            "current_name": "handle_button_press_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "enable_stepper_motor_08005790",
                "PTR_sys_080057d4": "sys_settings",
                "PTR_step_bits_080057dc": "step_bits",
                "PTR_dirn_bits_080057e0": "dirn_bits",
                "PTR_settings_080057d8": "settings",
                "set_step_pulse_delay": "set_step_pulse_delay",
                "set_step_pulse_time": "set_step_pulse_time",
                "step_isr_enable": "enable_step_isr"
            },
            "code": "void enable_stepper_motor_08005790(void)\n{\n  stepper_motor_enable();\n  if (PTR_sys_080057d4[1] == 0x03) {\n    *(uint16_t *)PTR_step_bits_080057dc = *(uint16_t *)(PTR_settings_080057d8 + 0x18);\n    *(uint16_t *)PTR_dirn_bits_080057e0 = *(uint16_t *)(PTR_settings_080057d8 + 0x1a);\n    set_step_pulse_delay(0x69);\n    set_step_pulse_time(((byte)PTR_settings_080057d8[0xd] + 5) * 0x15);\n    enable_step_isr();\n  }\n  return;\n}",
            "called": [
                "stepper_motor_enable",
                "step_isr_enable",
                "set_step_pulse_time",
                "set_step_pulse_delay"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "st_init",
                "limits_go_home",
                "st_cycle_start"
            ],
            "imported": false,
            "current_name": "enable_stepper_motor_08005790"
        },
        "FUN_08007732": {
            "renaming": {
                "FUN_08007732": "do_nothing_08007732"
            },
            "code": "\nvoid do_nothing_08007732(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007732",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08007732"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(uint8_t cycle_mask,int8_t pos_dir,_Bool invert_pin,float homing_rate)\n\n{\n  ushort uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint32_t uVar6;\n  undefined4 in_r3;\n  uint32_t uVar7;\n  undefined8 uVar8;\n  undefined in_stack_ffffff9c;\n  char cVar9;\n  uint32_t steps [3];\n  uint16_t step_bits0;\n  uint32_t dt_min;\n  uint32_t delta_rate;\n  float ds;\n  uint32_t step_event_count;\n  uint32_t limit_state;\n  uint16_t step_bits;\n  uint32_t trap_counter;\n  uint32_t step_rate;\n  uint32_t step_delay;\n  int32_t counter_z;\n  int32_t counter_y;\n  int32_t counter_x;\n  uint16_t dirn_bits;\n  uint32_t dt;\n  uint8_t dist;\n  \n  cVar9 = !invert_pin;\n  memset(steps,0,0xc);\n  dist = (cycle_mask & 1) != 0;\n  if ((bool)dist) {\n    __aeabi_f2d(*(undefined4 *)PTR_settings_08001c90);\n    steps[0] = lround((double)CONCAT17(cycle_mask,\n                                       CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,\n                                                                                in_r3)))));\n  }\n  if ((cycle_mask & 2) != 0) {\n    dist = dist + '\\x01';\n    __aeabi_f2d(*(undefined4 *)(PTR_settings_08001c90 + 4));\n    steps[1] = lround((double)CONCAT17(cycle_mask,\n                                       CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,\n                                                                                in_r3)))));\n  }\n  if ((cycle_mask & 4) != 0) {\n    dist = dist + '\\x01';\n    __aeabi_f2d(*(undefined4 *)(PTR_settings_08001c90 + 8));\n    steps[2] = lround((double)CONCAT17(cycle_mask,\n                                       CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,\n                                                                                in_r3)))));\n  }\n  uVar6 = steps[2];\n  if (steps[2] < steps[1]) {\n    uVar6 = steps[1];\n  }\n  uVar7 = steps[0];\n  if (steps[0] < uVar6) {\n    uVar7 = uVar6;\n  }\n  uVar8 = __floatunsidf(uVar7);\n  uVar2 = __floatunsidf(dist);\n  sqrt((double)CONCAT17(cycle_mask,\n                        CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,in_r3)))));\n  uVar8 = __divdf3((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),uVar2,extraout_r1);\n  uVar2 = __truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n  uVar3 = __aeabi_fmul(*(undefined4 *)(PTR_settings_08001c90 + 0x20),uVar2);\n  uVar3 = __aeabi_fdiv(uVar3,DAT_08001c94);\n  uVar3 = __aeabi_f2d(uVar3);\n  ceil((double)CONCAT17(cycle_mask,\n                        CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,in_r3)))));\n  iVar4 = __aeabi_d2uiz(uVar3,extraout_r1_00);\n  uVar3 = __floatunsidf(dist);\n  sqrt((double)CONCAT17(cycle_mask,\n                        CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,in_r3)))));\n  uVar8 = __aeabi_f2d(in_r3);\n  uVar8 = __muldf3(uVar3,extraout_r1_01,(int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n  uVar3 = __truncdfsf2((int)uVar8,(int)((ulonglong)uVar8 >> 0x20));\n  uVar2 = __aeabi_fmul(uVar2,uVar3);\n  uVar2 = __aeabi_fdiv(DAT_08001c98,uVar2);\n  __aeabi_f2d(uVar2);\n  uVar5 = lround((double)CONCAT17(cycle_mask,\n                                  CONCAT16(pos_dir,CONCAT15(cVar9,CONCAT14(in_stack_ffffff9c,uVar3))\n                                          )));\n  dt = DAT_08001c9c;\n  if (uVar5 < DAT_08001c9c) {\n    dt = uVar5;\n  }\n  uVar1 = *(ushort *)(PTR_settings_08001c90 + 0x18);\n  dirn_bits = *(ushort *)(PTR_settings_08001c90 + 0x1a) ^\n              *(ushort *)(PTR_settings_08001c90 + 0x2a) & 0xaa0;\n  if (pos_dir == '\\0') {\n    dirn_bits = dirn_bits ^ 0xaa0;\n  }\n  dirn_wr((uint)dirn_bits);\n  step_wr((uint)uVar1);\n  counter_z = -(uVar7 >> 1);\n  step_delay = dt - (byte)PTR_settings_08001c90[0xd];\n  step_rate = 0;\n  trap_counter = 10000;\n  counter_y = counter_z;\n  counter_x = counter_z;\n  while( true ) {\n    limit_state = debounce_rd();\n    if (cVar9 != '\\0') {\n      limit_state = limit_state ^ 0x1e;\n    }\n    step_bits = uVar1;\n    if (((cycle_mask & 1) != 0) && (counter_x = counter_x + steps[0], 0 < counter_x)) {\n      if ((limit_state & 0x10) == 0) {\n        cycle_mask = cycle_mask & 0xfe;\n      }\n      else {\n        step_bits = uVar1 ^ 0x10;\n      }\n      counter_x = counter_x - uVar7;\n    }\n    if (((cycle_mask & 2) != 0) && (counter_y = counter_y + steps[1], 0 < counter_y)) {\n      if ((limit_state & 8) == 0) {\n        cycle_mask = cycle_mask & 0xfd;\n      }\n      else {\n        step_bits = step_bits ^ 0x440;\n      }\n      counter_y = counter_y - uVar7;\n    }\n    if (((cycle_mask & 4) != 0) && (counter_z = counter_z + steps[2], 0 < counter_z)) {\n      if ((limit_state & 4) == 0) {\n        cycle_mask = cycle_mask & 0xfb;\n      }\n      else {\n        step_bits = step_bits ^ 0x100;\n      }\n      counter_z = counter_z - uVar7;\n    }\n    if ((cycle_mask == 0) || ((PTR_sys_08001d40[2] & 0x10) != 0)) break;\n    step_wr((uint)step_bits);\n    delay_us((uint)(byte)PTR_settings_08001d44[0xd]);\n    step_wr((uint)uVar1);\n    delay_us(step_delay);\n    if ((uVar5 < dt) && (trap_counter = dt + trap_counter, 20000 < trap_counter)) {\n      trap_counter = trap_counter - 20000;\n      step_rate = iVar4 + step_rate;\n      dt = DAT_08001d48 / step_rate;\n      if (DAT_08001d48 / step_rate < uVar5) {\n        dt = uVar5;\n      }\n      step_delay = dt - (byte)PTR_settings_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "step_wr",
                "__floatunsidf",
                "delay_us",
                "__truncdfsf2",
                "ceil",
                "dirn_wr",
                "__aeabi_f2d",
                "__aeabi_fdiv",
                "__muldf3",
                "__aeabi_d2uiz",
                "__aeabi_fmul",
                "sqrt",
                "memset",
                "lround",
                "__divdf3",
                "debounce_rd"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "limits_go_home"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_at_position_08007854",
                "n": "position",
                "*PTR_": "ptr",
                "DAT_": "data",
                "offset": "offset",
                "address": "address",
                "bit_position": "bit_position",
                "value": "value",
                "bit_value": "bit_value"
            },
            "code": "int get_bit_at_position_08007854(uint32_t position) {\n  uint32_t offset = position >> 4;\n  uint32_t address = offset * 0x400 + 0x40020010;\n  uint32_t bit_position = position & 0xfU;\n  uint32_t* *PTR_ = (uint32_t*)address;\n  uint32_t value = **PTR_;\n  uint32_t bit_value = value >> bit_position & 1;\n  return bit_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "debounce_input"
            ],
            "imported": false,
            "current_name": "get_bit_at_position_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "printLineWithNumberAndText_08004900",
                "n": "number",
                "line": "text",
                "PTR_DAT_08004934": "infoPrefix",
                "PTR_DAT_08004938": "numberSuffix",
                "PTR_DAT_0800493c": "endOfLine"
            },
            "code": "void printLineWithNumberAndText_08004900(uint8_t number, char *text)\n{\n  printPgmString(PTR_DAT_08004934);\n  printInteger((uint)number);\n  printPgmString(PTR_DAT_08004938);\n  printString(text);\n  printPgmString(PTR_DAT_0800493c);\n  return;\n}",
            "called": [
                "printPgmString",
                "printString",
                "printInteger"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "printLineWithNumberAndText_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "st_wake_up"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "printHelpMessage_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "helpMessage"
            },
            "code": "void printHelpMessage_08004228(void)\n{\n  printPgmString(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "printPgmString"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "protocol_init"
            ],
            "imported": false,
            "current_name": "printHelpMessage_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "calculate_distance_08009b24",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "unused",
                "iVar2": "is_y_diff_less_than_x_diff",
                "uVar3": "abs_y_diff",
                "iVar4": "is_x_diff_greater_than_threshold",
                "uVar5": "unused",
                "iVar6": "x2_int",
                "uVar7": "abs_x_diff",
                "uVar8": "x1_low",
                "uVar9": "x1_high",
                "uVar10": "y1_low",
                "uVar11": "y1_high",
                "uVar12": "y2_low",
                "uVar13": "y2_high",
                "local_3c": "shift"
            },
            "code": "uint calculate_distance_08009b24(uint x1, uint y1, uint x2, uint y2)\n{\n  uint abs_y_diff = abs(y1 - y2);\n  uint abs_x_diff = abs(x1 - x2);\n  if (abs_y_diff > abs_x_diff) {\n    uint temp = x1;\n    x1 = x2;\n    x2 = temp;\n    temp = y1;\n    y1 = y2;\n    y2 = temp;\n    abs_y_diff = abs(y1 - y2);\n    abs_x_diff = abs(x1 - x2);\n  }\n  if (abs_x_diff > 0x3c00000) {\n    return sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2));\n  }\n  if (abs_y_diff > 0xda800000) {\n    if (abs_y_diff > 0x25800000) {\n      if ((abs_y_diff & 0xfffff | x1 | x2) != 0) {\n        return sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2));\n      }\n      if ((y2 ^ 0x7ff00000 | y1 | x1) != 0) {\n        return sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2));\n      }\n      return x1;\n    }\n    y2 += 0xda800000;\n    x2 += 0xda800000;\n  }\n  int shift = 0;\n  if (abs_x_diff < 0x100000) {\n    shift = -0x3fe;\n    abs_y_diff *= 0x100000;\n    abs_x_diff *= 0x100000;\n  }\n  uint64_t x1_64 = x1;\n  uint64_t y1_64 = y1;\n  uint64_t x2_64 = x2;\n  uint64_t y2_64 = y2;\n  uint64_t x_diff = x2_64 - x1_64;\n  uint64_t y_diff = y2_64 - y1_64;\n  uint64_t squared_distance = x_diff * x_diff + y_diff * y_diff;\n  uint64_t shifted_distance = squared_distance << shift;\n  uint64_t distance = sqrt(shifted_distance);\n  if (shift != 0) {\n    distance /= 0x100000;\n  }\n  return distance;\n}",
            "called": [
                "__muldf3",
                "__subdf3",
                "__ieee754_sqrt",
                "__aeabi_dadd",
                "__aeabi_dcmplt"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009b24",
            "calling": [
                "hypot"
            ],
            "imported": false,
            "current_name": "calculate_distance_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "toggle_bit_at_position_080076c8",
                "n": "position",
                "PTR_": "ptr",
                "DAT_": "mask"
            },
            "code": "void toggle_bit_at_position_080076c8(int position) {\n    uint* PTR_ = (uint*)((position >> 4) * 0x400 + 0x40020014);\n    uint DAT_ = 1 << (position & 0xfU);\n    *PTR_ ^= DAT_;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "SysTick_Handler"
            ],
            "imported": false,
            "current_name": "toggle_bit_at_position_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "st_go_idle"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_interrupt_enable_bit_08006a8c",
                "IRQn": "interrupt_number",
                "DAT_08006abc": "interrupt_enable_register_base_address"
            },
            "code": "void set_interrupt_enable_bit_08006a8c(IRQn_Type interrupt_number)\n{\n  int* interrupt_enable_register = (int*)(DAT_08006abc + (((uint)(int)interrupt_number >> 5) + 0x60) * 4);\n  int interrupt_enable_bit = 1 << (interrupt_number & 0x1fU);\n  *interrupt_enable_register = interrupt_enable_bit;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "HAL_NVIC_ClearPendingIRQ"
            ],
            "imported": false,
            "current_name": "set_interrupt_enable_bit_08006a8c"
        },
        "FUN_0800772c": {
            "renaming": {
                "FUN_0800772c": "wait_forever_0800772c"
            },
            "code": "void wait_forever_0800772c(void)\n{\n  while(true)\n  {\n    // do nothing\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800772c",
            "calling": [],
            "imported": false,
            "current_name": "wait_forever_0800772c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "set_current_position_0800283a",
                "PTR_sys_08002868": "PTR_sys_position_data"
            },
            "code": "void set_current_position_0800283a(int32_t x, int32_t y, int32_t z)\n{\n  plan_set_current_position_0800283a(x, y, z);\n  gc_set_current_position_0800283a(x, y, z);\n  return;\n}",
            "called": [
                "gc_set_current_position",
                "plan_set_current_position"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "grbl_main",
                "mc_go_home"
            ],
            "imported": false,
            "current_name": "set_current_position_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "mask",
                "unaff_r4": "temp_4",
                "uVar2": "mask",
                "uVar3": "temp_3",
                "in_r12": "mask",
                "bVar4": "is_zero"
            },
            "code": "ulonglong calculate_result_0800881c(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint mask;\n  bool is_zero;\n  bool is_equal;\n  bool is_unaff_r4_equal_in_r12;\n  bool is_uVar2_equal_in_r12;\n  \n  temp_2 = input_2;\n  temp_1 = input_1;\n  is_unaff_r4_equal_in_r12 = (input_4 >> 0x14) == input_4;\n  is_uVar2_equal_in_r12 = (input_4 >> 0x14) == input_4;\n  if (input_4 != input_3 && !is_unaff_r4_equal_in_r12)\n  {\n    is_zero = (input_1 | (input_2 << 1)) == 0;\n    if (!is_zero)\n    {\n      is_zero = (input_3 | (input_4 << 1)) == 0;\n    }\n    if (is_zero)\n    {\n      mask = (temp_2 ^ input_4) & 0x80000000;\n      return (ulonglong)mask << 0x20;\n    }\n    if (input_4 == 0)\n    {\n      temp_3 = temp_2 & 0x80000000;\n      do\n      {\n        mask = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        temp_2 = temp_2 * 2 + (uint)(mask != 0);\n      } while ((temp_2 & 0x100000) == 0);\n      temp_2 = temp_2 | temp_3;\n      if (is_uVar2_equal_in_r12)\n      {\n        return CONCAT44(temp_2, input_1);\n      }\n    }\n    do\n    {\n      mask = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(mask != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(temp_2, input_1);\n  }\n  is_zero = (input_1 | (input_2 << 1)) == 0;\n  if (is_zero)\n  {\n    temp_2 = input_4;\n    temp_1 = input_3;\n  }\n  if (!is_zero)\n  {\n    is_zero = (input_3 | (input_4 << 1)) == 0;\n  }\n  temp_3 = temp_2;\n  if (((!is_zero) && ((input_4 != input_3 || ((input_1 | (input_2 << 0xc)) == 0)))) && ((is_uVar2_equal_in_r12 || (temp_3 = input_4, temp_4 = input_3, (input_3 | (input_4 << 0xc)) == 0))))\n  {\n    mask = (temp_2 ^ input_4) & 0x80000000 | 0x7ff00000;\n    return (ulonglong)mask << 0x20;\n  }\n  return CONCAT44(temp_3, temp_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "__muldf3"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "save_line_to_eeprom_08004bc0",
                "n": "index",
                "line": "line",
                "addr": "address",
                "memcpy_to_eeprom_with_checksum": "memcpy_to_eeprom_with_checksum"
            },
            "code": "void save_line_to_eeprom_08004bc0(uint8_t index, char *line) {\n  uint16_t address = (uint16_t)((uint16_t)index * 0x101 + 0x300);\n  memcpy_to_eeprom_with_checksum(address, line, 0x100);\n  return;\n}",
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "settings_read_startup_line",
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "save_line_to_eeprom_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "is_CY_zero_or_ZR_08008b4c",
                "in_CY": "is_CY_zero",
                "in_ZR": "is_ZR_zero"
            },
            "code": "bool is_CY_zero_or_ZR_08008b4c(void)\n{\n    bool is_CY_zero = __aeabi_cdrcmple();\n    return is_CY_zero || !is_ZR_zero();\n}\n",
            "called": [
                "__aeabi_cdrcmple"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "__kernel_rem_pio2"
            ],
            "imported": false,
            "current_name": "is_CY_zero_or_ZR_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initialize_settings_08004c2a",
                "PTR_settings_08004c44": "settings_data"
            },
            "code": "void initialize_settings_08004c2a(void)\n{\n  eeprom_put_char(0,5);\n  memcpy_to_eeprom_with_checksum(1, PTR_settings_08004c44, 64);\n  return;\n}",
            "called": [
                "eeprom_put_char",
                "memcpy_to_eeprom_with_checksum"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "settings_store_global_setting",
                "settings_reset"
            ],
            "imported": false,
            "current_name": "initialize_settings_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "print_char_to_usart_0800826a",
                "ch": "character"
            },
            "code": "int print_char_to_usart_0800826a(int character)\n{\n  usart_putc((char)character);\n  return 0;\n}",
            "called": [
                "usart_putc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "print_char_to_usart_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "isEndOfString_08008b60",
                "in_CY": "str"
            },
            "code": "bool isEndOfString_08008b60(char* str) {\n  __aeabi_cdrcmple();\n  return *str == '\\0';\n}",
            "called": [
                "__aeabi_cdrcmple"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "atan",
                "plan_buffer_line",
                "ceil",
                "floor"
            ],
            "imported": false,
            "current_name": "isEndOfString_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "set_step_period_based_on_steps_per_minute_08005324",
                "steps_per_minute": "steps_per_minute",
                "ticks_00": "ticks_per_step",
                "local_14": "min_steps_per_minute",
                "ticks": "ticks",
                "DAT_08005358": "DAT_08005358",
                "PTR_st_0800535c": "PTR_st_0800535c"
            },
            "code": "void set_step_period_based_on_steps_per_minute_08005324(uint32_t steps_per_minute)\n{\n  uint ticks_per_step;\n  uint32_t min_steps_per_minute = 800;\n  uint32_t ticks;\n  \n  if (steps_per_minute < min_steps_per_minute) {\n    steps_per_minute = min_steps_per_minute;\n  }\n  ticks_per_step = DAT_08005358 / steps_per_minute;\n  *(uint *)(PTR_st_0800535c + 0x14) = ticks_per_step;\n  set_step_period(ticks_per_step);\n  return;\n}",
            "called": [
                "set_step_period"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "step_period_isr",
                "st_cycle_reinitialize",
                "st_reset"
            ],
            "imported": false,
            "current_name": "set_step_period_based_on_steps_per_minute_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_eeprom_data_08000310",
                "addr": "address",
                "PTR_eeprom_ready_08000338": "eeprom_ready",
                "eeprom_init": "eeprom_init",
                "PTR_eeprom_data_0800033c": "eeprom_data"
            },
            "code": "char get_eeprom_data_08000310(uint address) {\n  int* PTR_eeprom_ready_08000338 = PTR_PTR_eeprom_ready_08000338_08000338;\n  char* PTR_eeprom_data_0800033c = PTR_PTR_eeprom_data_0800033c_0800033c;\n  if (*PTR_eeprom_ready_08000338 == 0) {\n    eeprom_init();\n  }\n  return PTR_eeprom_data_0800033c[address & 0x3ff];\n}",
            "called": [
                "eeprom_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "read_global_settings",
                "memcpy_from_eeprom_with_checksum"
            ],
            "imported": false,
            "current_name": "get_eeprom_data_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "spindle_run"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "set_timer_interrupt_priority_08007a70",
                "tim": "timer",
                "pre": "preemption_priority",
                "sub": "sub_priority",
                "irq": "irq_number",
                "DAT_40000000": "PTR_0x40000000",
                "DAT_08007ac8": "PTR_08007ac8",
                "DAT_08007acc": "PTR_08007acc"
            },
            "code": "void set_timer_interrupt_priority_08007a70(TIM_TypeDef *timer, uint32_t preemption_priority, uint32_t sub_priority)\n{\n  uint32_t irq_number;\n  if (timer == (TIM_TypeDef *)&DAT_40000000) {\n    irq_number = TIM2_IRQn;\n  }\n  else if (timer == DAT_08007ac8) {\n    irq_number = TIM3_IRQn;\n  }\n  else {\n    if (timer != DAT_08007acc) {\n      return;\n    }\n    irq_number = TIM4_IRQn;\n  }\n  HAL_NVIC_SetPriority((IRQn_Type)irq_number, preemption_priority, sub_priority);\n  NVIC_EnableIRQ((IRQn_Type)irq_number);\n  return;\n}",
            "called": [
                "NVIC_EnableIRQ",
                "HAL_NVIC_SetPriority"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "step_timer_init"
            ],
            "imported": false,
            "current_name": "set_timer_interrupt_priority_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "get_context_address_0800b5b0",
                "ctx": "context"
            },
            "code": "int get_context_address_0800b5b0(EVP_PKEY_CTX *context){\n  return (int)context;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "frame_dummy",
                "__libc_init_array",
                "__do_global_dtors_aux"
            ],
            "imported": false,
            "current_name": "get_context_address_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_final_velocity_08002978",
                "acceleration": "acceleration",
                "target_velocity": "target_velocity",
                "distance": "distance",
                "in_r0": "unused_variable_1",
                "uVar1": "acceleration_squared",
                "uVar2": "distance_doubled",
                "in_r1": "acceleration",
                "extraout_r1": "unused_variable_2",
                "in_r2": "distance_acceleration_product",
                "fVar3": "final_velocity",
                "in_stack_ffffffe0": "unused_variable_3"
            },
            "code": "float calculate_final_velocity_08002978(float acceleration, float target_velocity, float distance) {\n  float acceleration_squared = __aeabi_fmul(acceleration, acceleration);\n  float distance_doubled = __addsf3(distance, distance);\n  float distance_acceleration_product = __aeabi_fmul(distance_doubled, acceleration);\n  float acceleration_distance_product = __aeabi_fsub(acceleration_squared, distance_acceleration_product);\n  acceleration_distance_product = __aeabi_f2d(acceleration_distance_product);\n  sqrt((double)CONCAT44(distance_doubled, target_velocity));\n  float final_velocity = (float)__truncdfsf2(acceleration_distance_product, 0);\n  return final_velocity;\n}",
            "called": [
                "__aeabi_fmul",
                "__truncdfsf2",
                "sqrt",
                "__aeabi_fsub",
                "__addsf3",
                "__aeabi_f2d"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "planner_reverse_pass_kernel",
                "plan_buffer_line",
                "planner_forward_pass_kernel"
            ],
            "imported": false,
            "current_name": "calculate_final_velocity_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 extraout_r1;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 in_stack_ffffffa8;\n  undefined4 in_stack_ffffffac;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = __aeabi_dadd(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = __aeabi_dadd(uVar1,uVar2,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = __subdf3(uVar1,uVar2);\n        uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = __aeabi_dadd(uVar1,uVar2,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = __aeabi_dadd((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = __subdf3((int)uVar10,uVar1);\n      uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = __subdf3();\n    uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = __subdf3(uVar1,uVar2,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = __subdf3(uVar1,uVar2);\n      uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = __subdf3(uVar1,uVar2,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = __subdf3((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = __subdf3((int)uVar10,uVar1);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = __subdf3(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    __aeabi_d2iz();\n    local_40 = __aeabi_i2d();\n    uVar10 = __subdf3(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                      (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    __aeabi_d2iz();\n    local_38 = __aeabi_i2d();\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    __aeabi_dcmpeq((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = __kernel_rem_pio2(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  fabs((double)CONCAT44(in_stack_ffffffac,in_stack_ffffffa8));\n  uVar10 = __muldf3();\n  __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fcc);\n  iVar9 = __aeabi_d2iz();\n  uVar10 = __aeabi_i2d();\n  uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  uVar10 = __muldf3(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = __subdf3(param_1,extraout_r1,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar2 = (undefined4)uVar10;\n  uVar11 = __muldf3(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_npio2_hw_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = __subdf3(uVar2,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = __muldf3(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = __subdf3(uVar2,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar3 = (undefined4)uVar10;\n    uVar12 = __subdf3(uVar2,uVar5,uVar3,uVar7);\n    uVar11 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = __muldf3(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                      (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = __subdf3(uVar3,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = __muldf3(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = __subdf3(uVar3,uVar7,(int)uVar11,uVar2);\n    uVar12 = __subdf3(uVar3,uVar7);\n    uVar11 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar2);\n    uVar12 = __muldf3(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                      (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                    (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = __subdf3(local_50,uStack_4c);\n  uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                    (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "__muldf3",
                "__subdf3",
                "fabs",
                "__kernel_rem_pio2",
                "__aeabi_i2d",
                "__aeabi_dcmpeq",
                "__aeabi_d2iz",
                "__aeabi_dadd"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "cos",
                "sin"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_float_08003826",
                "n": "num",
                "in_r0": "sign_bit",
                "iVar1": "is_negative",
                "uVar2": "constant_1",
                "bVar3": "unused_byte",
                "uVar4": "unused_uint",
                "local_24": "integer_part",
                "uStack_1d": "unused_uint8_t",
                "buf": "buffer",
                "a": "unused_uint32_t",
                "i": "buffer_index",
                "decimals": "decimal_places"
            },
            "code": "void print_float_08003826(float num) {\n  uint sign_bit;\n  int is_negative;\n  undefined4 constant_1;\n  byte decimal_places;\n  uint32_t integer_part;\n  uint8_t i;\n  uint8_t buffer_size = 10;\n  uchar buffer[buffer_size];\n  uint32_t multiplier = 1000000000;\n  uint8_t buffer_index = 0;\n\n  is_negative = __aeabi_fcmplt(sign_bit,0);\n  integer_part = sign_bit ^ 0x80000000;\n  if (is_negative) {\n    serial_write('-');\n  }\n  for (decimal_places = PTR_settings_08003970[0x3d]; decimal_places > 1; decimal_places--) {\n    integer_part = __aeabi_fmul(integer_part,DAT_08003974);\n  }\n  if (decimal_places != 0) {\n    integer_part = __aeabi_fmul(integer_part,DAT_08003978);\n  }\n  constant_1 = __addsf3(integer_part,0x3f000000);\n  i = 0;\n  while (integer_part != 0) {\n    if (i == buffer_size - 1) {\n      i++;\n    }\n    buffer[buffer_size - i - 1] = (char)(integer_part % 10) + '0';\n    integer_part /= 10;\n    i++;\n  }\n  while (i < buffer_size - 1) {\n    buffer[buffer_size - i - 1] = '0';\n    i++;\n  }\n  if (i == buffer_size - 1) {\n    buffer[buffer_size - i - 2] = '0';\n    i += 2;\n  }\n  for (; i != 0; i--) {\n    serial_write(buffer[buffer_size - i]);\n  }\n}",
            "called": [
                "__aeabi_fmul",
                "serial_write",
                "__aeabi_f2iz",
                "__aeabi_fcmplt",
                "__addsf3"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "report_realtime_status",
                "report_gcode_modes",
                "report_grbl_settings",
                "report_gcode_parameters"
            ],
            "imported": false,
            "current_name": "print_float_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "is_zero_or_nan_0800923c",
                "in_ZR": "is_zero",
                "in_CY": "is_nan"
            },
            "code": "bool is_zero_or_nan_0800923c(void)\n{\n  bool is_nan = __aeabi_cfcmpeq();\n  return !is_nan || __aeabi_cfcmpeq();\n}",
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "settings_store_global_setting",
                "gc_execute_line",
                "mc_arc"
            ],
            "imported": false,
            "current_name": "is_zero_or_nan_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "calculate_entry_speed_08002afc",
                "previous": "previous_block",
                "current": "current_block",
                "next": "next_block",
                "iVar1": "is_current_entry_speed_lower",
                "acceleration": "acceleration_1",
                "acceleration_00": "acceleration_2",
                "target_velocity": "target_velocity_1",
                "target_velocity_00": "target_velocity_2",
                "distance": "distance_1",
                "distance_00": "distance_2",
                "entry_speed": "current_entry_speed"
            },
            "code": "void calculate_entry_speed_08002afc(block_t *previous_block, block_t *current_block, block_t *next_block)\n{\n  int is_current_entry_speed_lower;\n  uint max_allowable_speed_1;\n  uint max_allowable_speed_2;\n  float acceleration_1;\n  float acceleration_2;\n  float target_velocity_1;\n  float target_velocity_2;\n  float distance_1;\n  float distance_2;\n  float current_entry_speed = current_block->entry_speed;\n  \n  if ((previous_block != NULL) && (previous_block->nominal_length_flag == false) && \n     (is_current_entry_speed_lower = __aeabi_fcmplt(previous_block->entry_speed, current_entry_speed))) \n  {\n    max_allowable_speed(acceleration_1, target_velocity_1, distance_1);\n    max_allowable_speed_1 = *(uint *)(PTR_settings_08002ba4 + 0x20) ^ 0x80000000;\n    if (__aeabi_fcmplt(current_entry_speed, max_allowable_speed_1)) {\n      max_allowable_speed(acceleration_2, target_velocity_2, distance_2);\n      max_allowable_speed_2 = *(uint *)(PTR_settings_08002ba4 + 0x20) ^ 0x80000000;\n      current_entry_speed = (is_current_entry_speed_lower) ? max_allowable_speed_1 : current_entry_speed;\n      if (current_entry_speed != current_block->entry_speed) {\n        current_block->entry_speed = current_entry_speed;\n        current_block->recalculate_flag = true;\n      }\n    }\n  }\n}",
            "called": [
                "max_allowable_speed",
                "__aeabi_fcmplt",
                "__aeabi_fcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "planner_forward_pass"
            ],
            "imported": false,
            "current_name": "calculate_entry_speed_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_settings_08004c48",
                "reset_all": "should_reset",
                "DAT_08004d10": "default_value",
                "PTR_settings_08004d0c": "settings",
                "write_global_settings": "write_settings_to_file"
            },
            "code": "void initialize_settings_08004c48(_Bool reset_all)\n{\n  if (reset_all) {\n    int DAT_08004d10 = DAT_08004d10;\n    *(int *)PTR_PTR_settings_08004d0c_08004d0c = DAT_08004d10;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 4) = DAT_08004d10;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 8) = DAT_08004d10;\n    PTR_PTR_settings_08004d0c_08004d0c[13] = 10;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 16) = DAT_08004d14;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 20) = DAT_08004d18;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 32) = DAT_08004d1c;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 28) = DAT_08004d20;\n    *(short *)(PTR_PTR_settings_08004d0c_08004d0c + 24) = 0;\n    *(short *)(PTR_PTR_settings_08004d0c_08004d0c + 26) = 2688;\n    *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 36) = DAT_08004d24;\n  }\n  PTR_PTR_settings_08004d0c_08004d0c[40] = 0;\n  PTR_PTR_settings_08004d0c_08004d0c[40] |= 2;\n  PTR_PTR_settings_08004d0c_08004d0c[40] |= 16;\n  *(short *)(PTR_PTR_settings_08004d0c_08004d0c + 42) = 0;\n  *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 44) = DAT_08004d28;\n  *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 48) = DAT_08004d14;\n  *(short *)(PTR_PTR_settings_08004d0c_08004d0c + 52) = 100;\n  *(int *)(PTR_PTR_settings_08004d0c_08004d0c + 56) = 1065353216;\n  PTR_PTR_settings_08004d0c_08004d0c[60] = 25;\n  PTR_PTR_settings_08004d0c_08004d0c[61] = 3;\n  PTR_PTR_settings_08004d0c_08004d0c[62] = 25;\n  write_global_PTR_settings_08004d0c();\n}\n",
            "called": [
                "write_global_settings"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "read_global_settings",
                "settings_init"
            ],
            "imported": false,
            "current_name": "initialize_settings_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "delay_080002a0",
                "_ms": "milliseconds"
            },
            "code": "void delay_080002a0(uint32_t milliseconds)\n{\n  HAL_Delay(milliseconds);\n  return;\n}",
            "called": [
                "HAL_Delay"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "mc_dwell"
            ],
            "imported": false,
            "current_name": "delay_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "isLessThanOrEqualToZero_08009250",
                "in_CY": "is_CY_zero",
                "in_ZR": "unused_variable"
            },
            "code": "bool isLessThanOrEqualToZero_08009250(void)\n{\n  bool is_CY_zero = __aeabi_cfrcmple();\n  return is_CY_zero || __aeabi_cfcmpeq();\n}",
            "called": [
                "__aeabi_cfrcmple"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "plan_buffer_line",
                "mc_arc"
            ],
            "imported": false,
            "current_name": "isLessThanOrEqualToZero_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "configure_RCC_output_0800640c",
                "RCC_MCOx": "output_pin",
                "RCC_MCOSource": "output_source",
                "RCC_MCODiv": "output_divider",
                "GPIO_InitStruct": "gpio_init_struct"
            },
            "code": "void configure_RCC_output_0800640c(uint32_t output_pin, uint32_t output_source, uint32_t output_divider) {\n  GPIO_InitTypeDef gpio_init_struct;\n  if (output_pin == 0) {\n    *(uint *)(DAT_080064b0 + 0x30) |= 1;\n    gpio_init_struct.Pin = 0x100;\n    gpio_init_struct.Mode = GPIO_MODE_AF_PP;\n    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;\n    gpio_init_struct.Pull = GPIO_NOPULL;\n    gpio_init_struct.Alternate = 0;\n    HAL_GPIO_Init(DAT_080064b4, &gpio_init_struct);\n    *(uint32_t *)(DAT_080064b0 + 8) = output_divider | output_source | *(uint *)(DAT_080064b0 + 8) & 0xf89fffff;\n  }\n  else {\n    *(uint *)(DAT_080064b0 + 0x30) |= 4;\n    gpio_init_struct.Pin = 0x200;\n    gpio_init_struct.Mode = GPIO_MODE_AF_PP;\n    gpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;\n    gpio_init_struct.Pull = GPIO_NOPULL;\n    gpio_init_struct.Alternate = 0;\n    HAL_GPIO_Init(DAT_080064b8, &gpio_init_struct);\n    *(uint32_t *)(DAT_080064b0 + 8) = output_source | output_divider << 3 | *(uint *)(DAT_080064b0 + 8) & 0x7ffffff;\n  }\n  return;\n}",
            "called": [
                "HAL_GPIO_Init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "configure_RCC_output_0800640c"
        },
        "FUN_0800773e": {
            "renaming": {
                "FUN_0800773e": "do_nothing_0800773e"
            },
            "code": "\nvoid do_nothing_0800773e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800773e",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800773e"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "compare_double_08008af0",
                "param_1": "double1",
                "param_2": "double2",
                "param_3": "result1",
                "param_4": "result2"
            },
            "code": "void compare_double_08008af0(float double1, float double2, int* result1, int* result2) {\n  __aeabi_cdcmpeq(double1, double2, result1, result2);\n  return;\n}",
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "__aeabi_dcmpgt",
                "__aeabi_dcmpge"
            ],
            "imported": false,
            "current_name": "compare_double_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "get_active_interrupt_08006e1a",
                "IRQn": "interrupt",
                "uVar1": "active_interrupt"
            },
            "code": "uint32_t get_active_interrupt_08006e1a(IRQn_Type interrupt)\n{\n  uint32_t active_interrupt = NVIC_GetActive(interrupt);\n  return active_interrupt;\n}",
            "called": [
                "NVIC_GetActive"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "get_active_interrupt_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "update_value_080052ac",
                "x": "new_val",
                "val": "old_val",
                "*(uint32_t *)(DAT_080052d8 + 0x14)": "data_ptr",
                "*(uint *)(DAT_080052d8 + 0x14)": "old_val",
                "0xfffffaaf": "mask",
                "masked_old_val": "masked_old_val",
                "new_masked_val": "new_masked_val"
            },
            "code": "void update_value_080052ac(uint32_t new_val) {\n  uint32_t* *(uint32_t *)(DAT_080052d8 + 0x14) = (uint32_t*)(DAT_080052d8 + 0x14);\n  uint32_t *(uint *)(DAT_080052d8 + 0x14) = **(uint32_t *)(DAT_080052d8 + 0x14);\n  uint32_t mask = 0xfffffaaf;\n  uint32_t masked_*(uint *)(DAT_080052d8 + 0x14) = *(uint *)(DAT_080052d8 + 0x14) & mask;\n  uint32_t new_masked_val = new_val | masked_*(uint *)(DAT_080052d8 + 0x14);\n  **(uint32_t *)(DAT_080052d8 + 0x14) = new_masked_val;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "st_init",
                "step_pulse_isr",
                "step_delay_isr"
            ],
            "imported": false,
            "current_name": "update_value_080052ac"
        },
        "FUN_080064bc": {
            "renaming": {
                "FUN_080064bc": "set_dat_pointer_to_one_080064bc",
                "DAT_080064d0": "dat_pointer"
            },
            "code": "void set_dat_pointer_to_one_080064bc(void)\n{\n  *DAT_080064d0 = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064bc",
            "calling": [],
            "imported": false,
            "current_name": "set_dat_pointer_to_one_080064bc"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "receive_serial_data_08008286",
                "PTR_0800847C": "process_received_data",
                "usart_tstc": "usart_data_available",
                "usart_getc": "usart_receive_data",
                "data": "received_data",
                "iVar1": "data_available",
                "c": "processed_data"
            },
            "code": "uint8_t receive_serial_data_08008286(void)\n{\n  uint8_t received_data;\n  int data_available;\n  uint8_t processed_data;\n  \n  data_available = usart_data_available();\n  if (data_available != 0) {\n    received_data = usart_receive_data();\n    processed_data = PTR_0800847C(received_data);\n    if (processed_data == 0) {\n      return received_data;\n    }\n  }\n  return 0xff;\n}",
            "called": [
                "usart_getc",
                "usart_tstc",
                "serial_rx_hook"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "protocol_process"
            ],
            "imported": false,
            "current_name": "receive_serial_data_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [
                "__libc_fini_array"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08008b74(uint input1, int input2, uint input3, int input4) {\n  int is_invalid = (((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) || (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)));\n  return !is_invalid;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "sqrt"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "add_to_global_array_0800b524",
                "param_1": "index",
                "param_2": "value",
                "param_3": "array_start",
                "param_4": "recursive_mutex",
                "puVar1": "DAT___atexit_recursive_mutex_0800b5ac",
                "uVar2": "result",
                "uVar3": "flag",
                "iVar4": "global_impure_ptr",
                "iVar5": "global_array",
                "uVar6": "array_size",
                "element_address": "element_address"
            },
            "code": "int add_to_global_array_0800b524(int index, int value, int* array_start, int* recursive_mutex, int* global_impure_ptr) {\n  int* global_array = (int*)*(int*)(*global_impure_ptr + 0x148);\n  if (global_array == NULL) {\n    global_array = (int*)(*global_impure_ptr + 0x14c);\n    *(int**)(*global_impure_ptr + 0x148) = global_array;\n  }\n  uint32_t array_size = *(uint32_t*)(global_array + 4);\n  if (array_size < 0x20) {\n    if (index != 0) {\n      int* element_address = global_array + array_size * 4;\n      *(int*)(element_address + 0x22) = value;\n      uint32_t flag = 1 << (array_size & 0xff);\n      *(uint32_t*)(global_array + 0x188) |= flag;\n      *(int*)(element_address + 0x88) = *recursive_mutex;\n      if (index == 2) {\n        *(uint32_t*)(global_array + 0x18c) |= flag;\n      }\n    }\n    __retarget_lock_release_recursive(*recursive_mutex);\n    *(uint32_t*)(global_array + 4) = array_size + 1;\n    *(int*)(global_array + (array_size + 2) * 4) = value;\n    __retarget_lock_release_recursive(*recursive_mutex);\n    return 0;\n  }\n  else {\n    __retarget_lock_release_recursive(*recursive_mutex);\n    return -1;\n  }\n}",
            "called": [
                "__retarget_lock_acquire_recursive",
                "__retarget_lock_release_recursive"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "atexit"
            ],
            "imported": false,
            "current_name": "add_to_global_array_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "spindle_stop"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08009818": {
            "renaming": {
                "FUN_08009818": "calculate_atan_or_division_08009818",
                "param_1": "dividend_1",
                "param_2": "dividend_2",
                "param_3": "divisor_1",
                "param_4": "divisor_2",
                "param_5": "angle",
                "iVar1": "difference",
                "unaff_r4": "result",
                "uVar2": "divisor_2_sign_bit",
                "uVar3": "abs_divisor_2",
                "uVar4": "abs_dividend_2",
                "uVar5": "unused_variable",
                "DAT_08009b18": "constant_1",
                "DAT_08009af0": "constant_2",
                "DAT_08009af4": "constant_3",
                "__aeabi_dadd": "addition",
                "__divdf3": "division",
                "__subdf3": "subtraction",
                "fabs": "absolute_value",
                "atan": "arc_tangent",
                "CONCAT44": "concatenation",
                "SCARRY4": "overflow_check"
            },
            "code": "void calculate_atan_or_division_08009818(uint dividend_1, uint dividend_2, uint divisor_1, uint divisor_2, double angle) {\n  int difference;\n  uint abs_divisor_2;\n  uint abs_dividend_2;\n  uint divisor_2_sign_bit;\n  uint dividend_2_sign_bit;\n  uint divisor_1_abs;\n  uint dividend_1_abs;\n\n  abs_divisor_2 = divisor_2 & 0x7fffffff;\n  abs_dividend_2 = dividend_2 & 0x7fffffff;\n  divisor_2_sign_bit = divisor_2 >> 0x1f;\n  dividend_2_sign_bit = dividend_2 >> 0x1f;\n  divisor_1_abs = abs(divisor_1);\n  dividend_1_abs = abs(dividend_1);\n\n  if ((DAT_08009b18 < (abs_divisor_2 | (-divisor_1 | divisor_1) >> 0x1f)) || (DAT_08009b18 < (abs_dividend_2 | (-dividend_1 | dividend_1) >> 0x1f))) {\n    __aeabi_dadd(divisor_1, divisor_2, dividend_1, dividend_2);\n  } else {\n    if ((divisor_2 + 0xc0100000 | divisor_1) == 0) {\n      atan(angle);\n      return;\n    }\n\n    if (((dividend_1_abs | dividend_2) != 0) && ((abs_divisor_2 | divisor_1_abs) != 0) && (abs_divisor_2 != DAT_08009b18) && (dividend_1_abs != DAT_08009b18)) {\n      difference = (int)(dividend_1_abs - abs_dividend_2) >> 0x14;\n      if ((int)(dividend_1_abs - abs_dividend_2) < 0x3d00000 && ((-1 < (int)divisor_2 || (difference + 0x3c < 0 == SCARRY4(difference, 0x3c))))) {\n        __divdf3(dividend_1, dividend_2, divisor_1, divisor_2);\n        fabs((double)CONCAT44(unaff_r4, divisor_2));\n        atan((double)CONCAT44(unaff_r4, divisor_2));\n      }\n      if (divisor_2_sign_bit != 1) {\n        if (divisor_2_sign_bit == 2) {\n          uint64_t result = __subdf3();\n          __subdf3(DAT_08009af0, DAT_08009af4, (int)result, (int)(result >> 0x20));\n        } else if (divisor_2_sign_bit != 0) {\n          uint64_t result = __subdf3();\n          __subdf3((int)result, (int)(result >> 0x20), DAT_08009af0, DAT_08009af4);\n        }\n      }\n    }\n  }\n}",
            "called": [
                "__ieee754_atan2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "mc_arc"
            ],
            "imported": false,
            "current_name": "calculate_atan_or_division_08009818"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_USART_flags_08007ea4",
                "usart": "usart_ptr",
                "DAT_08007f3c": "control_reg",
                "DAT_08007f38": "PTR_DAT_08007f38",
                "DAT_08007f40": "PTR_DAT_08007f40",
                "DAT_08007f44": "PTR_DAT_08007f44",
                "DAT_08007f48": "PTR_DAT_08007f48",
                "DAT_08007f4c": "PTR_DAT_08007f4c",
                "DAT_08007f50": "PTR_DAT_08007f50"
            },
            "code": "void set_USART_flags_08007ea4(USART_TypeDef *usart)\n{\n  uint32_t *DAT_08007f3c = (uint32_t *)DAT_08007f3c;\n  if (usart == DAT_08007f38) {\n    *DAT_08007f3c |= 0x10;\n  }\n  else if (usart == DAT_08007f40) {\n    *DAT_08007f3c |= 0x20000;\n  }\n  else if (usart == DAT_08007f44) {\n    *DAT_08007f3c |= 0x40000;\n  }\n  else if (usart == DAT_08007f48) {\n    *DAT_08007f3c |= 0x80000;\n  }\n  else if (usart == DAT_08007f4c) {\n    *DAT_08007f3c |= 0x100000;\n  }\n  else if (usart == DAT_08007f50) {\n    *DAT_08007f3c |= 0x20;\n  }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "usart_init"
            ],
            "imported": false,
            "current_name": "set_USART_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "toggle_gpio_and_debounce_isr_if_needed_08007756",
                "uVar1": "current_ticks",
                "ticks": "N/A"
            },
            "code": "void toggle_gpio_and_debounce_isr_if_needed_08007756(void)\n{\n  uint32_t current_ticks;\n  current_ticks = HAL_GetTick();\n  if ((current_ticks & 0x1ff) == 0) {\n    gpio_toggle(0x3c);\n  }\n  if ((current_ticks & 0xf) == 0) {\n    debounce_isr();\n  }\n  HAL_IncTick();\n  return;\n}",
            "called": [
                "debounce_isr",
                "HAL_IncTick",
                "HAL_GetTick",
                "gpio_toggle"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "toggle_gpio_and_debounce_isr_if_needed_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "__register_exitproc"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800774a": {
            "renaming": {
                "FUN_0800774a": "do_nothing_0800774a"
            },
            "code": "\nvoid do_nothing_0800774a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800774a",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800774a"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "printGrblSettingsMenu_0800423c",
                "PTR_s_____view_Grbl_settings______view_0800424c": "view_Grbl_settings"
            },
            "code": "void printGrblSettingsMenu_0800423c(void)\n{\n  printPgmString(PTR_s_____view_Grbl_settings______view_0800424c);\n  return;\n}",
            "called": [
                "printPgmString"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "protocol_execute_line"
            ],
            "imported": false,
            "current_name": "printGrblSettingsMenu_0800423c"
        },
        "FUN_080064d4": {
            "renaming": {
                "FUN_080064d4": "clearData_080064d4",
                "DAT_080064e8": "dataPointer"
            },
            "code": "void clearData_080064d4() {\n  *DAT_080064e8 = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064d4",
            "calling": [],
            "imported": false,
            "current_name": "clearData_080064d4"
        },
        "FUN_08006e38": {
            "renaming": {
                "FUN_08006e38": "setClockSource_08006e38",
                "CLKSource": "source",
                "DAT_08006e6c": "clockRegister"
            },
            "code": "void setClockSource_08006e38(uint32_t source)\n{\n  if (source == 4) {\n    *DAT_08006e6c |= 4;\n  }\n  else {\n    *DAT_08006e6c &= 0xfffffffb;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e38",
            "calling": [],
            "imported": false,
            "current_name": "setClockSource_08006e38"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_string_empty_08009264",
                "in_CY": "first_char"
            },
            "code": "bool is_string_empty_08009264(char* str) {\n  char first_char = *str;\n  __aeabi_cfrcmple();\n  return first_char == '\\0';\n}",
            "called": [
                "__aeabi_cfrcmple"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "planner_reverse_pass_kernel",
                "plan_buffer_line"
            ],
            "imported": false,
            "current_name": "is_string_empty_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "initialize_timers_08007e08",
                "step_timer_init": "initialize_step_timer",
                "g540_timer_init": "initialize_g540_timer",
                "g540_timer_start": "start_g540_timer"
            },
            "code": "void initialize_timers_08007e08(void)\n{\n  initialize_step_timer();\n  initialize_g540_timer();\n  start_g540_timer();\n  return;\n}",
            "called": [
                "g540_timer_start",
                "g540_timer_init",
                "step_timer_init"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "main"
            ],
            "imported": false,
            "current_name": "initialize_timers_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "is_buffer_tail_equal_to_next_buffer_head_08002fac",
                "uint8_t": "bool",
                "PTR_block_buffer_tail_08002fcc": "block_buffer_tail",
                "PTR_next_buffer_head_08002fd0": "next_buffer_head"
            },
            "code": "bool is_buffer_tail_equal_to_next_buffer_head_08002fac(void)\n{\n  return *PTR_block_buffer_tail_08002fcc == *PTR_next_buffer_head_08002fd0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "mc_line"
            ],
            "imported": false,
            "current_name": "is_buffer_tail_equal_to_next_buffer_head_08002fac"
        },
        "FUN_08005b04": {
            "renaming": {
                "FUN_08005b04": "set_flag_on_08005b04",
                "DAT_08005b1c": "data_address",
                "PTR_08005b1c": "flag_address"
            },
            "code": "void set_flag_on_08005b04(uint* DAT_08005b1c)\n{\n  uint* PTR_08005b1c = DAT_08005b1c + 1;\n  uint current_value = *PTR_08005b1c;\n  uint flag_bit = 1;\n  uint new_value = current_value | flag_bit;\n  *PTR_08005b1c = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005b04",
            "calling": [],
            "imported": false,
            "current_name": "set_flag_on_08005b04"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "wait_microseconds_080002b6",
                "_us": "microseconds",
                "uVar1": "current_microseconds",
                "bVar2": "timeout_reached",
                "uVar3": "start_microseconds",
                "uVar4": "current_usecs",
                "timeout": "timeout_microseconds"
            },
            "code": "void wait_microseconds_080002b6(uint microseconds) {\n  uint current_microseconds;\n  bool timeout_reached;\n  uint64_t start_microseconds = get_current_usecs();\n  do {\n    current_microseconds = (uint)(get_current_usecs() >> 0x20);\n    uint64_t timeout_microseconds = start_microseconds + microseconds;\n    timeout_reached = timeout_microseconds._4_4_ <= current_microseconds;\n    if (current_microseconds == timeout_microseconds._4_4_) {\n      timeout_reached = (uint)timeout_microseconds <= (uint)get_current_usecs();\n    }\n  } while (!timeout_reached);\n  return;\n}",
            "called": [
                "get_current_usecs"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "wait_microseconds_080002b6"
        },
        "FUN_080075c8": {
            "renaming": {
                "FUN_080075c8": "calculate_SystemCoreClock_080075c8",
                "uVar1": "pll_source",
                "pllm": "pll_multiplier",
                "pllsource": "pll_source",
                "pllp": "pll_divider",
                "tmp": "unused_variable",
                "pllvco": "pll_vco",
                "PTR_SystemCoreClock_080076b8": "system_core_clock_pointer",
                "DAT_080076b4": "register_address",
                "DAT_080076bc": "pll_input_frequency",
                "DAT_080076c0": "pll_input_frequency_high",
                "PTR_AHBPrescTable_080076c4": "ahb_prescaler_table"
            },
            "code": "void calculate_SystemCoreClock_080075c8(void)\n{\n  uint32_t pll_multiplier = 0;\n  uint32_t pll_source = 0;\n  uint32_t pll_divider = 0;\n  uint32_t pll_vco = 0;\n  uint32_t system_core_clock = 0;\n  uint32_t ahb_prescaler = 0;\n  pll_source = *(uint *)(DAT_080076b4 + 8) & 0xc;\n  if (pll_source == 8) {\n    pll_divider = *(uint *)(DAT_080076b4 + 4) & 0x3f;\n    if ((*(uint *)(DAT_080076b4 + 4) >> 0x16 & 1) == 0) {\n      pll_vco = (*(uint *)(DAT_080076b4 + 4) >> 6 & 0x1ff) * (DAT_080076bc / pll_divider);\n    }\n    else {\n      pll_vco = (*(uint *)(DAT_080076b4 + 4) >> 6 & 0x1ff) * (DAT_080076c0 / pll_divider);\n    }\n    system_core_clock = pll_vco / (((*(uint *)(DAT_080076b4 + 4) >> 0x10 & 3) + 1) * 2);\n    goto LAB_0800768a;\n  }\n  if (pll_source < 9) {\n    if (pll_source == 0) {\n      system_core_clock = DAT_080076bc;\n      goto LAB_0800768a;\n    }\n    if (pll_source == 4) {\n      system_core_clock = DAT_080076c0;\n      goto LAB_0800768a;\n    }\n  }\n  system_core_clock = DAT_080076bc;\nLAB_0800768a:\n  ahb_prescaler = PTR_AHBPrescTable_080076c4[*(uint *)(DAT_080076b4 + 8) >> 4 & 0xf];\n  system_core_clock >>= ahb_prescaler;\n  *(uint *)PTR_SystemCoreClock_080076b8 = system_core_clock;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080075c8",
            "calling": [],
            "imported": false,
            "current_name": "calculate_SystemCoreClock_080075c8"
        }
    },
    "used_tokens": 199974,
    "layers": [
        [
            "FUN_0800192c",
            "FUN_08006950",
            "FUN_08008ba0",
            "FUN_08005b90",
            "FUN_080071d0",
            "FUN_08008e60",
            "FUN_08005984",
            "FUN_08006718",
            "FUN_08007a10",
            "FUN_0800856c",
            "FUN_08008b00",
            "FUN_0800585c",
            "FUN_0800597c",
            "FUN_08009314",
            "FUN_08009798",
            "FUN_08007930",
            "FUN_08000188",
            "FUN_08008e70",
            "FUN_08009318",
            "FUN_080018cc",
            "FUN_080079e0",
            "FUN_08006a58",
            "FUN_08005a84",
            "FUN_08008b10",
            "FUN_0800736c",
            "FUN_08008c30",
            "FUN_08007bf0",
            "FUN_08008590",
            "FUN_08007ad0",
            "FUN_080039a0",
            "FUN_08009204",
            "FUN_080029d8",
            "FUN_08007c5e",
            "FUN_08005760",
            "FUN_08008b24",
            "FUN_0800587c",
            "FUN_08008a02",
            "FUN_0800369c",
            "FUN_08005a98",
            "FUN_080044e8",
            "FUN_08006c9c",
            "FUN_0800195c",
            "FUN_08009214",
            "FUN_08004dd2",
            "FUN_08005778",
            "FUN_080028bc",
            "FUN_08006628",
            "FUN_08008b38",
            "FUN_0800738e",
            "FUN_080092c4",
            "FUN_08008250",
            "FUN_0800184c",
            "FUN_08005ad4",
            "FUN_08005b3c",
            "FUN_08006ce0",
            "FUN_08006d4a",
            "FUN_08000374",
            "FUN_080037fc",
            "FUN_08007dd8",
            "FUN_0800a1bc",
            "FUN_0800525c",
            "FUN_080073d4",
            "FUN_080085e4",
            "FUN_08006dfe",
            "FUN_08006d66",
            "FUN_08006e88",
            "FUN_0800b4f0",
            "FUN_080036f0",
            "FUN_08005c74",
            "FUN_0800375c",
            "FUN_08009990",
            "FUN_08005b58",
            "FUN_08007e58",
            "FUN_080059f8",
            "FUN_08009194",
            "FUN_08003f34",
            "FUN_080095b8",
            "FUN_08006cf6",
            "FUN_08002ef0",
            "FUN_08001d4c",
            "FUN_08000268",
            "FUN_0800918c",
            "FUN_08003778",
            "FUN_0800b3dc",
            "FUN_080046d0",
            "FUN_08006d72",
            "FUN_0800756c",
            "FUN_0800691c",
            "FUN_080001f8",
            "FUN_08002f74",
            "FUN_0800b3e8",
            "FUN_08006a18",
            "FUN_08002c18",
            "FUN_08006ac0",
            "FUN_0800919c",
            "FUN_0800b2cc",
            "FUN_0800854c",
            "FUN_08008e44",
            "FUN_0800733e",
            "FUN_08005aec",
            "FUN_08005b74",
            "FUN_0800583c",
            "FUN_08001e98",
            "FUN_080069e4",
            "FUN_0800b2d4",
            "FUN_08008e3c",
            "FUN_08009654",
            "FUN_08007bc2",
            "FUN_080035ec",
            "FUN_08006c70",
            "FUN_080068bc",
            "FUN_08006d98",
            "FUN_08005a68",
            "FUN_080079c0",
            "FUN_0800b2e0",
            "FUN_08002908",
            "FUN_08007c40",
            "FUN_080094c0",
            "FUN_08006b54",
            "FUN_08007e84",
            "FUN_080057e4",
            "FUN_08006d8a",
            "FUN_0800b2e8",
            "FUN_08007520",
            "FUN_08007884",
            "FUN_08004250",
            "FUN_08006dc4",
            "FUN_08007402",
            "FUN_08002870",
            "FUN_08000210",
            "FUN_08008a64",
            "FUN_08005900",
            "FUN_08002638",
            "FUN_08005bac",
            "FUN_080051b4",
            "FUN_08005c30",
            "FUN_0800056c",
            "FUN_08002f24",
            "FUN_080059b4",
            "FUN_08006c04",
            "FUN_08002e08",
            "FUN_08005bc4",
            "FUN_08006680",
            "FUN_08000340",
            "FUN_08004bf4",
            "FUN_08004d7c",
            "FUN_08009278",
            "FUN_080004fc",
            "FUN_08000220",
            "FUN_08005238",
            "FUN_08007da8",
            "FUN_08004148",
            "FUN_08004940",
            "FUN_08008a74",
            "FUN_08002fd4",
            "FUN_08002408",
            "FUN_08003618",
            "FUN_08005b20",
            "FUN_08007d08",
            "FUN_080091fc",
            "FUN_080058a0",
            "FUN_08008a6c",
            "FUN_080036c6",
            "FUN_08008190",
            "FUN_080074c8",
            "FUN_0800b430",
            "FUN_08004030",
            "FUN_08005360",
            "FUN_08003980",
            "FUN_08006de0",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_080003ec",
            "FUN_08002896",
            "FUN_080001ac",
            "FUN_08003740",
            "FUN_08000478",
            "FUN_08006d2e",
            "FUN_08007e1c",
            "FUN_0800adf0",
            "FUN_08003a74",
            "FUN_08006b00",
            "FUN_0800b4d0",
            "FUN_08007f54",
            "FUN_08003b98",
            "FUN_080024c4",
            "FUN_08002f40",
            "FUN_080025e8",
            "FUN_08005ac4",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08007310",
            "FUN_08007436",
            "FUN_08005814",
            "FUN_08005bdc",
            "FUN_080085d4",
            "FUN_08006e70",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08001ddc",
            "FUN_080069b4",
            "FUN_0800b4e4",
            "FUN_08007720",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_08007726",
            "FUN_08007b70",
            "FUN_08004d2c",
            "FUN_080066cc",
            "FUN_080018fc",
            "FUN_080039bc",
            "FUN_0800618c",
            "FUN_08006998",
            "FUN_080004ac",
            "FUN_080078f4",
            "FUN_080041a0",
            "FUN_08008bf0",
            "FUN_0800771a",
            "FUN_08003a18",
            "FUN_08005790",
            "FUN_08007854",
            "FUN_08004900",
            "FUN_08004228",
            "FUN_08009b24",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800772c",
            "FUN_0800283a",
            "FUN_0800881c",
            "FUN_08004bc0",
            "FUN_08008b4c",
            "FUN_08004c2a",
            "FUN_0800826a",
            "FUN_08008b60",
            "FUN_08005324",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_0800b5b0",
            "FUN_08002978",
            "FUN_08003826",
            "FUN_0800923c",
            "FUN_08002afc",
            "FUN_08004c48",
            "FUN_080002a0",
            "FUN_08009250",
            "FUN_0800640c",
            "FUN_08008af0",
            "FUN_08006e1a",
            "FUN_080052ac",
            "FUN_080064bc",
            "FUN_08008286",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08009818",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_080064d4",
            "FUN_08006e38",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_08005b04",
            "FUN_080002b6",
            "FUN_080075c8"
        ],
        [
            "FUN_08002edc",
            "FUN_080096e8",
            "FUN_08002ba8",
            "FUN_08009410",
            "FUN_080098d0",
            "FUN_0800981c",
            "FUN_08002a94",
            "FUN_08007540"
        ]
    ],
    "locked_functions": []
}