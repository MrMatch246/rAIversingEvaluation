{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "parse_format_string_080050fc",
                "iVar2": "bytes_written",
                "iVar3": "current_arg_length",
                "local_80": "zero",
                "local_6e": "space_or_plus",
                "piVar5": "width",
                "param_1": "error_code",
                "local_6f": "padding_char",
                "unaff_r9": "memory_allocation",
                "local_84": "precision",
                "local_45": "specifier",
                "local_88": "flags",
                "local_70": "current_char_code",
                "puVar4": "arg_pointer",
                "local_7c": "current_arg",
                "pbVar7": "current_char_pointer",
                "pbVar8": "next_char_pointer",
                "param_2": "buffer",
                "local_8c": "local_buffer",
                "param_3": "format_string",
                "param_4": "arg_list",
                "puVar1": "current_char_index",
                "local_74": "bytes_written",
                "local_30": "specifier_pointer",
                "bVar6": "is_digit"
            },
            "code": "int parse_format_string_080050fc(undefined4 *error_code, int *buffer, byte *format_string, int *arg_list)\n{\n  undefined *current_char;\n  int bytes_written;\n  int current_arg;\n  undefined4 *arg_pointer;\n  int *width;\n  bool is_negative;\n  byte *specifier;\n  undefined4 *memory_allocation;\n  int *local_buffer;\n  uint flags;\n  int precision;\n  byte current_char_code;\n  undefined space_or_plus;\n  undefined padding_char;\n  undefined4 zero;\n  \n  local_buffer = arg_list;\n  if (((int)((uint)*(ushort *)(buffer + 3) << 0x18) < 0) && (buffer[4] == 0)) {\n    memory_allocation = allocate_memory_08005714(error_code,0x40);\n    *buffer = memory_allocation;\n    buffer[4] = memory_allocation;\n    if (memory_allocation == 0) {\n      *error_code = 0xc;\n      return -1;\n    }\n    buffer[5] = 0x40;\n  }\n  bytes_written = 0;\n  padding_char = 0x20;\n  space_or_plus = 0x30;\n  current_char = format_string;\nLAB_08005146:\n  current_char_code = *current_char;\n  if (current_char_code != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  current_char = current_char + 1;\n  if (current_char_code != 0x25) goto LAB_08005146;\nLAB_08005150:\n  current_arg = (int)current_char - (int)format_string;\n  if (current_arg != 0) {\n    bytes_written = bytes_written + reverse_copy_data_08005044(error_code, buffer, format_string, current_arg);\n    if (bytes_written == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(buffer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return bytes_written;\n    }\n  }\n  if (current_char_code == 0) goto LAB_080052ac;\n  flags = 0;\n  precision = 0;\n  width = &precision;\n  specifier = &space_or_plus;\n  zero = 0;\n  if (find_character_08005614(PTR_DAT_080052d0, current_char_code) != 0) {\n    while (true) {\n      int current_char_code_index = find_character_08005614(PTR_DAT_080052d0, *current_char);\n      if (current_char_code_index == 0) break;\n      flags = 1 << (current_char_code_index - (int)PTR_DAT_080052d0 & 0xffU) | flags;\n      current_char = current_char + 1;\n    }\n    if ((int)(flags << 0x1b) < 0) {\n      padding_char = 0x20;\n    }\n    if ((int)(flags << 0x1c) < 0) {\n      padding_char = 0x2b;\n    }\n    if (*current_char == 0x2a) {\n      width = local_buffer + 1;\n      current_arg = *local_buffer;\n      local_buffer = width;\n      if (-1 < current_arg) goto LAB_080051ee;\n      precision = -current_arg;\n      flags = flags | 2;\n    }\n    else {\n      bool is_digit = false;\n      current_arg = precision;\n      while (true) {\n        if (9 < *current_char - 0x30) break;\n        current_arg = current_arg * 10 + (*current_char - 0x30);\n        is_digit = true;\n        current_char = current_char + 1;\n      }\n      if (is_digit) {\nLAB_080051ee:\n        precision = current_arg;\n      }\n    }\n    if (*current_char == 0x2e) {\n      if (current_char[1] == 0x2a) {\n        current_char = current_char + 2;\n        width = local_buffer + 1;\n        current_arg = *local_buffer;\n        local_buffer = width;\n        if (current_arg < 0) {\n          current_arg = -1;\n        }\n        precision = current_arg;\n      }\n      else {\n        bool is_digit = false;\n        current_arg = 0;\n        precision = 0;\n        while (true) {\n          current_char = current_char + 1;\n          if (9 < *current_char - 0x30) break;\n          current_arg = current_arg * 10 + (*current_char - 0x30);\n          is_digit = true;\n        }\n        if (is_digit) {\n          precision = current_arg;\n        }\n      }\n    }\n    int specifier_index = find_character_08005614(PTR_DAT_080052d4, *current_char, 3);\n    if (specifier_index != 0) {\n      current_char = current_char + 1;\n      flags = flags | 0x40 << (specifier_index - (int)specifier & 0xffU);\n    }\n    specifier = &current_char_code;\n    current_char_code = *current_char;\n    current_char = current_char + 1;\n  }\n  int specifier_code_index = find_character_08005614(PTR_s_efgEFG_080052d8, current_char_code, 6);\n  if (specifier_code_index == 0) {\n    arg_pointer = (undefined4 *)FUNC_080053d4(error_code, &flags, buffer, DAT_080052e0, &local_buffer);\n  }\n  else {\n    arg_pointer = error_code;\n    if (DAT_080052dc == 0) {\n      local_buffer = (int *)(((int)local_buffer + 7U & 0xfffffff8) + 8);\n      arg_pointer = memory_allocation;\n      goto LAB_08005260;\n    }\n  }\n  if (arg_pointer == (undefined4 *)0xffffffff) goto LAB_080052ac;\nLAB_08005260:\n  bytes_written = bytes_written + (int)arg_pointer;\n  current_char = current_char;\n  memory_allocation = arg_pointer;\n  goto LAB_08005146;\n}",
            "called": [
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614",
                "FUN_08005044"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": true,
            "current_name": "parse_format_string_080050fc"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "process_input_08004410",
                "local_c": "local_var_2",
                "uStack_8": "local_var_3",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "local_10": "local_var_4"
            },
            "code": "void process_input_08004410(uint32_t input_param_1, uint32_t input_param_2, uint32_t input_param_3)\n{\n  uint16_t local_var_1 = *(uint16_t *)(PTR_DAT_08004430 + 4);\n  uint32_t local_var_2 = (input_param_2 & 0xffff0000) | local_var_1;\n  uint32_t local_var_3 = input_param_3;\n  uint32_t local_var_4 = *(uint32_t *)PTR_DAT_08004430;\n  process_input_08004410_data_08004300(0x6c, &local_var_4, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_input_08004410"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "set_parameter_value_08003320",
                "param_1": "value",
                "PTR_DAT_08003328": "parameter_ptr"
            },
            "code": "void set_parameter_value_08003320(undefined4 value)\n{\n  *(undefined4 *)PTR_DAT_08003328 = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002f28",
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "set_parameter_value_08003320"
        },
        "FUN_08001264": {
            "renaming": {
                "uVar10": "bit_array_index",
                "FUN_08001264": "process_bits_08001264",
                "unaff_r10": "bit_ptr",
                "iVar7": "data_index",
                "param_1": "bits_array",
                "param_2": "data_array",
                "puVar1": "bit_mask_5",
                "uVar3": "bit_mask_3",
                "uVar2": "bit_mask_2",
                "uVar5": "bit_mask_5",
                "uVar4": "bit_mask_4",
                "uVar6": "bit_mask_6",
                "uVar9": "data_value",
                "uVar8": "bit_num"
            },
            "code": "void process_bits_08001264(uint *bits_array, uint *data_array)\n{\n  uint *bit_ptr;\n  uint bit_mask_1;\n  uint bit_mask_2;\n  uint bit_mask_3;\n  uint bit_mask_4;\n  uint bit_mask_5;\n  uint bit_mask_6;\n  int data_index;\n  uint bit_num;\n  uint data_value;\n  uint *bit_array_ptr;\n  int bit_array_index;\n  \n  bit_mask_3 = 0x10000;\n  bit_mask_2 = 0x10000000;\n  bit_mask_1 = 0xf;\n  bit_mask_5 = 0xff;\n  bit_mask_6 = 0x3ffffff8;\n  bit_array_ptr = bits_array;\n  bit_mask_4 = 0;\n  bit_num = 0;\n  do {\n    data_value = 1 << (bit_num & bit_mask_5);\n    if (data_value == (*data_array & data_value)) {\n      data_index = *(int *)(data_array + 1);\n      if (data_index == 0x12) {\n        bit_mask_4 = *(uint *)(data_array + 3) + 0xc;\n      }\n      else if (data_index < 0x13) {\n        if (data_index == 2) {\n          bit_mask_4 = *(uint *)(data_array + 3) + 8;\n        }\n        else if (data_index < 3) {\n          if (data_index == 0) goto LAB_080013be;\n          if (data_index == 1) {\n            bit_mask_4 = *(uint *)(data_array + 3);\n          }\n        }\n        else if (data_index == 3) {\n          bit_mask_4 = 0;\n        }\n        else if (data_index == 0x11) {\n          bit_mask_4 = *(uint *)(data_array + 3) + 4;\n        }\n      }\n      else {\n        if (data_index != 0x4000) {\n          if (0x4000 < data_index) {\n            if ((data_index != bit_mask_2) && (bit_mask_5 = 0x40014, data_index != bit_mask_3)) goto LAB_080013b8;\n          }\n          else if (data_index != 0x4000c) {\n            bit_mask_5 += 0x10000;\nLAB_080013b8:\n            if (data_index != bit_mask_5) goto LAB_080012a8;\n          }\n        }\nLAB_080013be:\n        data_value = *(data_array + 2);\n        if (data_value == 0) {\n          bit_mask_4 = 4;\n        }\n        else {\n          if (data_value == 1) {\n            *(bit_array_ptr + 4) = data_value;\n          }\n          if (data_value != 1) {\n            *(bit_array_ptr + 5) = data_value;\n          }\n          bit_mask_4 = 8;\n        }\n      }\nLAB_080012a8:\n      if ((*data_array & bit_mask_5) < 0x100) {\n        data_value = *bit_array_ptr;\n        bit_array_index = bit_num << 2;\n        bit_ptr = bit_array_ptr;\n      }\n      else {\n        data_value = *(bit_array_ptr + 1);\n        bit_array_index = (bit_num + bit_mask_6) * 4;\n      }\n      if (0xff < (*data_array & bit_mask_5)) {\n        bit_ptr = bit_array_ptr + 1;\n      }\n      *bit_ptr = data_value & ~(bit_mask_1 << (bit_array_index & bit_mask_5)) | bit_mask_4 << (bit_array_index & bit_mask_5);\n      bit_ptr = (uint *)(*(int *)(data_array + 1));\n      if (((uint)bit_ptr & bit_mask_2) != 0) {\n        *(uint *)(bits_array + 0x18) = *(uint *)(bits_array + 0x18) | 1;\n        bit_num = (bit_num & 3) << 2;\n        if (bits_array == (uint *)0x8001000) {\n          bit_array_index = 0;\n        }\n        else if (bits_array == (uint *)0x8001100) {\n          bit_array_index = 1;\n        }\n        else if (bits_array == (uint *)0x8001200) {\n          bit_array_index = 2;\n        }\n        else if (bits_array == (uint *)0x8001300) {\n          bit_array_index = 3;\n        }\n        else {\n          bit_array_index = 4;\n        }\n        *(uint *)(&DAT_40010008 + (bit_num & 0xfffffffc)) =\n             bit_array_index << bit_num | *(uint *)(&DAT_40010008 + (bit_num & 0xfffffffc)) & ~(0xf << bit_num);\n        if (((uint)bit_ptr & 0x10000) == 0) {\n          data_value = *bit_array_ptr & ~(*data_array & data_value);\n        }\n        else {\n          data_value = *bit_array_ptr | (*data_array & data_value);\n        }\n        *bit_array_ptr = data_value;\n        if (((uint)bit_ptr & 0x20000) == 0) {\n          data_value = *(bit_array_ptr + 1) & ~(*data_array & data_value);\n        }\n        else {\n          data_value = *(bit_array_ptr + 1) | (*data_array & data_value);\n        }\n        *(bit_array_ptr + 1) = data_value;\n        if (((uint)bit_ptr & 0x100000) == 0) {\n          data_value = *(bit_array_ptr + 2) & ~(*data_array & data_value);\n        }\n        else {\n          data_value = *(bit_array_ptr + 2) | (*data_array & data_value);\n        }\n        *(bit_array_ptr + 2) = data_value;\n        if (((uint)bit_ptr & 0x200000) == 0) {\n          data_value = *(bit_array_ptr + 3) & ~(*data_array & data_value);\n        }\n        else {\n          data_value = (*data_array & data_value) | *(bit_array_ptr + 3);\n        }\n        *(bit_array_ptr + 3) = data_value;\n      }\n    }\n    bit_num++;\n    if (bit_num == 0x10) {\n      return;\n    }\n  } while( true );\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_bits_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "set_parameter_value_to_pointer_address_08003314": "set_parameter_value_to_pointer_address",
                "FUN_08002ea0": "process_sensor_and_mpu_data_and_set_params_08002ea0",
                "param_1": "sensor_data",
                "process_sensor_data_08002ad0": "process_sensor_data",
                "process_mpu9250_data_and_print_results_08002cb0": "process_mpu_data_and_print_results",
                "set_parameter_value_08003320": "set_parameter_value",
                "param_2": "mpu_data",
                "param_3": "param_3",
                "param_4": "param_4",
                "extraout_r1": "new_param_value",
                "DAT_08002ebc": "PTR_DAT_08002ebc"
            },
            "code": "void process_sensor_and_mpu_data_and_set_params_08002ea0(undefined4 sensor_data, undefined4 mpu_data, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 new_param_value;\n  \n  process_sensor_data();\n  process_mpu_data_and_print_results();\n  set_parameter_value_to_pointer_address(DAT_08002ebc);\n  set_parameter_value(0, new_param_value, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08003320",
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08002cb0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "process_sensor_and_mpu_data_and_set_params_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "uVar1": "var1",
                "FUN_080070b0": "calculate_result_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar3": "var3",
                "uVar2": "mantissa",
                "uVar5": "exponent",
                "uVar4": "mask",
                "uVar7": "result",
                "uVar6": "shift_value",
                "uVar8": "result"
            },
            "code": "ulonglong calculate_result_080070b0(uint input1, uint input2, undefined4 input3)\n{\n  uint shift_value = (input2 << 1) >> 0x15;\n  uint exponent = shift_value - 0x3ff;\n  uint mantissa = input2;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      mantissa = input2 & 0xfffff | input1;\n      undefined4 var1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input2 >> 0x1f) * -8);\n      undefined4 var2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input2 >> 0x1f) * -8) + 4);\n      undefined8 var3 = FUNC_0800016c(input1,(-mantissa | mantissa) >> 0xc & 0x80000 | input2 & 0xfffe0000,var1,var2,input1,input2,input3);\n      ulonglong result = FUNC_08000168((int)var3,(int)((ulonglong)var3 >> 0x20),var1,var2);\n      return result & 0xffffffff | (ulonglong)((uint)(result >> 0x20) & 0x7fffffff | input2 & 0x80000000) << 0x20;\n    }\n    shift_value = DAT_080071bc >> (exponent & 0xff);\n    if ((input2 & shift_value | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shift_value = shift_value >> 1;\n    mantissa = input2 & shift_value | input1;\n    if (mantissa != 0) {\n      if (exponent == 0x13) {\n        mantissa = 0x80000000;\n      }\n      else {\n        mantissa = 0;\n      }\n      input2 = 0x40000 >> (exponent & 0xff) | input2 & ~shift_value;\n    }\n  }\n  else {\n    if (0x33 < (int)exponent) {\n      if (exponent != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      ulonglong result = FUNC_0800016c();\n      return result;\n    }\n    exponent = exponent - 0x413;\n    uint mask = 0xffffffff >> (exponent & 0xff);\n    if ((input1 & mask) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    mask = mask >> 1;\n    mantissa = input1;\n    if ((input1 & mask) != 0) {\n      mantissa = 0x40000000 >> (exponent & 0xff) | input1 & ~mask;\n    }\n  }\n  undefined4 var1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input2 >> 0x1f) * -8);\n  undefined4 var2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input2 >> 0x1f) * -8) + 4);\n  undefined8 var3 = FUNC_0800016c(mantissa,input2,var1,var2,input1,input2,input3);\n  ulonglong result = FUNC_08000168((int)var3,(int)((ulonglong)var3 >> 0x20),var1,var2);\n  return result;\n}",
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "calculate_result_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "param_1": "address",
                "FUN_08001424": "update_param_08001424",
                "param_2": "value",
                "param_3": "condition"
            },
            "code": "void update_param_08001424(int address, int value, int condition)\n{\n  if (condition == 0) {\n    value = value << 16;\n  }\n  *(int *)(address + 0x10) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_08004490",
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "update_param_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "reverse_and_concatenate_08001004_08001004": "reverse_and_concatenate",
                "in_CY": "current_char",
                "FUN_08001028": "is_string_empty_08001028"
            },
            "code": "bool is_string_empty_08001028(void)\n{\n  char current_char;\n  reverse_and_concatenate();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "imported": true,
            "current_name": "is_string_empty_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = is_valid_input_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = is_valid_input_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = is_non_zero_character_present_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = is_non_zero_character_present_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = set_msb_bit_and_shift_right_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = is_string_terminated_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = set_msb_bit_and_shift_right_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = set_msb_bit_and_shift_right_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = set_msb_bit_and_shift_right_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = is_non_zero_character_present_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_msb_bit_and_shift_right_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_msb_bit_and_shift_right_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = is_valid_input_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = is_string_terminated_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_result_080070b0();\n        iVar3 = is_non_zero_character_present_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = returnZero_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = is_string_terminated_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_result_080070b0();\n        iVar3 = is_non_zero_character_present_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)get_pointer_value_from_data_section_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = is_non_zero_character_present_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = returnZero_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)get_pointer_value_from_data_section_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)get_pointer_value_from_data_section_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080070b0",
                "FUN_080009a0",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_080004d0",
                "FUN_0800709e",
                "FUN_080009b4",
                "FUN_08006228",
                "FUN_08007092",
                "FUN_08000724"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "bVar4": "condition_2",
                "uVar1": "temp_5",
                "param_1": "input_1",
                "condition_2": "condition_2",
                "condition_3": "condition_3",
                "condition_1": "condition_1",
                "FUN_080006ac": "perform_computation_080006ac",
                "temp_1": "temp_1",
                "condition_4": "condition_4",
                "unaff_r4": "temp_2",
                "temp_2": "temp_2",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar3": "temp_2",
                "uVar2": "condition_1",
                "temp_3": "temp_3",
                "temp_4": "temp_4",
                "in_r12": "bit_mask",
                "temp_5": "temp_5",
                "bit_mask": "bit_mask"
            },
            "code": "ulonglong perform_computation_080006ac(uint input_1, uint input_2, uint input_3, uint input_4) {\n  uint temp_1 = input_1;\n  uint temp_2 = input_2;\n  uint temp_3 = input_3;\n  uint temp_4 = input_4;\n  uint bit_mask = 0x80000000;\n  uint condition_1 = input_4 >> 0x14;\n  bool condition_2 = (input_1 | (input_2 << 1)) == 0;\n  bool condition_3 = (input_3 | (input_4 << 1)) == 0;\n  bool condition_4 = false;\n  if (input_4 != input_3 && condition_1 != input_3) {\n    if (!condition_2) {\n      condition_4 = condition_3;\n      if (!condition_4) {\n        do {\n          uint temp_5 = temp_1 & bit_mask;\n          temp_1 = temp_1 << 1;\n          temp_2 = (temp_2 * 2) + (uint)(temp_5 != 0);\n        } while ((temp_2 & 0x100000) == 0);\n        temp_2 |= (input_2 & bit_mask);\n        if (condition_1 != 0) {\n          return ((ulonglong)temp_2 << 0x20) | temp_1;\n        }\n      }\n    }\n    do {\n      uint temp_6 = temp_3 & bit_mask;\n      temp_3 = temp_3 << 1;\n      temp_4 = (temp_4 * 2) + (uint)(temp_6 != 0);\n    } while ((temp_4 & 0x100000) == 0);\n    return ((ulonglong)temp_2 << 0x20) | temp_1;\n  }\n  condition_4 = condition_2;\n  if (!condition_4) {\n    condition_4 = condition_3;\n  }\n  if (((!condition_4) && ((input_4 != input_3 || ((input_1 | (input_2 << 0xc)) == 0)))) && ((condition_1 != input_3 || (temp_3 = input_3, temp_2 = input_4, (input_3 | (input_4 << 0xc)) == 0)))) {\n    return ((ulonglong)((temp_2 ^ input_4) & bit_mask | 0x7ff00000) << 0x20);\n  }\n  return ((ulonglong)temp_2 << 0x20) | temp_1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": true,
            "current_name": "perform_computation_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "iVar1": "var1",
                "iVar2": "var2",
                "puVar3": "ptr3",
                "param_1": "input",
                "param_6": "data_length",
                "param_7": "arg7",
                "FUN_08001828": "process_input_08001828",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "data",
                "uVar4": "var4"
            },
            "code": "uint32_t process_input_08001828(uint32_t **input, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint8_t *data, uint16_t data_length, uint32_t arg7)\n{\n  int32_t var1;\n  int32_t var2;\n  uint32_t *ptr3;\n  uint32_t var4;\n  \n  if ((*input)[0x35] == ' ')\n  {\n    if (data == NULL)\n    {\n      return 1;\n    }\n    if (data_length == 0)\n    {\n      return 1;\n    }\n    var1 = get_value_from_pointer();\n    do\n    {\n      ptr3 = *input;\n      if ((~ptr3[6] & 2) != 0)\n      {\n        if ((*input)[0xd] == 1)\n        {\n          return 2;\n        }\n        var4 = *ptr3;\n        (*input)[0xd] = 1;\n        *ptr3 = var4 & 0xfffff7ff;\n        (*input)[0x35] = 0x21;\n        (*input)[0x36] = 0x40;\n        (*input)[0xe] = NULL;\n        var1 = process_input_08001828(input, arg2, arg3, arg4, arg7);\n        if (var1 != 0)\n        {\n          (*input)[0xd] = 0;\n          if ((*input)[0xe] == 4)\n          {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      var2 = get_value_from_pointer();\n    }\n    while ((var2 - var1) < 0x2711);\n    (*input)[0xd] = 0;\n    (*input)[0x35] = 0x20;\n  }\n  return 2;\n  while (data_length != 0)\n  {\nLAB_080018e2:\n    var1 = check_flag_and_update(input, arg7);\n    if (var1 != 0) goto LAB_080018ee;\n    ptr3 = *input;\n    ptr3[4] = (uint32_t)*data;\n    if ((int32_t)(ptr3[5] << 0x1d) < 0)\n    {\n      if ((data_length - 1) == 0) break;\n      data_length -= 2;\n      ptr3[4] = (uint32_t)data[1];\n      data += 2;\n    }\n    else\n    {\n      data++;\n      data_length--;\n    }\n  }\n  var1 = check_flag_and_update(input, arg7);\n  if (var1 == 0)\n  {\n    **input |= 0x200;\n    (*input)[0xd] = 0;\n    (*input)[0x35] = 0x20;\n    (*input)[0x36] = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if ((*input)[0xe] == 4)\n  {\n    **input |= 0x200;\n    return 1;\n  }\n  return 3;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001530",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": true,
            "current_name": "process_input_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "iVar2": "index",
                "FUN_08004c64": "initialize_data_08004c64",
                "puVar1": "data_ptr"
            },
            "code": "void initialize_data_08004c64(void)\n{\n  undefined *data_ptr = PTR_DAT_08004c6c;\n  int index = 0;\n  *(undefined2 *)(data_ptr + 0x800) = 0;\n  *(undefined2 *)(data_ptr + 0x802) = 0;\n  *(undefined2 *)(data_ptr + 0x804) = 0;\n  do {\n    data_ptr[index] = 0;\n    index++;\n  } while (index != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": true,
            "current_name": "initialize_data_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006070"
            ],
            "imported": true,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = get_value_from_pointer_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = get_value_from_pointer_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = get_value_from_pointer_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = get_value_from_pointer_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = get_value_from_pointer_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = get_value_from_pointer_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = get_value_from_pointer_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = get_value_from_pointer_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = get_value_from_pointer_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "undefined4": "uint",
                "param_1": "value",
                "uint": "unsigned int",
                "param_2": "num_bits",
                "PTR_": "",
                "DAT_": "",
                "FUN_08007092": "set_msb_bit_and_shift_right_08007092"
            },
            "code": "DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ set_msb_bit_and_shift_right_08007092(DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_,DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_{DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_8DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_hDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_fDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_|DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_hDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_fDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_+DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_xDAT_PDAT_TDAT_RDAT__DAT_1DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_0DAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_hDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_fDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_=DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_vDAT_PDAT_TDAT_RDAT__DAT_aDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_>DAT_PDAT_TDAT_RDAT__DAT_>DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_(DAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_mDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_bDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_-DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_1DAT_PDAT_TDAT_RDAT__DAT_)DAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_nDAT_PDAT_TDAT_RDAT__DAT_ DAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_hDAT_PDAT_TDAT_RDAT__DAT_iDAT_PDAT_TDAT_RDAT__DAT_fDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_dDAT_PDAT_TDAT_RDAT__DAT__DAT_PDAT_TDAT_RDAT__DAT_rDAT_PDAT_TDAT_RDAT__DAT_eDAT_PDAT_TDAT_RDAT__DAT_sDAT_PDAT_TDAT_RDAT__DAT_uDAT_PDAT_TDAT_RDAT__DAT_lDAT_PDAT_TDAT_RDAT__DAT_tDAT_PDAT_TDAT_RDAT__DAT_;DAT_PDAT_TDAT_RDAT__DAT_\nDAT_PDAT_TDAT_RDAT__DAT_}DAT_PDAT_TDAT_RDAT__DAT_",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "set_msb_bit_and_shift_right_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_input_0800290c",
                "bVar1": "first_byte",
                "iVar2": "array_start",
                "param_1": "input_array",
                "puVar6": "array_ptr",
                "puVar7": "array_ptr_temp",
                "uVar3": "array_value_temp",
                "uVar4": "array_value",
                "sVar5": "array_length",
                "bVar8": "array_check"
            },
            "code": "int process_input_0800290c(int *input_array)\n{\n    byte first_byte = *(byte *)((int)input_array + 0x39);\n    int array_start = *input_array;\n    ushort *array_ptr = (ushort *)input_array[10];\n    uint array_type = input_array[2];\n    int array_value = *(int *)(array_start + 4);\n    int array_length = *(short *)((int)input_array + 0x2e) + -1;\n    \n    if ((first_byte & 0xef) != 0x22) {\n        return 2;\n    }\n    \n    if (array_type == 0x1000) {\n        if (input_array[4] == 0) {\n            array_ptr[0] = (ushort)((array_value << 0x17) >> 0x17);\n            array_ptr++;\n        }\n        else {\n            array_ptr[0] = (ushort)array_value & 0xff;\n            array_ptr = (ushort *)((int)array_ptr + 1);\n        }\n        input_array[10] = (int)array_ptr;\n    }\n    else {\n        byte array_byte;\n        if (input_array[4] == 0) {\n            array_byte = (byte)array_value;\n            input_array[10] = (int)array_ptr + 1;\n        }\n        else {\n            array_byte = (byte)array_value & 0x7f;\n            input_array[10] = (int)array_ptr + 1;\n        }\n        *(byte *)array_ptr = array_byte;\n    }\n    \n    input_array[26] = array_length;\n    if (array_length == 0) {\n        int array_end = array_start + 0xc;\n        *(uint *)(array_end) = *(uint *)(array_end) & 0xffffffdf;\n        byte array_byte_2 = *(byte *)((int)input_array + 0x39);\n        bool array_check = array_byte_2 != 0x32;\n        if (array_check) {\n            *(uint *)(array_end) = *(uint *)(array_end) & 0xfffffeff;\n        }\n        else {\n            array_start = 0x12;\n        }\n        if (array_check) {\n            *(uint *)(array_start + 0x14) = *(uint *)(array_start + 0x14) & 0xfffffffe;\n        }\n        *(char *)((int)input_array + 0x39) = (char)(array_check ? 1 : 0);\n        increment_and_store_08004c30();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "process_input_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "process_mpu9250_data_and_calculate_hash_08002f28",
                "sVar1": "mpu_data_short_1",
                "puVar2": "ptr_2",
                "iVar6": "mpu_data_int_1",
                "puVar3": "ptr_1",
                "puVar4": "ptr_3",
                "iVar8": "mpu_data_int_2",
                "uVar5": "u_var_1",
                "uVar7": "hash_result_1"
            },
            "code": "void process_mpu9250_data_and_calculate_hash_08002f28(void)\n{\n  short mpu_data_short_1;\n  undefined *ptr_1;\n  undefined *ptr_2;\n  undefined *ptr_3;\n  undefined2 u_var_1;\n  int mpu_data_int_1;\n  undefined4 hash_result_1;\n  int mpu_data_int_2;\n  read_and_calculate_hash_of_mpu9250_data();\n  read_mpu9250_data();\n  process_mpu9250_data();\n  mpu_data_int_1 = thunk_get_value_from_pointer();\n  ptr_2 = PTR_DAT_08003000;\n  ptr_1 = PTR_DAT_08003004;\n  mpu_data_int_2 = *(int *)PTR_DAT_08003000;\n  *(int *)PTR_DAT_08003004 = mpu_data_int_1;\n  hash_result_1 = calculate_hash(mpu_data_int_1 - mpu_data_int_2);\n  FUNC_08000e54(hash_result_1, PTR_DAT_08003008);\n  set_parameter_value();\n  ptr_3 = PTR_DAT_0800300c;\n  *(undefined4 *)ptr_2 = *(undefined4 *)ptr_1;\n  FUNC_08003330(*(int *)(ptr_3 + 4) + -0x80000000,*(int *)ptr_3 + -0x80000000,*(undefined4 *)(ptr_3 + 8),*(undefined4 *)(PTR_DAT_08003018 + 4),*(undefined4 *)PTR_DAT_08003018,*(int *)(PTR_DAT_08003018 + 8) + -0x80000000,*(undefined4 *)PTR_DAT_08003014,*(undefined4 *)(PTR_DAT_08003014 + 4),*(undefined4 *)(PTR_DAT_08003014 + 8),PTR_DAT_08003010);\n  ptr_3 = PTR_DAT_08003024;\n  ptr_1 = PTR_DAT_08003020;\n  ptr_2 = PTR_DAT_0800301c;\n  *(short *)PTR_DAT_08003020 = (short)((uint)(int)*(short *)PTR_DAT_0800301c / 100);\n  mpu_data_short_1 = *(short *)(ptr_2 + 2);\n  *(short *)(ptr_1 + 4) = (short)((uint)(int)*(short *)(ptr_2 + 4) / 100);\n  ptr_2 = PTR_DAT_08003028;\n  *(short *)(ptr_1 + 2) = (short)((uint)(int)mpu_data_short_1 / 100);\n  *(undefined2 *)(ptr_1 + 6) = *(undefined2 *)ptr_2;\n  u_var_1 = *(undefined2 *)(ptr_2 + 4);\n  *(undefined2 *)(ptr_1 + 8) = *(undefined2 *)(ptr_2 + 2);\n  *(undefined2 *)(ptr_1 + 10) = u_var_1;\n  ptr_2 = PTR_DAT_0800302c;\n  *(undefined2 *)(ptr_1 + 0xc) = *(undefined2 *)PTR_DAT_0800302c;\n  u_var_1 = *(undefined2 *)(ptr_2 + 4);\n  *(undefined2 *)(ptr_1 + 0xe) = *(undefined2 *)(ptr_2 + 2);\n  *(undefined2 *)(ptr_1 + 0x10) = u_var_1;\n  hash_result_1 = calculate_result();\n  FUNC_08000cec(hash_result_1, PTR_DAT_08003030);\n  u_var_1 = decode_float();\n  *(undefined2 *)PTR_DAT_08003024 = u_var_1;\n  hash_result_1 = calculate_new_value();\n  FUNC_08000cec(hash_result_1, PTR_DAT_08003030);\n  u_var_1 = decode_float();\n  *(undefined2 *)(PTR_DAT_08003024 + 2) = u_var_1;\n  check_and_print_string();\n  u_var_1 = decode_float();\n  *(undefined2 *)(PTR_DAT_08003024 + 4) = u_var_1;\n  return;\n}",
            "called": [
                "FUN_08000c3c",
                "FUN_08002b48",
                "FUN_08000e54",
                "FUN_08001078",
                "FUN_08000cec",
                "FUN_08002bf0",
                "thunk_FUN_0800115c",
                "FUN_08002ed4",
                "FUN_08003330",
                "FUN_08003320",
                "FUN_08002d88",
                "FUN_08002ee8",
                "FUN_08002ec0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_mpu9250_data_and_calculate_hash_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "process_input_08004384",
                "local_c": "local_var3",
                "param_1": "input1",
                "uStack_10": "local_var2",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "puVar1": "data_ptr",
                "local_14": "local_var1"
            },
            "code": "void process_input_08004384(uint32_t input1, uint32_t input2, uint32_t input3, uint32_t input4) {\n    uint32_t *data_ptr = PTR_DAT_080043b8;\n    data_ptr[4] = 7;\n    data_ptr[5] = 0;\n    data_ptr[6] = 0x2a;\n    data_ptr[7] = 0;\n    uint32_t local_var1 = *(uint32_t *)data_ptr;\n    uint32_t local_var2 = *(uint32_t *)(data_ptr + 4);\n    data_ptr[8] = 0;\n    data_ptr[9] = 0;\n    data_ptr[10] = 0;\n    uint32_t local_var3 = input4 & 0xff000000 | (uint32_t)*(uint16_t *)(data_ptr + 8);\n    process_input_08004384_data_08004300(0x65, &local_var1, 0xb, *(uint16_t *)(data_ptr + 8), input1);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_input_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_non_zero_character_present_080009a0",
                "in_ZR": "character_to_check"
            },
            "code": "bool is_non_zero_character_present_080009a0(void)\\n{\\n  char character_to_check;\\n  compare_values_and_return_result();\\n  return character_to_check != \"\\0\";\\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_non_zero_character_present_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "process_input_and_print_strings_0800403c": "process_input_and_print_strings",
                "FUN_08003298": "read_MS5611_sensor_data_08003298",
                "iVar4": "i",
                "PTR_s____Src_MS5611_c_08003308": "MS5611_address",
                "puVar2": "data_array_pointer",
                "puVar3": "data_array2_pointer",
                "PTR_DAT_0800330c": "data_array",
                "local_1c": "data_low_byte",
                "local_1b": "data_high_byte",
                "puVar1": "MS5611_address_pointer",
                "thunk_do_nothing_08001168": "delay",
                "PTR_DAT_08003304": "data_array_pointer"
            },
            "code": "void read_MS5611_sensor_data_08003298(void)\n{\n  uint16_t data;\n  uint16_t* PTR_DAT_0800330c = (uint16_t*)DAT_0800330c;\n  uint32_t* PTR_DAT_0800330c2 = (uint32_t*)DAT_08003310;\n  int i = 0;\n  process_input_and_print_strings(0xee,0x1e,true);\n  delay(10);\n  while (i != 0x10)\n  {\n    process_i2c_data(0xee,(i + 0xa0) & 0xffff,&data,2,(uint8_t*)DAT_08003308,0x7c);\n    PTR_DAT_0800330c[i/2] = data;\n    i += 2;\n  }\n  i = 0;\n  while (i != 0x14)\n  {\n    PTR_DAT_0800330c2[i] = 0;\n    i++;\n  }\n}",
            "called": [
                "FUN_080040e8",
                "thunk_FUN_08001168",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "read_MS5611_sensor_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "process_input_data_08004300",
                "uVar1": "xor_result",
                "process_data_08004c18": "process_data_byte",
                "process_string_data_08004c8c": "process_string_data",
                "param_1": "input_key",
                "pbVar2": "current_byte",
                "param_2": "input_data",
                "param_3": "data_length"
            },
            "code": "void process_input_data_08004300(uint input_key, byte *input_data, uint data_length)\n{\n  uint xor_result;\n  byte *current_byte;\n  process_string_data(PTR_DAT_08004344);\n  process_data_byte(data_length & 0xff);\n  xor_result = data_length & 0xff ^ input_key;\n  process_data_byte(input_key);\n  for (current_byte = input_data; (int)current_byte - (int)input_data < (int)data_length; current_byte++) {\n    process_data_byte(*current_byte);\n    xor_result = xor_result ^ *current_byte;\n  }\n  process_data_byte(xor_result);\n  return;\n}",
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004384",
                "FUN_080043f0",
                "FUN_08004348",
                "FUN_08004434",
                "FUN_080043bc",
                "FUN_08004458",
                "FUN_08004410"
            ],
            "imported": true,
            "current_name": "process_input_data_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_data_from_source_to_destination_08005630",
                "puVar2": "source_data_ptr",
                "param_1": "dest_addr",
                "param_2": "source_data",
                "param_3": "data_size",
                "puVar1": "dest_data_ptr"
            },
            "code": "void copy_data_from_source_to_destination_08005630(int dest_addr, undefined *source_data, int data_size) {\n    undefined *dest_data_ptr;\n    undefined *source_data_ptr;\n  \n    dest_data_ptr = (undefined *)(dest_addr - 1);\n    source_data_ptr = source_data + data_size;\n    for (; source_data != source_data_ptr; source_data++) {\n        dest_data_ptr++;\n        *dest_data_ptr = *source_data;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_080057d0",
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "copy_data_from_source_to_destination_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  reverse_and_improve_08000428();\n  calculate_and_return_result_08005bc8();\n  uVar2 = calculate_float_bits_08000a30();\n  iVar4 = is_input_not_empty_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    reverse_and_improve_08000428();\n    calculate_and_return_result_08005bc8();\n    uVar3 = calculate_float_bits_08000a30();\n    iVar4 = is_input_not_empty_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = reverse_and_improve_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = calculate_float_bits_08000a30();\n      uVar32 = reverse_and_improve_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = calculate_float_bits_08000a30();\n      uVar32 = reverse_and_improve_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = calculate_float_bits_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      reverse_and_improve_08000428();\n      calculate_and_return_result_08005bc8();\n      iVar27 = calculate_float_bits_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      reverse_and_improve_08000428();\n      calculate_and_return_result_08005bc8();\n      uVar8 = calculate_float_bits_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      reverse_and_improve_08000428();\n      calculate_and_return_result_08005bc8();\n      uVar28 = calculate_float_bits_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      reverse_and_improve_08000428();\n      uVar32 = validate_input_and_return_shifted_value_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = calculate_float_bits_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = reverse_and_improve_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_and_improve_08000428();\n      uVar32 = thunk_calculate_result_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_bits_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = reverse_and_improve_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_and_improve_08000428();\n      uVar32 = thunk_calculate_result_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_bits_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000a30",
                "FUN_08005854",
                "thunk_FUN_08006070",
                "FUN_08001014",
                "FUN_08000428",
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08000724",
                "FUN_08005bc8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "compare_and_return_result_08000980",
                "param_1": "first_value",
                "compare_values_and_return_result_08000990": "compare_values_and_return_result",
                "param_2": "second_value",
                "param_3": "third_value",
                "param_4": "fourth_value"
            },
            "code": "void compare_and_return_result_08000980(int first_value, int second_value, int third_value, int fourth_value)\n{\n  compare_values_and_return_result(first_value, second_value, third_value, fourth_value);\n  return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": true,
            "current_name": "compare_and_return_result_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "iVar1": "iteration_count",
                "update_params_based_on_leading_zeroes_08003f3c": "update_params_based_on_leading_zeroes",
                "FUN_08004028": "update_params_and_wait_08004028",
                "thunk_do_nothing_08001168": "wait_for_100_ms_08001168"
            },
            "code": "void update_params_and_wait_08004028(void)\n{\n  int iteration_count = 3;\n  FUNC_0800458c();\n  toggle_bits_on_indexes_08003ff4();\n  do {\n    update_params_based_on_leading_zeroes_08003f3c(1,0);\n    wait_for_100_ms_08001168();\n    update_params_based_on_leading_zeroes_08003f3c(0,1);\n    wait_for_100_ms_08001168();\n    update_params_based_on_leading_zeroes_08003f3c(0,0,1);\n    wait_for_100_ms_08001168();\n    iteration_count--;\n  } while (iteration_count != 0);\n  update_params_based_on_leading_zeroes_08003f3c(1,1);\n  return;\n}",
            "called": [
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_08003ff4",
                "FUN_0800458c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "update_params_and_wait_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006070"
            ],
            "imported": true,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "uVar1": "current_value",
                "puVar2": "ptr2",
                "DAT_080023cc": "ptr1",
                "FUN_08002368": "set_values_08002368",
                "param_1": "memory_location",
                "param_2": "values"
            },
            "code": "void set_values_08002368(uint *memory_location, uint *values) {\n  uint current_value = *memory_location;\n  if ((((memory_location == DAT_080023cc) || (memory_location == (uint *)0x40000000)) ||\n      (memory_location == DAT_080023cc - 0x4a00)) || (memory_location == DAT_080023cc - 0x4900)) {\n    current_value = current_value & 0xffffff8f | values[1];\n    if (((memory_location == DAT_080023cc) || (memory_location == (uint *)0x40000000)) ||\n       ((memory_location == DAT_080023cc - 0x4a00 || (memory_location == DAT_080023cc - 0x4900)))) {\n      current_value = current_value & 0xfffffcff | values[3];\n    }\n  }\n  *memory_location = current_value;\n  memory_location[0xb] = values[2];\n  memory_location[10] = *values;\n  uint* ptr2 = DAT_080023cc;\n  if (memory_location == DAT_080023cc) {\n    ptr2 = (uint *)values[4];\n  }\n  if (memory_location == DAT_080023cc) {\n    memory_location[0xc] = (uint)ptr2;\n  }\n  memory_location[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": true,
            "current_name": "set_values_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "set_bit_08002520",
                "param_1": "buffer",
                "param_2": "bit_index",
                "PTR_": "buffer_",
                "param_3": "bit_value",
                "DAT_": "data_"
            },
            "code": "void set_bit_08002520(uint32_t* buffer, uint32_t bit_index, uint32_t bit_value) {\n  uint32_t* PTR_ptr = buffer + 0x20;\n  uint32_t bit_mask = ~(1 << (bit_index & 0xff));\n  *PTR_ptr = (*PTR_ptr & bit_mask) | (bit_value << (bit_index & 0xff));\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": true,
            "current_name": "set_bit_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "uVar1": "value_1",
                "FUN_08002008": "calculate_result_08002008",
                "puVar6": "data_ptr",
                "puVar7": "result_ptr",
                "DAT_08002094": "DATA_3",
                "DAT_08002098": "DATA_4",
                "uVar3": "flags",
                "uVar2": "value_2",
                "local_20": "TABLE",
                "uVar5": "result",
                "uVar4": "leading_zeroes",
                "DAT_08002090": "DATA_2",
                "local_24": "local_array",
                "PTR_DAT_0800208c": "DATA_1"
            },
            "code": "uint calculate_result_08002008(void)\n{\n  uint result = 0;\n  uint flags = *(uint *)(PTR_DAT_0800208c + 4);\n  uint table_index = (flags & 0x3c0000) >> 0x10;\n  uint table_value = TABLE[table_index];\n  uint divisor = 1;\n  byte local_array[2] = {1, 2};\n\n  if ((flags & 0xc) == 8) {\n    uint leading_zeroes = count_leading_zeroes(0x3c00);\n    if ((int)(flags << 0xf) < 0) {\n      uint divisor_index = (flags & 0x20000) >> 17;\n      uint divisor_value = local_array[divisor_index];\n      uint divisor_leading_zeroes = count_leading_zeroes(0x4000);\n      divisor = divisor_value << divisor_leading_zeroes;\n    }\n    result = table_value * divisor;\n  }\n\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": true,
            "current_name": "calculate_result_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "iVar3": "data_values[0]",
                "uVar1": "updated_value1",
                "mask1": "0xffffffef",
                "mask3": "0xffffffdf",
                "param_1": "data_address",
                "mask2": "0xfffff3ff",
                "FUN_08002404": "update_data_08002404",
                "param_2": "data_values",
                "uVar2": "updated_value2"
            },
            "code": "void update_data_08002404(int data_address, int *data_values)\n{\n  uint32_t mask1 = 0xffffffef;\n  uint32_t mask2 = 0xfffff3ff;\n  uint32_t mask3 = 0xffffffdf;\n  uint32_t updated_value1 = (data_values[2] << 4) & mask3;\n  uint32_t updated_value2 = *(uint32_t *)(data_address + 0x4) & mask2 | ((data_values[5] | data_values[6]) << 2);\n  if (data_address == PTR_DAT_08002458) {\n    updated_value1 = (updated_value1 & 0xffffff7f) | (data_values[3] << 4);\n    updated_value2 = updated_value2 | (data_values[5] | data_values[6]) << 2;\n  }\n  *(uint32_t *)(data_address + 0x4) = updated_value2;\n  *(uint32_t *)(data_address + 0x18) = (*(uint32_t *)(data_address + 0x18) & 0xffff8cff) | (data_values[0] << 8);\n  *(int *)(data_address + 0x38) = data_values[1];\n  *(uint32_t *)(data_address + 0x20) = updated_value1 & mask1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_data_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "iVar2": "input_validity_check_result",
                "local_50": "local_one",
                "local_4c": "pointer_to_string",
                "puVar4": "pointer_to_data_section",
                "uStack_44": "input_2_copy",
                "param_1": "input_1",
                "piVar3": "input_validity_check_pointer",
                "FUN_08005bc8": "calculate_and_return_result_08005bc8",
                "local_38": "zero_result",
                "local_48": "input_1_copy",
                "param_2": "input_2",
                "cVar1": "input_char",
                "uVar5": "result",
                "local_30": "input_validity_check",
                "uStack_3c": "input_2_copy",
                "local_40": "input_1_copy"
            },
            "code": "undefined8 calculate_and_return_result_08005bc8(undefined4 input_1, undefined4 input_2)\n{\n    char input_char;\n    int input_validity_check;\n    int *input_validity_check_pointer;\n    undefined4 *pointer_to_data_section;\n    undefined8 result;\n    undefined4 local_one = 1;\n    undefined *pointer_to_string = PTR_DAT_08005c6c;\n    undefined4 input_1_copy = input_1;\n    undefined4 input_2_copy = input_2;\n    undefined8 zero_result;\n    int input_validity_check_result;\n    result = calculate_float_08006c0c();\n    input_char = *PTR_DAT_08005c68;\n    if (input_char == -1)\n    {\n        return result;\n    }\n    input_validity_check = is_valid_input_08000a04(input_1, input_2, input_1, input_2);\n    if (input_validity_check != 0)\n    {\n        return result;\n    }\n    input_validity_check_result = is_string_terminated_080009b4(input_1, input_2, 0, 0);\n    if (input_validity_check_result == 0)\n    {\n        return result;\n    }\n    if (input_char == '\\0')\n    {\n        zero_result = 0;\n        input_validity_check_result = returnZero_0800709e(&local_one);\n        if (input_validity_check_result != 0)\n        {\n            goto LAB_08005c2e;\n        }\n    }\n    else\n    {\n        zero_result = FUNC_08000724(0, 0, 0, 0);\n        if (input_char != '\\x02')\n        {\n            goto LAB_08005c26;\n        }\n    }\n    pointer_to_data_section = (undefined4 *)get_pointer_value_from_data_section_080072ac();\n    *pointer_to_data_section = 0x21;\nLAB_08005c2e:\n    if (input_validity_check != 0)\n    {\n        input_validity_check_pointer = (int *)get_pointer_value_from_data_section_080072ac();\n        *input_validity_check_pointer = input_validity_check;\n    }\n    return zero_result;\n}",
            "called": [
                "FUN_08006c0c",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_0800709e",
                "FUN_080009b4",
                "FUN_08000724"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "calculate_and_return_result_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "iVar1": "ptr_i_var",
                "param_1": "ptr_param_1",
                "FUN_08001436": "check_flag_08001436",
                "*(undefined *)((int)param_1 + 0x35)": "*(undefined *)((int)ptr_param_1 + 0x35)",
                "param_1[0xe]": "ptr_param_1[14]",
                "*(uint *)(iVar1 + 0x14)": "*(uint *)(ptr_i_var + 0x14)",
                "*(undefined *)(param_1 + 0xd)": "*(undefined *)(ptr_param_1 + 13)"
            },
            "code": "int check_flag_08001436(int *ptr_param_1)\n{\n  int ptr_i_var = *ptr_param_1;\n  if ((*(uint *)(ptr_i_var + 0x14) & 0x400) != 0) {\n    *(uint *)(ptr_i_var + 0x14) &= 0xfffffbff;\n    ptr_param_1[14] = 4;\n    *(undefined *)((int)ptr_param_1 + 0x35) = 0x20;\n    *(undefined *)(ptr_param_1 + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": true,
            "current_name": "check_flag_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "PTR_DAT_08004a7c": "data_storage",
                "puVar2": "data_updated",
                "puVar3": "data_storage",
                "DAT_08004a80": "data_format",
                "FUN_08004a30": "update_data_if_needed_08004a30",
                "PTR_DAT_08004a74": "current_data",
                "PTR_DAT_08004a78": "data_updated",
                "puVar1": "current_data",
                "uVar4": "data"
            },
            "code": "void update_data_if_needed_08004a30(void)\\n{\\n  undefined *PTR_DAT_08004a74 = PTR_DAT_08004a74;\\n  undefined *PTR_DAT_08004a78 = PTR_DAT_08004a78;\\n  undefined *PTR_DAT_08004a7c = PTR_DAT_08004a7c;\\n  if (PTR_DAT_08004a74[1] != \"\\0\") {\\n    if (*PTR_DAT_08004a78 == \"\\0\") {\\n      undefined4 data = get_data_from_pointer_08003068();\\n      data = FUNC_08000cec(data, DAT_08004a80);\\n      *(undefined4 *)(PTR_DAT_08004a7c + 0x1c) = data;\\n      *PTR_DAT_08004a78 = 1;\\n    }\\n    else {\\n      undefined4 data = get_data_from_pointer_08003068();\\n      data = FUNC_08000cec(data, DAT_08004a80);\\n      *(undefined4 *)(PTR_DAT_08004a7c + 0x30) = data;\\n    }\\n  }\\n  if (PTR_DAT_08004a74[1] == \"\\0\") {\\n    if (*PTR_DAT_08004a78 != \"\\0\") {\\n      *PTR_DAT_08004a78 = 0;\\n    }\\n    *(undefined4 *)(PTR_DAT_08004a7c + 0x48) = *(undefined4 *)(PTR_DAT_08004a74 + 4);\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "update_data_if_needed_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "iVar5": "data_int_1",
                "puVar2": "data_ptr_2",
                "FUN_08004c70": "initialize_and_check_data_08004c70",
                "puVar1": "data_ptr_1",
                "uVar3": "data_val_1",
                "uVar4": "data_val_2"
            },
            "code": "int initialize_and_check_data_08004c70() {\n  undefined *data_ptr_1;\n  undefined *data_ptr_2;\n  undefined data_val_1;\n  uint32_t data_val_2;\n  int32_t data_int_1;\n\n  initialize_data();\n  data_ptr_2 = PTR_DAT_08004c88;\n  data_ptr_1 = PTR_DAT_08004c84;\n  if ((PTR_DAT_08004c88[0x39] == '\\x01') || (PTR_DAT_08004c88[0x39] == '\\x12')) {\n    if (PTR_DAT_08004c84 == (undefined *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c88[0x38] != '\\x01') {\n      PTR_DAT_08004c88[0x38] = 1;\n      *(undefined4 *)(data_ptr_2 + 0x3c) = 0;\n      *(uint16_t *)(data_ptr_2 + 0x2c) = 1;\n      *(uint16_t *)(data_ptr_2 + 0x2e) = 1;\n      data_ptr_2[0x38] = 0;\n      if (data_ptr_2[0x39] == '\\x12') {\n        data_val_1 = 0x32;\n      }\n      else {\n        data_val_1 = 0x22;\n      }\n      data_int_1 = *(int32_t *)data_ptr_2;\n      data_ptr_2[0x39] = data_val_1;\n      data_val_2 = *(uint32_t *)(data_int_1 + 0xc);\n      *(undefined **)(data_ptr_2 + 0x28) = data_ptr_1;\n      *(uint32_t *)(data_int_1 + 0xc) = data_val_2 | 0x100;\n      *(uint32_t *)(data_int_1 + 0x14) = *(uint32_t *)(data_int_1 + 0x14) | 1;\n      *(uint32_t *)(data_int_1 + 0xc) = *(uint32_t *)(data_int_1 + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "initialize_and_check_data_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "bVar2": "values_equal",
                "bVar3": "values_less_than",
                "uVar1": "xor_value",
                "param_1": "value1",
                "FUN_08000904": "compare_values_08000904",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "code": "uint compare_values_08000904(uint value1, uint value2, uint value3, uint value4)\n{\n  bool values_equal;\n  bool values_less_than;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  values_equal = (value1 | value2 << 1) == 0;\n  if (values_equal) {\n    values_equal = (value3 | value4 << 1) == 0;\n  }\n  if (!values_equal) {\n    values_equal = value2 == value4;\n  }\n  if (values_equal) {\n    values_equal = value1 == value3;\n  }\n  if (!values_equal) {\n    uint xor_value = value2 ^ value4;\n    values_equal = xor_value == 0;\n    if (-1 < (int)xor_value) {\n      values_equal = value2 == value4;\n    }\n    values_less_than = -1 < (int)xor_value && value4 <= value2;\n    if (values_equal) {\n      values_less_than = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!values_less_than) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": true,
            "current_name": "compare_values_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "sVar2": "short_1",
                "uVar1": "input_val_2",
                "bool_8": "bool_2",
                "puVar4": "ptr_4",
                "param_1": "params",
                "puVar6": "ptr_2",
                "FUN_0800299a": "process_input_0800299a",
                "uVar3": "input_val_1",
                "uVar5": "undefined_1",
                "uVar7": "uint_1",
                "bVar8": "bool_1"
            },
            "code": "void process_input_0800299a(uint **params)\n{\n  uint input_val_1;\n  uint input_val_2;\n  uint *ptr_1;\n  uint *ptr_2;\n  uint *ptr_3;\n  bool bool_1;\n  bool bool_2;\n  uint *ptr_4;\n  \n  ptr_1 = *params;\n  input_val_1 = *ptr_1;\n  input_val_2 = ptr_1[3];\n  if ((input_val_1 & 0xf) == 0) {\n    bool_1 = ((int)(input_val_1 << 0x1a) < 0) && ((int)(input_val_2 << 0x1a) < 0);\n    if (bool_1) {\n      process_input_0800299a_0800290c();\n      return;\n    }\n  }\n  else {\n    bool_2 = (ptr_1[5] & 1) != 0 || (input_val_2 & 0x120) != 0;\n    if (bool_2) {\n      ptr_2 = (uint *)(input_val_1 << 0x1f);\n      if ((int)ptr_2 < 0) {\n        bool_1 = (int)(input_val_2 << 0x17) < 0;\n        if (bool_1) {\n          ptr_2 = (uint *)((uint)params[0xf] | 1);\n        }\n        if (bool_1) {\n          params[0xf] = ptr_2;\n        }\n      }\n      if (((int)(input_val_1 << 0x1d) < 0) && (ptr_1[5] & 1)) {\n        params[0xf] = (uint *)((uint)params[0xf] | 2);\n      }\n      if (((int)(input_val_1 << 0x1e) < 0) && (ptr_1[5] & 1)) {\n        params[0xf] = (uint *)((uint)params[0xf] | 4);\n      }\n      if (((int)(input_val_1 << 0x1c) < 0) && (ptr_1[5] & 1)) {\n        params[0xf] = (uint *)((uint)params[0xf] | 8);\n      }\n      if (params[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(input_val_1 << 0x1a) < 0) && ((int)(input_val_2 << 0x1a) < 0)) {\n        process_input_0800299a(params);\n      }\n      ptr_2 = *params;\n      if ((-1 < (int)params[0xf] << 0x1c) && ((ptr_2[5] & 0x40) == 0)) {\n        do_nothing_08002998(params);\n        params[0xf] = (uint *)0x0;\n        return;\n      }\n      ptr_2[3] = ptr_2[3] & 0xfffffedf;\n      ptr_2[5] = ptr_2[5] & 0xfffffffe;\n      *(undefined *)((int)params + 0x39) = 1;\n      do_nothing_08002998(params);\n      return;\n    }\n  }\n  if (((int)(input_val_1 << 0x18) < 0) && ((int)(input_val_2 << 0x18) < 0)) {\n    if ((*(byte *)((int)params + 0x39) & 0xdf) == 0x12) {\n      ptr_4 = params[8];\n      if (params[2] == (uint *)0x1000) {\n        ptr_2[1] = *(ushort *)ptr_4 & 0x1ff;\n        if (params[4] == (uint *)0x0) {\n          ptr_4 = (uint *)((int)ptr_4 + 2);\n        }\n        else {\n          ptr_4 = (uint *)((int)ptr_4 + 1);\n        }\n        params[8] = ptr_4;\n      }\n      else {\n        params[8] = (uint *)((int)ptr_4 + 1);\n        ptr_2[1] = (uint)*(byte *)ptr_4;\n      }\n      ptr_1[0x13] = ptr_1[0x13] - 1;\n      if (ptr_1[0x13] == 0) {\n        ptr_1[3] = ptr_1[3] & 0xffffff7f;\n        ptr_1[3] = ptr_1[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(input_val_1 << 0x19) < 0) && ((int)(input_val_2 << 0x19) < 0)) {\n    ptr_1[3] = ptr_1[3] & 0xffffffbf;\n    if (*(char *)((int)params + 0x39) == '2') {\n      uVar5 = 0x22;\n    }\n    else {\n      uVar5 = 1;\n    }\n    *(undefined *)((int)params + 0x39) = uVar5;\n    do_nothing_0800290a(params);\n  }\n  return;\n}",
            "called": [
                "FUN_0800290c",
                "FUN_0800290a",
                "FUN_08002998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": true,
            "current_name": "process_input_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "PTR_DAT_08001158": "count_ptr",
                "FUN_0800114c": "increment_count_0800114c"
            },
            "code": "void increment_count_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "increment_count_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "bVar4": "is_index_4_not_4",
                "suffix_size": "suffix_size",
                "iVar1": "error_code",
                "data_length": "data_length",
                "param_1": "address",
                "remaining_size": "remaining_size",
                "prefix_size": "prefix_size",
                "param_2": "data",
                "param_3": "data_size",
                "param_4": "format",
                "FUN_080052e4": "write_data_to_memory_080052e4",
                "param_5": "write_function",
                "uVar3": "data_index",
                "uVar2": "max_size"
            },
            "code": "int write_data_to_memory_080052e4(int address, uint *data, uint *data_size, int format, code *write_function) {\\n  int error_code;\\n  uint max_size = data[4];\\n  if ((int)data[4] < (int)data[2]) {\\n    max_size = data[2];\\n  }\\n  *data_size = max_size;\\n  if (*(char *)((int)data + 0x43) != \"\\0\") {\\n    *data_size = max_size + 1;\\n  }\\n  if ((int)(*data << 0x1a) < 0) {\\n    *data_size = *data_size + 2;\\n  }\\n  uint data_index = *data & 6;\\n  if (data_index == 0) {\\n    for (; (int)data_index < (int)(data[3] - *data_size); data_index++) {\\n      error_code = (*write_function)(address, format, (int)data + 0x19, 1);\\n      if (error_code == -1) {\\n        return 0xffffffff;\\n      }\\n    }\\n  }\\n  uint prefix_size = (uint)*(byte *)((int)data + 0x43);\\n  if (prefix_size != 0) {\\n    prefix_size = 1;\\n  }\\n  uint suffix_size = prefix_size;\\n  if ((int)(*data << 0x1a) < 0) {\\n    *(undefined *)((int)data + prefix_size + 0x43) = 0x30;\\n    suffix_size = prefix_size + 2;\\n    *(undefined *)((int)data + prefix_size + 0x44) = *(undefined *)((int)data + 0x45);\\n  }\\n  error_code = (*write_function)(address, format, (int)data + 0x43, suffix_size);\\n  if (error_code != -1) {\\n    uint data_length = data[3];\\n    bool is_index_4_not_4 = (*data & 6) != 4;\\n    if (is_index_4_not_4) {\\n      data_length = 0;\\n    }\\n    uint remaining_size = 0;\\n    if (!is_index_4_not_4) {\\n      data_length = data_length - *data_size;\\n    }\\n    if (!is_index_4_not_4) {\\n      data_length = data_length & ~((int)data_length >> 0x1f);\\n    }\\n    if ((int)data[4] < (int)data[2]) {\\n      data_length = data_length + (data[2] - data[4]);\\n    }\\n    while (true) {\\n      if (data_length == remaining_size) {\\n        return 0;\\n      }\\n      error_code = (*write_function)(address, format, (int)data + 0x1a, 1);\\n      if (error_code == -1) {\\n        break;\\n      }\\n      remaining_size++;\\n    }\\n  }\\n  return 0xffffffff;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": true,
            "current_name": "write_data_to_memory_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "iVar1": "start_value",
                "iVar2": "flag_check",
                "param_1": "flag_ptr",
                "param_2": "flag_limit",
                "FUN_080014e2": "check_flag_and_update_080014e2"
            },
            "code": "int check_flag_and_update_080014e2(int *flag_ptr, uint flag_limit)\n{\n  int start_value = get_start_value();\n  while(1) {\n    if (*(int *)(*flag_ptr + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    int flag_check = check_flag(flag_ptr);\n    if (flag_check != 0) break;\n    if ((flag_limit != 0xffffffff) && ((flag_limit == 0 || (flag_check = get_start_value(), flag_limit < (uint)(flag_check - start_value)))) {\n      flag_ptr[0xe] = flag_ptr[0xe] | 0x20;\n      *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n      *(undefined *)(flag_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001828",
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": true,
            "current_name": "check_flag_and_update_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "param_1": "ptr_param_data",
                "param_2": "param_input",
                "*(uint *)(param_1 + 0xc)": "*ptr_param_2",
                "FUN_0800142e": "xor_with_param_0800142e"
            },
            "code": "void xor_with_param_0800142e(uint* ptr_param_data, uint param_input){\n  uint* ptr_param_2 = ptr_param_data + 0xc;\n  *ptr_param_2 = param_input ^ *ptr_param_2;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "xor_with_param_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "update_flags_08004d8c",
                "param_1": "flag_value",
                "DAT_08004e0c": "FLAG_C",
                "_DAT_4002101c": "FLAG_B_PTR",
                "DAT_08004e08": "FLAG_PTR",
                "DAT_08004e10": "FLAG_D",
                "DAT_08004e04": "FLAG_A"
            },
            "code": "void update_flags_08004d8c(int *flag_value)\n{\n  int value = *flag_value;\n  if (value == DAT_08004e04)\n  {\n    *(uint *)(DAT_08004e08 + 0x18) |= DAT_08004e04_BIT;\n  }\n  else if (value == FLAG_B)\n  {\n    *_DAT_4002101c |= FLAG_B_BIT;\n  }\n  else if (value == DAT_08004e0c)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e0c_BIT;\n  }\n  else if (value == DAT_08004e10)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e10_BIT;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": true,
            "current_name": "update_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_based_on_mask_08002250",
                "uVar1": "shift_count",
                "DAT_08002274": "data_pointer_3",
                "PTR_DAT_08002278": "data_pointer_2",
                "PTR_DAT_0800227c": "data_pointer_1"
            },
            "code": "uint get_shifted_value_based_on_mask_08002250(void)\n{\n  uint shift_count;\n\n  shift_count = count_leading_zeroes(0x1c0000);\n  return *(uint *)PTR_DAT_0800227c >> PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (shift_count & 0xff)];\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": true,
            "current_name": "get_shifted_value_based_on_mask_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_string_terminated_080009b4",
                "in_CY": "current_char"
            },
            "code": "bool is_string_terminated_080009b4(void)\n{\n  char current_char;\n  compare_values_and_return_result();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_string_terminated_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_at_index_080011fc",
                "DAT_08001210": "data_start_address",
                "param_1": "index"
            },
            "code": "void set_bit_at_index_080011fc(uint index) {\n    uint shift_amount = index & 0x1f;\n    uint* data_ptr = (uint*)(DAT_08001210 + (index >> 5) * 4);\n    *data_ptr = 1 << shift_amount;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": true,
            "current_name": "set_bit_at_index_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_data_from_pointer_08003068",
                "PTR_DAT_08003070": "data_ptr"
            },
            "code": "get_data_from_pointer_08003068() {\n  return *(undefined4 *)PTR_DAT_08003070;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": true,
            "current_name": "get_data_from_pointer_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_08005646",
                "param_1": "dst",
                "param_2": "src",
                "param_3": "len",
                "puVar1": "end"
            },
            "code": "void reverse_copy_08005646(char* dst, char* src, int len) {\n  char* end = src + len;\n  if ((src < dst) && (dst < end)) {\n    dst += len;\n    len -= (int)end;\n    while (end + len != (char*)0x0) {\n      end--;\n      dst--;\n      *dst = *end;\n    }\n    return;\n  }\n  dst--;\n  for (; src != end; src++) {\n    dst++;\n    *dst = *src;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "reverse_copy_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "compare_values_and_return_result_08000990",
                "param_1": "input_value"
            },
            "code": "undefined4 compare_values_and_return_result_08000990(undefined4 input_value)\n{\n  compare_values();\n  return input_value;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009a0",
                "FUN_080009c8",
                "FUN_080009b4",
                "FUN_08000980"
            ],
            "imported": true,
            "current_name": "compare_values_and_return_result_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "*PTR_DAT_08000128": "isFirstCall",
                "PTR_FUN_08000130": "defaultParam",
                "FUN_08000110": "checkIfFirstCallAndReturnNewParamIfSet_08000110",
                "param_1": "param",
                "DAT_0800012c": "isParamSet"
            },
            "code": "undefined* checkIfFirstCallAndReturnNewParamIfSet_08000110(undefined* param)\\n{\\n  if (**PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      param = PTR_FUN_08000130;\\n    }\\n    **PTR_DAT_08000128 = 1;\\n  }\\n  return param;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": true,
            "current_name": "checkIfFirstCallAndReturnNewParamIfSet_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "returnZero_0800709e"
            },
            "code": "int returnZero_0800709e(void) {\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "returnZero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_new_value_08002ec0",
                "puVar1": "current_value_ptr",
                "uVar3": "previous_value",
                "uVar2": "constant_1",
                "uVar4": "constant_2"
            },
            "code": "void calculate_new_value_08002ec0(void)\n{\n  undefined *current_value_ptr;\n  undefined4 previous_value;\n  undefined4 constant_1;\n  undefined4 constant_2;\n  \n  current_value_ptr = PTR_DAT_08002ed0;\n  constant_2 = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  previous_value = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  constant_1 = FUNC_08000ad8(0x3f800000,constant_2);\n  constant_1 = FUNC_08000cec(constant_1,previous_value);\n  previous_value = FUNC_08000cec(constant_2,*(undefined4 *)current_value_ptr);\n  constant_1 = FUNC_08000adc(previous_value,constant_1);\n  *(undefined4 *)current_value_ptr = constant_1;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "calculate_new_value_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "local_c": "local_var2",
                "FUN_08004434": "process_input_08004434",
                "uStack_8": "local_var3",
                "param_1": "input_param",
                "param_2": "input_flag",
                "param_3": "input_data",
                "local_10": "local_var1"
            },
            "code": "void process_input_08004434(uint32_t input_param,uint32_t input_flag,uint32_t input_data)\n{\n  uint32_t local_var1;\n  uint32_t local_var2;\n  uint32_t local_var3;\n  \n  local_var1 = *(uint32_t *)PTR_INPUT_DATA;\n  local_var2 = input_flag & 0xffff0000 | (uint32_t)*(uint16_t *)(PTR_INPUT_DATA + 4);\n  local_var3 = input_data;\n  call_process_data(0x6d,&local_var1,6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_input_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "imported": true,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "count2": "count2",
                "uVar11": "temp_var11",
                "uVar12": "temp_var12",
                "uVar13": "temp_var13",
                "DAT_08006d60": "DAT_08006d60",
                "iVar3": "temp_var3",
                "sign": "sign",
                "iVar7": "temp_var7",
                "result_exponent": "result_exponent",
                "param_1": "input1",
                "iVar10": "temp_var10",
                "FUN_08006c0c": "calculate_float_08006c0c",
                "result": "result",
                "divisor": "divisor",
                "uVar2": "temp_var2",
                "uVar5": "temp_var5",
                "uVar4": "temp_var4",
                "temp_mantissa": "temp_mantissa",
                "uVar6": "temp_var6",
                "uVar9": "temp_var9",
                "uVar8": "temp_var8",
                "mask": "mask",
                "exponent": "exponent",
                "temp": "temp",
                "uVar1": "temp_var1",
                "count": "count",
                "divisor2": "divisor2",
                "quotient": "quotient",
                "param_2": "input2",
                "mantissa": "mantissa",
                "temp_divisor": "temp_divisor",
                "result_mantissa": "result_mantissa",
                "remainder": "remainder"
            },
            "code": "uint64_t calculate_float_08006c0c(uint32_t input1, uint32_t input2)\n{\n  uint32_t mask = 0x7fffffff;\n  uint32_t exponent;\n  uint32_t mantissa;\n  uint32_t temp;\n  uint32_t quotient;\n  uint32_t remainder;\n  uint32_t result_mantissa = 0;\n  uint32_t result_exponent = 0;\n  uint32_t sign = 0;\n  uint64_t result;\n\n  if ((DAT_08006d60 & ~input2) == 0) {\n    uint64_t temp_result = multiply_and_add(input1, input2, input1, input2);\n    result_mantissa = (uint32_t)temp_result;\n    result_exponent = (uint32_t)(temp_result >> 32);\n  }\n  else if ((int)input2 < 1) {\n    if ((input2 & mask | input1) == 0) {\n      result = ((uint64_t)input2 << 32) | input1;\n      return result;\n    }\n    else if (input2 != 0) {\n      uint64_t temp_result = multiply_and_add(input1, input2, input1, input2);\n      result_mantissa = (uint32_t)temp_result;\n      result_exponent = (uint32_t)(temp_result >> 32);\n      uint32_t temp_mantissa = (uint32_t)result_mantissa;\n      uint32_t temp_exponent = (uint32_t)(result_mantissa >> 32);\n      uint64_t temp_result2 = multiply_and_add(temp_mantissa, temp_exponent, temp_mantissa, temp_exponent);\n      result_mantissa = (uint32_t)temp_result2;\n      result_exponent = (uint32_t)(temp_result2 >> 32);\n    }\n  }\n  else {\n    exponent = (int)input2 >> 0x14;\n    if (exponent == 0) {\n      while (input2 == 0) {\n        exponent = exponent - 0x15;\n        input2 = input1 >> 0xb;\n        input1 = input1 << 0x15;\n      }\n      uint32_t count = 0;\n      for (; -1 < (int)(input2 << 0xb); input2 = input2 << 1) {\n        count = count + 1;\n      }\n      exponent = exponent - (count - 1);\n      input2 = input2 | input1 >> (0x20 - count & 0xff);\n      input1 = input1 << (count & 0xff);\n    }\n    mantissa = input2 & 0xfffff | 0x100000;\n    if ((exponent + -0x3ff) * -0x80000000 < 0) {\n      mantissa = mantissa * 2 - ((int)input1 >> 0x1f);\n      input1 = input1 << 1;\n    }\n    mantissa = mantissa * 2 - ((int)input1 >> 0x1f);\n    uint32_t count = 0x16;\n    uint32_t divisor = 0x200000;\n    input1 = input1 << 1;\n    do {\n      temp = result_mantissa + divisor;\n      if (temp <= (int)mantissa) {\n        mantissa = mantissa - temp;\n        result_mantissa = temp + divisor;\n        result_exponent = result_exponent + divisor;\n      }\n      count = count - 1;\n      mantissa = mantissa * 2 - ((int)input1 >> 0x1f);\n      divisor = divisor >> 1;\n      input1 = input1 << 1;\n    } while (count != 0);\n    uint32_t count2 = 0x20;\n    uint32_t divisor2 = 0x80000000;\n    uint32_t temp_divisor = divisor;\n    uint32_t temp_mantissa = result_mantissa;\n    do {\n      quotient = result_mantissa / temp_divisor;\n      remainder = result_mantissa - quotient * temp_divisor;\n      temp = temp_divisor + divisor2;\n      if ((quotient == 0) || ((int)temp <= (int)remainder)) {\n        temp_divisor = temp_divisor >> 1;\n        divisor2 = divisor2 >> 1;\n        count2 = count2 - 1;\n      }\n      else {\n        result_mantissa = quotient;\n        result_exponent = result_exponent + divisor2;\n        temp_divisor = temp_divisor >> 1;\n        divisor2 = divisor2 >> 1;\n        temp_mantissa = remainder;\n        mantissa = mantissa - temp_divisor;\n        if (mantissa > temp_mantissa) {\n          mantissa = mantissa + temp_divisor;\n          result_mantissa = result_mantissa + 1;\n        }\n        temp_divisor = temp_divisor >> 1;\n        divisor2 = divisor2 >> 1;\n        count2 = count2 - 1;\n      }\n    } while (count2 != 0);\n    if ((input1 | mantissa) != 0) {\n      if (result_exponent == 0xffffffff) {\n        result_exponent = count2;\n      }\n      else {\n        result_exponent = result_exponent + 1 & 0xfffffffe;\n      }\n    }\n    result_exponent = (result_exponent >> 1) + 0x3fe00000 + (exponent + -0x3ff >> 1) * 0x100000;\n    if ((int)input2 < 0) {\n      sign = 0x80000000;\n    }\n    result = ((uint64_t)result_exponent << 32) | result_mantissa;\n    result |= sign;\n    return result;\n  }\n}",
            "called": [
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08006228",
                "FUN_08005bc8",
                "FUN_08005c70"
            ],
            "imported": true,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "puVar2": "ptr2",
                "param_1": "param1",
                "FUN_0800426c": "calculate_parameters_0800426c",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "ptr1",
                "uVar3": "var1",
                "uVar5": "var3",
                "uVar4": "var2",
                "uVar7": "var6",
                "uVar6": "var5",
                "uVar9": "var8",
                "uVar8": "var7"
            },
            "code": "void calculate_parameters_0800426c(float param1, float param2, float param3, float param4)\n{\n  float var1, var2, var3, var4;\n  var1 = FUNC_08000ad8();\n  var2 = FUNC_08000adc(param1, param2);\n  var3 = FUNC_08000ad8(var1, param3);\n  var3 = FUNC_08000adc(var3, param4);\n  FUNC_08000ad8(var3, DAT_080042fc);\n  float var5 = decode_float_08001078();\n  var3 = FUNC_08000ad8(var2, param3);\n  var3 = FUNC_08000ad8(var3, param4);\n  FUNC_08000ad8(var3, DAT_080042fc);\n  float var6 = decode_float_08001078();\n  var1 = FUNC_08000adc(var1, param3);\n  var1 = FUNC_08000ad8(var1, param4);\n  FUNC_08000ad8(var1, DAT_080042fc);\n  float var7 = decode_float_08001078();\n  var1 = FUNC_08000adc(param3, var2);\n  var1 = FUNC_08000adc(var1, param4);\n  FUNC_08000ad8(var1, DAT_080042fc);\n  float var8 = decode_float_08001078();\n  if (var8 > 999) {\n    var8 = 1000;\n  }\n  if (var7 > 999) {\n    var7 = 1000;\n  }\n  if (var6 > 999) {\n    var6 = 1000;\n  }\n  if (var5 > 999) {\n    var5 = 1000;\n  }\n  float parameters[4] = {var8, var6, var7, var5};\n  set_param_value_08003fc4();\n  set_parameter_value_08003fd0(parameters[0]);\n  set_parameter_in_memory_08003fdc(parameters[1]);\n  set_parameter_value_08003fe8(parameters[2]);\n  short* ptr = PTR_DAT_08004268;\n  *(ptr) = (short)parameters[3] + 1000;\n  *(ptr + 2) = (short)parameters[0] + 1000;\n  *(ptr + 4) = (short)parameters[1] + 1000;\n  *(ptr + 6) = (short)parameters[2] + 1000;\n}\n",
            "called": [
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08000ad8",
                "FUN_08001078",
                "FUN_08003fd0",
                "FUN_08000adc",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "calculate_parameters_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "puVar2": "current_array",
                "param_1": "bit_array",
                "FUN_08002538": "set_bit_and_toggle_08002538",
                "param_2": "bit_index",
                "DAT_08002560": "default_array",
                "puVar1": "default_array"
            },
            "code": "uint set_bit_and_toggle_08002538(uint **bit_array, uint bit_index)\n{\n  uint *current_array;\n  uint *DAT_08002560;\n\n  set_bit_08002520(*bit_array, bit_index, 1);\n  current_array = *bit_array;\n  DAT_08002560 = DAT_08002560;\n  if (current_array == DAT_08002560) {\n    DAT_08002560 = (uint *)(current_array[0x11] | 0x8000);\n  }\n  if (current_array == DAT_08002560) {\n    current_array[0x11] = (uint)DAT_08002560;\n  }\n  *current_array = *current_array | 1;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": true,
            "current_name": "set_bit_and_toggle_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "iVar3": "data_idx",
                "iVar5": "max_data_length",
                "puVar4": "dest_buffer",
                "param_1": "data_buffer",
                "FUN_080040e8": "process_i2c_data_080040e8",
                "param_2": "buffer_offset",
                "param_3": "buffer_length",
                "param_4": "max_data_length",
                "puVar1": "src_data",
                "uVar2": "processed_data"
            },
            "code": "void process_i2c_data_080040e8(unsigned char *data_buffer, int buffer_offset, int buffer_length, int max_data_length) {\n  unsigned char *src_data = PTR_s____Src_i2c_c_08004118;\n  unsigned char processed_data;\n  unsigned char *dest_buffer = (unsigned char *)(buffer_length - 1);\n  int data_idx;\n  for (data_idx = 0; data_idx < max_data_length; data_idx++) {\n    processed_data = check_and_process_data_0800407c(data_buffer, (buffer_offset + data_idx) & 0xffff, src_data, 0x4c, max_data_length);\n    dest_buffer++;\n    *dest_buffer = processed_data;\n  }\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08003298",
                "FUN_08002bf0",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "process_i2c_data_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "local_70": "max_char_count",
                "local_6c": "width",
                "uStack_8": "arg_index_2",
                "param_1": "output_string",
                "uStack_4": "arg_index_3",
                "uStack_c": "arg_index_1",
                "FUN_08004ffc": "print_formatted_string_08004ffc",
                "param_2": "max_output_size",
                "local_6a": "precision",
                "param_3": "arg1",
                "param_4": "arg2",
                "local_64": "format_string_index",
                "local_68": "current_output_position",
                "local_78": "output_buffer"
            },
            "code": "void print_formatted_string_08004ffc(char *output_string, int max_output_size, int arg1, int arg2, int arg3) {\n  char *output_buffer[2];\n  int max_char_count;\n  short width;\n  short precision;\n  char *current_output_position;\n  int format_string_index;\n  int arg_index_1;\n  int arg_index_2;\n  int arg_index_3;\n  \n  width = 520;\n  max_char_count = 2147483647;\n  precision = 65535;\n  output_buffer[0] = output_string;\n  current_output_position = output_string;\n  arg_index_1 = arg1;\n  arg_index_2 = arg2;\n  arg_index_3 = arg3;\n  format_string_index = 0;\n  parse_format_string(*(int **)PTR_PTR_DAT_08005040, output_buffer, arg1);\n  *output_buffer[0] = 0;\n  return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": true,
            "current_name": "print_formatted_string_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "PTR_DAT_08001164": "PTR_DATA",
                "FUN_0800115c": "get_value_from_pointer_0800115c"
            },
            "code": "get_value_from_pointer_0800115c() {\n  return *(undefined4 *)PTR_DAT_08001164;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_0800209c",
                "FUN_08001938",
                "FUN_08001828",
                "FUN_08004c18",
                "FUN_08001530",
                "FUN_08001b58",
                "thunk_FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460",
                "FUN_080015e8",
                "FUN_080016f4",
                "thunk_FUN_0800115c"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "sVar1": "accel_z",
                "sVar2": "temp",
                "puVar3": "i2c_data_ptr",
                "iVar7": "status",
                "uStack_25": "unused_byte1",
                "puVar4": "hash_result_ptr",
                "param_1": "i2c_data",
                "puVar5": "hash_data_ptr",
                "puVar6": "hash_data_ptr2",
                "uStack_21": "i2c_data_byte",
                "local_28": "accel_x",
                "param_2": "i2c_data_size",
                "param_3": "hash_data",
                "param_4": "hash_data_size",
                "uStack_26": "unused_byte2",
                "FUN_08002d88": "process_mpu9250_data_08002d88",
                "local_24": "temp_high_byte",
                "uVar9": "hash_data_value",
                "local_23": "temp_low_byte",
                "uVar8": "hash_result",
                "local_22": "status_flag"
            },
            "code": "void process_mpu9250_data_08002d88(uint32_t i2c_data, uint32_t i2c_data_size, uint32_t hash_data, uint32_t hash_data_size) {\n  short accel_x;\n  short accel_y;\n  uint8_t i2c_data_byte;\n  uint32_t hash_result;\n  int32_t status = check_and_process_data(i2c_data, i2c_data_size, PTR_s____Src_MPU9250_c_08002e80, 0xd7, hash_data, hash_data_size);\n  if (status >= 0) {\n    process_i2c_data(i2c_data, 3, &accel_x, 7, PTR_s____Src_MPU9250_c_08002e80, 0xda);\n    if ((int32_t)(local_22 << 0x1c) < 0) {\n      *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n    }\n    else {\n      short accel_z = CONCAT11(i2c_data_byte, uStack_26);\n      short temp = CONCAT11(local_23, local_24);\n      *(short *)PTR_DAT_08002e84 = accel_x;\n      *(short *)(PTR_DAT_08002e84 + 2) = accel_z;\n      *(short *)(PTR_DAT_08002e84 + 4) = temp;\n      uint32_t *hash_data_ptr = PTR_DAT_08002e88;\n      uint32_t hash_result = calculate_hash(hash_data_ptr, hash_data_size);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)PTR_DAT_08002e98);\n      hash_result = FUNC_08000ad8(hash_result, *(uint32_t *)PTR_DAT_08002e9c);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)PTR_DAT_08002e8c);\n      uint32_t *hash_result_ptr = PTR_DAT_08002e90;\n      *hash_result_ptr = hash_result;\n      hash_result = calculate_hash(accel_x);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)PTR_DAT_08002e88);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)(PTR_DAT_08002e98 + 4));\n      hash_result = FUNC_08000ad8(hash_result, *(uint32_t *)(PTR_DAT_08002e9c + 4));\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)(PTR_DAT_08002e8c + 4));\n      *(uint32_t *)(PTR_DAT_08002e90 + 4) = hash_result;\n      hash_result = calculate_hash(accel_y);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)PTR_DAT_08002e88);\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)(PTR_DAT_08002e98 + 8));\n      hash_result = FUNC_08000ad8(hash_result, *(uint32_t *)(PTR_DAT_08002e9c + 8));\n      hash_result = FUNC_08000cec(hash_result, *(uint32_t *)(PTR_DAT_08002e8c + 8));\n      *(uint32_t *)(PTR_DAT_08002e90 + 8) = hash_result;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_0800407c",
                "FUN_080040e8",
                "FUN_08000ad8",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "process_mpu9250_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "iVar1": "leading_zeroes_count",
                "iVar4": "constant_term",
                "param_1": "input",
                "count_leading_zeroes": "count_leading_zeroes",
                "uVar3": "hash_value",
                "uVar2": "shift_amount",
                "FUN_08000c44": "calculate_hash_08000c44",
                "uVar5": "overflow"
            },
            "code": "uint calculate_hash_08000c44(uint input)\n{\n  int leading_zeroes_count = count_leading_zeroes(input);\n  uint hash_value = ((input << (leading_zeroes_count - 24)) | 0x4b000000) - (1 << (leading_zeroes_count - 7));\n  if (leading_zeroes_count > 7) {\n    uint shift_amount = leading_zeroes_count - 8;\n    uint shifted_input = input << shift_amount;\n    uint overflow = (shifted_input >> 31) & 1;\n    hash_value += shifted_input + (0xffffffff >> (32 - shift_amount)) + overflow;\n    if (overflow == 0x80000000) {\n      hash_value &= 0xfffffffe;\n    }\n  } else {\n    uint shift_amount = 24 + leading_zeroes_count;\n    uint shifted_input = input << shift_amount;\n    uint carry = (shifted_input >> 31) & 1;\n    hash_value += (input >> (32 - shift_amount)) - carry;\n    if ((shifted_input & 0x7fffffff) == 0) {\n      hash_value &= ~(shifted_input >> 31);\n    }\n  }\n  return hash_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "FUN_08000a04": "is_valid_input_08000a04"
            },
            "code": "int is_valid_input_08000a04(uint input1, int input2, uint input3, int input4) {\n    int is_input2_valid = ((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0);\n    int is_input4_valid = ((input4 << 1) >> 0x15 != -1) || ((input3 | input4 << 0xc) == 0);\n    if (is_input2_valid && is_input4_valid) {\n        return 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "iVar1": "ptr_j",
                "iVar2": "ptr_k",
                "iVar4": "ptr_k",
                "iVar5": "ptr_l",
                "iVar6": "ptr_i",
                "param_1": "ptr_param",
                "uVar3": "uVar4",
                "FUN_080025e8": "update_values_080025e8"
            },
            "code": "void update_values_080025e8(int *ptr_param){\n  int ptr_i = *ptr_param;\n  uint uVar3 = ptr_param[4];\n  *(uint *)(ptr_i + 0x10) = *(uint *)(ptr_i + 0x10) & 0xffffcfff | ptr_param[3];\n  *(uint *)(ptr_i + 0xc) = ptr_param[2] | uVar3 | ptr_param[5] | *(uint *)(ptr_i + 0xc) & 0xffffe9f3;\n  *(uint *)(ptr_i + 0x14) = *(uint *)(ptr_i + 0x14) & 0xfffffcff | ptr_param[6];\n  if (ptr_i == DAT_08002720) {\n    int ptr_j = get_shifted_value_based_on_mask_08002250();\n    int ptr_k = (int)(((ulonglong)(uint)(ptr_j * 0x19) / (ulonglong)(uint)(ptr_param[1] << 2)) / 100);\n    ptr_j = get_shifted_value_based_on_mask_08002250();\n    int ptr_l = ptr_param[1];\n    int ptr_m = get_shifted_value_based_on_mask_08002250();\n    ptr_m = (uint)(ptr_j * 0x19) / (uint)(ptr_l << 2) + (int)(((ulonglong)(uint)(ptr_m * 0x19) / (ulonglong)(uint)(ptr_param[1] << 2)) / 100) * -100;\n    ptr_j = get_shifted_value_based_on_mask_08002250();\n    uint uVar4 = (uint)(ptr_j * 0x19) / (uint)(ptr_param[1] << 2);\n    ptr_j = get_shifted_value_based_on_mask_08002250();\n  }\n  else {\n    int ptr_j = get_shifted_value_based_on_bit_position_08002220();\n    int ptr_k = (int)(((ulonglong)(uint)(ptr_j * 0x19) / (ulonglong)(uint)(ptr_param[1] << 2)) / 100);\n    ptr_j = get_shifted_value_based_on_bit_position_08002220();\n    int ptr_l = ptr_param[1];\n    int ptr_m = get_shifted_value_based_on_bit_position_08002220();\n    ptr_m = (uint)(ptr_j * 0x19) / (uint)(ptr_l << 2) + (int)(((ulonglong)(uint)(ptr_m * 0x19) / (ulonglong)(uint)(ptr_param[1] << 2)) / 100) * -100;\n    ptr_j = get_shifted_value_based_on_bit_position_08002220();\n    uint uVar4 = (uint)(ptr_j * 0x19) / (uint)(ptr_param[1] << 2);\n    ptr_j = get_shifted_value_based_on_bit_position_08002220();\n  }\n  *(uint *)(ptr_i + 8) = (((uVar4 + (int)(((ulonglong)(uint)(ptr_j * 0x19) / (ulonglong)(uint)(ptr_param[1] << 2)) / 100)) * -100 + ptr_m) * 0x10 + 0x32) / 100 & 0xf | (ptr_k * 0x10 + 0x32U) / 100 & 0xf0) + ptr_n * 0x10;\n  return;\n}",
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": true,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUNC_08000cec": "apply_hash_function",
                "calculate_hash_08000c44": "calculate_hash",
                "PTR_s____Src_MPU9250_c_08002be4": "i2c_read_word",
                "local_18": "data_word_1",
                "PTR_DAT_08002bec": "hash_output",
                "local_14": "data_word_3",
                "PTR_DAT_08002be8": "data_word_2",
                "FUN_08002b48": "read_and_calculate_hash_of_mpu9250_data_08002b48"
            },
            "code": "void read_and_calculate_hash_of_mpu9250_data_08002b48(void)\n{\n  uint16_t data_word_1;\n  uint16_t PTR_DAT_08002be8;\n  uint32_t data_word_3;\n  uint32_t hash_1;\n  uint32_t hash_2;\n  uint32_t hash_3;\n\n  data_word_1 = 0;\n  PTR_DAT_08002be8 = (uint16_t)(PTR_s____Src_MPU9250_c_08002be4(0xd0, 0x3b) & 0xffff);\n  data_word_3 = (uint32_t)(PTR_s____Src_MPU9250_c_08002be4(0xd0, 0x3c) & 0xffff0000);\n  hash_1 = calculate_hash(PTR_DAT_08002be8);\n  hash_1 = apply_hash_function(hash_1, 0x40800000);\n  hash_1 = apply_hash_function(hash_1, 0x38000000);\n  hash_2 = calculate_hash(data_word_1);\n  hash_2 = apply_hash_function(hash_2, 0x40800000);\n  hash_2 = apply_hash_function(hash_2, 0x38000000);\n  hash_3 = calculate_hash(data_word_3);\n  hash_3 = apply_hash_function(hash_3, 0x40800000);\n  hash_3 = apply_hash_function(hash_3, 0x38000000);\n  *PTR_DAT_08002bec = hash_1;\n  *(uint32_t *)(PTR_DAT_08002bec + 4) = hash_2;\n  *(uint32_t *)(PTR_DAT_08002bec + 8) = hash_3;\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_080040e8",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "read_and_calculate_hash_of_mpu9250_data_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "FUN_08004f68": "copy_data_and_clear_08004f68"
            },
            "code": "void copy_data_and_clear_08004f68(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (index = 0; PTR_DAT_08004fa0 + index < PTR_DAT_08004fa4; index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n    *data_ptr = 0;\n  }\n  set_flags_and_values_08004f10();\n  execute_functions_08004fb4();\n  jump_table = (code *)0x8004f9a;\n  run_sensor_data_updates_080041ae();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_080041ae",
                "FUN_08004fb4",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": true,
            "current_name": "copy_data_and_clear_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "updateParameter_08001170",
                "param_1": "parameterValue",
                "DAT_08001190": "dataAddress"
            },
            "code": "void updateParameter_08001170(uint parameterValue) {\n  uint* DAT_08001190 = (uint*)(DAT_08001190 + 0xc);\n  uint mask = 0xf8ff;\n  uint newValue = 0x5fa0000 | ((parameterValue & 7) << 8);\n  *DAT_08001190 = (*DAT_08001190 & mask) | newValue;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "imported": true,
            "current_name": "updateParameter_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "read_mpu9250_data_08002bf0",
                "FUNC_08000cec": "update_hash",
                "calculate_hash_08000c44": "calculate_hash",
                "DAT_08002ca8": "DAT_08002ca8",
                "i2c_data": "i2c_data",
                "i2c_retry_count": "i2c_retry_count",
                "i2c_register": "i2c_register",
                "i2c_address": "i2c_address",
                "PTR_DAT_08002cac": "PTR_DAT_08002cac",
                "local_1c": "gyro_raw_z",
                "i2c_data_length": "i2c_data_length",
                "local_20": "temperature_raw",
                "PTR_DAT_08002ca0": "PTR_DAT_08002ca0"
            },
            "code": "void read_mpu9250_data_08002bf0(void)\n{\n  uint16_t temperature_raw;\n  uint16_t gyro_raw_x, gyro_raw_y, gyro_raw_z;\n  uint16_t accel_raw_x, accel_raw_y, accel_raw_z;\n  uint32_t hash_value;\n  uint8_t i2c_data[6];\n  uint8_t i2c_address = 0xd0;\n  uint8_t i2c_register = 0x43;\n  uint8_t i2c_data_length = 6;\n  uint8_t i2c_retry_count = 0x7b;\n  i2c_read_data(i2c_address, i2c_register, i2c_data, i2c_data_length, i2c_retry_count);\n  temperature_raw = (i2c_data[0] << 8) | i2c_data[1];\n  gyro_raw_x = (i2c_data[2] << 8) | i2c_data[3];\n  gyro_raw_y = (i2c_data[4] << 8) | i2c_data[5];\n  accel_raw_x = (i2c_data[6] << 8) | i2c_data[7];\n  accel_raw_y = (i2c_data[8] << 8) | i2c_data[9];\n  accel_raw_z = (i2c_data[10] << 8) | i2c_data[11];\n  hash_value = calculate_hash(temperature_raw);\n  hash_value = update_hash(hash_value, DAT_08002ca8);\n  hash_value = update_hash(hash_value, 0x38000000);\n  hash_value = update_hash(hash_value, *(uint32_t*)PTR_DAT_08002ca0);\n  *(uint32_t*)PTR_DAT_08002cac = update_hash(hash_value, *(uint32_t*)(PTR_DAT_08002ca0 + 4));\n  hash_value = calculate_hash(gyro_raw_x);\n  hash_value = update_hash(hash_value, DAT_08002ca8);\n  hash_value = update_hash(hash_value, 0x38000000);\n  hash_value = update_hash(hash_value, *(uint32_t*)(PTR_DAT_08002ca0 + 8));\n  *(uint32_t*)(PTR_DAT_08002cac + 4) = update_hash(hash_value, *(uint32_t*)(PTR_DAT_08002ca0 + 12));\n  hash_value = calculate_hash(accel_raw_x);\n  hash_value = update_hash(hash_value, DAT_08002ca8);\n  hash_value = update_hash(hash_value, 0x38000000);\n  hash_value = update_hash(hash_value, *(uint32_t*)(PTR_DAT_08002ca0 + 16));\n  *(uint32_t*)(PTR_DAT_08002cac + 8) = update_hash(hash_value, *(uint32_t*)(PTR_DAT_08002ca0 + 20));\n}",
            "called": [
                "FUN_08000c44",
                "FUN_080040e8",
                "FUN_08000ad8",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "read_mpu9250_data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "process_sensor_data_08002ad0",
                "PTR_s____Src_MPU9250_c_08002b44": "src_sensor_data"
            },
            "code": "void process_sensor_data_08002ad0(void)\n{\n  check_and_process_data(0xd0, 0x75, PTR_s____Src_MPU9250_c_08002b44, 0x3b);\n  process_input_and_print_strings(0xd0, 0x6b, 0x80, 1);\n  process_input_and_print_strings(0xd0, 0x6b, 1);\n  process_input_and_print_strings(0xd0, 0x6c, 0, 1);\n  process_input_and_print_strings(0xd0, 0x19, 0, 1);\n  process_input_and_print_strings(0xd0, 0x1d, 3, 1);\n  process_input_and_print_strings(0xd0, 0x1a, 3, 1);\n  process_input_and_print_strings(0xd0, 0x1b, 0x10, 1);\n  process_input_and_print_strings(0xd0, 0x1c, 8, 1);\n  return;\n}",
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "process_sensor_data_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_concatenated_strings_are_not_empty_08001050",
                "in_ZR": "is_zero_flag",
                "in_CY": "is_carry_flag",
                "reverse_and_concatenate_08000ffc": "reverse_and_concatenate_strings"
            },
            "code": "bool check_concatenated_strings_are_not_empty_08001050(void)\n{\n  undefined is_carry_flag;\n  undefined is_zero_flag;\n  reverse_and_concatenate_strings();\n  return !(bool)is_carry_flag || (bool)is_zero_flag;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": true,
            "current_name": "check_concatenated_strings_are_not_empty_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_comparison_result_080009c8",
                "in_ZR": "is_zero",
                "in_CY": "carry_flag"
            },
            "code": "bool check_comparison_result_080009c8(void)\n{\n  undefined is_zero = 0;\n  undefined carry_flag = 0;\n  compare_values_and_return_result();\n  return !(bool)carry_flag || (bool)is_zero;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "check_comparison_result_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "puVar1": "result_ptr",
                "uVar3": "numerator",
                "uVar2": "temp1",
                "uVar4": "denominator"
            },
            "code": "void calculate_result_08002ed4(void)\n{\n  float *result_ptr;\n  float numerator;\n  float denominator;\n  float temp1;\n  float temp2;\n  \n  result_ptr = PTR_DAT_08002ee4;\n  numerator = *(float *)PTR_DAT_08002ee0;\n  denominator = *(float *)(PTR_DAT_08002ee4 + 4);\n  temp1 = FUNC_08000ad8(1.0f, denominator);\n  temp1 = FUNC_08000cec(temp1,numerator);\n  temp2 = FUNC_08000cec(denominator,*(float *)result_ptr);\n  temp1 = FUNC_08000adc(temp2,temp1);\n  *(float *)result_ptr = temp1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "calculate_result_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "bVar1": "is_xor_result_negative",
                "DAT_0804a0dc": "0x7fffff",
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "x",
                "param_2": "y",
                "uVar3": "y_times_2",
                "uVar2": "x_times_2",
                "uVar4": "combined",
                "bVar5": "is_combined_zero"
            },
            "code": "uint calculate_result_08000f9c(uint x, uint y)\n{\n  bool is_negative_x = (int)(x * 2) >> 0x18 == -1;\n  bool is_negative_y = (int)(y * 2) >> 0x18 == -1;\n  if (is_negative_x || is_negative_y)\n  {\n    bool is_x_nonzero = (x & DAT_0804a0dc) != 0;\n    bool is_y_nonzero = (y & DAT_0804a0dc) != 0;\n    if (is_negative_x && is_x_nonzero || is_negative_y && is_y_nonzero)\n    {\n      return 1;\n    }\n  }\n  uint combined = (x * 2) | y & DAT_0804a0dcff;\n  bool is_combined_zero = combined == 0;\n  if (!is_combined_zero)\n  {\n    uint xor_result = x ^ y;\n    bool is_xor_result_zero = xor_result == 0;\n    bool is_xor_result_negative = -1 < (int)xor_result;\n    if (is_xor_result_negative)\n    {\n      uint result = x + y * -2;\n      bool is_result_zero = result == 0;\n      if (!is_result_zero && y <= x)\n      {\n        return (int)y >> 0x1f;\n      }\n    }\n    if (!is_xor_result_negative || y > x)\n    {\n      return ~((int)y >> 0x1f);\n    }\n  }\n  if (!is_combined_zero)\n  {\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": true,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = calculate_float_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = calculate_value_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = is_end_of_string_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = check_comparison_result_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = calculate_result_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = shift_left_64_bit_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_08006c0c",
                "FUN_080009f0",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_08000404",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "iVar1": "leading_zeroes",
                "iVar3": "multiplier",
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input",
                "shifted_zeroes": "shifted_zeroes",
                "result": "result",
                "shifted_overflow": "shifted_overflow",
                "uVar2": "shift_amount",
                "uVar4": "overflow",
                "shifted_input": "shifted_input"
            },
            "code": "uint calculate_hash_08000c3c(uint input)\n{\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint overflow = (uint)(0x7fffffff < shifted_zeroes);\n    uint result = multiplier + shifted_input + shifted_zeroes + overflow;\n    if ((shifted_zeroes & 0x80000000) != 0) {\n      result &= 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_overflow = ((int)shifted_input >> 0x1f);\n  uint result = multiplier + ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - shifted_overflow);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    result &= ~(shifted_input >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "uVar1": "first_value",
                "puVar3": "source_ptr",
                "puVar4": "destination_ptr",
                "FUN_080043bc": "copy_and_process_data_080043bc",
                "local_1c": "local_array",
                "uVar2": "second_value",
                "local_24": "local_values"
            },
            "code": "void copy_and_process_data_080043bc(void)\n{\n  undefined4 first_value;\n  undefined4 second_value;\n  undefined4 *source_ptr;\n  undefined4 *destination_ptr;\n  undefined4 local_values [2];\n  undefined2 local_array [6];\n  \n  source_ptr = local_values;\n  destination_ptr = (undefined4 *)PTR_DAT_080043ec;\n  do {\n    first_value = *destination_ptr;\n    second_value = destination_ptr[1];\n    destination_ptr = destination_ptr + 2;\n    *source_ptr = first_value;\n    source_ptr[1] = second_value;\n    source_ptr = source_ptr + 2;\n  } while (destination_ptr != (undefined4 *)(PTR_DAT_080043ec + 0x10));\n  *(undefined2 *)source_ptr = *(undefined2 *)destination_ptr;\n  process_input_data_08004300(0x66,local_values,0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "copy_and_process_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "iVar2": "data",
                "param_1": "param",
                "FUN_08001214": "check_parameter_range_08001214",
                "puVar1": "ptr"
            },
            "code": "int check_parameter_range_08001214(int param){\n  int data = DAT_0800123c;\n  int *ptr = DAT_08001238;\n  if (param - 1U < 0x1000000) {\n    ptr[1] = param - 1U;\n    *(undefined *)(data + 0x23) = 0xf0;\n    ptr[2] = 0;\n    *ptr = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": true,
            "current_name": "check_parameter_range_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "param_1": "value",
                "PTR_DAT_08003fcc": "ptr",
                "FUN_08003fc4": "set_param_value_08003fc4"
            },
            "code": "void set_param_value_08003fc4(int value)\n{\n    int* PTR_DAT_08003fcc = *(int*)PTR_DAT_08003fcc;\n    int offset = 0x40;\n    *(PTR_DAT_08003fcc + offset) = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_param_value_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "iVar4": "shift_amount",
                "is_input_negative": "is_input_negative",
                "param_1": "input",
                "uVar3": "leading_zeros",
                "abs_input": "abs_input",
                "uVar2": "abs_input",
                "uVar5": "shift_amount2",
                "leading_zeros_equal_to_11": "leading_zeros_equal_to_11",
                "uVar6": "input_sign",
                "result2": "result2",
                "in_r12": "unused",
                "result1": "result1",
                "shift_amount_less_than_32": "shift_amount_less_than_32",
                "shift_amount2_less_than_32": "shift_amount2_less_than_32",
                "shift_amount2": "shift_amount2",
                "uVar1": "count",
                "leading_zeros_less_than_11": "leading_zeros_less_than_11",
                "FUN_08000404": "calculate_value_08000404",
                "input_sign": "input_sign",
                "bVar9": "shift_amount_less_than_32",
                "shift_amount": "shift_amount",
                "bVar8": "leading_zeros_equal_to_11",
                "leading_zeros": "leading_zeros",
                "bVar7": "leading_zeros_less_than_11"
            },
            "code": "ulonglong calculate_value_08000404(uint num)\n{\n  uint count = 0;\n  while (num)\n  {\n    num >>= 1;\n    count++;\n  }\n  return (ulonglong)count;\n}\n\nulonglong calculate_value_08000404(uint input)\n{\n  uint input_sign;\n  uint abs_input;\n  uint leading_zeros;\n  uint shift_amount;\n  uint shift_amount2;\n  uint result1 = 0;\n  uint result2 = 0;\n  bool is_input_negative;\n  bool leading_zeros_less_than_11;\n  bool leading_zeros_equal_to_11;\n  bool shift_amount_less_than_32;\n  bool shift_amount2_less_than_32;\n  input_sign = input & 0x80000000;\n  if (input == 0)\n  {\n    return 0;\n  }\n  is_input_negative = (int)input_sign < 0;\n  abs_input = is_input_negative ? -input : input;\n  leading_zeros = calculate_value_08000404(abs_input);\n  shift_amount = leading_zeros + 0x15;\n  leading_zeros_less_than_11 = (int)(leading_zeros - 0xb) < 0;\n  leading_zeros_equal_to_11 = leading_zeros == 0xb;\n  if ((int)shift_amount < 0x20)\n  {\n    shift_amount2 = 0xc - leading_zeros;\n    shift_amount++;\n    shift_amount_less_than_32 = (int)shift_amount < 0;\n    shift_amount2_less_than_32 = shift_amount2 < 0;\n    if (!shift_amount_less_than_32 && !shift_amount2_less_than_32 && shift_amount_less_than_32 == shift_amount2_less_than_32)\n    {\n      result1 = abs_input << (shift_amount & 0xff);\n      abs_input >>= (0xc - leading_zeros & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (leading_zeros_less_than_11 || leading_zeros_equal_to_11)\n  {\n    shift_amount2 = 0x20 - leading_zeros;\n  }\n  else\n  {\n    shift_amount2 = 0xc - leading_zeros;\n  }\n  result1 = abs_input << (leading_zeros & 0xff);\n  if (leading_zeros_less_than_11 || leading_zeros_equal_to_11)\n  {\n    result1 |= 0U >> (shift_amount2 & 0xff);\n  }\n  if (leading_zeros_less_than_11 || leading_zeros_equal_to_11)\n  {\n    result2 = 0 << (leading_zeros & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shift_amount < 0x433)\n  {\n    return ((ulonglong)abs_input + (0x432 - shift_amount) * 0x100000 | input_sign) & 0x80000000ffffffff;\n  }\n  shift_amount2 = ~(0x432 - shift_amount);\n  if ((int)shift_amount2 > 0x1e)\n  {\n    return ((ulonglong)input & 0xffffffff80000000) | (abs_input >> (shift_amount2 - 0x1f & 0xff));\n  }\n  shift_amount2 = shift_amount2 - 0x13;\n  if (shift_amount2 == 0 || shift_amount2 < 0 != (shift_amount2 - 0x1f < 0xc))\n  {\n    shift_amount2++;\n    return ((ulonglong)input_sign | abs_input >> (shift_amount2 & 0xff)) << 0x20 | result1 >> (shift_amount2 & 0xff) | abs_input << (0x20 - shift_amount2 & 0xff);\n  }\n  return ((ulonglong)input & 0xffffffff80000000) | result1 >> (0x20 - (0xc - shift_amount2) & 0xff) | abs_input << (0xc - shift_amount2 & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "calculate_value_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "DAT_08002208": "ptr_3",
                "PTR_DAT_0800220c": "0x0800220c",
                "iVar4": "value_1",
                "iVar5": "value_2",
                "puVar3": "data_ptr",
                "param_1": "data",
                "LAB_080020ba": "loop_label",
                "DAT_08002204": "ptr_2",
                "get_value_from_pointer_0800115c": "get_value_from_pointer",
                "count_leading_zeroes": "count_leading_zeroes",
                "FUN_0800209c": "check_data_0800209c",
                "param_2": "size",
                "encode_data_08001104": "encode_data",
                "PTR_DAT_08002210": "0x08002210",
                "uVar7": "result_2",
                "uVar6": "result_1",
                "calculate_result_08002008": "calculate_result"
            },
            "code": "uint32_t check_data_0800209c(uint32_t *data, uint32_t size)\n{\n  uint32_t *data_ptr;\n  int32_t value_1;\n  int32_t value_2;\n  uint32_t result_1;\n  uint32_t result_2;\n  uint32_t leading_zeroes_count;\n  uint32_t *ptr_1 = data + 1;\n  uint32_t *DAT_08002204 = (uint32_t *)0x08002204;\n  uint32_t *DAT_08002208 = (uint32_t *)0x08002208;\n  if ((size <= (*DAT_08002204 & 7)) || (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size == (*ptr_1 & 7))) {\n    result_1 = *data;\n    if ((int32_t)(result_1 << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | data[2];\n    }\n    data_ptr = DAT_08002208;\n    value_1 = result_1 << 0x1f;\n    if (-1 < value_1) {\nLAB_080020ba:\n      data_ptr = DAT_08002204;\n      if ((size < (*DAT_08002204 & 7)) && (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size != (*data_ptr & 7))) {\n        return 1;\n      }\n      data_ptr = DAT_08002208;\n      result_1 = *data;\n      if ((result_1 & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | data[3];\n      }\n      if ((int32_t)(result_1 << 0x1c) < 0) {\n        data_ptr[1] = data_ptr[1] & 0xffffc7ff | data[4] << 3;\n      }\n      result_1 = calculate_result();\n      leading_zeroes_count = count_leading_zeroes(0xf000000);\n      *(uint32_t *)PTR_DAT_08002210 = result_1 >> ((data_ptr[1] & 0xf0) >> (leading_zeroes_count & 0xff));\n      encode_data(0);\n      return 0;\n    }\n    result_1 = data[1];\n    if (result_1 == 1) {\n      value_2 = 1;\n    }\n    else {\n      if (result_1 == 2) {\n        result_2 = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      value_2 = 2;\n    }\n    leading_zeroes_count = count_leading_zeroes((uint32_t)(0x3f & value_2) << 0x18 | (uint32_t)(0x3f & (value_2 >> 1)) << 8);\n    leading_zeroes_count = (*DAT_08002204 >> (leading_zeroes_count & 0x1f)) << 0x1f;\n    if ((int32_t)leading_zeroes_count < 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | result_1;\n      value_1 = get_value_from_pointer(value_1, leading_zeroes_count);\n      if (data[1] == 1) {\n        do {\n          if ((data_ptr[1] & 0xc) == 4) goto LAB_080020ba;\n          value_2 = get_value_from_pointer();\n        } while ((uint32_t)(value_2 - value_1) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((data_ptr[1] & 0xc) == 8) goto LAB_080020ba;\n          value_2 = get_value_from_pointer();\n        } while ((uint32_t)(value_2 - value_1) < 0x1389);\n      }\n      else {\n        do {\n          if ((data_ptr[1] & 0xc) == 0) goto LAB_080020ba;\n          value_2 = get_value_from_pointer();\n        } while ((uint32_t)(value_2 - value_1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08002008",
                "FUN_0800115c",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "check_data_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "PTR_DAT_08004074": "ptr_data_08004074",
                "iVar1": "process_input_result",
                "param_1": "input_param_1",
                "PTR_s____Src_i2c_c_08004078": "ptr_error_string_08004078",
                "param_2": "input_param_2",
                "param_3": "input_char",
                "FUN_0800403c": "process_input_and_print_strings_0800403c",
                "param_4": "print_flag",
                "process_data_and_print_strings_08004490": "print_error_string",
                "local_14": "input_buffer",
                "thunk_do_nothing_08001168": "do_nothing",
                "process_input_08001828": "process_input"
            },
            "code": "void process_input_and_print_strings_0800403c(char input_char, int param_1, int param_2, int print_flag)\n{\n  int process_input_result;\n  char input_buffer[8];\n  input_buffer[0] = input_char;\n  process_input_result = process_input(PTR_DAT_08004074, param_1, param_2, 1, input_buffer, 1, 200);\n  if (process_input_result != 0) {\n    print_error_string(PTR_s____Src_i2c_c_08004078, 0x1b);\n  }\n  if (print_flag != 0) {\n    do_nothing(0x32);\n  }\n  return;\n}",
            "called": [
                "FUN_08001828",
                "FUN_08004490",
                "thunk_FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_0800411c",
                "FUN_08003298",
                "FUN_08002ad0",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "process_input_and_print_strings_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08003330",
                "FUN_08004a84",
                "FUN_08002f28",
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08004a30",
                "FUN_08002ec0",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "iVar3": "temp3",
                "uVar1": "temp1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "FUN_08006070": "calculate_result_08006070",
                "uVar2": "temp2",
                "uVar5": "result1",
                "uVar4": "temp4",
                "uVar7": "temp5",
                "uVar6": "result2",
                "uVar8": "temp6"
            },
            "code": "ulonglong calculate_result_08006070(uint input1, uint input2, uint input3, uint input4)\n{\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  ulonglong result1;\n  ulonglong result2;\n  undefined8 temp5;\n  undefined8 temp6;\n  \n  result2 = CONCAT44(DAT_08006214,DAT_08006210);\n  result1 = CONCAT44(DAT_08006204,DAT_08006200);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp4 | (-input3 | input3) >> 0x1f)) ||\n     (temp2 = input2 & 0x7fffffff, DAT_08006220 < (temp2 | (-input1 | input1) >> 0x1f))) {\n    result1 = FUNC_0800016c(input1, input2, input3, input4, input4);\n    return result1;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result1 = FUNC_08006d68();\n    return result1;\n  }\n  temp1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | temp2) == 0) {\n    if (temp1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (temp1 != 3) {\n      return CONCAT44(input2,input1);\n    }\n  }\n  else {\n    if ((input3 | temp4) != 0) {\n      if (temp4 == DAT_08006220) {\n        if (temp2 == temp4) {\n          if (temp1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (temp1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (temp1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (temp1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (temp1 == 3) {\n          return result1;\n        }\n        if (temp1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp2 != DAT_08006220) {\n        temp3 = (int)(temp2 - temp4) >> 0x14;\n        if (temp3 < 0x3d) {\n          if (((int)input4 < 0) && (temp3 + 0x3c < 0 != SCARRY4(temp3,0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUNC_08000724(input1, input2);\n            do_nothing_0800708c();\n            result2 = FUNC_08006d68();\n          }\n        }\n        temp3 = (int)(result2 >> 0x20);\n        if (temp1 != 1) {\n          if (temp1 == 2) {\n            temp6 = FUNC_08000168((int)result2,temp3,DAT_08006208,DAT_0800620c);\n            temp5 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (temp1 == 0) {\n              return result2;\n            }\n            temp5 = FUNC_08000168((int)result2,temp3,DAT_08006208,DAT_0800620c);\n            temp6 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result1 = FUNC_08000168((int)temp5,(int)((ulonglong)temp5 >> 0x20),(int)temp6,\n                               (int)((ulonglong)temp6 >> 0x20));\n          return result1;\n        }\n        return result2 & 0xffffffff | (ulonglong)(temp3 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = result2;\n    if ((int)input2 < 0) {\n      result1 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result1;\n}",
            "called": [
                "FUN_08000168",
                "FUN_08006d68",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": true,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "iVar3": "bit_diff",
                "uVar1": "upper_bits",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "thunk_FUN_08006070": "get_result_thunk_08006070",
                "uVar2": "param2_masked",
                "uVar5": "result",
                "uVar4": "param4_masked",
                "uVar7": "concat2",
                "uVar6": "concat1",
                "uVar8": "concat3"
            },
            "code": "uint32_t get_result_thunk_08006070(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  int iVar3;\n  uint32_t uVar4;\n  uint64_t uVar5;\n  uint64_t uVar6;\n  uint64_t uVar7;\n  uint64_t uVar8;\n  \n  uVar6 = ((uint64_t)DAT_08006214 << 32) | DAT_08006210;\n  uVar5 = ((uint64_t)DAT_08006204 << 32) | DAT_08006200;\n  uVar4 = param4 & 0x7fffffff;\n  if ((DAT_08006220 < (uVar4 | (-param3 | param3) >> 0x1f)) || (uVar2 = param2 & 0x7fffffff, DAT_08006220 < (uVar2 | (-param1 | param1) >> 0x1f))) {\n    uVar5 = FUNC_0800016c(param1, param2, param3, param4, param4);\n    return uVar5;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    uVar5 = FUNC_08006d68();\n    return uVar5;\n  }\n  uVar1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | uVar2) == 0) {\n    if (uVar1 == 2) {\n      return ((uint64_t)DAT_080061fc << 32) | DAT_080061f8;\n    }\n    if (uVar1 != 3) {\n      return ((uint64_t)param2 << 32) | param1;\n    }\n  }\n  else {\n    if ((param3 | uVar4) != 0) {\n      if (uVar4 == DAT_08006220) {\n        if (uVar2 == uVar4) {\n          if (uVar1 == 2) {\n            return ((uint64_t)DAT_080061ec << 32) | DAT_080061e8;\n          }\n          if (uVar1 == 3) {\n            return ((uint64_t)DAT_080061f4 << 32) | DAT_080061f0;\n          }\n          if (uVar1 != 1) {\n            return ((uint64_t)DAT_0800621c << 32) | DAT_08006218;\n          }\n          return ((uint64_t)DAT_080061e4 << 32) | DAT_080061e0;\n        }\n        if (uVar1 == 2) {\n          return ((uint64_t)DAT_080061fc << 32) | DAT_080061f8;\n        }\n        if (uVar1 == 3) {\n          return uVar5;\n        }\n        if (uVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (uVar2 != DAT_08006220) {\n        iVar3 = (int)(uVar2 - uVar4) >> 0x14;\n        if (iVar3 < 0x3d) {\n          if (((int)param4 < 0) && (iVar3 + 0x3c < 0 != SCARRY4(iVar3,0x3c))) {\n            uVar6 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            uVar6 = FUNC_08006d68();\n          }\n        }\n        iVar3 = (int)(uVar6 >> 0x20);\n        if (uVar1 != 1) {\n          if (uVar1 == 2) {\n            uVar8 = FUNC_08000168((int)uVar6, iVar3, DAT_08006208, DAT_0800620c);\n            uVar7 = ((uint64_t)DAT_080061fc << 32) | DAT_080061f8;\n          }\n          else {\n            if (uVar1 == 0) {\n              return uVar6;\n            }\n            uVar7 = FUNC_08000168((int)uVar6, iVar3, DAT_08006208, DAT_0800620c);\n            uVar8 = ((uint64_t)DAT_080061fc << 32) | DAT_080061f8;\n          }\n          uVar5 = FUNC_08000168((int)uVar7, (int)(uVar7 >> 0x20), (int)uVar8, (int)(uVar8 >> 0x20));\n          return uVar5;\n        }\n        return uVar6 & 0xffffffff | (uint64_t)(iVar3 + 0x80000000) << 0x20;\n      }\n    }\n    uVar5 = uVar6;\n    if ((int)param2 < 0) {\n      uVar5 = ((uint64_t)DAT_080061dc << 32) | DAT_080061d8;\n    }\n  }\n  return uVar5;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "get_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "param_1": "data",
                "puVar1": "string_data",
                "FUN_08004cac": "print_and_process_string_data_08004cac"
            },
            "code": "void print_and_process_string_data_08004cac(undefined4 data) {\n  undefined *string_data = PTR_DAT_08004cc4;\n  print_formatted_string_08004ffc(PTR_DAT_08004cc4, PTR_DAT_08004cc8, data);\n  process_string_data_08004c8c(string_data);\n  return;\n}",
            "called": [
                "FUN_08004c8c",
                "FUN_08004ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "print_and_process_string_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "iVar2": "value_1",
                "iVar3": "value_2",
                "param_1": "input",
                "puVar5": "data",
                "puVar1": "data_ptr",
                "uVar4": "data_type",
                "FUN_08004c18": "process_data_08004c18"
            },
            "code": "undefined4 process_data_08004c18(undefined input){\n  undefined *data_ptr;\n  int value_1;\n  int value_2;\n  undefined data_type;\n  ushort *data;\n  data = (ushort *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = input;\n  data_ptr = PTR_DAT_08004c2c;\n  if ((PTR_DAT_08004c2c[0x39] == '\\x01') || (PTR_DAT_08004c2c[0x39] == '\"')) {\n    if (data == (ushort *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c2c[0x38] != '\\x01') {\n      PTR_DAT_08004c2c[0x38] = 1;\n      *(undefined4 *)(data_ptr + 0x3c) = 0;\n      *(undefined2 *)(data_ptr + 0x24) = 1;\n      if (data_ptr[0x39] == '\"') {\n        data_type = 0x32;\n      }\n      else {\n        data_type = 0x12;\n      }\n      *(undefined2 *)(data_ptr + 0x26) = 1;\n      data_ptr[0x39] = data_type;\nLAB_080027c4:\n      do {\n        if (*(short *)(data_ptr + 0x26) == 0) {\n          value_1 = get_value_from_pointer_0800115c();\n          do {\n            if (**(int **)data_ptr << 0x19 < 0) {\n              if (data_ptr[0x39] == '2') {\n                data_type = 0x22;\n              }\n              else {\n                data_type = 1;\n              }\n              data_ptr[0x39] = data_type;\n              data_ptr[0x38] = 0;\n              return 0;\n            }\n            value_2 = get_value_from_pointer_0800115c();\n          } while ((uint)(value_2 - value_1) < 6);\nLAB_0800281c:\n          value_1 = *(int *)data_ptr;\n          *(uint *)(value_1 + 0xc) = *(uint *)(value_1 + 0xc) & 0xffffff7f;\n          *(uint *)(value_1 + 0xc) = *(uint *)(value_1 + 0xc) & 0xffffffdf;\n          *(uint *)(value_1 + 0xc) = *(uint *)(value_1 + 0xc) & 0xfffffeff;\n          *(uint *)(value_1 + 0x14) = *(uint *)(value_1 + 0x14) & 0xfffffffe;\n          data_ptr[0x39] = 1;\n          data_ptr[0x38] = 0;\n          return 3;\n        }\n        *(short *)(data_ptr + 0x26) = *(short *)(data_ptr + 0x26) + -1;\n        if (*(int *)(data_ptr + 8) == 0x1000) {\n          value_1 = get_value_from_pointer_0800115c();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            value_2 = get_value_from_pointer_0800115c();\n            if (5 < (uint)(value_2 - value_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = *data & 0x1ff;\n          if (*(int *)(data_ptr + 0x10) == 0) {\n            data = data + 1;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          value_1 = get_value_from_pointer_0800115c();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            value_2 = get_value_from_pointer_0800115c();\n            if (5 < (uint)(value_2 - value_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = (uint)*(byte *)data;\n        }\n        data = (ushort *)((int)data + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004c8c",
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "process_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "iVar3": "string_length",
                "uVar1": "temp_value1",
                "iVar4": "temp_value3",
                "iVar5": "input_value3",
                "iVar6": "input_value4",
                "param_1": "data",
                "uVar2": "temp_value2",
                "FUN_0800483c": "process_data_0800483c"
            },
            "code": "void process_data_0800483c(int *data)\n{\n  int string_length;\n  int hash_value;\n  int temp_value1, temp_value2, temp_value3;\n  int input_value1, input_value2, input_value3, input_value4;\n  \n  input_value2 = data[0xc];\n  temp_value1 = calculate_hash(data[7],data[9]);\n  input_value2 = combine_values(temp_value1,input_value2);\n  data[10] = input_value2;\n  if (*data == 3) {\n    string_length = is_string_empty(data[10],0);\n    if (string_length == 0) {\n      string_length = is_string_empty(data[10],data[0x18]);\n    }\n    else {\n      string_length = is_string_empty(data[10],data[0x14]);\n    }\n    if (string_length != 0) {\n      input_value3 = data[10];\n      temp_value1 = calculate_hash(data[10],data[0x15]);\n      string_length = is_string_empty(data[10],0);\n      input_value4 = data[10];\n      if (string_length == 0) {\n        input_value4 = input_value4 + -2147483648;\n      }\n      temp_value1 = combine_values(temp_value1,input_value4);\n      input_value2 = combine_values(input_value3,temp_value1);\n      data[10] = input_value2;\n    }\n  }\n  input_value3 = data[2];\n  input_value4 = data[3];\n  temp_value1 = calculate_hash(data[1],data[10]);\n  data[0xe] = temp_value1;\n  temp_value1 = calculate_hash(data[10],data[0xf]);\n  data[0xf] = temp_value1;\n  string_length = is_string_empty(data[0xf],data[0x10]);\n  temp_value1 = data[0x10];\n  if ((string_length == 0) &&\n     (string_length = is_string_empty(data[0xf],data[0x11]), temp_value1 = data[0x11], string_length == 0)) {\n    temp_value1 = data[0xf];\n  }\n  data[0xf] = temp_value1;\n  input_value2 = combine_values(data[0xc],data[0xd]);\n  data[0x10] = input_value2;\n  input_value2 = data[0xe];\n  temp_value1 = calculate_hash(input_value3,data[0xf]);\n  temp_value2 = calculate_hash(input_value4,data[0x10]);\n  input_value1 = combine_values(temp_value1,input_value2);\n  hash_value = combine_values(temp_value2,input_value1);\n  temp_value1 = calculate_hash(data[0x13],0);\n  string_length = is_string_empty(hash_value,data[0x10]);\n  temp_value2 = data[0x10];\n  if ((string_length == 0) &&\n     (string_length = is_string_empty(hash_value,data[0x11]), temp_value2 = data[0x11], string_length == 0)) {\n    temp_value2 = hash_value;\n  }\n  temp_value2 = combine_values(temp_value2,temp_value1);\n  data[0x10] = temp_value2;\n  data[0xd] = data[0xc];\n  data[0xb] = data[10];\n  data[0x15] = data[0x14];\n  return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08001028",
                "FUN_08001064",
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "process_data_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "process_string_data_08004c8c",
                "uVar1": "end_of_string",
                "puVar2": "current_char",
                "param_1": "string_data"
            },
            "code": "void process_string_data_08004c8c(const char *string_data) {\n  const char *current_char = string_data;\n  while (true) {\n    uint end_of_string = find_end_of_string_08000150(string_data);\n    if (end_of_string <= (uint)(current_char - string_data)) break;\n    process_data_08004c18(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004cac"
            ],
            "imported": true,
            "current_name": "process_string_data_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "iVar1": "start_time",
                "FUN_08001460": "check_value_08001460",
                "puVar4": "current_value",
                "param_1": "values",
                "param_2": "value_type",
                "param_3": "max_iterations",
                "uVar3": "mask"
            },
            "code": "uint32_t check_value_08001460(uint32_t **values, uint32_t value_type, uint32_t max_iterations) {\n  int32_t start_time = get_current_time();\n  do {\n    uint32_t *current_value = *values;\n    uint32_t value_offset = ((value_type << 8) >> 0x18 == 1) ? 5 : 6;\n    uint32_t mask = current_value[value_offset];\n    if ((value_type & 0xffff & ~mask) == 0) {\n      return 0;\n    }\n    if ((int32_t)(current_value[5] << 0x15) < 0) {\n      *current_value = *current_value | 0x200;\n      current_value[5] = current_value[5] & 0xfffffbff;\n      values[14] = (uint32_t *)0x4;\n      *(uint8_t *)((int32_t)values + 0x35) = 0x20;\n      *(uint32_t *)(values + 13) = 0;\n      return 1;\n    }\n  } while ((max_iterations == 0xffffffff) || ((max_iterations != 0 && (get_current_time() - start_time) <= max_iterations)));\n  *(uint8_t *)((int32_t)values + 0x35) = 0x20;\n  *(uint32_t *)(values + 13) = 0;\n  return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": true,
            "current_name": "check_value_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_string_empty_08001064",
                "in_CY": "input_char",
                "reverse_and_concatenate_08000ffc": "reverse_and_concatenate"
            },
            "code": "bool is_string_empty_08001064(void)\\n{\\n  char input_char;\\n  reverse_and_concatenate();\\n  return input_char == \"\\0\";\\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "imported": true,
            "current_name": "is_string_empty_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_parameter_value_08003fd0",
                "param_1": "value",
                "PTR_DAT_08003fd8": "PTR"
            },
            "code": "void set_parameter_value_08003fd0(int value){\n    int* ptr = *(int*)PTR_DAT_08003fd8_DAT_08003fd8;\n    int offset = 0x3c;\n    *(ptr + offset) = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_parameter_value_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "bVar4": "is_first_param_zero",
                "temp_third_param": "temp_third_param",
                "uVar1": "temp_first_param",
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "first_param",
                "temp_first_param": "temp_first_param",
                "unaff_r4": "mask",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar3": "temp_second_param",
                "uVar2": "temp_mask",
                "in_r12": "constant_mask"
            },
            "code": "ulonglong calculate_result_08000892(uint first_param, uint second_param, uint third_param, uint fourth_param) {\n  uint mask = 0xfffc0000 & fourth_param;\n  uint temp_second_param = second_param;\n  if (third_param != mask || mask != 0) {\n    if (third_param == mask) {\n      if ((first_param | second_param << 0xc) == 0 && mask != 0) {\n        return (ulonglong)((second_param ^ fourth_param) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (mask == 0) {\n      if ((third_param | fourth_param << 0xc) == 0) {\n        return (ulonglong)((second_param ^ fourth_param) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      bool is_first_param_zero = (first_param | second_param << 1) == 0;\n      bool is_third_param_zero = (third_param | fourth_param << 1) == 0;\n      if (!is_first_param_zero && !is_third_param_zero) {\n        if (third_param == 0) {\n          uint temp_mask = second_param & 0x80000000;\n          do {\n            uint temp_first_param = first_param & 0x80000000;\n            first_param = first_param << 1;\n            second_param = second_param * 2 + (uint)(temp_first_param != 0);\n          } while ((second_param & 0x100000) == 0);\n          second_param = second_param | temp_mask;\n          if (mask != 0) {\n            return ((ulonglong)second_param) << 0x20 | first_param;\n          }\n        }\n        do {\n          uint temp_third_param = third_param & 0x80000000;\n          third_param = third_param << 1;\n          fourth_param = fourth_param * 2 + (uint)(temp_third_param != 0);\n        } while ((fourth_param & 0x100000) == 0);\n        return ((ulonglong)second_param) << 0x20 | first_param;\n      }\n      if (!is_first_param_zero) {\n        return (ulonglong)((second_param ^ fourth_param) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if (!is_third_param_zero) {\n        return (ulonglong)((second_param ^ fourth_param) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return ((ulonglong)temp_second_param) << 0x20 | first_param | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": true,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "process_and_send_data_08004458",
                "puVar3": "output_data_ptr",
                "puVar4": "input_data_ptr",
                "puVar5": "next_input_data_ptr",
                "puVar1": "current_data_ptr",
                "uVar2": "next_data",
                "local_30": "intermediate_data",
                "local_24": "final_output_data"
            },
            "code": "void process_and_send_data_08004458(void)\n{\n  undefined4 *current_data_ptr;\n  undefined4 next_data;\n  undefined4 *output_data_ptr;\n  undefined4 *input_data_ptr;\n  undefined4 intermediate_data [3];\n  undefined2 final_output_data [10];\n  \n  current_data_ptr = intermediate_data;\n  input_data_ptr = (undefined4 *)PTR_DAT_0800448c;\n  do {\n    output_data_ptr = input_data_ptr;\n    current_data_ptr = current_data_ptr;\n    next_data = output_data_ptr[1];\n    input_data_ptr = output_data_ptr + 2;\n    *current_data_ptr = *output_data_ptr;\n    current_data_ptr[1] = next_data;\n    current_data_ptr = current_data_ptr + 2;\n  } while (input_data_ptr != (undefined4 *)(PTR_DAT_0800448c + 0x18));\n  current_data_ptr[2] = *input_data_ptr;\n  *(undefined2 *)(current_data_ptr + 3) = *(undefined2 *)(output_data_ptr + 3);\n  process_input_data_08004300(0x70,intermediate_data,0x1e);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_and_send_data_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_08004490",
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "imported": true,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "DAT_08000144": "global_var",
                "FUN_08000134": "concatenate_08000134",
                "param_1": "first_uint64",
                "PTR_DAT_08000148": "data_ptr",
                "param_2": "second_uint64",
                "PTR_FUN_0800014c": "func_ptr"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_08000134(uint64_t param_1, uint64_t param_2)\n{\n  if (DAT_08000144 != 0) {\n    param_1 = PTR_FUN_0800014c;\n    param_2 = PTR_DAT_08000148;\n  }\n  return ((uint64_t)param_2 << 32) | param_1;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": true,
            "current_name": "concatenate_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_to_64_bit_08003eb0",
                "param_1": "input_value",
                "PTR_DAT_08003ec4": "ptr"
            },
            "code": "longlong convert_to_64_bit_08003eb0(uint32_t input_value)\n{\n  int* PTR_DAT_08003ec4 = (int*) PTR_DAT_08003ec4;\n  if (*PTR_DAT_08003ec4 == 0) {\n    software_interrupt(0x3f);\n    return CONCAT44(input_value, 1);\n  }\n  return (ulonglong) input_value << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "convert_to_64_bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = is_end_of_string_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = calculate_float_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_08006c0c",
                "FUN_080009f0",
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": true,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "iVar1": "checkResult",
                "PTR_DAT_08002f18": "pointerToData",
                "FUNC_08000adc": "printString",
                "is_string_empty_08001028": "isStringEmpty",
                "FUN_08002ee8": "checkAndPrintString_08002ee8",
                "DAT_08002f1c": "concatenatedStringsData1",
                "check_concatenated_strings_are_not_empty_08001050": "checkConcatenatedStringsAreNotEmpty",
                "DAT_08002f20": "stringData",
                "uVar2": "stringPtr",
                "DAT_08002f24": "defaultStringData",
                "FUNC_08000ad8": "printString"
            },
            "code": "void checkAndPrintString_08002ee8(void)\n{\n  int checkResult;\n  undefined4 stringPtr;\n  \n  stringPtr = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  checkResult = checkConcatenatedStringsAreNotEmpty(stringPtr, DAT_08002f1c);\n  if ((checkResult != 0) && (checkResult = isStringEmpty(stringPtr, DAT_08002f20), checkResult != 0)) {\n    printString(stringPtr, DAT_08002f20);\n    return;\n  }\n  printString(stringPtr, DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08001028",
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "checkAndPrintString_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "uVar1": "pointer_value",
                "param_1": "destination_address",
                "FUN_08001104": "encode_data_08001104",
                "get_pointer_value_08002214": "get_pointer_value",
                "check_parameter_range_08001214": "check_parameter_range"
            },
            "code": "int encode_data_08001104(uint32_t encoding_value, uint32_t destination_address, uint32_t padding_value) {\n  uint32_t pointer_value = get_pointer_value();\n  uint32_t parameter_value = pointer_value / 1000;\n  check_parameter_range(parameter_value);\n  encode_data_08001104_08001194(encoding_value, destination_address, padding_value);\n  return 0;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": true,
            "current_name": "encode_data_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c",
                "*PTR_DAT_08001164": "PTR_DAT_08001164"
            },
            "code": "int get_value_from_pointer_thunk_0800115c() {\n    int *ptr = (int *)*PTR_DAT_08001164;\n    int value = *ptr;\n    return value;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = is_end_of_string_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": true,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "param_1": "new_value",
                "puVar1": "current_ptr",
                "FUN_080072b8": "update_value_080072b8"
            },
            "code": "void update_value_080072b8(int new_value) {\n  undefined *current_ptr = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)current_ptr = new_value + *(int *)current_ptr;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": true,
            "current_name": "update_value_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "iVar2": "updated_value",
                "param_1": "output_value",
                "param_2": "input_value",
                "puVar1": "pointer_to_value",
                "FUN_0800581c": "update_value_if_needed_0800581c"
            },
            "code": "void update_value_if_needed_0800581c(int *output_value, undefined4 input_value)\n{\n  undefined *pointer_to_value = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  int updated_value = update_value(input_value);\n  if ((updated_value == -1) && (*(int *)pointer_to_value != 0)) {\n    *output_value = *(int *)pointer_to_value;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": true,
            "current_name": "update_value_if_needed_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "DAT_08004d80": "data_constant",
                "DAT_08004d84": "data_address1",
                "param_1": "data_ptr",
                "local_18": "bit_mask1",
                "param_2": "param_2",
                "DAT_08004d88": "data_address2",
                "local_14": "bit_mask2",
                "FUN_08004d48": "process_data_08004d48"
            },
            "code": "void process_data_08004d48(int *data_ptr, uint32_t param_2)\n{\n  uint32_t bit_mask1 = 0xc0;\n  uint32_t bit_mask2 = 0x12;\n  uint32_t DAT_08004d80 = 0x08004d80;\n  uint32_t DAT_08004d84 = 0x08004d84;\n  uint32_t DAT_08004d88 = 0x08004d88;\n  \n  if (*data_ptr == DAT_08004d80) {\n    process_bits(DAT_08004d84, &bit_mask1, *data_ptr, 3, data_ptr, param_2);\n    *(uint *)(DAT_08004d88 + 0x1c) |= 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": true,
            "current_name": "process_data_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_pointer_value_from_data_section_080072ac",
                "PTR_PTR_DAT_080072b4": "pointer_to_pointer_in_data_section"
            },
            "code": "get_pointer_value_from_data_section_080072ac() {\n  return *(undefined4 *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "get_pointer_value_from_data_section_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_flags_and_values_08002280",
                "uVar1": "new_flags",
                "param_1": "flags_address",
                "param_2": "values",
                "uVar3": "old_value",
                "uVar2": "old_flags"
            },
            "code": "void update_flags_and_values_08002280(int flags_address, uint *values) {\n  uint new_flags;\n  uint old_flags;\n  uint old_value;\n  uint new_value;\n  \n  old_flags = *(uint *)(flags_address + 0x20);\n  old_flags = old_flags & 0xfffffffe;\n  old_value = *(uint *)(flags_address + 0x18);\n  old_value = old_value & 0xffffff8c;\n  new_flags = old_flags & 0xfffffffd | values[2];\n  if (flags_address == PTR_DAT_080022cc) {\n    new_flags = (new_flags & 0xfffffff7 | values[3]) & 0xfffffffb;\n    old_value = old_value | values[5] | values[6];\n  }\n  new_value = values[0];\n  *(uint *)(flags_address + 4) = values[1];\n  *(uint *)(flags_address + 0x34) = values[4];\n  *(uint *)(flags_address + 0x20) = new_flags;\n  *(uint *)(flags_address + 0x18) = old_value | new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_flags_and_values_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "encode_data_08001194",
                "uVar1": "shifted_data",
                "DAT_080011f4": "ptr_offset_1",
                "param_1": "bit_offset",
                "param_2": "data1",
                "param_3": "data2",
                "uVar3": "shift_amount",
                "uVar2": "shift_count",
                "uVar4": "shift_offset",
                "DAT_080011f8": "ptr_offset_2"
            },
            "code": "void encode_data_08001194(uint bit_offset, uint data1, uint data2)\n{\n  uint shift_amount = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  uint shift_count = 7 - shift_amount;\n  uint mask = (1 << (shift_count & 0xff)) - 1;\n  uint shift_offset = shift_amount + 4;\n  if (3 < shift_count) {\n    shift_count = 4;\n  }\n  if (shift_offset < 7) {\n    shift_amount = 0;\n  }\n  if (6 < shift_offset) {\n    shift_amount = shift_amount - 3;\n  }\n  undefined shifted_data = (undefined)((data2 & mask) << (shift_amount & 0xff) | data1 & (1 << (shift_amount & 0xff)) - 1U) << 4;\n  if (-1 < (int)bit_offset) {\n    uint data_offset = bit_offset + 0xe000e100;\n    *(undefined *)(data_offset + 0x300) = shifted_data;\n  }\n  else {\n    uint data_offset = bit_offset & 0xf;\n    uint ptr_offset = DAT_080011f8;\n    *(undefined *)(ptr_offset + data_offset) = shifted_data;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004514",
                "FUN_08004ccc",
                "FUN_08004e7c",
                "FUN_08001104"
            ],
            "imported": true,
            "current_name": "encode_data_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUNC_08000cec": "calculate_cec",
                "calculate_hash_08000c44": "calculate_hash",
                "local_c": "local_var",
                "FUN_08002cb0": "process_mpu9250_data_and_print_results_08002cb0",
                "FUNC_08000adc": "calculate_adc",
                "param_1": "input1",
                "PTR_s____Src_MPU9250_c_08002d80": "mpu9250_data",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "puVar1": "mpu9250_data",
                "PTR_DAT_08002d84": "hash_data",
                "check_and_process_data_0800407c": "check_and_process_mpu9250_data"
            },
            "code": "void process_mpu9250_data_and_print_results_08002cb0(undefined4 input1, undefined4 input2, undefined4 input3, uint32_t input4)\n{\n  uint32_t local_var = input4;\n  process_input_and_print_strings_0800403c(0xd0,0x37,0x22,1,input1,input2,input3);\n  undefined *PTR_s____Src_MPU9250_c_08002d80 = PTR_s____Src_MPU9250_c_08002d80;\n  process_input_and_print_strings_0800403c(0xd0,0x6a,1);\n  check_and_process_data_0800407c(0x18,0,PTR_s____Src_MPU9250_c_08002d80,0xad);\n  process_input_and_print_strings_0800403c(0x18,0xb,1);\n  process_input_and_print_strings_0800403c(0x18,10,0,1);\n  process_input_and_print_strings_0800403c(0x18,10,0xf,1);\n  process_i2c_data_080040e8(0x18,0x10,&local_var,3,PTR_s____Src_MPU9250_c_08002d80,0xb6);\n  undefined *PTR_DAT_08002d84 = PTR_DAT_08002d84;\n  uint32_t hash1 = calculate_hash_08000c44((local_var & 0xff) - 0x80);\n  hash1 = FUNC_08000cec(hash1,0x3b800000);\n  hash1 = FUNC_08000adc(hash1,0x3f800000);\n  *(uint32_t *)PTR_DAT_08002d84 = hash1;\n  uint32_t hash2 = calculate_hash_08000c44((local_var >> 8 & 0xff) - 0x80);\n  hash2 = FUNC_08000cec(hash2,0x3b800000);\n  hash2 = FUNC_08000adc(hash2,0x3f800000);\n  *(uint32_t *)(PTR_DAT_08002d84 + 4) = hash2;\n  uint32_t hash3 = calculate_hash_08000c44((local_var >> 0x10 & 0xff) - 0x80);\n  hash3 = FUNC_08000cec(hash3,0x3b800000);\n  hash3 = FUNC_08000adc(hash3,0x3f800000);\n  *(uint32_t *)(PTR_DAT_08002d84 + 8) = hash3;\n  process_input_and_print_strings_0800403c(0x18,10,0,1);\n  process_input_and_print_strings_0800403c(0x18,10,0x16,1);\n  return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_0800407c",
                "FUN_080040e8",
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "process_mpu9250_data_and_print_results_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "local_c": "masked_flags",
                "FUN_08004348": "process_input_data_08004348",
                "uStack_8": "output_data",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "output",
                "puVar1": "data_ptr",
                "local_10": "local_data"
            },
            "code": "void process_input_data_08004348(uint8_t data, uint32_t flags, uint8_t output){\n  uint8_t *data_ptr = PTR_DAT_08004380;\n  *data_ptr = 0xe9;\n  data_ptr[1] = 3;\n  data_ptr[3] = 4;\n  data_ptr[2] = 0;\n  uint32_t local_data = *(uint32_t *)data_ptr;\n  data_ptr[4] = 0;\n  data_ptr[5] = 0;\n  data_ptr[6] = 0;\n  uint32_t masked_flags = flags & 0xff000000 | (uint32_t)*(uint16_t *)(data_ptr + 4);\n  uint8_t output_data = output;\n  process_input_data_08004348_08004300(100,&local_data,7);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_input_data_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "iVar2": "value1",
                "iVar3": "value2",
                "uVar1": "flags",
                "iVar4": "constant",
                "FUN_08002324": "update_flags_and_values_08002324",
                "param_1": "target_address",
                "param_2": "values"
            },
            "code": "void update_flags_and_values_08002324(int target_address, int *values)\n{\n  uint flags = *(uint *)(target_address + 0x20);\n  int value1 = *values;\n  int value2 = values[2];\n  int constant = DAT_08002364;\n  if (target_address == DAT_08002364) {\n    constant = values[5];\n    flags &= 0xffffbfff;\n  }\n  if (target_address == DAT_08002364) {\n    flags |= constant << 6;\n  }\n  *(uint *)(target_address + 4) = flags;\n  *(uint *)(target_address + 0x1c) = *(uint *)(target_address + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(target_address + 0x40) = values[1];\n  *(uint *)(target_address + 0x20) = *(uint *)(target_address + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_flags_and_values_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "uVar1": "exponent",
                "FUN_08001078": "decode_float_08001078",
                "param_1": "encoded_float",
                "uVar3": "shifted_mantissa",
                "uVar2": "shift_amount",
                "uVar4": "decoded_mantissa"
            },
            "code": "uint decode_float_08001078(uint encoded_float){\n    uint exponent;\n    uint shifted_encoded_float;\n    uint sign = encoded_float & 0x80000000;\n    uint mantissa = encoded_float & 0x7fffff;\n    \n    if(encoded_float << 1 < 0x7f000000){\n        return 0;\n    }\n    \n    shifted_encoded_float = encoded_float << 1;\n    exponent = (shifted_encoded_float >> 0x18) & 0xff;\n    \n    if(exponent < 0x9f){\n        uint shift_amount = 0x9e - exponent;\n        if(shift_amount != 0){\n            uint shifted_mantissa = mantissa | 0x800000;\n            uint decoded_mantissa = shifted_mantissa >> shift_amount;\n            if(sign != 0){\n                decoded_mantissa = -decoded_mantissa;\n            }\n            return decoded_mantissa;\n        }\n    }else if(exponent == 0xff){\n        if(mantissa != 0){\n            return 0;\n        }\n    }else{\n        exponent -= 0x7f;\n        uint shifted_mantissa = mantissa | 0x800000;\n        uint decoded_mantissa = shifted_mantissa << 0x19;\n        decoded_mantissa >>= exponent;\n        if(sign != 0){\n            decoded_mantissa = -decoded_mantissa;\n        }\n        return decoded_mantissa;\n    }\n    \n    if(sign == 0){\n        return 0x7fffffff;\n    }else{\n        return 0x80000000;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_08002f28",
                "FUN_0800426c",
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "decode_float_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "uVar1": "result",
                "FUN_08002564": "set_flag_and_combine_08002564",
                "param_1": "flag",
                "param_2": "data"
            },
            "code": "int set_flag_and_combine_08002564(uint *data, int *flag) {\n  int result = 2;\n  if (*(char *)(flag + 0xe) != '\\x01') {\n    *(undefined *)((int)flag + 0x39) = 2;\n    *(uint *)(*flag + 0x44) =\n         data[0] | data[1] | data[2] | data[3] | data[4] | data[5] | data[6];\n    *(undefined *)((int)flag + 0x39) = 1;\n    result = 0;\n    *(undefined *)(flag + 0xe) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_flag_and_combine_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "uVar1": "shift_value_low",
                "puVar3": "current_value_ptr",
                "puVar4": "data_ptr",
                "param_1": "device_data",
                "puVar5": "temp_value",
                "FUN_08001754": "initialize_device_08001754",
                "uVar2": "shift_value_high",
                "uVar6": "divisor_result"
            },
            "code": "uint32_t initialize_device_08001754(uint32_t **device_data)\n{\n  uint32_t shift_value_high;\n  uint32_t shift_value_low;\n  uint32_t *current_value_ptr;\n  uint32_t *data_ptr;\n  uint32_t temp_value;\n\n  if (device_data == NULL) {\n    return 1;\n  }\n\n  if (*(char *)((int)device_data + 0x35) == '\\0') {\n    *(undefined *)((int)device_data + 0xd) = 0;\n    process_device_data();\n  }\n\n  *(undefined *)((int)device_data + 0x35) = 0x24;\n  current_value_ptr = DEVICE_DATA_START_PTR;\n  **device_data &= 0xfffffffe;\n  temp_value = get_shifted_value_based_on_bit_position();\n  shift_value_high = (uint32_t)((uint64_t)temp_value >> 0x20);\n  shift_value_low = (uint32_t)temp_value;\n  data_ptr = device_data[1];\n\n  if (current_value_ptr < data_ptr) {\n    shift_value_high = 300;\n  }\n\n  if (current_value_ptr < data_ptr) {\n    shift_value_high *= shift_value_low / DEVICE_DATA_DIVISOR;\n  }\n\n  current_value_ptr[1] = shift_value_low / DEVICE_DATA_DIVISOR;\n\n  if (current_value_ptr < data_ptr) {\n    shift_value_low = shift_value_high / 1000;\n  }\n\n  if (current_value_ptr < data_ptr) {\n    if (device_data[2] == NULL) {\n      shift_value_low = shift_value_low / (uint32_t)((int)data_ptr * 3) | 0x8000;\n    }\n    else {\n      shift_value_low = shift_value_low / (uint32_t)((int)data_ptr * 0x19) | 0xc000;\n    }\n    if ((shift_value_low & 0xfff) == 0) {\n      shift_value_low = 1;\n    }\n  }\n  else {\n    shift_value_low = shift_value_low / (uint32_t)((int)data_ptr << 1);\n    if ((shift_value_low & 0xfff) < 4) {\n      shift_value_low = 4;\n    }\n  }\n\n  current_value_ptr = device_data[0];\n  data_ptr = device_data[7];\n  current_value_ptr[7] = shift_value_low;\n  *current_value_ptr = (uint32_t)data_ptr | (uint32_t)device_data[8];\n  current_value_ptr[2] = (uint32_t)device_data[4] | (uint32_t)device_data[3];\n  current_value_ptr[3] = (uint32_t)device_data[5] | (uint32_t)device_data[6];\n  *current_value_ptr |= 1;\n  device_data[0xe] = NULL;\n  *(undefined *)((int)device_data + 0x35) = 0x20;\n  *(undefined *)((int)device_data + 0x36) = 0;\n  return 0;\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "initialize_device_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08003330",
                "FUN_0800426c",
                "FUN_08002d88",
                "FUN_08002ee8",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "imported": true,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "param_1": "ptr_data",
                "FUN_08003ec8": "increment_and_store_08003ec8",
                "*(short *)(param_1 + 0x804)": "*ptr_count",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(char*)(ptr_data + (uint)*ptr_index)",
                "param_2": "data",
                "*(ushort *)(param_1 + 0x802)": "*ptr_index"
            },
            "code": "int increment_and_store_08003ec8(int ptr_data, char data) {\n  short* ptr_count = (short*)(ptr_data + 0x804);\n  *ptr_count = *ptr_count + 1;\n  ushort* ptr_index = (ushort*)(ptr_data + 0x802);\n  *(char*)(ptr_data + (uint)*ptr_index) = data;\n  *ptr_index = (*ptr_index + 1U) & 0x7ff;\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": true,
            "current_name": "increment_and_store_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "iVar1": "data_ptr",
                "param_1": "data",
                "FUN_08002724": "process_data_08002724"
            },
            "code": "int process_data_08002724(int *data) {\\n  int data_ptr = *data;\\n  if (data != NULL) {\\n    if (*(char *)(data + 0x39) == \"\\0\") {\\n      *(undefined *)(data + 0xe) = 0;\\n      process_data_08002724_08004e7c();\\n    }\\n    *(undefined *)(data + 0x39) = 2;\\n    *(uint *)(data_ptr + 0xc) &= 0xffffdfff;\\n    update_values(data);\\n    *(uint *)(data_ptr + 0x10) &= 0xffffb7ff;\\n    *(uint *)(data_ptr + 0x14) &= 0xffffffd5;\\n    *(uint *)(data_ptr + 0xc) |= 0x2000;\\n    data[0xf] = 0;\\n    *(undefined *)(data + 0x39) = 1;\\n    return 0;\\n  }\\n  return 1;\\n}",
            "called": [
                "FUN_080025e8",
                "FUN_08004e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_data_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "PTR_DAT_08003ff0": "data_pointer",
                "param_1": "parameter_value",
                "FUN_08003fe8": "set_parameter_value_08003fe8"
            },
            "code": "void set_parameter_value_08003fe8(int *PTR_DAT_08003ff0, int parameter_value){\n  *(int *)(*PTR_DAT_08003ff0 + 0x3c) = parameter_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_parameter_value_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "PTR_DAT_080057c8": "current_block_ptr_ptr",
                "iVar4": "difference",
                "puVar3": "current_block_ptr",
                "param_1": "size_ptr",
                "puVar5": "block_ptr",
                "puVar7": "previous_block_ptr",
                "FUN_08005714": "allocate_memory_08005714",
                "param_2": "size",
                "puVar1": "unused_pointer",
                "uVar2": "result",
                "PTR_DAT_080057cc": "unused_pointer_2",
                "uVar6": "block_size",
                "uVar8": "aligned_size"
            },
            "code": "uint allocate_memory_08005714(uint *size_ptr, uint size)\n{\n  uint *current_block_ptr;\n  uint *previous_block_ptr;\n  uint block_size;\n  uint aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *size_ptr = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    current_block_ptr = *(uint **)PTR_DAT_080057c8;\n    previous_block_ptr = *(uint **)PTR_DAT_080057c8;\n    while (current_block_ptr != (uint *)0x0) {\n      block_size = *current_block_ptr - aligned_size;\n      if (-1 < (int)block_size) {\n        if (block_size < 0xc) {\n          if (previous_block_ptr == current_block_ptr) {\n            aligned_size = previous_block_ptr[1];\n            *(uint *)PTR_DAT_080057c8 = aligned_size;\n          }\n          else {\n            aligned_size = current_block_ptr[1];\n          }\n          if (previous_block_ptr != current_block_ptr) {\n            previous_block_ptr[1] = aligned_size;\n            previous_block_ptr = current_block_ptr;\n          }\n        }\n        else {\n          *current_block_ptr = block_size;\n          *(uint *)((int)current_block_ptr + block_size) = aligned_size;\n          previous_block_ptr = (uint *)((int)current_block_ptr + block_size);\n        }\n        goto LAB_08005778;\n      }\n      previous_block_ptr = current_block_ptr;\n      current_block_ptr = (uint *)current_block_ptr[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint result = update_value_if_needed_0800581c(size_ptr);\n      *(uint *)PTR_DAT_080057cc = result;\n    }\n    current_block_ptr = (uint *)update_value_if_needed_0800581c(size_ptr,aligned_size);\n    if ((current_block_ptr != (uint *)0xffffffff) &&\n       ((previous_block_ptr = (uint *)((int)current_block_ptr + 3U & 0xfffffffc), current_block_ptr == previous_block_ptr ||\n        (block_size = update_value_if_needed_0800581c(size_ptr,(int)previous_block_ptr - (int)current_block_ptr), block_size != -1)))) {\n      *previous_block_ptr = aligned_size;\nLAB_08005778:\n      do_nothing_0800583e(size_ptr);\n      aligned_size = (int)previous_block_ptr + 0xbU & 0xfffffff8;\n      block_size = aligned_size - (int)(previous_block_ptr + 1);\n      if (block_size != 0) {\n        *(int *)((int)previous_block_ptr + block_size) = -block_size;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *size_ptr = 0xc;\n    do_nothing_0800583e(size_ptr);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800581c",
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_080050fc",
                "FUN_080057d0",
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "allocate_memory_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "iVar2": "num_functions",
                "iVar3": "i",
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_list"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  void **function_list = PTR_DAT_08004fec;\n  int num_functions = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i < num_functions / 4; i++) {\n    (**(void (**)(void))(function_list + i * 4))();\n  }\n  do_nothing_080072d4();\n  function_list = PTR_DAT_08004ff4;\n  num_functions = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i < num_functions / 4; i++) {\n    (**(void (**)(void))(function_list + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "param_1": "input1",
                "uStack_c": "value2",
                "FUN_080043f0": "process_input_data_wrapper_080043f0",
                "param_2": "input2",
                "param_3": "input3",
                "local_10": "value1",
                "auStack_8": "inputs"
            },
            "code": "void process_input_data_wrapper_080043f0(undefined4 input1, undefined4 input2, undefined4 input3)\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 inputs[2];\n  value1 = *(undefined4 *)PTR_DAT_0800440c;\n  value2 = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  inputs[0] = input3;\n  process_input_data_08004300(0x68, &value1, 8, inputs);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_input_data_wrapper_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "bVar10": "borrow1",
                "uVar1": "sign_bit",
                "iVar6": "count",
                "param_1": "input1",
                "FUN_08000428": "reverse_and_improve_08000428",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result1",
                "uVar2": "shift4",
                "bVar9": "is_zero",
                "uVar5": "shift1",
                "uVar4": "shift2",
                "uVar7": "shift5",
                "bVar8": "is_zero2",
                "in_r12": "shift7",
                "mask": "mask"
            },
            "code": "ulonglong reverse_and_improve_08000428(uint input1, undefined4 input2, undefined4 input3, uint input4)\n{\n  uint shift1 = input1 << 1;\n  bool is_zero = shift1 == 0;\n  uint sign_bit = (uint)((input1 & 0x80000000) != 0) << 0x1f;\n  uint shift2 = (uint)((int)shift1 >> 3) >> 1;\n  uint result1 = sign_bit | shift2;\n  input1 = input1 << 0x1d;\n  if (!is_zero) {\n    uint mask = shift1 & 0xff000000;\n    is_zero = mask == 0;\n  }\n  if (!is_zero) {\n    is_zero = mask == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(result1, input1) ^ 0x3800000000000000;\n  }\n  if (shift1 == 0 || mask == 0xff000000) {\n    return CONCAT44(result1, input1);\n  }\n  uint shift3 = shift2;\n  uint shift4 = input1;\n  if (shift2 == 0) {\n    shift3 = input1;\n    shift4 = 0;\n  }\n  int count = count_leading_zeroes(shift3);\n  if (shift2 == 0) {\n    count = count + 0x20;\n  }\n  uint shift5 = count - 0xb;\n  bool borrow1 = SBORROW4(shift5, 0x20);\n  uint shift6 = count - 0x2b;\n  bool less_than_zero1 = (int)shift6 < 0;\n  bool is_zero2 = shift6 == 0;\n  if ((int)shift5 < 0x20) {\n    borrow1 = SCARRY4(shift6, 0xc);\n    count = count + -0x1f;\n    less_than_zero1 = count < 0;\n    is_zero2 = count == 0;\n    shift5 = shift5;\n    if (!is_zero2 && less_than_zero1 == borrow1) {\n      shift3 = shift3 << (shift5 & 0xff);\n      shift2 = shift3 >> (0xcU - count & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_zero2 || less_than_zero1 != borrow1) {\n    uint shift7 = 0x20 - shift5;\n    shift3 = shift3 << (shift5 & 0xff);\n    shift3 = shift3 | shift4 >> (shift7 & 0xff);\n  }\n  if (is_zero2 || less_than_zero1 != borrow1) {\n    shift4 = shift4 << (shift5 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shift5 < 0x381) {\n    return CONCAT44(shift3 + (0x380 - shift5) * 0x100000 | sign_bit, shift4);\n  }\n  uint shift8 = ~(0x380 - shift5);\n  if ((int)shift8 < 0x1f) {\n    int shift9 = shift8 - 0x13;\n    if (shift9 != 0 && shift9 < 0 == SCARRY4(shift8 - 0x1f, 0xc)) {\n      return CONCAT44(result1, shift4 >> (0x20 - (0xcU - shift9) & 0xff) | shift3 << (0xcU - shift9 & 0xff)) & 0x80000000ffffffff;\n    }\n    shift8 = shift8 + 1;\n    return CONCAT44(sign_bit | shift3 >> (shift8 & 0xff), shift4 >> (shift8 & 0xff) | shift3 << (0x20 - shift8 & 0xff));\n  }\n  return CONCAT44(result1, shift3 >> (shift8 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "reverse_and_improve_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "updateParameter_08001170": "update_parameter",
                "iVar1": "data_address",
                "encode_data_08001194": "encode_data",
                "param_1": "data_1",
                "FUN_08004ccc": "update_and_encode_data_08004ccc",
                "param_2": "data_2",
                "param_3": "data_3",
                "uVar3": "masked_data",
                "uVar2": "updated_data",
                "DAT_08004d44": "data_address"
            },
            "code": "void update_and_encode_data_08004ccc(uint32_t param_1, uint32_t param_2, uint32_t param_3)\n{\n  int DAT_08004d44 = DAT_08004d44;\n  uint32_t updated_data = *(uint32_t *)(DAT_08004d44 + 0x18) | 1;\n  *(uint32_t *)(DAT_08004d44 + 0x18) = updated_data;\n  uint32_t masked_data = *(uint32_t *)(DAT_08004d44 + 0x18) & 1;\n  update_parameter(3, param_2, updated_data, masked_data, param_1, masked_data, param_3);\n  encode_data(0xfffffff4, 0);\n  encode_data(0xfffffff5, 0);\n  encode_data(0xfffffff6, 0);\n  encode_data(0xfffffffb, 0);\n  encode_data(0xfffffffc, 0);\n  encode_data(0xfffffffe, 0);\n  encode_data(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": true,
            "current_name": "update_and_encode_data_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "bVar4": "is_denormal",
                "uVar1": "exponent_bits",
                "param_1": "float_bits",
                "param_2": "shift_amount",
                "FUN_08000a30": "calculate_float_bits_08000a30",
                "uVar3": "mantissa_bits",
                "uVar2": "shifted_bits",
                "bVar5": "is_nan_or_inf",
                "in_r12": "unused_register"
            },
            "code": "uint calculate_float_bits_08000a30(uint float_bits, uint shift_amount)\n{\n  uint shifted_bits;\n  uint sign_bit;\n  uint exponent_bits;\n  uint mantissa_bits;\n  bool is_denormal;\n  bool is_nan_or_inf;\n  \n  shifted_bits = shift_amount * 2;\n  is_denormal = shifted_bits >= 0x70000000;\n  mantissa_bits = shifted_bits + 0x90000000;\n  exponent_bits = mantissa_bits;\n  if (!is_denormal) {\n    exponent_bits = shifted_bits + 0x8fe00000;\n  }\n  sign_bit = exponent_bits == 0;\n  if (!is_denormal && mantissa_bits >= 0x200000) {\n    sign_bit = exponent_bits == 0x1fc00000;\n  }\n  if (((is_denormal || mantissa_bits < 0x200000) || 0x1fc00000 < exponent_bits) || sign_bit) {\n    if ((shift_amount & 0x40000000) != 0) {\n      if (((int)shifted_bits >> 0x15 == -1) && ((float_bits | shift_amount << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return shift_amount & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shifted_bits + 0x92e00000) < 0 != SCARRY4(mantissa_bits,0x2e00000)) {\n      return shift_amount & 0x80000000;\n    }\n    shifted_bits = 0x18 - (shifted_bits + 0x92e00000 >> 0x15);\n    exponent_bits = float_bits >> (shifted_bits & 0xff);\n    if (float_bits << (0x20 - shifted_bits & 0xff) != 0) {\n      exponent_bits = exponent_bits | 1;\n    }\n    mantissa_bits = shift_amount & 0x1fffff | 0x100000;\n    float_bits = exponent_bits | mantissa_bits << (0x20 - shifted_bits & 0xff);\n    mantissa_bits = (mantissa_bits >> (shifted_bits & 0xff)) << 1;\n  }\n  exponent_bits = (shift_amount & 0x80000000 | float_bits >> 0x1d) + mantissa_bits * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    exponent_bits = exponent_bits & 0xfffffffe;\n  }\n  return exponent_bits;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "calculate_float_bits_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "update_flags_08004d8c": "update_flags",
                "set_values_08002368": "set_values",
                "param_1": "data_ptr",
                "*(undefined *)((int)param_1 + 0x39)": "*(char *)((int)data_ptr + 0x39)",
                "FUN_080023d0": "process_data_080023d0",
                "*(undefined *)(param_1 + 0xe)": "*(char *)((int)data_ptr + 0xe)"
            },
            "code": "int process_data_080023d0(int *data_ptr)\\n{\\n  if (data_ptr != NULL) {\\n    if (*(char *)((int)data_ptr + 0x39) == \"\\0\") {\\n      *(char *)((int)data_ptr + 0xe) = 0;\\n      update_flags();\\n    }\\n    *(char *)((int)data_ptr + 0x39) = 2;\\n    set_values(*data_ptr, data_ptr + 1);\\n    *(char *)((int)data_ptr + 0x39) = 1;\\n    return 0;\\n  }\\n  return 1;\\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "DAT_08004c54": "value",
                "iVar5": "ptr3",
                "PTR_DAT_08004c5c": "PTR_DAT_08004c5c",
                "puVar2": "ptr2",
                "PTR_DAT_08004c58": "ptr1",
                "param_1": "param",
                "increment_and_store_08003ec8": "increment_and_store_08003ec8",
                "PTR_DAT_08004c60": "ptr2",
                "FUN_08004c30": "increment_and_store_08004c30",
                "puVar1": "ptr1",
                "uVar3": "byte39_new",
                "uVar4": "uint_ptr"
            },
            "code": "int* increment_and_store_08004c30(int* param) {\n  undefined* PTR_DAT_08004c58 = PTR_DAT_08004c58;\n  int DAT_08004c54 = *param;\n  if (DAT_08004c54 != DAT_08004c54) {\n    return param;\n  }\n  increment_and_store_08004c30_08003ec8(PTR_DAT_08004c5c, *PTR_DAT_08004c58);\n  undefined* PTR_DAT_08004c60 = PTR_DAT_08004c60;\n  char byte39 = PTR_DAT_08004c60[0x39];\n  if (byte39 == '\\x01' || byte39 == '\\x12') {\n    if (PTR_DAT_08004c58 == (undefined*)0x0) {\n      return (int*)0x1;\n    }\n    char byte38 = PTR_DAT_08004c60[0x38];\n    if (byte38 != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4*)(PTR_DAT_08004c60 + 0x3c) = 0;\n      *(undefined2*)(PTR_DAT_08004c60 + 0x2c) = 1;\n      *(undefined2*)(PTR_DAT_08004c60 + 0x2e) = 1;\n      PTR_DAT_08004c60[0x38] = 0;\n      char byte39_new = (byte39 == '\\x12') ? 0x32 : 0x22;\n      int* ptr3 = *(int**)PTR_DAT_08004c60;\n      PTR_DAT_08004c60[0x39] = byte39_new;\n      uint* uint_ptr = (uint*)(ptr3 + 0xc);\n      *uint_ptr |= 0x100;\n      *(uint*)(ptr3 + 0x14) |= 1;\n      *uint_ptr |= 0x20;\n      return (int*)0x0;\n    }\n  }\n  return (int*)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": true,
            "current_name": "increment_and_store_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = perform_computation_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08003330",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "param_1": "parameter_value",
                "FUN_08003fdc": "set_parameter_in_memory_08003fdc",
                "PTR_DAT_08003fe4": "ptr_to_memory_location"
            },
            "code": "void set_parameter_in_memory_08003fdc(int parameter_value)\n{\n  int* PTR_DAT_08003fe4 = *(int*)PTR_DAT_08003fe4;\n  int offset = 0x38;\n  *(int*)(PTR_DAT_08003fe4 + offset) = parameter_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_parameter_in_memory_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "in_CY": "current_char",
                "FUN_080009f0": "is_end_of_string_080009f0"
            },
            "code": "bool is_end_of_string_080009f0(void)\n{\n  char current_char;\n  compare_and_return_result();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70"
            ],
            "imported": true,
            "current_name": "is_end_of_string_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "puVar1": "flags_ptr",
                "FUN_08004f10": "set_flags_and_values_08004f10"
            },
            "code": "void set_flags_and_values_08004f10(void)\n{\n  uint *flags_ptr;\n  flags_ptr = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  flags_ptr[1] &= DAT_08004f54;\n  *flags_ptr &= 0xfef6ffff;\n  *flags_ptr &= 0xfffbffff;\n  flags_ptr[1] &= 0xff80ffff;\n  flags_ptr[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "set_flags_and_values_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "reverse_copy_data_08005044",
                "iVar1": "allocated_and_copied_data",
                "iVar4": "offset",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "start_index",
                "param_4": "end_index",
                "uVar3": "new_length",
                "uVar2": "required_length"
            },
            "code": "uint32_t reverse_copy_data_08005044(uint32_t *destination, int *source, uint32_t start_index, uint32_t end_index){\n    uint32_t source_length = source[2];\n    if ((source_length <= end_index) && ((*(uint16_t *)(source + 3) & 0x480) != 0)) {\n        int32_t offset = *source - source[4];\n        uint32_t new_length = (uint32_t)(source[5] * 3) / 2;\n        uint32_t required_length = end_index + 1 + offset;\n        if (new_length < required_length) {\n            new_length = required_length;\n        }\n        if ((int32_t)((uint32_t)*(uint16_t *)(source + 3) << 0x15) < 0) {\n            uint32_t allocated_memory = allocate_memory(destination, new_length);\n            if (allocated_memory == 0) {\n                *destination = 0xc;\n                *(uint16_t *)(source + 3) = *(uint16_t *)(source + 3) | 0x40;\n                return 0xffffffff;\n            }\n            copy_data_from_source_to_destination(allocated_memory, source[4], offset);\n            *(uint16_t *)(source + 3) = *(uint16_t *)(source + 3) & 0xfb7f | 0x80;\n            source[4] = allocated_memory;\n        }\n        else {\n            uint32_t allocated_and_copied_data = allocate_and_copy_data_into_linked_list(destination, source[4], new_length);\n            if (allocated_and_copied_data == 0) {\n                insert_into_linked_list(destination, source[4]);\n                *destination = 0xc;\n                *(uint16_t *)(source + 3) = *(uint16_t *)(source + 3) | 0x40;\n                return 0xffffffff;\n            }\n            source[4] = allocated_and_copied_data;\n        }\n        *source = source[4] + offset;\n        source[5] = new_length;\n        source[2] = new_length - offset;\n        source_length = end_index;\n    }\n    if (end_index <= source_length) {\n        source_length = end_index;\n    }\n    reverse_copy(destination, source[3], start_index, source_length);\n    source[2] = source[2] - source_length;\n    *source = source_length + *source;\n    return 0;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_0800567c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": true,
            "current_name": "reverse_copy_data_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "update_and_initialize_sensor_data_08004194",
                "puVar2": "data_ptr_2",
                "puVar3": "data_ptr_3",
                "puVar4": "data_ptr_4",
                "puVar1": "data_ptr_1",
                "uVar5": "var_1",
                "uVar7": "var_3",
                "uVar6": "var_2",
                "uVar8": "var_4"
            },
            "code": "void update_and_initialize_sensor_data_08004194(void)\n{\n  undefined *data_ptr_1;\n  undefined *data_ptr_2;\n  undefined *data_ptr_3;\n  undefined *data_ptr_4;\n  undefined4 var_1;\n  undefined4 var_2;\n  undefined4 var_3;\n  undefined4 var_4;\n  update_params_and_wait();\n  initialize_and_check_data();\n  process_sensor_and_mpu_data_and_set_params();\n  read_MS5611_sensor_data();\n  data_ptr_3 = PTR_DAT_080049f0;\n  data_ptr_2 = PTR_DAT_080049ec;\n  data_ptr_1 = PTR_DAT_080049e8;\n  *(undefined4 *)(PTR_DAT_080049ec + 0x4c) = 1;\n  *(undefined4 *)(data_ptr_1 + 0x4c) = 1;\n  *(undefined4 *)(data_ptr_3 + 0x4c) = 0xffffffff;\n  var_1 = DAT_080049f8;\n  data_ptr_4 = PTR_DAT_080049f4;\n  *(undefined4 *)(PTR_DAT_080049f4 + 0x4c) = 1;\n  var_2 = DAT_08004a00;\n  *(undefined4 *)(data_ptr_2 + 0x20) = DAT_080049fc;\n  var_3 = DAT_08004a08;\n  *(undefined4 *)(data_ptr_1 + 0x20) = DAT_08004a04;\n  *(undefined4 *)(data_ptr_3 + 0x20) = DAT_08004a0c;\n  *(undefined4 *)(data_ptr_4 + 0x20) = 0;\n  *(undefined4 *)(data_ptr_2 + 4) = var_1;\n  var_1 = DAT_08004a10;\n  *(undefined4 *)(data_ptr_2 + 8) = DAT_08004a10;\n  *(undefined4 *)(data_ptr_2 + 0xc) = var_2;\n  *(undefined4 *)(data_ptr_2 + 0x10) = var_3;\n  var_3 = DAT_08004a14;\n  *(undefined4 *)(data_ptr_2 + 0x14) = var_1;\n  *(undefined4 *)(data_ptr_2 + 0x18) = var_3;\n  var_4 = DAT_08004a1c;\n  var_3 = DAT_08004a18;\n  *(undefined4 *)(data_ptr_1 + 4) = DAT_08004a18;\n  *(undefined4 *)(data_ptr_1 + 8) = var_1;\n  *(undefined4 *)(data_ptr_1 + 0xc) = var_4;\n  *(undefined4 *)(data_ptr_1 + 0x10) = var_3;\n  var_3 = DAT_08004a20;\n  *(undefined4 *)(data_ptr_1 + 0x14) = var_1;\n  *(undefined4 *)(data_ptr_1 + 0x18) = var_3;\n  *(undefined4 *)(data_ptr_3 + 4) = DAT_08004a24;\n  *(undefined4 *)(data_ptr_3 + 8) = DAT_08004a28;\n  *(undefined4 *)(data_ptr_3 + 0xc) = var_2;\n  *(undefined4 *)(data_ptr_3 + 0x10) = 0;\n  *(undefined4 *)(data_ptr_3 + 0x14) = 0;\n  *(undefined4 *)(data_ptr_3 + 0x18) = 0;\n  *(undefined4 *)(data_ptr_4 + 4) = DAT_08004a2c;\n  *(undefined4 *)(data_ptr_4 + 8) = 0;\n  *(undefined4 *)(data_ptr_4 + 0xc) = 0;\n  *(undefined4 *)(data_ptr_4 + 0x10) = 0;\n  *(undefined4 *)(data_ptr_4 + 0x14) = 0;\n  *(undefined4 *)(data_ptr_4 + 0x18) = 0;\n  return;\n}\n",
            "called": [
                "FUN_08004028",
                "FUN_08002ea0",
                "FUN_08003298",
                "FUN_08004c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "update_and_initialize_sensor_data_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "update_flag_08001240",
                "uVar1": "flag_mask",
                "DAT_08001254": "flag_ptr",
                "param_1": "flag_value"
            },
            "code": "void update_flag_08001240(int flag_value)\n{\n  uint32_t* DAT_08001254 = DAT_08001254;\n  if (flag_value == 4) {\n    *DAT_08001254 |= 0x04;\n  }\n  else {\n    *DAT_08001254 &= 0xfffffffb;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "update_flag_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "iVar1": "result",
                "FUN_08005840": "calculate_result_08005840",
                "param_1": "param1",
                "param_2": "param2"
            },
            "code": "int calculate_result_08005840(int param1, int param2)\n{\n  int result = *(int *)(param2 - 4) - 4;\n  if (*(int *)(param2 - 4) < 0) {\n    result += *(int *)(param2 + result);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": true,
            "current_name": "calculate_result_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "pcVar2": "current_position",
                "FUN_08000150": "find_end_of_string_08000150",
                "pcVar3": "current_position",
                "param_1": "input_string",
                "cVar1": "current_character"
            },
            "code": "char* find_end_of_string_08000150(char* input_string) {\n  char current_character;\n  char* current_position = input_string;\n  do {\n    current_position++;\n    current_character = *current_position;\n  } while (current_character != '\\0');\n  return current_position + (-1 - (int)input_string);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": true,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "update_param_08001424": "update_parameter",
                "uVar1": "current_param",
                "FUN_08003f3c": "update_params_based_on_leading_zeroes_08003f3c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar2": "leading_zeroes_count",
                "DAT_08003f78": "current_param"
            },
            "code": "void update_params_based_on_leading_zeroes_08003f3c(uint32_t param1, uint32_t param2, uint32_t param3)\n{\n  uint32_t DAT_08003f78 = DAT_08003f78;\n  uint32_t leading_zeroes_count = count_leading_zeroes(param1);\n  update_parameter(DAT_08003f78, 0x8000, leading_zeroes_count >> 5);\n  leading_zeroes_count = count_leading_zeroes(param2);\n  update_parameter(DAT_08003f78, 0x4000, leading_zeroes_count >> 5);\n  leading_zeroes_count = count_leading_zeroes(param3);\n  update_parameter(DAT_08003f78, 0x2000, leading_zeroes_count >> 5);\n  return;\n}\n",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "imported": true,
            "current_name": "update_params_based_on_leading_zeroes_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "PTR_DAT_0800221c": "pointer_address",
                "FUN_08002214": "get_pointer_value_08002214"
            },
            "code": "get_pointer_value_08002214() {\n  return *(undefined4 *)PTR_DAT_0800221c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": true,
            "current_name": "get_pointer_value_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": true,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "reverse_and_concatenate_08001004_08001004",
                "param_1": "num1",
                "param_2": "num2"
            },
            "code": "undefined8 reverse_and_concatenate_08001004_08001004(undefined4 num1, undefined4 num2)\n{\n  calculate_result_08000f9c();\n  return CONCAT44(num2, num1);\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08000ffc",
                "FUN_08001014",
                "FUN_08001028"
            ],
            "imported": true,
            "current_name": "reverse_and_concatenate_08001004_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "toggle_bits_on_indexes_08003ff4",
                "puVar1": "bits_array"
            },
            "code": "void toggle_bits_on_indexes_08003ff4(void)\n{\n  undefined *bits_array = PTR_DAT_0800401c;\n  set_bit_and_toggle_08002538(PTR_DAT_08004020, 4);\n  set_bit_and_toggle_08002538(PTR_DAT_08004024, 8);\n  set_bit_and_toggle_08002538(bits_array, 8);\n  set_bit_and_toggle_08002538(bits_array, 0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": true,
            "current_name": "toggle_bits_on_indexes_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "convert_to_64_bit_08003eb0": "convert_to_64_bit",
                "FUNC_0800411c": "update_sensor_data",
                "FUN_080041ae": "run_sensor_data_updates_080041ae",
                "increment_count_0800114c": "increment_count",
                "update_and_initialize_sensor_data_08004194": "initialize_sensor_data"
            },
            "code": "void run_sensor_data_updates_080041ae(void)\n{\n  convert_to_64_bit(0);\n  initialize_sensor_data();\n  do {\n    increment_count();\n    update_sensor_data();\n  } while(true);\n}",
            "called": [
                "FUN_08004194",
                "FUN_0800114c",
                "FUN_0800411c",
                "FUN_08003eb0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "run_sensor_data_updates_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "updateParameter_08001170": "update_parameter",
                "DAT_08001148": "PTR_DAT_08001148",
                "FUN_08001128": "set_data_and_update_flags_08001128",
                "update_and_encode_data_08004ccc": "update_and_encode_data",
                "encode_data_08001104": "encode_data"
            },
            "code": "int set_data_and_update_flags_08001128(void)\n{\n  DAT_08001148[0] |= 0x10;\n  update_parameter(3);\n  encode_data(0);\n  update_and_encode_data();\n  return 0;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_data_and_update_flags_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "iVar1": "result",
                "local_c": "data_value",
                "iVar4": "data_index",
                "local_1c": "src_data_length",
                "FUN_08004514": "process_and_encode_data_08004514",
                "local_3c": "src_data_length_copy",
                "local_38": "data_length_copy",
                "uVar3": "src_length",
                "local_10": "result",
                "uVar2": "pointer_value",
                "local_20": "src_data_index",
                "local_30": "src_data",
                "local_40": "data_index_copy",
                "local_14": "src_data_index_copy",
                "local_34": "src_data_length",
                "local_44": "data_length"
            },
            "code": "void process_and_encode_data_08004514(void)\n{\n  int data_index = 2;\n  uint32_t data_value = 0x380000;\n  uint32_t src_index = 2;\n  uint32_t src_length = 0x10;\n  uint32_t src_data[4] = {2, 2, 0, 0};\n  uint32_t src_data_length;\n  uint32_t pointer_value;\n\n  while (1) {\n    src_data_length = process_and_print_strings(PTR_s____Src_peripherals_c_08004588, src_length);\n\n    if (!check_data(&data_index, src_data_length)) {\n      break;\n    }\n\n    src_length = 0x49;\n  }\n\n  pointer_value = get_pointer_value();\n  check_parameter_range(pointer_value / 1000);\n  update_flag(4);\n  encode_data(0xffffffff, 0, 0);\n}\n",
            "called": [
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08001240",
                "FUN_08004490",
                "FUN_08001b58",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_and_encode_data_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUNC_08000cec": "update_parameter",
                "process_data_0800483c": "process_data",
                "FUNC_08000adc": "decode_float",
                "is_string_empty_08001028": "is_string_empty",
                "update_params_based_on_leading_zeroes_08003f3c": "update_params_based_on_leading_zeroes",
                "decode_float_080010c4": "decode_float",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "puVar5": "ptr5",
                "is_string_empty_08001064": "is_string_empty",
                "FUN_08004a84": "process_data_and_update_params_08004a84",
                "checkAndPrintString_08002ee8": "check_and_print_string",
                "calculate_new_value_08002ec0": "calculate_new_value",
                "update_data_if_needed_08004a30": "update_data_if_needed",
                "puVar1": "ptr1",
                "uVar7": "new_value",
                "initialize_parameters_080041c4": "initialize_parameters",
                "calculate_result_08002ed4": "calculate_result"
            },
            "code": "void process_data_and_update_params_08004a84(void)\n{\n  int new_value = calculate_new_value();\n  char *ptr1 = PTR_DAT_08004bf0;\n  char *ptr2 = PTR_DAT_08004bf4;\n  char *ptr3 = PTR_DAT_08004bf8;\n  *(int *)(ptr1 + 0x30) = new_value;\n  new_value = calculate_result();\n  *(int *)(ptr2 + 0x30) = new_value;\n  new_value = check_and_print_string();\n  *(int *)(ptr3 + 0x30) = new_value;\n  update_data_if_needed();\n  int is_str_empty = is_string_empty(*(int *)(ptr1 + 0x30), 0);\n  if (is_str_empty == 0) {\n    is_str_empty = is_string_empty(*(int *)(ptr1 + 0x30), DAT_08004c00);\n  }\n  else {\n    is_str_empty = is_string_empty(*(int *)(ptr1 + 0x30), DAT_08004bfc);\n  }\n  if (is_str_empty == 0) {\n    is_str_empty = is_string_empty(*(int *)(ptr2 + 0x30), 0);\n    if (is_str_empty == 0) {\n      is_str_empty = is_string_empty(*(int *)(ptr2 + 0x30), DAT_08004c00);\n    }\n    else {\n      is_str_empty = is_string_empty(*(int *)(ptr2 + 0x30), DAT_08004bfc);\n    }\n    if (is_str_empty == 0) {\n      update_params_based_on_leading_zeroes(1, 1);\n      process_data(PTR_DAT_08004bf0);\n      char *ptr4 = PTR_DAT_08004c04;\n      process_data(PTR_DAT_08004bf4);\n      process_data(PTR_DAT_08004bf8);\n      char *ptr5 = PTR_DAT_08004c08;\n      if (ptr4[1] != '\\0') {\n        process_data(PTR_DAT_08004c08);\n        int new_val = FUNC_08000adc(*(int *)(ptr5 + 0x48), DAT_08004c0c);\n        *(int *)(ptr5 + 0x48) = new_val;\n      }\n      *(int *)(ptr5 + 0x48) = *(int *)(ptr4 + 4);\n      if (*ptr4 == '\\0') {\n        initialize_parameters();\n      }\n      else {\n        calculate_parameters(*(int *)(ptr5 + 0x48), *(int *)(ptr1 + 0x48), *(int *)(ptr2 + 0x48), *(int *)(ptr3 + 0x48));\n      }\n      FUNC_08000cec(*(int *)(ptr1 + 4), DAT_08004c10);\n      char *ptr6 = PTR_DAT_08004c14;\n      PTR_DAT_08004c14[3] = decode_float();\n      FUNC_08000cec(*(int *)(ptr1 + 8), DAT_08004c10);\n      ptr6[4] = decode_float();\n      FUNC_08000cec(*(int *)(ptr2 + 4), DAT_08004c10);\n      *ptr6 = decode_float();\n      FUNC_08000cec(*(int *)(ptr2 + 8), DAT_08004c10);\n      ptr6[1] = decode_float();\n      FUNC_08000cec(*(int *)(ptr2 + 0xc), DAT_08004c10);\n      ptr6[2] = decode_float();\n      FUNC_08000cec(*(int *)(ptr3 + 4), DAT_08004c10);\n      ptr6[6] = decode_float();\n      FUNC_08000cec(*(int *)(ptr3 + 8), DAT_08004c10);\n      ptr6[7] = decode_float();\n      FUNC_08000cec(*(int *)(ptr3 + 0xc), DAT_08004c10);\n      ptr6[8] = decode_float();\n      FUNC_08000cec(*(int *)(ptr5 + 4), DAT_08004c10);\n      ptr6[9] = decode_float();\n      FUNC_08000cec(*(int *)(ptr5 + 8), DAT_08004c10);\n      ptr6[10] = decode_float();\n      FUNC_08000cec(*(int *)(ptr5 + 0xc), DAT_08004c10);\n      ptr6[11] = decode_float();\n      ptr6[0xb] = decode_float();\n      return;\n    }\n  }\n  initialize_parameters();\n  update_params_based_on_leading_zeroes(0, 1);\n  return;\n}\n",
            "called": [
                "FUN_08001028",
                "FUN_08003f3c",
                "FUN_08001064",
                "FUN_080041c4",
                "FUN_080010c4",
                "FUN_08000cec",
                "FUN_0800483c",
                "FUN_08000adc",
                "FUN_08004a30",
                "FUN_08002ed4",
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002ec0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_data_and_update_params_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "set_param_value_08003fc4": "set_param_value",
                "param_1": "param_1",
                "set_parameter_in_memory_08003fdc": "set_param_memory",
                "param_2": "param_2",
                "FUN_080041c4": "initialize_parameters_080041c4",
                "param_3": "param_3",
                "param_4": "param_4",
                "set_parameter_value_08003fe8": "set_param_value",
                "extraout_r1": "extra_param",
                "set_parameter_value_08003fd0": "set_param_value"
            },
            "code": "void initialize_parameters_080041c4(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 extra_param;\n  set_param_value(0);\n  set_param_value(0);\n  set_param_memory(0);\n  set_param_value(0, extra_param, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "initialize_parameters_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = find_character_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = write_data_to_memory_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_08005614",
                "FUN_080052e4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": true,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "uVar1": "destination_address",
                "param_1": "additional_data",
                "param_2": "source_address",
                "FUN_080057d0": "allocate_and_copy_data_into_linked_list_080057d0",
                "param_3": "source_size",
                "param_4": "destination_size",
                "uVar2": "calculated_result"
            },
            "code": "uint allocate_and_copy_data_into_linked_list_080057d0(uint source_address, uint source_size, uint destination_size, uint additional_data)\n{\n  uint destination_address;\n  uint calculated_result;\n  if (source_size != 0) {\n    if (destination_size == 0) {\n      insert_new_node_into_linked_list();\n      destination_address = destination_size;\n    }\n    else {\n      calculated_result = calculate_result();\n      destination_address = source_size;\n      if ((calculated_result < destination_size) && (destination_address = allocate_memory(source_address, destination_size), destination_address != 0)) {\n        copy_data_from_source_to_destination(destination_address, source_address, destination_size);\n        insert_new_node_into_linked_list(additional_data, source_address);\n      }\n    }\n    return destination_address;\n  }\n  destination_address = allocate_memory(source_address, destination_size, destination_size, additional_data);\n  return destination_address;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "allocate_and_copy_data_into_linked_list_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "piVar4": "node",
                "param_1": "head",
                "ppiVar6": "prev_node",
                "ppiVar7": "current",
                "param_2": "size",
                "param_3": "value",
                "FUN_0800567c": "insert_into_linked_list_0800567c",
                "param_4": "unused",
                "puVar1": "pointer",
                "ppiVar2": "prev",
                "extraout_r1": "unused_pointer",
                "ppiVar3": "next",
                "ppiVar5": "list_head"
            },
            "code": "void insert_into_linked_list_0800567c(int **head, int size, int value, int unused) {\n  if (size == 0) {\n    return;\n  }\n  int **current = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    current = (int **)((int)current + *(int *)(size + -4));\n  }\n  do_nothing_0800583c();\n  int **list_head = *(int ***)PTR_DAT_08005710;\n  if (list_head == (int **)0x0) {\n    current[1] = (int *)0x0;\n    *(int ***)PTR_DAT_08005710 = current;\n  }\n  else if (current < list_head) {\n    int **prev = (int **)*current;\n    int **next = (int **)((int)current + (int)prev);\n    if (list_head == next) {\n      int *node = *list_head;\n      list_head = (int **)list_head[1];\n      next = (int **)((int)node + (int)prev);\n      *current = (int *)next;\n    }\n    current[1] = (int *)list_head;\n    *(int ***)PTR_DAT_08005710 = current;\n  }\n  else {\n    int **prev = list_head;\n    int **next = (int **)prev[1];\n    while (next != (int **)0x0 && next <= current) {\n      prev = next;\n      next = (int **)prev[1];\n    }\n    int **prev_node = (int **)*prev;\n    if ((int **)((int)prev + (int)prev_node) == current) {\n      prev_node = (int **)((int)prev_node + (int)*current);\n      *prev = (int *)prev_node;\n      if (next == (int **)((int)prev + (int)prev_node)) {\n        int *node = *next;\n        next = (int **)next[1];\n        prev_node = (int **)((int)prev_node + (int)node);\n        *prev = (int *)prev_node;\n        prev[1] = (int *)next;\n      }\n    }\n    else if (current < (int **)((int)prev + (int)prev_node)) {\n      *head = 0xc;\n    }\n    else {\n      int **next_node = (int **)((int)current + (int)*current);\n      if (next == next_node) {\n        int *node = *next;\n        next = (int **)next[1];\n        next_node = (int **)((int)node + (int)*current);\n        *current = (int *)next_node;\n      }\n      current[1] = (int *)next;\n      prev[1] = (int *)current;\n    }\n  }\n  do_nothing_0800583e(head, current, current[1], unused);\n  return;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_080057d0",
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "insert_into_linked_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  set_data_and_update_flags_08001128();\n  process_and_encode_data_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  update_param_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  update_param_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  process_bits_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  process_bits_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = initialize_device_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = process_data_and_print_strings_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = process_data_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = process_data_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = set_values_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = update_data_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = set_flag_and_combine_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        process_input_bits_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = process_data_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = set_values_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = update_data_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  process_input_bits_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = process_data_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = set_values_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = update_data_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = update_data_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          process_input_bits_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = process_data_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = set_values_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = update_data_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = update_data_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  process_input_bits_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_080025a4",
                "FUN_08001264",
                "FUN_08004514",
                "FUN_08001128",
                "FUN_08004490",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08002564",
                "FUN_08002724",
                "FUN_080023d0",
                "FUN_08001424",
                "FUN_0800245c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": true,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08000110",
                "FUN_08004fb4",
                "FUN_08000134"
            ],
            "imported": true,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": true,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08003330",
                "FUN_08004a84",
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002ee8",
                "FUN_0800483c",
                "FUN_08002ec0",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "param_1": "source",
                "param_2": "destination",
                "FUN_08000ffc": "reverse_and_concatenate_08000ffc"
            },
            "code": "void reverse_and_concatenate_08000ffc(undefined4 source, undefined4 destination) {\n  reverse_and_concatenate_08000ffc_08001004_08001004(destination, source);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001064",
                "FUN_08001050"
            ],
            "imported": true,
            "current_name": "reverse_and_concatenate_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "iVar1": "start_value",
                "iVar2": "current_pointer",
                "param_1": "pointer_array",
                "param_2": "param_2",
                "FUN_080016f4": "check_pointer_values_080016f4"
            },
            "code": "int check_pointer_values_080016f4(int *pointer_array, uint param_2)\n{\n  int start_value = get_start_value_from_pointer();\n  while( true ) {\n    int current_pointer = *pointer_array;\n    if ((*(uint *)(current_pointer + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_pointer + 0x14) << 0x1b < 0) break;\n    if ((param_2 == 0) || (current_pointer = get_start_value_from_pointer(), param_2 < (uint)(current_pointer - start_value))) {\n      pointer_array[0xe] = pointer_array[0xe] | 0x20;\n      *(undefined *)((int)pointer_array + 0x35) = 0x20;\n      *(undefined *)(pointer_array + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(current_pointer + 0x14) = *(uint *)(current_pointer + 0x14) & 0xffffffef;\n  pointer_array[0xe] = 0;\n  *(undefined *)(pointer_array + 0xd) = 0;\n  *(undefined *)((int)pointer_array + 0x35) = 0x20;\n  return 1;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": true,
            "current_name": "check_pointer_values_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "iVar3": "variable1",
                "uVar1": "value1",
                "param_1": "ptr_param1",
                "param_2": "ptr_param2",
                "uVar2": "result",
                "uVar4": "value2",
                "FUN_080025a4": "set_values_080025a4"
            },
            "code": "uint32_t set_values_080025a4(int *ptr_param1, uint32_t *ptr_param2)\n{\n  uint32_t uVar1;\n  uint32_t result;\n  int iVar2;\n  uint32_t uVar3;\n  \n  result = 2;\n  if (*(char *)(ptr_param1 + 0xe) != '\\x01') {\n    *(undefined *)((int)ptr_param1 + 0x39) = 2;\n    iVar2 = *ptr_param1;\n    uVar3 = ptr_param2[1];\n    uVar1 = *ptr_param2;\n    *(uint32_t *)(iVar2 + 4) = *(uint32_t *)(iVar2 + 4) & 0xffffff8f;\n    *(uint32_t *)(iVar2 + 4) = *(uint32_t *)(iVar2 + 4) | uVar1;\n    *(uint32_t *)(iVar2 + 8) = *(uint32_t *)(iVar2 + 8) & 0xffffff7f;\n    *(uint32_t *)(iVar2 + 8) = *(uint32_t *)(iVar2 + 8) | uVar3;\n    *(undefined *)((int)ptr_param1 + 0x39) = 1;\n    result = 0;\n    *(undefined *)(ptr_param1 + 0xe) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_values_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": true,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "get_shifted_value_based_on_bit_position_08002220",
                "uVar1": "bit_position",
                "PTR_DAT_0800224c": "mask",
                "DAT_08002244": "data",
                "PTR_DAT_08002248": "shift_values"
            },
            "code": "uint get_shifted_value_based_on_bit_position_08002220(void)\n{\n  uint bit_position = count_leading_zeroes(0xe00000);\n  uint PTR_DAT_0800224c = *(uint *)PTR_DAT_0800224c;\n  uint index = (*(uint *)(DAT_08002244 + 4) & 0x700) >> (bit_position & 0xff);\n  return PTR_DAT_0800224c >> PTR_DAT_08002248[index];\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_080025e8",
                "FUN_08001754"
            ],
            "imported": true,
            "current_name": "get_shifted_value_based_on_bit_position_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "process_and_print_data_08003034",
                "local_c": "processed_data",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "PTR_s____Src_MS5611_c_08003064": "sensor_data_source"
            },
            "code": "uint process_and_print_data_08003034(uint16_t data1, uint16_t data2, uint16_t data3, uint16_t data4)\n{\n  uint16_t processed_data = data4;\n  process_data_and_print_strings(0xee, 0, &processed_data, 3, PTR_s____Src_MS5611_c_08003064, 0x8c, data3);\n  return (uint) CONCAT12((undefined)processed_data, CONCAT11(processed_data._1_1_, processed_data._2_1_));\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "process_and_print_data_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "local_c": "ptr",
                "FUN_08004e7c": "process_data_08004e7c",
                "param_1": "data",
                "local_18": "value1",
                "DAT_08004ee0": "some_data",
                "local_10": "value3",
                "DAT_08004edc": "target_value",
                "local_14": "value2"
            },
            "code": "void process_data_08004e7c(int *data)\n{\n  int DAT_08004edc = 0x08004edc;\n  if (*data == DAT_08004edc) {\n    uint *ptr = (uint *)(DAT_08004edc + 0xd818);\n    *ptr |= 0x4000;\n    int value1 = 0x200;\n    int value2 = 2;\n    int value3 = 3;\n    process_bits(DAT_08004ee0, &value1, &value2, &value3);\n    value1 = 0x400;\n    value2 = 0;\n    value3 = 0;\n    process_bits(DAT_08004ee0, &value1, &value2, &value3);\n    encode_data(0x25, 0, 0);\n    set_bit_at_index(0x25);\n  }\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08001264",
                "FUN_080011fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": true,
            "current_name": "process_data_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "iVar1": "check1",
                "iVar2": "check3",
                "FUN_08001530": "process_input_08001530",
                "puVar3": "ptr3",
                "param_1": "input",
                "ppuVar4": "input_ptr_ptr",
                "result": "check2",
                "param_2": "input_length",
                "param_3": "input_value1",
                "param_4": "input_value2",
                "param_5": "input_value3",
                "uVar5": "value1",
                "uVar6": "value2"
            },
            "code": "int process_input_08001530(uint **input, uint input_length, uint input_value1, int input_value2, uint input_value3) {\n  int result = 0;\n  uint *input_ptr = *input;\n  input_ptr[0] |= 0x100;\n  uint **input_ptr_ptr = input;\n  uint value1 = input_length;\n  uint value2 = input_value1;\n  int value3 = get_value_from_pointer_0800115c();\n  while (true) {\n    uint *ptr3 = *input_ptr_ptr;\n    while ((int)(ptr3[5] << 0x1f) >= 0) {\n      if (input_value3 == 0xffffffff) {\n        if (input_value3 == 0 || get_value_from_pointer_0800115c() - value3 <= input_value3) {\n          *(undefined *)((int)input_ptr + 0x35) = 0x20;\n          *(undefined *)(input_ptr + 0xd) = 0;\n          return 3;\n        }\n      }\n      else {\n        if (input_value3 <= get_value_from_pointer_0800115c() - value3) {\n          *(undefined *)((int)input_ptr + 0x35) = 0x20;\n          *(undefined *)(input_ptr + 0xd) = 0;\n          return 3;\n        }\n      }\n      ptr3 = *input_ptr_ptr;\n    }\n    ptr3[4] = input_length & 0xfe;\n    int check1 = check_value(input_ptr, DAT_080015e4, input_value3, ptr3, input_ptr_ptr, value1, value2);\n    if (check1 == 0) {\n      int check2 = check_flag_and_update(input_ptr, input_value3, ptr3[5], ptr3[6]);\n      if (check2 == 0) {\n        ptr3 = *input_ptr_ptr;\n        if (input_value2 == 1) {\n          ptr3[4] = input_value1 & 0xff;\n          return check2;\n        }\n        ptr3[4] = input_value1 >> 8;\n        int check3 = check_flag_and_update(input_ptr, input_value3);\n        if (check3 == 0) {\n          ptr3 = *input_ptr_ptr;\n          ptr3[4] = input_value1 & 0xff;\n          return check3;\n        }\n      }\n      if (input_ptr[0xe] != (uint *)0x4) {\n        return 3;\n      }\n      input_ptr[0] |= 0x200;\n    }\n    else {\n      if (input_ptr[0xe] != (uint *)0x4) {\n        return 3;\n      }\n      return 1;\n    }\n  }\n}",
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": true,
            "current_name": "process_input_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_parameter_value_to_pointer_address_08003314",
                "param_1": "parameter_value",
                "PTR_DAT_0800331c": "pointer_data_address"
            },
            "code": "void set_parameter_value_to_pointer_address_08003314(void* parameter_value){\n  *(void**)PTR_DAT_0800331c = parameter_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "set_parameter_value_to_pointer_address_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "iVar2": "is_end_of_string",
                "piVar4": "pointer_value",
                "FUN_08005854": "validate_input_and_return_shifted_value_08005854",
                "puVar3": "pointer_value",
                "param_1": "input_1",
                "uStack_34": "local_var_6",
                "local_28": "input_is_valid",
                "local_38": "local_var_5",
                "local_48": "local_var_1",
                "param_2": "input_2",
                "puVar1": "data_pointer",
                "uVar5": "shifted_value",
                "uStack_3c": "local_var_4",
                "local_30": "local_var_7",
                "local_40": "local_var_3",
                "uVar6": "local_var_7",
                "local_44": "local_var_2"
            },
            "code": "undefined8 validate_input_and_return_shifted_value_08005854(undefined4 input_1, undefined4 input_2)\n{\n  undefined *data_pointer = PTR_DAT_080058f8;\n  int input_is_valid;\n  undefined8 shifted_value;\n  undefined4 local_var_1;\n  undefined *local_var_2;\n  undefined4 local_var_3;\n  undefined4 local_var_4;\n  undefined4 local_var_5;\n  undefined4 local_var_6;\n  undefined8 local_var_7;\n  int local_var_8;\n  shifted_value = FUNC_08005c70();\n  if (*data_pointer == -1) {\n    return shifted_value;\n  }\n  input_is_valid = is_valid_input_08000a04(input_1, input_2, input_1, input_2);\n  if (input_is_valid != 0) {\n    return shifted_value;\n  }\n  local_var_7 = do_nothing_0800708c(input_1, input_2);\n  int is_end_of_string = is_end_of_string_080009f0((int)local_var_7, (int)((ulonglong)local_var_7 >> 0x20), 0, DAT_080058ec);\n  if (is_end_of_string == 0) {\n    return shifted_value;\n  }\n  local_var_1 = 1;\n  local_var_2 = PTR_DAT_080058f0;\n  local_var_3 = input_1;\n  local_var_4 = input_2;\n  local_var_5 = input_1;\n  local_var_6 = input_2;\n  local_var_7 = shift_left_64_bit_080070a4(PTR_DAT_080058f4);\n  if (*data_pointer != '\\x02') {\n    int return_value = returnZero_0800709e(&local_var_1);\n    if (return_value != 0) goto LAB_080058d0;\n  }\n  undefined4 *pointer_value = (undefined4 *)get_pointer_value_from_data_section_080072ac();\n  *pointer_value = 0x21;\nLAB_080058d0:\n  if (input_is_valid != 0) {\n    int *pointer_value = (int *)get_pointer_value_from_data_section_080072ac();\n    *pointer_value = input_is_valid;\n  }\n  return local_var_7;\n}",
            "called": [
                "FUN_080009f0",
                "FUN_080070a4",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_0800709e",
                "FUN_08005c70",
                "FUN_0800708c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "validate_input_and_return_shifted_value_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006070"
            ],
            "imported": true,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": true,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "in_ZR": "input_char",
                "reverse_and_concatenate_08001004_08001004": "reverse_and_concatenate_strings",
                "FUN_08001014": "is_input_not_empty_08001014"
            },
            "code": "bool is_input_not_empty_08001014(void)\\n{\\n  char input_char;\\n  reverse_and_concatenate_strings();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "is_input_not_empty_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "uVar1": "shifted_number2",
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "exponent",
                "param_4": "constant1",
                "uVar3": "constant3",
                "uVar5": "high_32_bits",
                "uVar4": "constant2",
                "uVar6": "concatenated_numbers"
            },
            "code": "unsigned long long calculate_result_080071c0(uint number1, uint number2, int exponent, uint constant1)\n{\n  uint shifted_number2 = (number2 << 1) >> 0x15;\n  unsigned long long concatenated_numbers = ((unsigned long long)number2 << 32) | number1;\n  if (shifted_number2 == 0) {\n    if ((number2 & 0x7fffffff | number1) == 0) {\n      return concatenated_numbers;\n    }\n    concatenated_numbers = perform_operation_1(number1, number2, constant1);\n    unsigned int constant2 = DAT_08007284;\n    unsigned int constant3 = DAT_08007280;\n    if (exponent < DAT_08007294) goto LAB_0800722e;\n    shifted_number2 = (((int)(concatenated_numbers >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_number2 == 0x7ff) {\n    concatenated_numbers = perform_operation_2(number1, number2, constant1);\n    return concatenated_numbers;\n  }\n  uint high_32_bits = (uint)(concatenated_numbers >> 0x20);\n  int sum = shifted_number2 + exponent;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return concatenated_numbers & 0xffffffff | (unsigned long long)(high_32_bits & 0x800fffff | sum * 0x100000) << 0x20;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum, 0x35)) {\n      concatenated_numbers = concatenated_numbers & 0xffffffff | (unsigned long long)(high_32_bits & 0x800fffff | (sum + 0x36) * 0x100000) << 0x20;\n      constant2 = DAT_08007298;\n      constant3 = 0;\n      goto LAB_0800722e;\n    }\n    if (exponent < 0xc351) {\n      concatenated_numbers = perform_operation_3(DAT_08007280, DAT_08007284, (int)concatenated_numbers, high_32_bits);\n      constant2 = DAT_08007284;\n      constant3 = DAT_08007280;\n      goto LAB_0800722e;\n    }\n  }\n  concatenated_numbers = perform_operation_3(DAT_08007288, DAT_0800728c, (int)concatenated_numbers, high_32_bits);\n  constant2 = DAT_0800728c;\n  constant3 = DAT_08007288;\nLAB_0800722e:\n  concatenated_numbers = perform_operation_1((int)concatenated_numbers, (int)(concatenated_numbers >> 0x20), constant3, constant2);\n  return concatenated_numbers;\n}",
            "called": [
                "FUN_0800729c",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": true,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "pcVar2": "next_char",
                "pcVar1": "current_char",
                "param_1": "string",
                "FUN_08005614": "find_character_08005614",
                "param_2": "target_char",
                "param_3": "string_length"
            },
            "code": "char* find_character_08005614(char* string, char target_char, int string_length) {\n  char* current_char = string;\n  while(current_char != string + string_length) {\n    if(*current_char == target_char) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080050fc",
                "FUN_080053d4"
            ],
            "imported": true,
            "current_name": "find_character_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculate_result_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08003330",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005bc8",
                "FUN_08005c70",
                "FUN_08006070",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_64_bit_080070a4",
                "DAT_080070ac": "*data"
            },
            "code": "unsigned long long shift_left_64_bit_080070a4(unsigned long long DAT_080070ac){\n    return (DAT_080070ac) << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "shift_left_64_bit_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "iVar1": "error_code",
                "FUNC_08001938": "check_inputs_and_return_error_code",
                "param_1": "input1",
                "FUN_0800407c": "check_and_process_data_0800407c",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "PTR_DAT_080040b4": "PTR_DAT",
                "process_data_and_print_strings_08004490": "process_data_and_print_strings",
                "local_14": "buffer"
            },
            "code": "int check_and_process_data_0800407c(int input1, int input2, int output1, int output2)\n{\n  int return_value;\n  int error_code = 0;\n  char buffer[8];\n  buffer[0] = '\\0';\n  error_code = check_inputs_and_return_error_code(PTR_DAT_080040b4_080040b4, input1, input2, 1, buffer, 1, 200);\n  if (error_code == 0) {\n    process_data_and_print_strings(output1, output2);\n  }\n  return buffer[0];\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_080040e8",
                "FUN_08002d88",
                "FUN_08002ad0",
                "FUN_08002cb0"
            ],
            "imported": true,
            "current_name": "check_and_process_data_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = update_flags_and_return_result_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = check_pointer_values_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = check_pointer_values_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = get_value_from_pointer_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = get_value_from_pointer_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": true,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_mpu9250_data_and_calculate_hash_08002f28();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_data_and_update_params_08004a84();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_input_data_08004348();\n    process_input_08004384();\n    process_input_data_wrapper_080043f0();\n    process_input_08004410();\n    process_input_08004434();\n    copy_and_process_data_080043bc();\n    process_and_send_data_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = calculate_hash_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = calculate_hash_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = reverse_and_improve_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = calculate_float_bits_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = decode_float_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    process_input_and_print_strings_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = process_and_print_data_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    process_input_and_print_strings_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = process_and_print_data_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000c44",
                "FUN_08004a84",
                "FUN_08002f28",
                "FUN_08000428",
                "FUN_080004d0",
                "FUN_0800403c",
                "FUN_08000e54",
                "FUN_08001078",
                "FUN_08004348",
                "FUN_08000adc",
                "FUN_08000a30",
                "FUN_08000168",
                "FUN_08004384",
                "FUN_080043f0",
                "thunk_FUN_0800115c",
                "FUN_08004434",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08005900",
                "FUN_08003034",
                "FUN_08004410"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "mask4": "bitmask4",
                "uVar1": "updated_value1",
                "mask1": "bitmask1",
                "mask3": "bitmask3",
                "param_1": "data_address",
                "mask2": "bitmask2",
                "param_2": "data_array",
                "FUN_080022d0": "update_data_080022d0",
                "uVar3": "data_value",
                "uVar2": "updated_value2"
            },
            "code": "void update_data_080022d0(int data_address, uint *data_array)\n{\n  uint mask1 = 0xfffffeff;\n  uint mask2 = 0xfffffdff;\n  uint mask3 = 0xfffff7ff;\n  uint mask4 = 0xfffffbff;\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  if (data_address == PTR_DAT_08002320) {\n    uVar1 = (data_array[2] << 8) | (mask2 & *(uint *)(data_address + 0x20)) | (mask4 & (data_array[3] << 8));\n    uVar2 = *(uint *)(data_address + 4) & 0xffffcfff | ((data_array[5] | data_array[6]) << 4);\n  }\n  else {\n    uVar1 = (data_array[2] << 8) | (mask2 & *(uint *)(data_address + 0x20));\n    uVar2 = *(uint *)(data_address + 4);\n  }\n  uVar3 = *data_array;\n  *(uint *)(data_address + 0x20) = uVar1;\n  *(uint *)(data_address + 4) = uVar2;\n  *(uint *)(data_address + 0x1c) = (*(uint *)(data_address + 0x1c) & 0xffffff8c) | uVar3;\n  *(uint *)(data_address + 0x3c) = data_array[1];\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_data_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "uVar1": "sign",
                "param_1": "float_bits",
                "PTR_0804838c": "exponent",
                "DAT_08048390": "mantissa",
                "FUN_080010c4": "decode_float_080010c4"
            },
            "code": "uint decode_float_080010c4(uint float_bits) {\n  uint sign = float_bits >> 31;\n  uint PTR_0804838c = (float_bits >> 23) & 0xff;\n  uint DAT_08048390 = float_bits & 0x7fffff;\n  if (PTR_0804838c == 0xff) {\n    if (DAT_08048390 != 0) {\n      return 0;\n    }\n    return sign ? 0x80000000 : 0x7f800000;\n  }\n  if (PTR_0804838c == 0) {\n    if (DAT_08048390 == 0) {\n      return sign ? 0x80000000 : 0;\n    }\n    while ((DAT_08048390 & 0x800000) == 0) {\n      DAT_08048390 <<= 1;\n      PTR_0804838c -= 1;\n    }\n    PTR_0804838c += 1;\n    DAT_08048390 &= ~0x800000;\n  }\n  else {\n    DAT_08048390 |= 0x800000;\n  }\n  PTR_0804838c = PTR_0804838c + 126 - 0xff;\n  return (sign << 31) | (PTR_0804838c << 23) | DAT_08048390;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "decode_float_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "iVar1": "result",
                "FUNC_08001938": "call_function_with_args",
                "param_1": "data1",
                "param_6": "string2",
                "param_2": "data2",
                "PTR_DAT_080040e4": "PTR_DAT_080040e4",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "string1",
                "FUN_080040b8": "process_data_if_successful_and_print_strings_080040b8"
            },
            "code": "void process_data_if_successful_and_print_strings_080040b8(int data1, int data2, int data3, int data4, int string1, int string2)\n{\n  int result = call_function_with_args(PTR_DAT_080040e4, data1, data2, 1, data3, data4, 200, data4);\n  if (result != 0) {\n    process_data_and_print_strings_08004490(string1, string2);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": true,
            "current_name": "process_data_if_successful_and_print_strings_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "iVar1": "val",
                "iVar3": "data",
                "extraout_r1_00": "extraout2",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "value",
                "extraout_r1_02": "extraout4",
                "extraout_r1_01": "extraout3",
                "uVar2": "uVar",
                "FUN_0800245c": "update_data_0800245c",
                "extraout_r1": "extraout1"
            },
            "code": "void update_data_0800245c(int *data_ptr, uint8_t flag, uint32_t value)\n{\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  int extraout_r1_02;\n  int data = *data_ptr;\n  uint32_t uVar;\n  switch(flag) {\n    case 0:\n      update_flags_and_values(data);\n      uVar = *(uint *)(extraout_r1 + 0x10);\n      *(uint *)(data + 0x18) = (*(uint *)(data + 0x18) | 8) & 0xfffffffb | uVar;\n      break;\n    case 4:\n      update_data_0800245c(data);\n      int val = *(int *)(extraout_r1_00 + 0x10);\n      *(uint *)(data + 0x18) = (*(uint *)(data + 0x18) | 0x800) & 0xfffffbff | val << 8;\n      break;\n    case 8:\n      update_data_0800245c(data);\n      uVar = *(uint *)(extraout_r1_01 + 0x10);\n      *(uint *)(data + 0x1c) = (*(uint *)(data + 0x1c) | 8) & 0xfffffffb | uVar;\n      break;\n    case 0xc:\n      update_flags_and_values(data);\n      int val2 = *(int *)(extraout_r1_02 + 0x10);\n      *(uint *)(data + 0x1c) = (*(uint *)(data + 0x1c) | 0x800) & 0xfffffbff | val2 << 8;\n      uVar = *(uint *)(data + 0x1c);\n      break;\n    default:\n      return;\n  }\n  *(uint *)(data + 0x18) = uVar;\n}\n",
            "called": [
                "FUN_08002280",
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002404"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "update_data_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "PTR_s_Error_with_08004510": "error_string",
                "param_1": "input_string",
                "param_2": "output_string",
                "param_3": "parameter",
                "PTR_s__at_line__0800450c": "line_string",
                "FUN_08004490": "process_data_and_print_strings_08004490"
            },
            "code": "void process_data_and_print_strings_08004490(undefined4 param_1,undefined4 param_2)\n{\n  undefined4 param_3;\n  undefined *PTR_s_Error_with_08004510;\n  undefined *PTR_s__at_line__0800450c;\n  \n  update_param_08001424(DAT_08004508,0x4000,1);\n  update_param_08001424(DAT_08004508,0x8000,0);\n  update_param_08001424(DAT_08004508,0x2000,0);\n  PTR_s_Error_with_08004510 = PTR_s_Error_with_08004510;\n  PTR_s__at_line__0800450c = PTR_s__at_line__0800450c;\n  param_3 = DAT_08004508;\n  do {\n    xor_with_param_0800142e(param_3,0x4000);\n    xor_with_param_0800142e(param_3,0x8000);\n    xor_with_param_0800142e(param_3,0x2000);\n    process_string_data_08004c8c(PTR_s_Error_with_08004510);\n    process_string_data_08004c8c(param_1);\n    process_string_data_08004c8c(PTR_s__at_line__0800450c);\n    print_and_process_string_data_08004cac(param_2);\n    process_data_08004c18(10);\n    thunk_do_nothing_08001168(500);\n  } while( true );\n}",
            "called": [
                "FUN_0800142e",
                "FUN_08004c8c",
                "FUN_08004c18",
                "thunk_FUN_08001168",
                "FUN_08004cac",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c",
                "FUN_08004514",
                "FUN_0800403c",
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_data_and_print_strings_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_08003330",
                "FUN_08002f28",
                "FUN_0800411c",
                "FUN_0800483c"
            ],
            "imported": true,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "LAB_080016ba": "return_1",
                "iVar1": "value",
                "iVar2": "current_value",
                "DAT_080016f0": "dat_080016f0",
                "LAB_0800160e": "while_loop_start",
                "puVar3": "flag_ptr_val",
                "check_value_08001460": "check_value",
                "param_1": "flag_ptr",
                "check_flag_and_update_080014e2": "check_flag_and_update",
                "code_r0x08001658": "code_r0x08001658",
                "ppuVar4": "flag_ptr_ptr",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "flag3",
                "param_1[0xe]": "flag_ptr[0xe]",
                "param_5": "flag4",
                "uVar5": "flag5",
                "uVar6": "flag6",
                "FUN_080015e8": "update_flags_and_return_result_080015e8"
            },
            "code": "uint32_t update_flags_and_return_result_080015e8(uint32_t **flag_ptr, uint32_t flag1, uint32_t flag2, int flag3, uint32_t flag4)\n{\n  uint32_t *flag_ptr_val = *flag_ptr;\n  *flag_ptr_val |= 0x400;\n  *flag_ptr_val |= 0x100;\n  uint32_t **flag_ptr_ptr = flag_ptr;\n  uint32_t flag5 = flag1;\n  uint32_t flag6 = flag2;\n  int value = get_value_from_pointer();\n\n  while (-1 < (int)((*flag_ptr_val)[5] << 0x1f))) {\n    if (flag4 != 0xffffffff) {\n      break;\n    }\n  }\n\n  (*flag_ptr_val)[4] = flag1 & 0xfe;\n\n  int result = check_value(flag_ptr, DAT_080016f0, flag4, flag_ptr_val, flag_ptr_ptr, flag5, flag6);\n  if (result != 0) {\n    goto return_result;\n  }\n\n  result = check_flag_and_update(flag_ptr, flag4, (*flag_ptr_val)[5], (*flag_ptr_val)[6]);\n  if (result == 0) {\n    if (flag3 != 1) {\n      (*flag_ptr_val)[4] = flag2 >> 8;\n      result = check_flag_and_update(flag_ptr, flag4);\n      if (result != 0) {\n        goto return_result;\n      }\n      flag_ptr_val = *flag_ptr;\n    }\n    (*flag_ptr_val)[4] = flag2 & 0xff;\n    result = check_flag_and_update(flag_ptr, flag4);\n    if (result == 0) {\n      **flag_ptr = **flag_ptr | 0x100;\n      value = get_value_from_pointer();\n      while ((int)((*flag_ptr_val)[5] << 0x1f) >= 0) {\n        if (flag4 != 0xffffffff && (get_value_from_pointer() - value) > flag4) {\n          *(char *)((int)flag_ptr + 0x35) = 0x20;\n          *(undefined *)(flag_ptr + 0xd) = 0;\n          return 3;\n        }\n      }\n      (*flag_ptr_val)[4] = flag1 & 0xff | 1;\n      result = check_value(flag_ptr, DAT_080016f0, flag4);\n      if (result == 0) {\n        return 0;\n      }\n    }\n  }\n\nreturn_result:\n  if (flag_ptr[0xe] == (uint32_t *)0x4) {\n    **flag_ptr = **flag_ptr | 0x200;\n    return 1;\n  }\n  return 3;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": true,
            "current_name": "update_flags_and_return_result_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "iVar2": "input_value",
                "local_c": "value_3",
                "uVar1": "data_value",
                "param_1": "input",
                "uStack_10": "value_4",
                "local_18": "value_1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_14": "value_2",
                "FUN_08004e14": "process_input_bits_08004e14"
            },
            "code": "void process_input_bits_08004e14(int *input, undefined4 arg2, undefined4 arg3) {\n  undefined4 data_value;\n  int input_value;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n\n  input_value = *input;\n  data_value = DAT_08004e6c;\n  if (input_value == DAT_08004e68) {\n    value_1 = 0x800;\n  }\n  else if (input_value == 0x40000000) {\n    value_1 = 2;\n  }\n  else {\n    data_value = DAT_08004e74;\n    if (input_value == DAT_08004e70) {\n      value_1 = 3;\n    }\n    else {\n      if (input_value != DAT_08004e78) {\n        return;\n      }\n      value_1 = 0x300;\n    }\n  }\n  value_2 = 2;\n  value_3 = 2;\n  value_4 = arg3;\n  process_bits_08001264(data_value, &value_1);\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_input_bits_08004e14"
        }
    },
    "used_tokens": 139747,
    "layers": [
        [
            "FUN_08003320",
            "FUN_08001264",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_080006ac",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_08005630",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08001436",
            "FUN_08000904",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08006c0c",
            "FUN_0800115c",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_08001170",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08000134",
            "FUN_08003eb0",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08003ec8",
            "FUN_08003fe8",
            "FUN_08004fb4",
            "FUN_08000428",
            "FUN_08000a30",
            "FUN_08003fdc",
            "FUN_08004f10",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08002214",
            "FUN_0800567c",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003314",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_080022d0",
            "FUN_080010c4"
        ],
        [
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_080014e2",
            "FUN_08000990",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080025e8",
            "FUN_08004c18",
            "FUN_08001460",
            "FUN_08001104",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_08004ccc",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003f3c",
            "FUN_08001004",
            "FUN_080041c4",
            "FUN_080016f4",
            "FUN_08004e7c",
            "FUN_0800245c",
            "FUN_08004e14"
        ],
        [
            "FUN_08001028",
            "FUN_0800290c",
            "FUN_080009a0",
            "FUN_08000980",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_0800209c",
            "FUN_08004c8c",
            "FUN_08001754",
            "FUN_08002724",
            "FUN_08005714",
            "FUN_08003ff4",
            "FUN_08001128",
            "FUN_08000ffc",
            "FUN_08001530",
            "FUN_08001014",
            "FUN_080015e8"
        ],
        [
            "FUN_08001828",
            "FUN_08004300",
            "FUN_08004028",
            "FUN_08005bc8",
            "FUN_0800299a",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_080009f0",
            "FUN_080057d0"
        ],
        [
            "FUN_08004410",
            "FUN_08004384",
            "FUN_08004434",
            "FUN_080043bc",
            "FUN_0800483c",
            "FUN_08004458",
            "FUN_08002ee8",
            "FUN_08004348",
            "FUN_080043f0",
            "FUN_08005044",
            "FUN_08005854"
        ],
        [
            "FUN_080050fc",
            "FUN_08004a84"
        ],
        [
            "FUN_08004ffc"
        ],
        [
            "FUN_08004cac"
        ],
        [
            "FUN_08004490"
        ],
        [
            "FUN_0800403c",
            "FUN_08004514",
            "FUN_0800407c",
            "FUN_080040b8"
        ],
        [
            "FUN_080040e8",
            "FUN_08002ad0",
            "FUN_08003034"
        ],
        [
            "FUN_08003298",
            "FUN_08002d88",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0"
        ],
        [
            "FUN_08002ea0",
            "FUN_08002f28"
        ],
        [
            "FUN_08004194"
        ],
        [
            "FUN_080041ae"
        ],
        [
            "FUN_08004f68"
        ]
    ],
    "locked_functions": []
}