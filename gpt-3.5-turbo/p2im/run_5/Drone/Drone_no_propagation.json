{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "parse_string_080050fc",
                "iVar2": "bytes_written",
                "iVar3": "temp",
                "local_80": "length_modifier",
                "piVar5": "next_arg",
                "param_1": "output_buffer",
                "unaff_r9": "previous_result",
                "DAT_080052dc": "positionals_enabled",
                "local_84": "precision",
                "local_45": "sign",
                "local_88": "flags_mask",
                "DAT_080052e0": "null_string",
                "local_70": "current_conversion_specifier",
                "PTR_s_efgEFG_080052d8": "conversion_specifiers",
                "puVar4": "result",
                "local_7c": "field_width",
                "pbVar7": "current_char",
                "pbVar8": "start_of_field",
                "PTR_DAT_080052d0": "flags_start",
                "param_2": "input_buffer",
                "local_8c": "next_arg",
                "param_3": "format_string",
                "param_4": "arg_list",
                "puVar1": "current_flag",
                "PTR_DAT_080052d4": "length_modifiers",
                "local_74": "total_bytes_written",
                "local_30": "padding",
                "bVar6": "flag_found"
            },
            "code": "int parse_string_080050fc(undefined4 *output_buffer, int *input_buffer, byte *format_string, int *arg_list)\n{\n  undefined *current_char;\n  int total_bytes_written;\n  int field_width;\n  int precision;\n  int flags;\n  int length_modifier;\n  byte conversion_specifier;\n  int *next_arg;\n  uint flags_mask;\n  int field_width_val;\n  int precision_val;\n  byte current_conversion_specifier;\n  undefined4 *result;\n  \n  next_arg = arg_list;\n  flags_mask = 0;\n  current_char = format_string;\n  total_bytes_written = 0;\n  while (*current_char != 0)\n  {\n    if (*current_char != '%')\n    {\n      current_conversion_specifier = *current_char;\n      result = write_string(output_buffer, &current_conversion_specifier, 1);\n      if (result == (undefined4 *)0xffffffff)\n        return -1;\n      total_bytes_written = total_bytes_written + (int)result;\n    }\n    else\n    {\n      current_char = current_char + 1;\n      current_conversion_specifier = 0;\n      flags = 0;\n      length_modifier = 0;\n      field_width = 0;\n      precision = -1;\n      if ((int)((uint)*(ushort *)(input_buffer + 3) << 0x18) < 0 && input_buffer[4] == 0)\n      {\n        result = FUN_08005714(output_buffer, 0x40);\n        *input_buffer = (int)result;\n        input_buffer[4] = (int)result;\n        if (result == (undefined4 *)0x0)\n        {\n          *output_buffer = 0xc;\n          return -1;\n        }\n        input_buffer[5] = 0x40;\n      }\n      while (true)\n      {\n        flags_mask = flags_mask | (uint)(1 << ((int)parse_flags(current_char) - 32));\n        if (*current_char == '*')\n        {\n          next_arg = next_arg + 1;\n          field_width = *next_arg;\n          if (field_width < 0)\n          {\n            field_width = -field_width;\n            flags_mask = flags_mask | 2;\n          }\n          current_char = current_char + 1;\n        }\n        else\n        {\n          field_width_val = parse_int(&current_char);\n          if (field_width_val >= 0)\n            field_width = field_width_val;\n          precision_val = -1;\n          if (*current_char == '.')\n          {\n            current_char = current_char + 1;\n            if (*current_char == '*')\n            {\n              next_arg = next_arg + 1;\n              precision = *next_arg;\n              if (precision < 0)\n                precision = -1;\n              current_char = current_char + 1;\n            }\n            else\n            {\n              precision_val = parse_int(&current_char);\n              if (precision_val >= 0)\n                precision = precision_val;\n            }\n          }\n          if ((int)((uint)*(ushort *)(input_buffer + 3) << 0x19) < 0)\n          {\n            result = (undefined4 *)0xffffffff;\n            goto LAB_080055f1;\n          }\n          conversion_specifier = *current_char;\n          if (conversion_specifier == 0)\n            goto LAB_080055f1;\n          if (conversion_specifier == 'n')\n          {\n            if (length_modifier != 0)\n              *(long *)next_arg = (long)total_bytes_written;\n            else\n              *next_arg = total_bytes_written;\n          }\n          else\n          {\n            result = write_item(output_buffer, conversion_specifier, flags_mask, field_width, precision, length_modifier, next_arg);\n            if (result == (undefined4 *)0xffffffff)\n              goto LAB_080055f1;\n            total_bytes_written = total_bytes_written + (int)result;\n          }\n          current_char = current_char + 1;\n          break;\n        }\n      }\n    }\n  }\nLAB_080055f1:\n  if ((int)((uint)*(ushort *)(input_buffer + 3) << 0x19) < 0)\n    return -1;\n  return total_bytes_written;\n}\n",
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": true,
            "current_name": "parse_string_080050fc"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "print_data_at_address_08004410",
                "local_c": "combined_param_2",
                "uStack_8": "local_uStack_8",
                "param_1": "address",
                "param_2": "upper_bits_of_param_2",
                "param_3": "param_3",
                "local_10": "local_address"
            },
            "code": "void print_data_at_address_08004410(void* address, uint16_t upper_bits_of_param_2, void* param_3) {\n  void* local_address = *(void**)PTR_DAT_08004430;\n  uint32_t combined_param_2 = (upper_bits_of_param_2 << 16) | *(uint16_t*)(PTR_DAT_08004430 + 4);\n  void* local_uStack_8 = param_3;\n  print_data(0x6c, &local_address, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "print_data_at_address_08004410"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "set_parameter_value_to_pointer_address_08003320",
                "param_1": "parameter_value",
                "PTR_DAT_08003328": "pointer_to_data"
            },
            "code": "void set_parameter_value_to_pointer_address_08003320(void* parameter_value){\n  *(void**)PTR_DAT_08003328 = parameter_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002f28",
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "set_parameter_value_to_pointer_address_08003320"
        },
        "FUN_08001264": {
            "renaming": {
                "uVar10": "arrayTag",
                "FUN_08001264": "processBits_08001264",
                "unaff_r10": "dataPointer",
                "iVar11": "arrayIndex",
                "iVar7": "arrayIndex5",
                "param_1": "bitArray",
                "param_2": "data",
                "puVar1": "arrayPointer",
                "uVar3": "dataTag",
                "uVar2": "dataValue",
                "uVar5": "bitMask",
                "uVar4": "bitSet",
                "uVar6": "dataOffset",
                "uVar9": "dataValue",
                "uVar8": "bitIndex"
            },
            "code": "void processBits_08001264(uint *bitArray, uint *data)\n{\n  uint *bitPointer;\n  uint bitMask;\n  uint dataValue;\n  uint dataTag;\n  uint dataOffset;\n  uint bitIndex;\n  uint bitSet;\n  int arrayIndex;\n  uint *arrayPointer;\n  uint arrayValue;\n  uint arrayMask;\n  uint arrayOffset;\n  uint arrayTag;\n  uint arrayIndex2;\n  uint arrayIndex3;\n  uint arrayIndex4;\n  uint *dataPointer;\n  int arrayIndex5;\n  \n  dataTag = DAT_08001418;\n  dataValue = DAT_08001414;\n  arrayPointer = DAT_08001404;\n  bitSet = 0;\n  bitIndex = 0;\n  do {\n    bitMask = 1 << (bitIndex & 0xff);\n    if (bitMask == (bitMask & *data)) {\n      dataOffset = data[1];\n      if (dataOffset == 0x12) {\n        bitSet = data[3] + 0xc;\n      }\n      else if (dataOffset < 0x13) {\n        if (dataOffset == 2) {\n          bitSet = data[3] + 8;\n        }\n        else if (dataOffset < 3) {\n          if (dataOffset == 0) goto LAB_080013be;\n          if (dataOffset == 1) {\n            bitSet = data[3];\n          }\n        }\n        else if (dataOffset == 3) {\n          bitSet = 0;\n        }\n        else if (dataOffset == 0x11) {\n          bitSet = data[3] + 4;\n        }\n      }\n      else {\n        if (dataOffset != dataTag) {\n          if (dataTag < dataOffset) {\n            if ((dataOffset != dataValue) && (arrayTag = DAT_08001420, dataOffset != dataTag)) goto LAB_080013b8;\n          }\n          else if (dataOffset != DAT_0800141c) {\n            arrayTag = DAT_0800141c + 0x10000;\nLAB_080013b8:\n            if (dataOffset != arrayTag) goto LAB_080012a8;\n          }\n        }\nLAB_080013be:\n        dataOffset = data[2];\n        if (dataOffset == 0) {\n          dataOffset = 4;\n        }\n        else {\n          if (dataOffset == 1) {\n            bitArray[4] = bitMask;\n          }\n          if (dataOffset != 1) {\n            bitArray[5] = bitMask;\n          }\n          dataOffset = 8;\n        }\n      }\nLAB_080012a8:\n      if (bitMask < 0x100) {\n        arrayValue = *bitArray;\n        arrayIndex2 = bitIndex << 2;\n        dataPointer = bitArray;\n      }\n      else {\n        arrayValue = bitArray[1];\n        arrayIndex2 = (bitIndex + 0x3ffffff8) * 4;\n      }\n      if (0xff < bitMask) {\n        dataPointer = bitArray + 1;\n      }\n      arrayMask = ~(0xf << (arrayIndex2 & 0xff));\n      arrayOffset = bitSet << (arrayIndex2 & 0xff);\n      *dataPointer = *dataPointer & arrayMask | arrayOffset;\n      dataPointer = (uint *)data[1];\n      if (((uint)dataPointer & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        arrayIndex = (bitIndex & 3) << 2;\n        if (bitArray == DAT_0800140c) {\n          arrayIndex5 = 0;\n        }\n        else if (bitArray == DAT_0800140c + 0x100) {\n          arrayIndex5 = 1;\n        }\n        else if (bitArray == DAT_0800140c + 0x200) {\n          arrayIndex5 = 2;\n        }\n        else if (bitArray == DAT_0800140c + 0x300) {\n          arrayIndex5 = 3;\n        }\n        else {\n          arrayIndex5 = 4;\n        }\n        *(uint *)(&DAT_40010008 + (bitIndex & 0xfffffffc)) = arrayIndex5 << arrayIndex | *(uint *)(&DAT_40010008 + (bitIndex & 0xfffffffc)) & ~(0xf << arrayIndex);\n        if (((uint)dataPointer & 0x10000) == 0) {\n          arrayValue = *arrayPointer & ~bitMask;\n        }\n        else {\n          arrayValue = *arrayPointer | bitMask;\n        }\n        *arrayPointer = arrayValue;\n        if (((uint)dataPointer & 0x20000) == 0) {\n          arrayValue = arrayPointer[1] & ~bitMask;\n        }\n        else {\n          arrayValue = arrayPointer[1] | bitMask;\n        }\n        arrayPointer[1] = arrayValue;\n        if (((uint)dataPointer & 0x100000) == 0) {\n          arrayValue = arrayPointer[2] & ~bitMask;\n        }\n        else {\n          arrayValue = arrayPointer[2] | bitMask;\n        }\n        arrayPointer[2] = arrayValue;\n        if (((uint)dataPointer & 0x200000) == 0) {\n          bitMask = arrayPointer[3] & ~bitMask;\n        }\n        else {\n          bitMask = bitMask | arrayPointer[3];\n        }\n        arrayPointer[3] = bitMask;\n      }\n    }\n    bitIndex = bitIndex + 1;\n    if (bitIndex == 0x10) {\n      return;\n    }\n  } while(true);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_0800458c",
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_08004e14"
            ],
            "imported": true,
            "current_name": "processBits_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ad0": "initialize_network",
                "FUN_08003320": "execute_program",
                "FUN_08002cb0": "initialize_database",
                "FUN_08002ea0": "initialize_and_execute_program_08002ea0",
                "FUN_08003314": "set_global_constants",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "extraout_r1": "extraout_return_value",
                "DAT_08002ebc": "global_constants"
            },
            "code": "void initialize_and_execute_program_08002ea0(undefined4 first_param, undefined4 second_param, undefined4 third_param, undefined4 fourth_param)\n{\n  undefined4 extraout_return_value;\n  initialize_network();\n  initialize_database();\n  set_DAT_08002ebc(DAT_08002ebc);\n  execute_program(0, extraout_return_value, third_param, fourth_param);\n  return;\n}",
            "called": [
                "FUN_08003314",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08002ad0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "initialize_and_execute_program_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "shift_val": "shift_value",
                "uVar1": "temp_1",
                "FUN_080070b0": "calculate_result_080070b0",
                "param_1": "input_1",
                "mask_4": "mask_4",
                "result_2": "result_2",
                "exp_val": "exponent_value",
                "mask_3": "mask_3",
                "mask_5": "mask_5",
                "mask_2": "mask_2",
                "mask_1": "mask_1",
                "sign_mask": "sign_mask",
                "result_1": "result_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar3": "temp_3",
                "uVar2": "temp_2",
                "uVar5": "temp_5",
                "uVar4": "temp_4",
                "uVar7": "temp_7",
                "uVar6": "temp_6",
                "uVar8": "temp_8"
            },
            "code": "ulonglong calculate_result_080070b0(uint input_1, uint input_2, undefined4 input_3)\n{\n  uint shift_val = (input_2 << 1) >> 0x15;\n  uint exp_val = shift_val - 0x3ff;\n  uint mask_1 = 0x7fffffff;\n  uint mask_2 = 0x80000000;\n  uint mask_3 = 0xfffe0000;\n  uint mask_4 = 0x40000;\n  uint mask_5 = 0x40000000;\n  uint sign_mask = 0x80000000;\n  uint result_1 = input_1;\n  uint result_2 = input_2;\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  ulonglong result;\n  if ((int)exp_val < 0x14) {\n    if ((int)exp_val < 0) {\n      if ((input_2 & mask_1 | input_1) == 0) {\n        return CONCAT44(input_2, input_1);\n      }\n      result_2 = input_2 & 0xfffff | input_1;\n      uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input_2 >> 0x1f) * -8);\n      uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input_2 >> 0x1f) * -8) + 4);\n      uVar3 = (-result_2 | result_2) >> 0xc & mask_2 | input_2 & mask_3;\n      result = FUNC_0800016c(input_1, uVar3, uVar1, uVar2, input_1, input_2, input_3);\n      result = FUNC_08000168((int)result, (int)((ulonglong)result >> 0x20), uVar1, uVar2);\n      return result & 0xffffffff | (ulonglong)((uint)(result >> 0x20) & mask_1 | input_2 & mask_2) << 0x20;\n    }\n    shift_val = DAT_080071bc >> (exp_val & 0xff);\n    if ((input_2 & shift_val | input_1) == 0) {\n      return CONCAT44(input_2, input_1);\n    }\n    shift_val = shift_val >> 1;\n    result_1 = input_2 & shift_val | input_1;\n    if (result_1 != 0) {\n      if (exp_val == 0x13) {\n        result_1 = sign_mask;\n      }\n      else {\n        result_1 = 0;\n      }\n      result_2 = mask_4 >> (exp_val & 0xff) | input_2 & ~shift_val;\n    }\n  }\n  else {\n    if (0x33 < (int)exp_val) {\n      if (exp_val != 0x400) {\n        return CONCAT44(input_2, input_1);\n      }\n      result = FUNC_0800016c();\n      return result;\n    }\n    exp_val = exp_val - 0x413;\n    uVar4 = 0xffffffff >> (exp_val & 0xff);\n    if ((input_1 & uVar4) == 0) {\n      return CONCAT44(input_2, input_1);\n    }\n    uVar4 = uVar4 >> 1;\n    result_2 = input_1;\n    if ((input_1 & uVar4) != 0) {\n      result_2 = mask_5 >> (exp_val & 0xff) | input_1 & ~uVar4;\n    }\n  }\n  uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input_2 >> 0x1f) * -8);\n  uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input_2 >> 0x1f) * -8) + 4);\n  uVar3 = (-result_2 | result_2) >> 0xc & mask_2 | result_1 & mask_3;\n  result = FUNC_0800016c(result_1, uVar2, uVar1, uVar2, input_1, input_2, input_3);\n  result = FUNC_08000168((int)result, (int)((ulonglong)result >> 0x20), uVar1, uVar2);\n  return result;\n}",
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "calculate_result_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "*(int *)(param_1 + 0x10)": "*(int *)(address + 16)",
                "param_1": "address",
                "FUN_08001424": "store_value_08001424",
                "param_2": "value",
                "param_3": "shift_amount"
            },
            "code": "void store_value_08001424(int address, int value, int shift_amount)\n{\n  if (shift_amount == 0) {\n    value = value << 16;\n  }\n  *(int *)(address + 16) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_08004490",
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "store_value_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001004": "execute_some_function",
                "in_CY": "current_char",
                "FUN_08001028": "is_end_of_string_08001028"
            },
            "code": "bool is_end_of_string_08001028(void)\n{\n  char current_char;\n  execute_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = FUN_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = FUN_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = FUN_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = FUN_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = FUN_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = FUN_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = FUN_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080009a0",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_080070b0",
                "FUN_0800709e",
                "FUN_08006228"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "bVar4": "is_zero",
                "uVar1": "temp_1",
                "param_1": "input_1",
                "FUN_080006ac": "calculate_result_080006ac",
                "unaff_r4": "temp_2",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar3": "temp_4",
                "uVar2": "temp_3",
                "in_r12": "temp_5"
            },
            "code": "ulonglong calculate_result_080006ac(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  bool is_zero;\n  \n  temp_1 = input_4 >> 0x14;\n  if (input_2 != input_3 && temp_1 != input_3) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (input_3 == 0) {\n      temp_3 = input_2 & 0x80000000;\n      do {\n        temp_2 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp_2 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_3;\n      if (temp_1 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_1 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_1 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_3 = input_2;\n  if (((!is_zero) && ((input_2 != input_3 || ((input_1 | input_2 << 0xc) == 0)))) && ((temp_1 != input_3 || (input_1 = input_4, temp_3 = input_3, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_3,input_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": true,
            "current_name": "calculate_result_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "iVar1": "counter1",
                "iVar2": "counter2",
                "puVar3": "ptr1",
                "param_1": "data",
                "param_6": "buffer_len",
                "param_7": "arg4",
                "FUN_08001828": "process_data_08001828",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "param_5": "buffer",
                "uVar4": "flag"
            },
            "code": "uint32_t process_data_08001828(uint32_t **data, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint8_t *buffer, int16_t buffer_len, uint32_t arg4)\n{\n  int counter1;\n  int counter2;\n  uint32_t *ptr1;\n  uint32_t flag;\n  \n  if (*((char *)(data) + 0x35) == ' ') {\n    if (buffer == NULL) {\n      return 1;\n    }\n    if (buffer_len == 0) {\n      return 1;\n    }\n    counter1 = get_current_time();\n    do {\n      ptr1 = *data;\n      flag = ~ptr1[6] & 2;\n      if (flag != 0) {\n        if (*((char *)(data) + 0x2c) == '\\x01') {\n          return 2;\n        }\n        flag = *ptr1;\n        *((char *)(data) + 0x2c) = 1;\n        *ptr1 = flag & 0xfffff7ff;\n        *((char *)(data) + 0x35) = 0x21;\n        *((char *)(data) + 0x36) = 0x40;\n        data[0xe] = NULL;\n        counter1 = start_subprocess(data, arg1, arg2, arg3, arg4);\n        if (counter1 != 0) {\n          *((char *)(data) + 0x2c) = 0;\n          if (data[0xe] == (uint32_t *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      counter2 = get_current_time();\n    } while ((uint32_t)(counter2 - counter1) < 0x2711);\n    *((char *)(data) + 0x2c) = 0;\n    *((char *)(data) + 0x35) = 0x20;\n  }\n  return 2;\n  while (buffer_len != 0) {\nLAB_080018e2:\n    counter1 = sub_process(data, arg4);\n    if (counter1 != 0) goto LAB_080018ee;\n    ptr1 = *data;\n    ptr1[4] = (uint32_t)*buffer;\n    flag = (int32_t)(ptr1[5] << 0x1d);\n    if (flag < 0) {\n      if ((buffer_len - 1) == 0) break;\n      buffer_len -= 2;\n      ptr1[4] = (uint32_t)buffer[1];\n      buffer += 2;\n    }\n    else {\n      buffer += 1;\n      buffer_len -= 1;\n    }\n  }\n  counter1 = sub_process(data, arg4);\n  if (counter1 == 0) {\n    **data |= 0x200;\n    *((char *)(data) + 0x2c) = 0;\n    *((char *)(data) + 0x35) = 0x20;\n    *((char *)(data) + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint32_t *)0x4) {\n    **data |= 0x200;\n    return 1;\n  }\n  return 3;\n}",
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": true,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "iVar2": "i",
                "FUN_08004c64": "initialize_memory_08004c64",
                "puVar1": "memory_ptr"
            },
            "code": "void initialize_memory_08004c64(void)\n{\n  undefined *memory_ptr = PTR_DAT_08004c6c;\n  int i = 0;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(memory_ptr + 0x802) = 0;\n  *(undefined2 *)(memory_ptr + 0x804) = 0;\n  do {\n    memory_ptr[i] = 0;\n    i++;\n  } while (i != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": true,
            "current_name": "initialize_memory_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08006c0c",
                "FUN_08005c70",
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080071c0"
            ],
            "imported": true,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = FUN_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = FUN_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = FUN_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = FUN_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = FUN_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = FUN_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = FUN_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = FUN_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = FUN_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = FUN_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = FUN_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = FUN_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = FUN_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = FUN_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = FUN_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "param_1": "num",
                "param_2": "shift_amount",
                "FUN_08007092": "set_msb_bit_and_shift_right_08007092"
            },
            "code": "uint set_msb_bit_and_shift_right_08007092(uint num, uint shift_amount) {\n    uint num_with_msb_bit_set = num | 0x80000000;\n    uint shifted_num = num_with_msb_bit_set + 0x100000 >> 0x1f;\n    return shifted_num;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "set_msb_bit_and_shift_right_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "validate_input_0800290c",
                "bVar1": "data_byte",
                "iVar2": "input_addr",
                "param_1": "input",
                "puVar6": "data_ptr",
                "puVar7": "next_data_ptr",
                "uVar3": "flag_value",
                "uVar4": "data_word",
                "sVar5": "count",
                "bVar8": "flag_check"
            },
            "code": "int validate_input_0800290c(int *input)\n{\n  byte flag = *(byte *)((int)input + 0x39);\n  if ((flag & 0xef) != 0x22) {\n    return 2;\n  }\n  int input_addr = *input;\n  ushort *data_ptr = (ushort *)input[10];\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      data_ptr[0] = (ushort)((uint)(*(int *)(input_addr + 4) << 0x17) >> 0x17);\n      data_ptr = data_ptr + 1;\n    }\n    else {\n      data_ptr[0] = (ushort)*(int *)(input_addr + 4) & 0xff;\n      data_ptr = (ushort *)((int)data_ptr + 1);\n    }\n    input[10] = (int)data_ptr;\n  }\n  else {\n    if (input[4] == 0) {\n      byte data_byte = (byte)*(undefined4 *)(input_addr + 4);\n      input[10] = (int)data_ptr + 1;\n      *(byte *)data_ptr = data_byte;\n    }\n    else {\n      undefined4 data_word = *(undefined4 *)(input_addr + 4);\n      input[10] = (int)data_ptr + 1;\n      *(byte *)data_ptr = (byte)data_word & 0x7f;\n    }\n  }\n  short count = *(short *)((int)input + 0x2e) - 1;\n  *(short *)((int)input + 0x2e) = count;\n  if (count == 0) {\n    input_addr = *input;\n    *(uint *)(input_addr + 0xc) = *(uint *)(input_addr + 0xc) & 0xffffffdf;\n    uint flag_value = (uint)*(byte *)((int)input + 0x39);\n    bool flag_check = flag_value != 0x32;\n    if (flag_check) {\n      flag_value = *(uint *)(input_addr + 0xc) & 0xfffffeff;\n    }\n    else {\n      input_addr = 0x12;\n    }\n    if (flag_check) {\n      *(uint *)(input_addr + 0xc) = flag_value;\n      flag_value = *(uint *)(input_addr + 0x14) & 0xfffffffe;\n    }\n    if (flag_check) {\n      *(uint *)(input_addr + 0x14) = flag_value;\n      input_addr = 1;\n    }\n    *(char *)((int)input + 0x39) = (char)input_addr;\n    call_cleanup_function();\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "validate_input_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "sVar1": "time1",
                "initialize_function5": "initialize_function5",
                "function7": "function7",
                "function6": "function6",
                "function4": "function4",
                "PTR_DAT_08003020": "ptr3",
                "PTR_DAT_08003000": "ptr2",
                "iVar6": "var1",
                "calculate_difference": "calculate_difference",
                "PTR_DAT_0800300c": "ptr4",
                "iVar8": "var2",
                "DAT_08003008": "data3",
                "thunk_FUN_0800115c": "get_random_number",
                "PTR_DAT_0800302c": "ptr9",
                "FUN_08002d88": "initialize_function3",
                "PTR_DAT_08003014": "ptr6",
                "uVar5": "data1",
                "uVar7": "data2",
                "initialize_function9": "initialize_function9",
                "PTR_DAT_08003018": "ptr5",
                "FUN_08002b48": "initialize_function1",
                "FUN_08002bf0": "initialize_function2",
                "FUN_08002f28": "initialize_game_08002f28",
                "PTR_DAT_08003010": "ptr7",
                "puVar2": "ptr2",
                "PTR_DAT_0800301c": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "get_current_time": "get_current_time",
                "DAT_08003030": "data4",
                "PTR_DAT_08003004": "ptr1",
                "PTR_DAT_08003028": "ptr8",
                "function8": "function8"
            },
            "code": "void initialize_game_08002f28(void)\n{\n  short time1;\n  undefined *PTR_DAT_08003004;\n  undefined *PTR_DAT_08003000;\n  undefined *PTR_DAT_08003020;\n  undefined2 data1;\n  int var1;\n  undefined4 data2;\n  int var2;\n  \n  initialize_function1();\n  initialize_function2();\n  initialize_function3();\n  var1 = get_random_number();\n  PTR_DAT_08003000 = PTR_DAT_08003000;\n  PTR_DAT_08003004 = PTR_DAT_08003004;\n  var2 = *(int *)PTR_DAT_08003000;\n  *(int *)PTR_DAT_08003004 = var1;\n  data2 = calculate_difference(var1 - var2);\n  function4(data2,DAT_08003008);\n  initialize_function5();\n  PTR_DAT_08003020 = PTR_DAT_0800300c;\n  *(undefined4 *)PTR_DAT_08003000 = *(undefined4 *)PTR_DAT_08003004;\n  function6(*(int *)(PTR_DAT_08003020 + 4) + -0x80000000,*(int *)PTR_DAT_08003020 + -0x80000000,\n               *(undefined4 *)(PTR_DAT_08003020 + 8),*(undefined4 *)(PTR_DAT_08003018 + 4),\n               *(undefined4 *)PTR_DAT_08003018,*(int *)(PTR_DAT_08003018 + 8) + -0x80000000,\n               *(undefined4 *)PTR_DAT_08003014,*(undefined4 *)(PTR_DAT_08003014 + 4),\n               *(undefined4 *)(PTR_DAT_08003014 + 8),PTR_DAT_08003010);\n  PTR_DAT_08003020 = PTR_DAT_08003020;\n  PTR_DAT_08003000 = PTR_DAT_0800301c;\n  PTR_DAT_08003004 = PTR_DAT_0800301c + 2;\n  time1 = (short)((uint)(int)*(short *)PTR_DAT_08003004 / 100);\n  *(short *)(PTR_DAT_08003020 + 4) = (short)((uint)(int)*(short *)(PTR_DAT_08003000 + 4) / 100);\n  *(short *)(PTR_DAT_08003020 + 2) = (short)((uint)(int)time1 / 100);\n  data1 = *(undefined2 *)(PTR_DAT_08003028);\n  *(undefined2 *)(PTR_DAT_08003020 + 6) = data1;\n  data1 = *(undefined2 *)(PTR_DAT_08003028 + 4);\n  *(undefined2 *)(PTR_DAT_08003020 + 8) = *(undefined2 *)(PTR_DAT_08003028 + 2);\n  *(undefined2 *)(PTR_DAT_08003020 + 10) = data1;\n  PTR_DAT_08003000 = PTR_DAT_0800302c;\n  *(undefined2 *)(PTR_DAT_08003020 + 0xc) = *(undefined2 *)PTR_DAT_08003000;\n  data1 = *(undefined2 *)(PTR_DAT_08003000 + 4);\n  *(undefined2 *)(PTR_DAT_08003020 + 0xe) = *(undefined2 *)(PTR_DAT_08003000 + 2);\n  *(undefined2 *)(PTR_DAT_08003020 + 0x10) = data1;\n  data2 = function7();\n  function4(data2,DAT_08003030);\n  data1 = get_current_time();\n  *(undefined2 *)PTR_DAT_08003024 = data1;\n  data2 = function8();\n  function4(data2,DAT_08003030);\n  data1 = get_current_time();\n  *(undefined2 *)(PTR_DAT_08003024 + 2) = data1;\n  initialize_function9();\n  data1 = get_current_time();\n  *(undefined2 *)(PTR_DAT_08003024 + 4) = data1;\n  return;\n}",
            "called": [
                "FUN_08000e54",
                "FUN_08001078",
                "FUN_08000c3c",
                "FUN_08003320",
                "FUN_08002ec0",
                "FUN_08002b48",
                "FUN_08000cec",
                "FUN_08003330",
                "FUN_08002d88",
                "FUN_08002ee8",
                "thunk_FUN_0800115c",
                "FUN_08002bf0",
                "FUN_08002ed4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "initialize_game_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "initializeDataSection_08004384",
                "local_c": "localVariable3",
                "param_1": "param1",
                "uStack_10": "localVariable2",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "dataSectionPointer",
                "local_14": "localVariable1"
            },
            "code": "void initializeDataSection_08004384(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n  uint8_t *dataSectionPointer;\n  uint32_t localVariable1;\n  uint32_t localVariable2;\n  uint32_t localVariable3;\n  uint32_t maskedParam4 = param4 & 0xff000000;\n  dataSectionPointer = PTR_DAT_080043b8;\n  dataSectionPointer[4] = 7;\n  dataSectionPointer[5] = 0;\n  dataSectionPointer[6] = 0x2a;\n  dataSectionPointer[7] = 0;\n  localVariable1 = *(uint32_t *)dataSectionPointer;\n  localVariable2 = *(uint32_t *)(dataSectionPointer + 4);\n  dataSectionPointer[8] = 0;\n  dataSectionPointer[9] = 0;\n  dataSectionPointer[10] = 0;\n  localVariable3 = (maskedParam4 | (uint32_t)*(uint16_t *)(dataSectionPointer + 8));\n  FUN_08004300(0x65, &localVariable1, 0xb, *(uint16_t *)(dataSectionPointer + 8), param1);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "initializeDataSection_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_char_null_080009a0",
                "in_ZR": "input_char",
                "FUN_08000990": "call_function_to_initialize_input_char"
            },
            "code": "bool is_char_null_080009a0(char input_char)\\n{\\n  call_function_to_initialize_input_char();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_char_null_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": true,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "read_MS5611_sensor_data_08003298",
                "iVar4": "i",
                "PTR_s____Src_MS5611_c_08003308": "data_storage",
                "puVar2": "sensor_data_ptr",
                "puVar3": "data_storage_ptr",
                "local_1c": "high_byte",
                "local_1b": "low_byte",
                "puVar1": "read_command_ptr",
                "PTR_DAT_08003310": "data_storage",
                "PTR_DAT_08003304": "data_format_ptr"
            },
            "code": "void read_MS5611_sensor_data_08003298(void)\n{\n  uint16_t sensor_data[8];\n  uint8_t command = 0x1e;\n  uint8_t i = 0;\n  send_command_to_sensor(command);\n  delay_ms(10);\n  uint8_t *sensor_data_ptr = (uint8_t*)sensor_data;\n  uint8_t *read_command_ptr = (uint8_t*)\"\\xee\";\n  *PTR_DAT_08003304 = 8;\n  do {\n    uint8_t high_byte = 0;\n    uint8_t low_byte = 0;\n    read_sensor_data(0xee, i + 0xa0U & 0xffff, &high_byte, 1, read_command_ptr, 0x7c);\n    *(uint16_t *)(sensor_data_ptr + i) = (high_byte << 8) | low_byte;\n    uint8_t *PTR_s____Src_MS5611_c_08003308_ptr = PTR_s____Src_MS5611_c_08003308;\n    i += 2;\n  } while (i != 0x10);\n  i = 0;\n  do {\n    *(uint32_t *)(PTR_s____Src_MS5611_c_08003308_ptr + i * 4) = 0;\n    i++;\n  } while (i != 0x14);\n  return;\n}",
            "called": [
                "FUN_080040e8",
                "thunk_FUN_08001168",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "read_MS5611_sensor_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "uVar1": "checksum",
                "param_1": "checksum_seed",
                "pbVar2": "current_byte",
                "param_2": "data",
                "param_3": "data_length"
            },
            "code": "void calculate_checksum_08004300(uint checksum_seed, byte* data, uint data_length) {\n  uint checksum = checksum_seed ^ (data_length & 0xff);\n  add_to_checksum(checksum_seed);\n  add_to_checksum(data_length & 0xff);\n  for (byte* current_byte = data; current_byte < data + data_length; current_byte++) {\n    add_to_checksum(*current_byte);\n    checksum ^= *current_byte;\n  }\n  add_to_checksum(checksum);\n  return;\n}",
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004458",
                "FUN_08004434",
                "FUN_08004348",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_080043f0",
                "FUN_08004410"
            ],
            "imported": true,
            "current_name": "calculate_checksum_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_data_to_buffer_08005630",
                "puVar2": "buffer_ptr",
                "param_1": "buffer_start_index",
                "param_2": "data",
                "param_3": "data_length",
                "puVar1": "data_ptr"
            },
            "code": "void copy_data_to_buffer_08005630(int buffer_start_index, undefined *data, int data_length)\n{\n  undefined *buffer_ptr;\n  undefined *data_ptr;\n  buffer_ptr = (undefined *)(buffer_start_index - 1);\n  data_ptr = data + data_length;\n  for (; data != data_ptr; data++) {\n    buffer_ptr++;\n    *buffer_ptr = *data;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": true,
            "current_name": "copy_data_to_buffer_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar2 = FUN_08000a30();\n  iVar4 = FUN_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar3 = FUN_08000a30();\n    iVar4 = FUN_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = FUN_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = FUN_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar27 = FUN_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      FUN_08000428();\n      uVar32 = FUN_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = FUN_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005bc8",
                "FUN_08000724",
                "FUN_08005854",
                "FUN_08000428",
                "FUN_08000cec",
                "FUN_080004d0",
                "FUN_08000a30",
                "FUN_08000adc",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000ad8",
                "FUN_08001014"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "execute_function_with_swapped_arguments_08000980",
                "FUN_08000990": "execute_function",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "code": "void execute_function_with_swapped_arguments_08000980(undefined4 arg1, undefined4 arg2, undefined4 arg3, undefined4 arg4)\n{\n  execute_function_with_swapped_arguments_08000980(arg3, arg4, arg1, arg2);\n  return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": true,
            "current_name": "execute_function_with_swapped_arguments_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "iVar1": "task_count",
                "FUN_08004028": "perform_task_08004028",
                "FUN_08003f3c": "execute_function_C",
                "FUN_08003ff4": "execute_function_B",
                "FUNC_0800458c": "execute_function_A",
                "thunk_do_nothing_08001168": "wait_for"
            },
            "code": "void perform_task_08004028(void)\n{\n  int task_count = 3;\n  execute_function_A();\n  execute_function_B();\n  do {\n    execute_function_C(1, 0);\n    wait_for(100);\n    execute_function_C(0, 1);\n    wait_for(100);\n    execute_function_C(0, 0, 1);\n    wait_for(100);\n    task_count--;\n  } while (task_count != 0);\n  execute_function_C(1, 1);\n  return;\n}",
            "called": [
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_0800458c",
                "FUN_08003ff4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "perform_task_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "uVar1": "current_value",
                "puVar2": "ptr",
                "FUN_08002368": "set_values_08002368",
                "param_1": "memory_address",
                "param_2": "values"
            },
            "code": "void set_values_08002368(uint *memory_address, uint *values) {\n  uint current_value = *memory_address;\n  if ((((memory_address == ptr_080023cc) || (memory_address == (uint *)0x40000000)) ||\n      (memory_address == ptr_080023cc - 0x4a00)) || (memory_address == ptr_080023cc - 0x4900)) {\n    current_value = current_value & 0xffffff8f | values[1];\n    if (((memory_address == ptr_080023cc) || (memory_address == (uint *)0x40000000)) ||\n       ((memory_address == ptr_080023cc - 0x4a00 || (memory_address == ptr_080023cc - 0x4900)))) {\n      current_value = current_value & 0xfffffcff | values[3];\n    }\n  }\n  *memory_address = current_value;\n  memory_address[0xb] = values[2];\n  memory_address[10] = *values;\n  uint *ptr = ptr_080023cc;\n  if (memory_address == ptr_080023cc) {\n    ptr = (uint *)values[4];\n  }\n  if (memory_address == ptr_080023cc) {\n    memory_address[0xc] = (uint)ptr;\n  }\n  memory_address[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": true,
            "current_name": "set_values_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "*(uint *)(param_1 + 0x20)": "data_ptr",
                "FUN_08002520": "set_bit_08002520",
                "param_1": "data",
                "param_1 + 0x20": "data_ptr",
                "~(1 << (param_2 & 0xff))": "bit_mask",
                "*(uint *)(param_1 + 0x20) & ~(1 << (param_2 & 0xff))": "*data_ptr & bit_mask",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "param_3 << (param_2 & 0xff)": "bit_value << (bit_index & 0xff)"
            },
            "code": "void set_bit_08002520(uint* data, uint bit_index, uint bit_value) {\n\tuint* data_ptr = data + 0x20;\n\tuint bit_mask = ~(1 << (bit_index & 0xff));\n\t*data_ptr = (*data_ptr & bit_mask) | (bit_value << (bit_index & 0xff));\n\treturn;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": true,
            "current_name": "set_bit_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "uVar1": "temp1",
                "FUN_08002008": "calculate_variable_08002008",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "uVar3": "temp3",
                "uVar2": "temp2",
                "local_20": "array2",
                "uVar5": "temp5",
                "uVar4": "temp4",
                "local_24": "array1"
            },
            "code": "uint calculate_variable_08002008(void)\n{\n  uint result = 0;\n  uint temp1 = 0;\n  uint temp2 = 0;\n  uint temp3 = 0;\n  uint temp4 = 0;\n  uint temp5 = 0;\n  uint temp6 = 0;\n  uint temp7 = 0;\n  uint temp8 = 0;\n  byte array1 [4] = {1, 2, 0, 0};\n  uint array2 [5] = {0};\n  uint *ptr1 = &array2[0];\n  uint *ptr2 = (uint *)PTR_DAT_0800208c;\n  for (int i = 0; i < 5; i++)\n  {\n    temp1 = *ptr2;\n    temp2 = ptr2[1];\n    ptr2 += 2;\n    *ptr1 = temp1;\n    ptr1[1] = temp2;\n    ptr1 += 2;\n  }\n  temp3 = *(uint *)(DAT_08002090 + 4);\n  temp5 = DAT_08002094;\n  if ((temp3 & 0xc) == 8)\n  {\n    temp4 = count_leading_zeroes(0x3c00);\n    temp5 = DAT_08002098;\n    if ((int)(temp3 << 0xf) < 0)\n    {\n      temp5 = count_leading_zeroes(0x4000);\n      temp5 = DAT_08002094 / array1[(*(uint *)(DAT_08002090 + 4) & 0x20000) >> (temp5 & 0xff)];\n    }\n    temp5 = temp5 * *(byte *)((int)array2 + ((temp3 & 0x3c0000) >> (temp4 & 0xff)));\n  }\n  result = temp5;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": true,
            "current_name": "calculate_variable_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "iVar3": "data3",
                "uVar1": "data1",
                "mask1": "mask1",
                "mask3": "mask3",
                "param_1": "data_ptr",
                "mask2": "mask2",
                "FUN_08002404": "update_data_08002404",
                "param_2": "data_array",
                "uVar2": "data2"
            },
            "code": "void update_data_08002404(int data_ptr, int *data_array) { \n  uint32_t mask1 = 0xffffffef; \n  uint32_t mask2 = 0xfffff3ff; \n  uint32_t mask3 = 0xffffffdf; \n  uint32_t data1 = *(uint32_t *)(data_ptr + 0x20) & mask1; \n  uint32_t data2 = *(uint32_t *)(data_ptr + 0x4); \n  int data3 = *data_array; \n  uint32_t data4 = (data1 & mask3) | (data_array[2] << 4); \n  if (data_ptr == DAT_08002458) { \n    data4 = (data4 & 0xffffff7f) | (data_array[3] << 4); \n    data2 = (data2 & mask2) | ((data_array[5] | data_array[6]) << 2); \n  } \n  *(uint32_t *)(data_ptr + 0x4) = data2; \n  *(uint32_t *)(data_ptr + 0x18) = (*(uint32_t *)(data_ptr + 0x18) & 0xffff8cff) | (data3 << 8); \n  *(int *)(data_ptr + 0x38) = data_array[1]; \n  *(uint32_t *)(data_ptr + 0x20) = data4; \n  return; \n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_data_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "iVar2": "return_value",
                "local_50": "one",
                "local_4c": "ptr",
                "puVar4": "uint_ptr",
                "uStack_44": "input2_copy",
                "param_1": "input1",
                "piVar3": "int_ptr",
                "FUN_08005bc8": "process_data_08005bc8",
                "local_38": "var_38",
                "local_48": "input1_copy",
                "param_2": "input2",
                "cVar1": "input_char",
                "uVar5": "result",
                "uStack_3c": "input2_copy",
                "local_30": "var_30",
                "local_40": "input1_copy"
            },
            "code": "undefined8 process_data_08005bc8(undefined4 input1, undefined4 input2)\\n{\\n  char input_char;\\n  int return_value;\\n  int *int_ptr;\\n  undefined4 *uint_ptr;\\n  undefined8 result;\\n  undefined4 one = 1;\\n  undefined *ptr = PTR_DAT_08005c6c;\\n  undefined4 input1_copy = input1;\\n  undefined4 input2_copy = input2;\\n  undefined8 var_38;\\n  int var_30;\\n  result = FUN_08006c0c();\\n  input_char = *PTR_DAT_08005c68;\\n  if (input_char == -1) {\\n    return result;\\n  }\\n  var_30 = FUN_08000a04(input1, input2, input1_copy, input2_copy);\\n  if (var_30 != 0) {\\n    return result;\\n  }\\n  return_value = FUN_080009b4(input1, input2, 0, 0);\\n  if (return_value == 0) {\\n    return result;\\n  }\\n  if (input_char == \"\\0\") {\\n    var_38 = 0;\\nLAB_08005c26:\\n    return_value = FUN_0800709e(&one);\\n    if (return_value != 0) {\\n      goto LAB_08005c2e;\\n    }\\n  }\\n  else {\\n    var_38 = FUNC_08000724(0, 0, 0, 0);\\n    if (input_char != \"\\x02\") {\\n      goto LAB_08005c26;\\n    }\\n  }\\n  uint_ptr = (undefined4 *)FUN_080072ac();\\n  *uint_ptr = 0x21;\\nLAB_08005c2e:\\n  if (var_30 != 0) {\\n    int_ptr = (int *)FUN_080072ac();\\n    *int_ptr = var_30;\\n  }\\n  return var_38;\\n}",
            "called": [
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_0800709e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "process_data_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "iVar1": "var_1",
                "param_1": "ptr_param_1",
                "FUN_08001436": "clear_bit_and_set_values_08001436",
                "*(undefined *)((int)param_1 + 0x35)": "*((char *)ptr_param_1 + 0x35)",
                "param_1[0xe]": "ptr_param_1[14]",
                "*(uint *)(iVar1 + 0x14)": "var_2",
                "*(undefined *)(param_1 + 0xd)": "*(int *)(ptr_param_1 + 13)"
            },
            "code": "int clear_bit_and_set_values_08001436(int *ptr_param_1)\n{\n  int var_1 = *ptr_param_1;\n  uint32_t var_2 = *(uint32_t *)(var_1 + 0x14);\n  if ((var_2 & 0x400) != 0) {\n    var_2 &= 0xfffffbff;\n    ptr_param_1[14] = 4;\n    *((char *)ptr_param_1 + 0x35) = 0x20;\n    *(int *)(ptr_param_1 + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": true,
            "current_name": "clear_bit_and_set_values_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "puVar2": "flag",
                "puVar3": "updated_data",
                "FUN_08004a30": "update_data_08004a30",
                "puVar1": "current_data",
                "uVar4": "new_data"
            },
            "code": "void update_data_08004a30(void)\\n{\\n  undefined *current_data = PTR_DAT_08004a74;\\n  undefined *flag = PTR_DAT_08004a78;\\n  undefined *updated_data = PTR_DAT_08004a7c;\\n  \\n  if (current_data[1] != \"\\0\") {\\n    if (*flag == \"\\0\") {\\n      undefined4 new_data = FUN_08003068();\\n      new_data = FUNC_08000cec(new_data, DAT_08004a80);\\n      *(undefined4 *)(updated_data + 0x1c) = new_data;\\n      *flag = 1;\\n    }\\n    else {\\n      undefined4 new_data = FUN_08003068();\\n      new_data = FUNC_08000cec(new_data, DAT_08004a80);\\n      *(undefined4 *)(updated_data + 0x30) = new_data;\\n    }\\n  }\\n  if (current_data[1] == \"\\0\") {\\n    if (*flag != \"\\0\") {\\n      *flag = 0;\\n    }\\n    *(undefined4 *)(updated_data + 0x48) = *(undefined4 *)(current_data + 4);\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08000cec",
                "FUN_08003068"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "update_data_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "iVar5": "connection_data_address",
                "puVar2": "connection_status",
                "FUN_08004c70": "initialize_connection_08004c70",
                "puVar1": "connection_data",
                "uVar3": "connection_type",
                "uVar4": "connection_data_c"
            },
            "code": "int initialize_connection_08004c70(void)\n{\n  undefined *connection_status = PTR_DAT_08004c88;\n  undefined *connection_data = PTR_DAT_08004c84;\n  FUN_08004c64();\n  if ((connection_status[0x39] == '\\x01') || (connection_status[0x39] == '\\x12')) {\n    if (PTR_DAT_08004c84 == (undefined *)0x0) {\n      return 1;\n    }\n    if (connection_status[0x38] != '\\x01') {\n      connection_status[0x38] = 1;\n      *(undefined4 *)(connection_status + 0x3c) = 0;\n      *(undefined2 *)(connection_status + 0x2c) = 1;\n      *(undefined2 *)(connection_status + 0x2e) = 1;\n      connection_status[0x38] = 0;\n      if (connection_status[0x39] == '\\x12') {\n        undefined connection_type = 0x32;\n      }\n      else {\n        undefined connection_type = 0x22;\n      }\n      int connection_data_address = *(int *)connection_status;\n      connection_status[0x39] = connection_type;\n      uint connection_data_c = *(uint *)(connection_data_address + 0xc);\n      *(undefined **)(connection_status + 0x28) = connection_data;\n      *(uint *)(connection_data_address + 0xc) = connection_data_c | 0x100;\n      *(uint *)(connection_data_address + 0x14) = *(uint *)(connection_data_address + 0x14) | 1;\n      *(uint *)(connection_data_address + 0xc) = *(uint *)(connection_data_address + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": true,
            "current_name": "initialize_connection_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "bVar2": "is_x1_y1_zero",
                "bVar3": "is_x1_less_than_y1",
                "uVar1": "xor_result",
                "param_1": "x1",
                "FUN_08000904": "check_coordinates_08000904",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2"
            },
            "code": "uint check_coordinates_08000904(uint x1, uint y1, uint x2, uint y2)\n{\n  bool is_x1_y1_zero = (x1 | y1 << 1) == 0;\n  bool is_x2_y2_zero = (x2 | y2 << 1) == 0;\n  bool is_x2_equal_to_y2 = x2 == y2;\n  bool is_x1_equal_to_y1 = x1 == y1;\n\n  if (((int)(y1 << 1) >> 0x15 == -1 || (int)(y2 << 1) >> 0x15 == -1) && ((((int)(y1 << 1) >> 0x15 == -1 && !is_x1_y1_zero) || ((int)(y2 << 1) >> 0x15 == -1 && !is_x2_y2_zero))))) {\n    return 1;\n  }\n\n  if (!is_x1_y1_zero && !is_x2_y2_zero && !is_x2_equal_to_y2 && !is_x1_equal_to_y1) {\n    uint xor_result = x2 ^ y2;\n    bool is_xor_result_zero = xor_result == 0;\n    bool is_xor_result_positive = -1 < (int)xor_result;\n    bool is_y2_less_than_x2 = y2 <= x2;\n    bool is_x1_less_than_y1 = x1 <= y1;\n    bool is_condition_met = (is_xor_result_zero && is_x1_less_than_y1) || (is_xor_result_positive && is_y2_less_than_x2);\n    uint result = (int)y2 >> 0x1f;\n    if (!is_condition_met) {\n      result = ~result;\n    }\n    return result | 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": true,
            "current_name": "check_coordinates_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "sVar2": "input_val26",
                "uVar1": "input_val2",
                "puVar4": "input_val8",
                "param_1": "input",
                "puVar6": "input_val",
                "FUN_0800299a": "validate_input_0800299a",
                "uVar3": "input_val1",
                "uVar5": "new_input_flag",
                "uVar7": "input_val5_bit0",
                "bVar8": "input_val1_bit31"
            },
            "code": "void validate_input_0800299a(uint **input)\n{\n  uint input_val1 = **input;\n  uint input_val2 = (*input)[3];\n  bool input_val1_bit0 = input_val1 & 0xf;\n  bool input_val1_bit26 = input_val1 & (1 << 26);\n  bool input_val2_bit26 = input_val2 & (1 << 26);\n  bool input_val5_bit0 = (*input)[5] & 1;\n  uint input_val_f = (uint)(*input)[15];\n  if (!input_val1_bit0)\n  {\n    if (!input_val1_bit26 && !input_val2_bit26)\n    {\n      handle_invalid_input();\n      return;\n    }\n  }\n  else\n  {\n    if (input_val5_bit0 || (input_val2 & 0x120))\n    {\n      bool input_val1_bit31 = input_val1 & (1 << 31);\n      if (input_val1_bit31 && (int)(input_val2 << 23) < 0)\n      {\n        input_val_f |= 1;\n      }\n      if ((int)(input_val1 << 29) < 0 && input_val5_bit0)\n      {\n        input_val_f |= 2;\n      }\n      if ((int)(input_val1 << 30) < 0 && input_val5_bit0)\n      {\n        input_val_f |= 4;\n      }\n      if ((int)(input_val1 << 28) < 0 && input_val5_bit0)\n      {\n        input_val_f |= 8;\n      }\n      if (input_val_f == 0)\n      {\n        return;\n      }\n      if (input_val1_bit26 && input_val2_bit26)\n      {\n        handle_input_case1(input);\n      }\n      else if ((int)(input_val_f << 28) >= 0 || ((*input)[5] & 0x40))\n      {\n        handle_input_case2(input);\n        (*input)[15] = 0;\n      }\n      else\n      {\n        (*input)[3] &= 0xfffffedf;\n        (*input)[5] &= 0xfffffffe;\n        *(undefined *)((int)input + 0x39) = 1;\n        handle_input_case2(input);\n      }\n      return;\n    }\n  }\n  if ((int)(input_val1 << 24) < 0 && (int)(input_val2 << 24) < 0)\n  {\n    if ((*(byte *)((int)input + 0x39) & 0xdf) == 0x12)\n    {\n      uint *input_val8 = (*input)[8];\n      if ((*input)[2] == (uint *)0x1000)\n      {\n        (*input)[1] = *(ushort *)input_val8 & 0x1ff;\n        if ((*input)[4] == (uint *)0x0)\n        {\n          input_val8 = (uint *)((int)input_val8 + 2);\n        }\n        else\n        {\n          input_val8 = (uint *)((int)input_val8 + 1);\n        }\n        (*input)[8] = input_val8;\n      }\n      else\n      {\n        (*input)[8] = (uint *)((int)input_val8 + 1);\n        (*input)[1] = (uint)*(byte *)input_val8;\n      }\n      short input_val26 = *(short *)((int)input + 0x26) - 1;\n      *(short *)((int)input + 0x26) = input_val26;\n      if (input_val26 == 0)\n      {\n        (*input)[3] &= 0xffffff7f;\n        (*input)[3] |= 0x40;\n        return;\n      }\n    }\n  }\n  else if ((int)(input_val1 << 25) < 0 && (int)(input_val2 << 25) < 0)\n  {\n    (*input)[3] &= 0xffffffbf;\n    if (*(char *)((int)input + 0x39) == '2')\n    {\n      *(undefined *)((int)input + 0x39) = 0x22;\n    }\n    else\n    {\n      *(undefined *)((int)input + 0x39) = 1;\n    }\n    handle_input_case3(input);\n  }\n  return;\n}",
            "called": [
                "FUN_0800290a",
                "FUN_08002998",
                "FUN_0800290c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": true,
            "current_name": "validate_input_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "PTR_DAT_08001158": "pointer_to_dat",
                "FUN_0800114c": "increment_pointer_value_0800114c"
            },
            "code": "void increment_pointer_value_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*) PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "increment_pointer_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "padding": "remaining_length",
                "bVar4": "has_padding",
                "iVar1": "write_result",
                "param_1": "input_string",
                "current_length": "written_length",
                "param_2": "string_info",
                "param_3": "encoded_string_length",
                "param_4": "padding_value",
                "FUN_080052e4": "encode_string_080052e4",
                "param_5": "write_function",
                "uVar3": "padding_length",
                "uVar2": "max_length"
            },
            "code": "undefined4 encode_string_080052e4(undefined4 input_string, uint *string_info, uint *encoded_string_length, undefined4 padding_value, code *write_function)\\n{\\n  int write_result;\\n  uint max_length = string_info[4];\\n  if ((int)string_info[4] < (int)string_info[2]) {\\n    max_length = string_info[2];\\n  }\\n  *encoded_string_length = max_length;\\n  if (*(char *)((int)string_info + 0x43) != \"\\0\") {\\n    *encoded_string_length = max_length + 1;\\n  }\\n  if ((int)(*string_info << 0x1a) < 0) {\\n    *encoded_string_length = *encoded_string_length + 2;\\n  }\\n  uint padding = *string_info & 6;\\n  if (padding == 0) {\\n    for (; (int)padding < (int)(string_info[3] - *encoded_string_length); padding = padding + 1) {\\n      write_result = (*write_function)(input_string, padding_value, (int)string_info + 0x19, 1);\\n      if (write_result == -1) {\\n        return 0xffffffff;\\n      }\\n    }\\n  }\\n  uint padding_length = (uint)*(byte *)((int)string_info + 0x43);\\n  if (padding_length != 0) {\\n    padding_length = 1;\\n  }\\n  uint current_length = padding_length;\\n  if ((int)(*string_info << 0x1a) < 0) {\\n    *(undefined *)((int)string_info + padding_length + 0x43) = 0x30;\\n    current_length = padding_length + 2;\\n    *(undefined *)((int)string_info + padding_length + 0x44) = *(undefined *)((int)string_info + 0x45);\\n  }\\n  write_result = (*write_function)(input_string, padding_value, (int)string_info + 0x43, current_length);\\n  if (write_result != -1) {\\n    uint remaining_length = string_info[3];\\n    bool has_padding = (*string_info & 6) != 4;\\n    if (has_padding) {\\n      remaining_length = 0;\\n    }\\n    uint written_length = 0;\\n    if (!has_padding) {\\n      remaining_length = remaining_length - *encoded_string_length;\\n    }\\n    if (!has_padding) {\\n      remaining_length = remaining_length & ~((int)remaining_length >> 0x1f);\\n    }\\n    if ((int)string_info[4] < (int)string_info[2]) {\\n      remaining_length = remaining_length + (string_info[2] - string_info[4]);\\n    }\\n    while( true ) {\\n      if (remaining_length == written_length) {\\n        return 0;\\n      }\\n      write_result = (*write_function)(input_string, padding_value, (int)string_info + 0x1a, 1);\\n      if (write_result == -1) break;\\n      written_length = written_length + 1;\\n    }\\n  }\\n  return 0xffffffff;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": true,
            "current_name": "encode_string_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "iVar1": "start_time",
                "iVar2": "result",
                "param_1": "input_data",
                "param_2": "max_time",
                "FUN_080014e2": "check_condition_080014e2"
            },
            "code": "uint32_t check_condition_080014e2(int *input_data, uint32_t max_time)\n{\n  int start_time = get_current_time();\n  while(1){\n    if (*(int *)(*input_data + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    int result = check_input(input_data);\n    if (result != 0) {\n      if ((max_time != 0xffffffff) && ((max_time == 0 || (get_current_time() - start_time) > max_time)))) {\n        input_data[0xe] |= 0x20;\n        *(undefined *)((int)input_data + 0x35) = 0x20;\n        *(undefined *)(input_data + 0xd) = 0;\n        return 3;\n      }\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08001828"
            ],
            "imported": true,
            "current_name": "check_condition_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "param_1": "ptr_offset",
                "param_2": "value",
                "*(uint *)(param_1 + 0xc)": "*(ptr_offset + 0x3)",
                "FUN_0800142e": "xor_with_offset_0800142e"
            },
            "code": "void xor_with_offset_0800142e(uint32_t *ptr_offset, uint32_t value) {\n  *(ptr_offset + 0x3) = value ^ *(ptr_offset + 0x3);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "xor_with_offset_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "set_flags_08004d8c",
                "iVar1": "flag",
                "param_1": "flag_value",
                "DAT_08004e0c": "FLAG_B",
                "_DAT_4002101c": "FLAG_D_BIT",
                "DAT_08004e08": "FLAG_PTR",
                "DAT_08004e10": "FLAG_C",
                "DAT_08004e04": "FLAG_A"
            },
            "code": "void set_flags_08004d8c(int *flag_value)\n{\n  int flag = *flag_value;\n  if (flag == DAT_08004e04)\n  {\n    *(uint *)(DAT_08004e08 + 0x18) |= DAT_08004e04_BIT;\n  }\n  else if (flag == DAT_08004e0c)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e0c_BIT;\n  }\n  else if (flag == DAT_08004e10)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e10_BIT;\n  }\n  else if (flag == FLAG_D)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= _DAT_4002101c;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": true,
            "current_name": "set_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_based_on_bit_position_08002250",
                "uVar1": "count_leading_zeroes_result",
                "DAT_08002274": "dat_08002274",
                "PTR_DAT_08002278": "ptr_dat_08002278",
                "PTR_DAT_0800227c": "ptr_dat_0800227c"
            },
            "code": "uint get_shifted_value_based_on_bit_position_08002250(void)\n{\n  uint count_leading_zeroes_result = count_leading_zeroes(0x1c0000);\n  uint shifted_value = *(uint *)PTR_DAT_0800227c >> PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (count_leading_zeroes_result & 0xff)];\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": true,
            "current_name": "get_shifted_value_based_on_bit_position_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_end_of_string_reached_080009b4",
                "FUN_08000990": "execute_predefined_function",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_reached_080009b4(void)\n{\n  char current_char;\n  execute_predefined_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_end_of_string_reached_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "DAT_08001210": "array_start_ptr",
                "param_1": "bit_index"
            },
            "code": "void set_bit_in_array_080011fc(uint bit_index) {\n    uint array_index = bit_index >> 5;\n    uint bit_offset = bit_index & 0x1f;\n    uint* array_ptr = (uint*)(DAT_08001210 + array_index * 4);\n    uint bit_mask = 1 << bit_offset;\n    *array_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": true,
            "current_name": "set_bit_in_array_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_pointer_value_08003068",
                "PTR_DAT_08003070": "pointer_data"
            },
            "code": "get_pointer_value_08003068() {\n  int* pointer = (int*) PTR_DAT_08003070;\n  return *pointer;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": true,
            "current_name": "get_pointer_value_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_string_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "length",
                "puVar1": "src_end"
            },
            "code": "void reverse_copy_string_08005646(unsigned char *dest, const unsigned char *src, int length) {\n  unsigned char *src_end = src + length;\n  if ((src < dest) && (dest < src_end)) {\n    dest = dest + length;\n    length = length - (int)src_end;\n    while (src_end + length != (unsigned char *)0x0) {\n      src_end = src_end + -1;\n      dest = dest + -1;\n      *dest = *src_end;\n    }\n    return;\n  }\n  dest = dest + -1;\n  for (; src != src_end; src++) {\n    dest = dest + 1;\n    *dest = *src;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "reverse_copy_string_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "execute_function_08000990",
                "param_1": "parameter",
                "FUN_08000904": "initialize_application"
            },
            "code": "undefined4 execute_function_08000990(undefined4 parameter){\n  initialize_application();\n  return parameter;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009a0",
                "FUN_080009c8",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": true,
            "current_name": "execute_function_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "PTR_FUN_08000130": "function_ptr",
                "FUN_08000110": "check_and_return_value_if_first_time_08000110",
                "param_1": "value",
                "DAT_0800012c": "count",
                "PTR_DAT_08000128": "flag_ptr"
            },
            "code": "undefined* check_and_return_value_if_first_time_08000110(undefined* value)\\n{\\n  if (*PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      value = PTR_FUN_08000130;\\n    }\\n    *PTR_DAT_08000128 = 1;\\n  }\\n  return value;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": true,
            "current_name": "check_and_return_value_if_first_time_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "returnZero_0800709e"
            },
            "code": "int returnZero_0800709e(void)\n{\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "returnZero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_new_value_08002ec0",
                "puVar1": "current_ptr",
                "uVar3": "third_value",
                "uVar2": "first_value",
                "uVar4": "second_value"
            },
            "code": "void calculate_new_value_08002ec0(void)\n{\n  undefined *current_ptr;\n  undefined4 first_value;\n  undefined4 second_value;\n  undefined4 third_value;\n  \n  current_ptr = PTR_DAT_08002ed0;\n  second_value = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  third_value = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  first_value = FUNC_08000ad8(0x3f800000,second_value);\n  first_value = FUNC_08000cec(first_value,third_value);\n  third_value = FUNC_08000cec(second_value,*(undefined4 *)current_ptr);\n  first_value = FUNC_08000adc(third_value,first_value);\n  *(undefined4 *)current_ptr = first_value;\n  return;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "calculate_new_value_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "local_c": "data_buffer",
                "FUN_08004434": "send_data_to_device_08004434",
                "uStack_8": "unused_variable",
                "param_1": "data",
                "param_2": "device_id",
                "param_3": "device_type",
                "local_10": "device_address"
            },
            "code": "void send_data_to_device_08004434(uint16_t data, uint32_t device_id, uint32_t device_type) {\n  uint32_t device_address = *(uint32_t *)PTR_DEVICE_ADDRESS;\n  device_address = (device_id & 0xffff0000) | (uint32_t)*(uint16_t *)(PTR_DEVICE_ADDRESS + 4);\n  uint32_t data_buffer = device_type;\n  send_packet_to_device(0x6d, &device_address, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "send_data_to_device_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "imported": true,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "uVar11": "unused",
                "uVar12": "unused",
                "uVar13": "unused",
                "DAT_08006d60": "sign_mask",
                "iVar3": "unused",
                "uVar1": "unused",
                "iVar7": "unused",
                "param_1": "input1",
                "iVar10": "unused",
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_2": "input2",
                "uVar2": "unused",
                "uVar5": "unused",
                "uVar4": "unused",
                "uVar6": "unused",
                "uVar9": "unused",
                "uVar8": "unused"
            },
            "code": "uint32_t calculate_float_08006c0c(uint32_t input1, uint32_t input2) {\n  uint32_t DAT_08006d60 = 0x80000000;\n  uint32_t exp_mask = 0x7F800000;\n  uint32_t frac_mask = 0x007FFFFF;\n  uint32_t sign1 = input1 & DAT_08006d60;\n  uint32_t sign2 = input2 & DAT_08006d60;\n  uint32_t exp1 = input1 & exp_mask;\n  uint32_t exp2 = input2 & exp_mask;\n  uint32_t frac1 = input1 & frac_mask;\n  uint32_t frac2 = input2 & frac_mask;\n  uint32_t exp_diff = exp1 - exp2;\n  uint32_t frac_res = 0;\n  uint32_t carry = 0;\n  uint32_t result = 0;\n  if (exp1 == 0) {\n    return input1;\n  }\n  if (exp2 == 0) {\n    return input2;\n  }\n  if (exp_diff == 0) {\n    frac_res = frac1 + frac2;\n    carry = frac_res >> 23;\n    frac_res = frac_res & frac_mask;\n  }\n  else if (exp_diff > 0) {\n    frac1 = frac1 | 0x00800000;\n    frac2 = frac2 | 0x00800000;\n    frac2 = frac2 >> exp_diff;\n    frac_res = frac1 + frac2;\n    carry = frac_res >> 24;\n    frac_res = frac_res >> 1;\n  }\n  else {\n    frac1 = frac1 | 0x00800000;\n    frac2 = frac2 | 0x00800000;\n    frac1 = frac1 >> (-exp_diff);\n    frac_res = frac1 + frac2;\n    carry = frac_res >> 24;\n    frac_res = frac_res >> 1;\n  }\n  if ((frac_res & 0x00800000) == 0) {\n    return 0;\n  }\n  while ((frac_res & 0x00400000) == 0) {\n    frac_res = frac_res << 1;\n    exp_diff--;\n  }\n  if (exp_diff < 0) {\n    return 0;\n  }\n  result = sign1 ^ sign2;\n  result = result | ((exp1 + exp_diff) & exp_mask);\n  result = result | (frac_res & frac_mask);\n  return result;\n}",
            "called": [
                "FUN_08000168",
                "FUN_08000724",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005bc8",
                "FUN_08005c70",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "PTR_DAT_08004264": "pointer_to_metrics_1",
                "puVar2": "pointer_2",
                "param_1": "input_param_1",
                "FUN_0800426c": "calculate_metrics_0800426c",
                "DAT_080042fc": "data",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "puVar1": "pointer_1",
                "uVar3": "metric1",
                "PTR_DAT_08004268": "pointer_to_metrics_2",
                "uVar5": "metric3",
                "uVar4": "metric2",
                "uVar7": "metric7",
                "uVar6": "metric5",
                "uVar9": "metric14",
                "uVar8": "metric8"
            },
            "code": "void calculate_metrics_0800426c(uint32_t param_1,uint32_t param_2,uint32_t param_3,uint32_t param_4)\n{\n  uint32_t metric1 = FUNC_08000ad8();\n  uint32_t metric2 = FUNC_08000adc(param_1,param_2);\n  uint32_t metric3 = FUNC_08000ad8(metric1,param_3);\n  uint32_t metric4 = FUNC_08000adc(metric3,param_4);\n  FUNC_08000ad8(metric4,DAT_080042fc);\n  uint32_t metric5 = FUN_08001078();\n  uint32_t metric6 = FUNC_08000ad8(metric2,param_3);\n  uint32_t metric7 = FUNC_08000ad8(metric6,param_4);\n  FUNC_08000ad8(metric7,DAT_080042fc);\n  uint32_t metric8 = FUN_08001078();\n  uint32_t metric9 = FUNC_08000adc(metric1,param_3);\n  uint32_t metric10 = FUNC_08000ad8(metric9,param_4);\n  FUNC_08000ad8(metric10,DAT_080042fc);\n  uint32_t metric11 = FUN_08001078();\n  uint32_t metric12 = FUNC_08000adc(param_3,metric2);\n  uint32_t metric13 = FUNC_08000adc(metric12,param_4);\n  FUNC_08000ad8(metric13,DAT_080042fc);\n  uint32_t metric14 = FUN_08001078();\n  uint32_t *ptr = PTR_DAT_08004264;\n  if (999 < (int)metric14) {\n    metric14 = 1000;\n  }\n  if (999 < (int)metric8) {\n    metric8 = 1000;\n  }\n  if (999 < (int)metric7) {\n    metric7 = 1000;\n  }\n  if (999 < (int)metric5) {\n    metric5 = 1000;\n  }\n  *(uint32_t *)(PTR_DAT_08004264 + 8) = metric7 & ~((int)metric7 >> 0x1f);\n  *(uint32_t *)(ptr + 0xc) = metric5 & ~((int)metric5 >> 0x1f);\n  *(uint32_t *)(ptr + 4) = metric8 & ~((int)metric8 >> 0x1f);\n  *(uint32_t *)ptr = metric14 & ~((int)metric14 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(*(uint32_t *)(ptr + 4));\n  FUN_08003fdc(*(uint32_t *)(ptr + 8));\n  FUN_08003fe8(*(uint32_t *)(ptr + 0xc));\n  uint16_t *ptr2 = PTR_DAT_08004268;\n  *(short *)ptr2 = (short)*(uint32_t *)ptr + 1000;\n  *(short *)(ptr2 + 2) = (short)*(uint32_t *)(ptr + 4) + 1000;\n  *(short *)(ptr2 + 4) = (short)*(uint32_t *)(ptr + 8) + 1000;\n  *(short *)(ptr2 + 6) = (short)*(uint32_t *)(ptr + 0xc) + 1000;\n  return;\n}",
            "called": [
                "FUN_08003fd0",
                "FUN_08000adc",
                "FUN_08003fe8",
                "FUN_08001078",
                "FUN_08003fdc",
                "FUN_08000ad8",
                "FUN_08003fc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "calculate_metrics_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "puVar2": "feature",
                "param_1": "feature_ptr",
                "FUN_08002538": "enable_feature_08002538",
                "param_2": "feature_id",
                "puVar1": "default_feature"
            },
            "code": "int enable_feature_08002538(uint **feature_ptr, int feature_id)\n{\n  uint *feature = *feature_ptr;\n  uint *default_feature = PTR_DAT_08002560;\n  if (feature == default_feature) {\n    default_feature = (uint *)(feature[0x11] | 0x8000);\n  }\n  if (feature == PTR_DAT_08002560) {\n    feature[0x11] = (uint)default_feature;\n  }\n  *feature = *feature | 1;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": true,
            "current_name": "enable_feature_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "iVar3": "i",
                "iVar5": "buffer_size",
                "puVar4": "buffer_ptr",
                "param_1": "data_source",
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_2": "data_offset",
                "param_3": "buffer_offset",
                "param_4": "buffer_size",
                "puVar1": "source_data_ptr",
                "uVar2": "data_byte"
            },
            "code": "void copy_data_to_buffer_080040e8(int data_source, int data_offset, int buffer_offset, int buffer_size)\n{\n  unsigned char *source_data_ptr;\n  unsigned char *buffer_ptr;\n  unsigned char data_byte;\n  int i;\n  \n  source_data_ptr = PTR_s____Src_i2c_c_08004118;\n  buffer_ptr = (unsigned char *)(buffer_offset + -1);\n  \n  for (i = 0; i < buffer_size; i = i + 1) {\n    data_byte = copy_byte_from_source(data_source, data_offset + i & 0xffff, source_data_ptr, 0x4c, buffer_size);\n    buffer_ptr = buffer_ptr + 1;\n    *buffer_ptr = data_byte;\n  }\n  return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08003298"
            ],
            "imported": true,
            "current_name": "copy_data_to_buffer_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "local_70": "max_value_ptr",
                "local_6c": "upper_limit",
                "uStack_8": "unused_stack_var_2",
                "param_1": "string",
                "uStack_4": "unused_stack_var_3",
                "uStack_c": "unused_stack_var_1",
                "FUN_08004ffc": "clear_string_and_set_limits_08004ffc",
                "param_2": "max_length",
                "local_6a": "lower_limit",
                "param_3": "max_value",
                "param_4": "min_value",
                "local_64": "min_value_ptr",
                "local_68": "string_copy_ptr",
                "local_78": "string_ptr"
            },
            "code": "void clear_string_and_set_limits_08004ffc(char *string, int max_length, int max_value, int min_value)\n{\n  char *string_ptr [2];\n  int max_value_ptr;\n  short upper_limit;\n  short lower_limit;\n  char *string_copy_ptr;\n  int min_value_ptr;\n  int unused_stack_var_1;\n  int unused_stack_var_2;\n  int unused_stack_var_3;\n  upper_limit = 0x208;\n  max_value_ptr = 0x7fffffff;\n  min_value_ptr = 0x7fffffff;\n  lower_limit = 0xffff;\n  string_ptr[0] = string;\n  string_copy_ptr = string;\n  unused_stack_var_1 = max_length;\n  unused_stack_var_2 = max_value;\n  unused_stack_var_3 = min_value;\n  memset(string, 0, max_length);\n  return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": true,
            "current_name": "clear_string_and_set_limits_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "PTR_DAT_08001164": "pointer_data",
                "FUN_0800115c": "get_data_from_pointer_0800115c"
            },
            "code": "get_data_from_pointer_0800115c() {\n  return *(undefined4 *)PTR_DAT_08001164;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_08001b58",
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_0800209c",
                "thunk_FUN_0800115c",
                "thunk_FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460",
                "FUN_08001828",
                "FUN_080016f4"
            ],
            "imported": true,
            "current_name": "get_data_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "sVar1": "value1",
                "sVar2": "value2",
                "puVar3": "data_pointer1",
                "iVar7": "result",
                "uStack_25": "stack_value2",
                "puVar4": "data_pointer2",
                "param_1": "data1",
                "puVar5": "data_pointer3",
                "puVar6": "data_pointer4",
                "uStack_21": "stack_value3",
                "local_28": "local_value",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "uStack_26": "stack_value1",
                "FUN_08002d88": "process_data_08002d88",
                "local_24": "local_byte_value",
                "uVar9": "var2",
                "local_23": "local_undef_value",
                "uVar8": "var1",
                "local_22": "local_byte"
            },
            "code": "void process_data_08002d88(int data1, int data2, int data3, int data4)\n{\n  short value1;\n  short value2;\n  byte byte_value;\n  undefined *data_pointer1;\n  undefined *data_pointer2;\n  undefined *data_pointer3;\n  undefined *data_pointer4;\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined2 local_value;\n  undefined stack_value1;\n  undefined stack_value2;\n  undefined local_byte_value;\n  undefined local_undef_value;\n  byte local_byte;\n  undefined stack_value3;\n  \n  data_pointer1 = PTR_s____Src_MPU9250_c_08002e80;\n  stack_value3 = (undefined)((uint)data4 >> 0x18);\n  local_value = 0;\n  stack_value1 = 0;\n  stack_value2 = 0;\n  local_byte_value = 0;\n  local_undef_value = 0;\n  local_byte = 0;\n  result = FUN_0800407c(0x18,2,PTR_s____Src_MPU9250_c_08002e80,0xd7,data1,data2);\n  if (result << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&local_value,7,data_pointer1,0xda);\n    data_pointer1 = PTR_DAT_08002e84;\n    if ((int)((uint)local_byte << 0x1c) < 0) {\n      *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n    }\n    else {\n      value1 = CONCAT11(stack_value2,stack_value1);\n      value2 = CONCAT11(local_undef_value,local_byte_value);\n      *(undefined2 *)PTR_DAT_08002e84 = local_value;\n      *(short *)(data_pointer1 + 2) = value1;\n      *(short *)(data_pointer1 + 4) = value2;\n      data_pointer4 = PTR_DAT_08002e9c;\n      data_pointer3 = PTR_DAT_08002e98;\n      var2 = *(undefined4 *)PTR_DAT_08002e88;\n      var1 = FUN_08000c44();\n      var1 = FUNC_08000cec(var1,var2);\n      var1 = FUNC_08000cec(var1,*(undefined4 *)data_pointer3);\n      var1 = FUNC_08000ad8(var1,*(undefined4 *)data_pointer4);\n      var1 = FUNC_08000cec(var1,*(undefined4 *)PTR_DAT_08002e8c);\n      data_pointer2 = PTR_DAT_08002e90;\n      *(undefined4 *)PTR_DAT_08002e90 = var1;\n      var1 = FUN_08000c44((int)value1);\n      var1 = FUNC_08000cec(var1,var2);\n      var1 = FUNC_08000cec(var1,*(undefined4 *)(data_pointer3 + 4));\n      var1 = FUNC_08000ad8(var1,*(undefined4 *)(data_pointer4 + 4));\n      var1 = FUNC_08000cec(var1,*(undefined4 *)(PTR_DAT_08002e8c + 4));\n      *(undefined4 *)(data_pointer2 + 4) = var1;\n      var1 = FUN_08000c44((int)value2);\n      var1 = FUNC_08000cec(var1,var2);\n      var1 = FUNC_08000cec(var1,*(undefined4 *)(data_pointer3 + 8));\n      var1 = FUNC_08000ad8(var1,*(undefined4 *)(data_pointer4 + 8));\n      var1 = FUNC_08000cec(var1,*(undefined4 *)(PTR_DAT_08002e8c + 8));\n      *(undefined4 *)(data_pointer2 + 8) = var1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44",
                "FUN_0800407c",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "process_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "iVar1": "leading_zeros",
                "iVar4": "sub_exponent",
                "param_1": "input",
                "uVar3": "result",
                "uVar2": "exponent",
                "FUN_08000c44": "leading_zeros_count_08000c44",
                "uVar5": "mask"
            },
            "code": "uint leading_zeros_count_08000c44(uint input) {\n  int leading_zeros = count_leading_zeroes(input);\n  uint shifted_input = input << (leading_zeros + 0x18U & 0xff);\n  uint sign_bit = input & 0x80000000;\n  uint result = 0;\n  if (input == 0) {\n    return 0;\n  }\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  int exponent = leading_zeros - 8;\n  int sub_exponent = (sign_bit | 0x4b000000) - 0x800000 + exponent * -0x800000;\n  if (leading_zeros > 7) {\n    uint mask = 0 << (exponent & 0xff);\n    result = sub_exponent + (input << (exponent & 0xff)) + (0U >> (0x20 - exponent & 0xff)) + (uint)(0x7fffffff < mask);\n    if (mask == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  result = sub_exponent + ((input >> (0x20 - (leading_zeros + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  if ((shifted_input & 0x7fffffff) == 0) {\n    result = result & ~(shifted_input >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002b48",
                "FUN_0800483c",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002bf0"
            ],
            "imported": true,
            "current_name": "leading_zeros_count_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "FUN_08000a04": "is_valid_08000a04"
            },
            "code": "int is_valid_08000a04(uint32_t value1, int32_t value2, uint32_t value3, int32_t value4) {\n  int is_invalid = ((((value2 << 1) >> 0x15) != -1) || ((value1 | (value2 << 0xc)) == 0)) &&\n                   ((((value4 << 1) >> 0x15) != -1) || ((value3 | (value4 << 0xc)) == 0));\n  return !is_invalid;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "is_valid_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar4": "ratio1",
                "value4": "value4",
                "iVar5": "value3",
                "iVar6": "current_value",
                "param_1": "values",
                "uVar3": "mask",
                "FUN_080025e8": "update_values_080025e8",
                "remainder": "remainder"
            },
            "code": "void update_values_080025e8(int *values)\n{\n  int current_value = *values;\n  uint mask = values[4];\n  *(uint *)(current_value + 0x10) = *(uint *)(current_value + 0x10) & 0xffffcfff | values[3];\n  *(uint *)(current_value + 0xc) = values[2] | mask | values[5] | *(uint *)(current_value + 0xc) & 0xffffe9f3;\n  *(uint *)(current_value + 0x14) = *(uint *)(current_value + 0x14) & 0xfffffcff | values[6];\n  if (current_value == DAT_08002720) {\n    int value1 = FUN_08002250();\n    int value2 = values[1];\n    int value3 = FUN_08002250();\n    int ratio1 = (uint)(value1 * 0x19) / (uint)(value2 << 2);\n    int ratio2 = (uint)(value3 * 0x19) / (uint)(value2 << 2);\n    int remainder = (int)(((ulonglong)(uint)(ratio2) / (ulonglong)(uint)(100)) * -100);\n    ratio2 = (int)(((ulonglong)(uint)(ratio2) / (ulonglong)(uint)(100)) + (uint)(ratio1 / 100));\n    int value4 = FUN_08002250();\n  }\n  else {\n    int value1 = FUN_08002220();\n    int value2 = values[1];\n    int value3 = FUN_08002220();\n    int ratio1 = (uint)(value1 * 0x19) / (uint)(value2 << 2);\n    int ratio2 = (uint)(value3 * 0x19) / (uint)(value2 << 2);\n    int remainder = (int)(((ulonglong)(uint)(ratio2) / (ulonglong)(uint)(100)) * -100);\n    ratio2 = (int)(((ulonglong)(uint)(ratio2) / (ulonglong)(uint)(100)) + (uint)(ratio1 / 100));\n    int value4 = FUN_08002220();\n  }\n  int result = (((ratio2 + remainder) * 0x10 + 0x32) / 100 & 0xf | (ratio1 * 0x10 + 0x32U) / 100 & 0xf0) + (int)(((ulonglong)(uint)(value4 * 0x10) / (ulonglong)(uint)(values[1] << 2)) / 100) * 0x10;\n  *(uint *)(current_value + 8) = result;\n  return;\n}",
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": true,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "PTR_DAT_08002bf0": "accel_ptr",
                "combined_byte": "combined_byte",
                "PTR_DAT_08002bf4": "mag_ptr",
                "accel_data": "accel_data",
                "gyro_data": "gyro_data",
                "PTR_s____Src_MPU9250_c_08002be4": "read_MPU9250_register",
                "local_18": "low_byte",
                "PTR_DAT_08002bec": "gyro_ptr",
                "local_14": "high_byte",
                "FUN_08002b48": "read_MPU9250_data_08002b48",
                "mag_data": "mag_data"
            },
            "code": "void read_MPU9250_data_08002b48(void)\n{\n  uint16_t low_byte;\n  uint16_t high_byte;\n  uint32_t combined_byte;\n  uint32_t gyro_data;\n  uint32_t accel_data;\n  uint32_t mag_data;\n  uint32_t *PTR_DAT_08002bec = (uint32_t*)0x08002bec;\n  uint32_t *PTR_DAT_08002bf0 = (uint32_t*)0x08002bf0;\n  uint32_t *PTR_DAT_08002bf4 = (uint32_t*)0x08002bf4;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3B, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  gyro_data = combined_byte;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3D, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  gyro_data |= combined_byte;\n  gyro_data = func_08000cec(func_08000cec(func_08000c44(gyro_data),0x40800000),0x38000000);\n  *PTR_DAT_08002bec = gyro_data;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3F, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  accel_data = combined_byte;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x41, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  accel_data |= combined_byte;\n  accel_data = func_08000cec(func_08000cec(func_08000c44(accel_data),0x40800000),0x38000000);\n  *PTR_DAT_08002bf0 = accel_data;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3A, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  mag_data = combined_byte;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3C, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  mag_data |= combined_byte;\n  low_byte = 0;\n  high_byte = (uint16_t)(ADC1->DR & 0xFFFF0000);\n  PTR_s____Src_MPU9250_c_08002be4(0xD0, 0x3E, &low_byte, 6);\n  combined_byte = (uint32_t)low_byte | ((uint32_t)low_byte << 8) | ((uint32_t)low_byte << 16) | ((uint32_t)low_byte << 24);\n  mag_data |= combined_byte;\n  mag_data = func_08000cec(func_08000cec(func_08000c44(mag_data),0x40800000),0x38000000);\n  *PTR_DAT_08002bf4 = mag_data;\n}\n",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "read_MPU9250_data_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "FUN_08004f68": "initialize_data_08004f68"
            },
            "code": "void initialize_data_08004f68(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (index = 0; index < PTR_DAT_08004fa4 - PTR_DAT_08004fa0; index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n    *data_ptr = 0;\n  }\n  initialize_subsystem1();\n  initialize_subsystem2();\n  jump_table = (code *)0x8004f9a;\n  execute_jump_table(jump_table);\n  return;\n}",
            "called": [
                "FUN_08004fb4",
                "FUN_080041ae",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": true,
            "current_name": "initialize_data_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "updateData_08001170",
                "dataPtr": "dataPtr",
                "param_1": "param",
                "value": "value",
                "DAT_08001190": "dataStart",
                "mask": "mask"
            },
            "code": "void updateData_08001170(uint param) {\n  uint* dataPtr = (uint*)(DAT_08001190 + 0xc);\n  uint mask = 0xf8ff;\n  uint value = 0x5fa0000 | ((param & 7) << 8);\n  *dataPtr = (*dataPtr & mask) | value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": true,
            "current_name": "updateData_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "initialize_sensor_data_08002bf0",
                "DAT_08002ca8": "calibration_value",
                "PTR_s____Src_MPU9250_c_08002c9c": "register_address",
                "puVar2": "calibration_pointer",
                "PTR_DAT_08002cac": "calibrated_data_pointer",
                "local_1c": "low_byte",
                "puVar1": "data_pointer",
                "uVar3": "calibration_data",
                "local_20": "high_byte",
                "PTR_DAT_08002ca0": "data_buffer",
                "PTR_DAT_08002ca4": "calibration_data_pointer"
            },
            "code": "void initialize_sensor_data_08002bf0(void)\n{\n  uint8_t PTR_DAT_08002ca0[6];\n  uint32_t calibration_data;\n  uint16_t high_byte, low_byte;\n  \n  calibration_data = read_register(0xd0, 0x43);\n  high_byte = (uint16_t) (calibration_data >> 8);\n  low_byte = (uint16_t) (calibration_data & 0xff);\n  PTR_DAT_08002ca0[0] = high_byte >> 8;\n  PTR_DAT_08002ca0[1] = high_byte & 0xff;\n  PTR_DAT_08002ca0[2] = low_byte >> 8;\n  PTR_DAT_08002ca0[3] = low_byte & 0xff;\n  \n  calibration_data = apply_calibration(calibration_data, 0x7b);\n  calibration_data = apply_calibration(calibration_data, 0x38000000);\n  calibration_data = apply_calibration(calibration_data, *(uint32_t*)PTR_DAT_08002ca4);\n  *(uint32_t*)PTR_DAT_08002cac = calibration_data;\n  \n  calibration_data = apply_calibration((uint32_t)local_20, DAT_08002ca8);\n  calibration_data = apply_calibration(calibration_data, 0x38000000);\n  calibration_data = apply_calibration(calibration_data, *(uint32_t*)(PTR_DAT_08002ca4 + 4));\n  *(uint32_t*)(PTR_DAT_08002cac + 4) = calibration_data;\n  \n  calibration_data = apply_calibration((uint32_t)local_1c, DAT_08002ca8);\n  calibration_data = apply_calibration(calibration_data, 0x38000000);\n  calibration_data = apply_calibration(calibration_data, *(uint32_t*)(PTR_DAT_08002ca4 + 8));\n  *(uint32_t*)(PTR_DAT_08002cac + 8) = calibration_data;\n}\n",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "initialize_sensor_data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_sensors_08002ad0",
                "FUN_0800407c": "initialize_mpu9250",
                "FUN_0800403c": "set_parameter",
                "DAT_08002b44": "unused_data_variable",
                "PTR_s____Src_MPU9250_c_08002b44": "MPU9250_source_pointer"
            },
            "code": "void initialize_sensors_08002ad0(void)\n{\n  initialize_mpu9250();\n  set_accelerometer_scale(2);\n  set_gyroscope_scale(250);\n  set_gyroscope_filter_bandwidth(5);\n  set_accelerometer_filter_bandwidth(5);\n  set_magnetometer_operation_mode(3);\n  set_magnetometer_continuous_measurement_mode();\n  set_magnetometer_sampling_rate_divider(16);\n  set_magnetometer_resolution(16);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "initialize_sensors_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_for_zero_or_carry_flag_08001050",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "FUN_08000ffc": "set_flags"
            },
            "code": "bool check_for_zero_or_carry_flag_08001050(void)\n{\n  bool zero_flag;\n  bool carry_flag;\n  \n  set_flags();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": true,
            "current_name": "check_for_zero_or_carry_flag_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "should_continue_execution_080009c8",
                "in_ZR": "zero_flag",
                "FUN_08000990": "execute_preparatory_steps",
                "in_CY": "carry_flag"
            },
            "code": "bool should_continue_execution_080009c8(void)\n{\n  bool zero_flag;\n  bool carry_flag;\n  \n  execute_preparatory_steps();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "should_continue_execution_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "puVar1": "result_ptr",
                "uVar3": "second_operand",
                "uVar2": "temp_result",
                "uVar4": "fourth_operand"
            },
            "code": "void calculate_result_08002ed4(void)\n{\n  undefined *result_ptr;\n  undefined4 second_operand;\n  undefined4 third_operand;\n  undefined4 fourth_operand;\n  \n  result_ptr = PTR_DAT_08002ee4;\n  third_operand = *(undefined4 *)PTR_DAT_08002ee0;\n  fourth_operand = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  undefined4 temp_result = FUNC_08000ad8(0x3f800000,fourth_operand);\n  temp_result = FUNC_08000cec(temp_result,third_operand);\n  third_operand = FUNC_08000cec(fourth_operand,*(undefined4 *)result_ptr);\n  temp_result = FUNC_08000adc(third_operand,temp_result);\n  *(undefined4 *)result_ptr = temp_result;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "calculate_result_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "bVar1": "is_negative",
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar3": "double_input_2",
                "uVar2": "double_input_1",
                "uVar4": "result",
                "bVar5": "is_zero"
            },
            "code": "uint calculate_result_08000f9c(uint input_1, uint input_2)\n{\n  bool is_negative;\n  uint double_input_1 = input_1 * 2;\n  uint double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) && ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) || (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uint result = double_input_1 | input_2 & 0x7fffffff;\n  bool is_zero = result == 0;\n  if (!is_zero) {\n    result = input_1 ^ input_2;\n    is_zero = result == 0;\n  }\n  is_negative = -1 < (int)result;\n  if (is_negative) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && double_input_2 <= double_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": true,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_08000724",
                "FUN_080070a4",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_080009c8",
                "FUN_0800016c",
                "FUN_08000404",
                "FUN_080071c0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "iVar1": "leading_zeroes",
                "iVar3": "multiplier",
                "shifted_zero": "shifted_zero",
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input",
                "result": "result",
                "uVar2": "shift_amount",
                "uVar4": "mask",
                "shifted_input": "shifted_input",
                "carry": "carry"
            },
            "code": "uint calculate_hash_08000c3c(uint input)\n{\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < shifted_zero);\n    uint result = multiplier + shifted_input + shifted_zero + carry;\n    if (shifted_zero == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_output = ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  uint mask = shifted_input & 0x7fffffff;\n  uint result = multiplier + shifted_output;\n  if (mask == 0) {\n    result = result & ~(shifted_input >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "uVar1": "data1",
                "puVar3": "source_ptr",
                "puVar4": "dest_ptr",
                "FUN_080043bc": "copy_data_from_array_and_call_function_080043bc",
                "local_1c": "local_array2",
                "uVar2": "data2",
                "local_24": "local_array"
            },
            "code": "void copy_data_from_array_and_call_function_080043bc(void)\n{\n  undefined4 data1, data2;\n  undefined4 *source_ptr;\n  undefined4 *dest_ptr;\n  undefined4 local_array [2];\n  undefined2 local_array2 [6];\n  \n  source_ptr = local_array;\n  dest_ptr = (undefined4 *)PTR_DAT_080043ec;\n  do {\n    data1 = *dest_ptr;\n    data2 = dest_ptr[1];\n    dest_ptr = dest_ptr + 2;\n    *source_ptr = data1;\n    source_ptr[1] = data2;\n    source_ptr = source_ptr + 2;\n  } while (dest_ptr != (undefined4 *)(PTR_DAT_080043ec + 0x10));\n  *(undefined2 *)source_ptr = *(undefined2 *)dest_ptr;\n  call_function_with_data(0x66, local_array, 0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "copy_data_from_array_and_call_function_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "iVar2": "data_value",
                "param_1": "input",
                "FUN_08001214": "validate_input_08001214",
                "puVar1": "data_pointer"
            },
            "code": "int validate_input_08001214(int input) {\n  int* data_pointer = DAT_08001238;\n  int data_value = DAT_0800123c;\n  if (input - 1U < 0x1000000) {\n    data_pointer[1] = input - 1U;\n    *(undefined *)(data_value + 0x23) = 0xf0;\n    data_pointer[2] = 0;\n    *data_pointer = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": true,
            "current_name": "validate_input_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "param_1": "value",
                "PTR_DAT_08003fcc": "ptr",
                "FUN_08003fc4": "set_parameter_value_08003fc4"
            },
            "code": "void set_parameter_value_08003fc4(int value)\n{\n    int* PTR_DAT_08003fcc = *(int*)PTR_DAT_08003fcc;\n    int offset = 0x40;\n    int* target_address = (int*)((char*)PTR_DAT_08003fcc + offset);\n    *target_address = value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_parameter_value_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "uVar1": "mask",
                "iVar4": "leading_zeroes",
                "param_1": "input",
                "FUN_08000404": "convert_to_64_bit_08000404",
                "uVar3": "shift_amount",
                "uVar2": "abs_input",
                "bVar9": "carry",
                "uVar5": "shift_amount2",
                "uVar6": "mask",
                "bVar8": "equal",
                "in_r12": "N/A",
                "result2": "N/A",
                "bVar7": "carry",
                "result1": "result1"
            },
            "code": "ulonglong convert_to_64_bit_08000404(uint input)\n{\n  uint mask = 0x80000000;\n  uint abs_input = input & mask ? -input : input;\n  uint leading_zeroes = count_leading_zeroes(abs_input);\n  uint shift_amount = leading_zeroes + 0x15;\n  bool carry = shift_amount < 0x20;\n  bool equal = shift_amount == 0x20;\n  uint result1 = 0;\n  uint result2 = 0;\n  if (!carry && !equal)\n  {\n    shift_amount = 0x20 - leading_zeroes;\n    result1 = 0;\n  }\n  else\n  {\n    result1 = abs_input << (shift_amount & 0xff);\n    abs_input = abs_input >> (0xcU - leading_zeroes & 0xff);\n  }\n  if (shift_amount < 0x433)\n  {\n    return ((ulonglong)(abs_input + (0x432 - shift_amount) * 0x100000) | (ulonglong)(input & mask));\n  }\n  uint shift_amount2 = ~(0x432 - shift_amount);\n  if (shift_amount2 > 0x1e)\n  {\n    return ((ulonglong)input | (ulonglong)(abs_input >> (shift_amount2 - 0x1f & 0xff))) & 0x80000000ffffffff;\n  }\n  int shift_amount3 = shift_amount2 - 0x13;\n  if (shift_amount3 == 0 || shift_amount3 < 0 != (shift_amount2 - 0x1f < 0xc))\n  {\n    shift_amount2++;\n    return ((ulonglong)(mask | abs_input >> (shift_amount2 & 0xff)) | (ulonglong)(result1 >> (shift_amount2 & 0xff) | abs_input << (0x20 - shift_amount2 & 0xff)));\n  }\n  return ((ulonglong)input | (ulonglong)(result1 >> (0x20 - (0xcU - shift_amount3) & 0xff) | abs_input << (0xcU - shift_amount3 & 0xff))) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "convert_to_64_bit_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "DAT_08002208": "ptr_2",
                "PTR_DAT_0800220c": "ptr_4",
                "iVar4": "bit_31",
                "iVar5": "bit_4",
                "puVar3": "ptr1",
                "param_1": "data",
                "FUN_08002008": "helper_function_1",
                "DAT_08002204": "ptr_1",
                "FUN_08001104": "helper_function_2",
                "FUN_0800209c": "process_data_0800209c",
                "param_2": "length",
                "cVar2": "bit_6_2",
                "cVar1": "bit_6_1",
                "PTR_DAT_08002210": "ptr_3",
                "FUN_0800115c": "helper_function_3",
                "uVar7": "bit_3",
                "uVar6": "bit_4"
            },
            "code": "uint32_t process_data_0800209c(uint32_t *data, uint32_t length)\n{\n  char bit_6_1;\n  char bit_6_2;\n  uint32_t *ptr1;\n  int32_t bit_31;\n  uint32_t bit_4;\n  uint32_t bit_3;\n  uint32_t result_1;\n  uint32_t result_2;\n  ptr1 = DAT_08002204;\n  if ((length <= (*DAT_08002204 & 7)) || (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | length, length == (*ptr1 & 7))) {\n    bit_4 = *data;\n    if ((int32_t)(bit_4 << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | data[2];\n    }\n    ptr1 = DAT_08002208;\n    bit_31 = bit_4 << 0x1f;\n    if (-1 < bit_31) {\n      ptr1 = DAT_08002204;\n      if ((length < (*DAT_08002204 & 7)) && (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | length, length != (*ptr1 & 7))) {\n        return 1;\n      }\n      ptr1 = DAT_08002208;\n      bit_4 = *data;\n      if ((bit_4 & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | data[3];\n      }\n      if ((int32_t)(bit_4 << 0x1c) < 0) {\n        ptr1[1] = ptr1[1] & 0xffffc7ff | data[4] << 3;\n      }\n      result_1 = helper_function_1();\n      result_2 = count_leading_zeroes(0xf000000);\n      *(uint32_t *)PTR_DAT_08002210 = result_1 >> PTR_DAT_0800220c[(ptr1[1] & 0xf0) >> (result_2 & 0xff)];\n      helper_function_2(0);\n      return 0;\n    }\n    bit_4 = data[1];\n    if (bit_4 == 1) {\n      bit_6_2 = '\\x01';\n      bit_6_1 = '\\0';\n    }\n    else {\n      if (bit_4 == 2) {\n        bit_3 = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      bit_6_2 = '\\0';\n      bit_6_1 = '\\x01';\n    }\n    bit_3 = count_leading_zeroes((uint32_t)(bit_6_1 << 6) << 0x18 | (uint32_t)(bit_6_2 << 6) << 8);\n    bit_3 = (*DAT_08002208 >> (bit_3 & 0x1f)) << 0x1f;\n    if ((int32_t)bit_3 < 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | bit_4;\n      bit_31 = helper_function_3(bit_31, bit_3);\n      if (data[1] == 1) {\n        do {\n          if ((ptr1[1] & 0xc) == 4) goto LAB_080020ba;\n          bit_31 = helper_function_3();\n        } while ((uint32_t)(bit_31 - bit_4) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((ptr1[1] & 0xc) == 8) goto LAB_080020ba;\n          bit_31 = helper_function_3();\n        } while ((uint32_t)(bit_31 - bit_4) < 0x1389);\n      }\n      else {\n        do {\n          if ((ptr1[1] & 0xc) == 0) goto LAB_080020ba;\n          bit_31 = helper_function_3();\n        } while ((uint32_t)(bit_31 - bit_4) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "process_data_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "PTR_DAT_08004074": "i2c_device",
                "iVar1": "result",
                "param_1": "device_address",
                "PTR_s____Src_i2c_c_08004078": "error_message",
                "param_2": "register_address",
                "FUN_08001828": "i2c_write",
                "param_3": "data",
                "FUN_0800403c": "i2c_write_byte_0800403c",
                "param_4": "do_nothing",
                "local_14": "buffer",
                "thunk_do_nothing_08001168": "do_nothing_thunk"
            },
            "code": "void i2c_write_byte_0800403c(unsigned int device_address, unsigned int register_address, unsigned char data, int do_nothing){\n  int result;\n  unsigned char buffer[1];\n  buffer[0] = data;\n  result = i2c_write(PTR_DAT_08004074, device_address, register_address, 1, buffer, 1, 200);\n  if (result != 0){\n    print_error(PTR_s____Src_i2c_c_08004078, 0x1b);\n  }\n  if (do_nothing != 0){\n    do_nothing_thunk(0x32);\n  }\n  return;\n}",
            "called": [
                "FUN_08004490",
                "thunk_FUN_08001168",
                "FUN_08001828"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08003298"
            ],
            "imported": true,
            "current_name": "i2c_write_byte_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002b48",
                "FUN_08002f28",
                "FUN_08004a30",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08002ec0",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "iVar3": "temp3",
                "uVar1": "temp1",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "FUN_08006070": "calculate_result_08006070",
                "uVar2": "temp2",
                "uVar5": "temp5",
                "uVar4": "temp4",
                "uVar6": "temp6",
                "result2": "result2",
                "result1": "result1"
            },
            "code": "ulonglong calculate_result_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  ulonglong result1;\n  ulonglong result2;\n  undefined8 temp5;\n  undefined8 temp6;\n  \n  result2 = CONCAT44(DAT_08006214,DAT_08006210);\n  result1 = CONCAT44(DAT_08006204,DAT_08006200);\n  temp4 = param4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp4 | (-param3 | param3) >> 0x1f)) ||\n     (temp2 = param2 & 0x7fffffff, DAT_08006220 < (temp2 | (-param1 | param1) >> 0x1f))) {\n    result1 = FUNC_0800016c(param1,param2,param3,param4,param4);\n    return result1;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result1 = FUNC_08006d68();\n    return result1;\n  }\n  temp1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | temp2) == 0) {\n    if (temp1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (temp1 != 3) {\n      return CONCAT44(param2,param1);\n    }\n  }\n  else {\n    if ((param3 | temp4) != 0) {\n      if (temp4 == DAT_08006220) {\n        if (temp2 == temp4) {\n          if (temp1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (temp1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (temp1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (temp1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (temp1 == 3) {\n          return result1;\n        }\n        if (temp1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp2 != DAT_08006220) {\n        temp3 = (int)(temp2 - temp4) >> 0x14;\n        if (temp3 < 0x3d) {\n          if (((int)param4 < 0) && (temp3 + 0x3c < 0 != SCARRY4(temp3,0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUNC_08000724(param1,param2);\n            do_nothing_0800708c();\n            result2 = FUNC_08006d68();\n          }\n        }\n        temp3 = (int)(result2 >> 0x20);\n        if (temp1 != 1) {\n          if (temp1 == 2) {\n            temp6 = FUNC_08000168((int)result2,temp3,DAT_08006208,DAT_0800620c);\n            temp5 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (temp1 == 0) {\n              return result2;\n            }\n            temp5 = FUNC_08000168((int)result2,temp3,DAT_08006208,DAT_0800620c);\n            temp6 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result1 = FUNC_08000168((int)temp5,(int)((ulonglong)temp5 >> 0x20),(int)temp6,\n                               (int)((ulonglong)temp6 >> 0x20));\n          return result1;\n        }\n        return result2 & 0xffffffff | (ulonglong)(temp3 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = result2;\n    if ((int)param2 < 0) {\n      result1 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result1;\n}",
            "called": [
                "FUN_08000168",
                "FUN_08000724",
                "FUN_08006d68",
                "FUN_0800708c",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": true,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "iVar3": "temp3",
                "uVar1": "temp1",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "uVar2": "temp2",
                "uVar5": "result1",
                "uVar4": "temp4",
                "uVar7": "result2",
                "uVar6": "var1",
                "uVar8": "var2"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n  uint temp1, temp2;\n  int temp3;\n  uint temp4;\n  ulonglong result1, result2;\n  ulonglong var1 = CONCAT44(PTR_DAT_08006214, PTR_DAT_08006210);\n  ulonglong var2 = CONCAT44(PTR_DAT_08006204, PTR_DAT_08006200);\n  temp4 = param4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp4 | (-param3 | param3) >> 0x1f)) ||\n     (temp2 = param2 & 0x7fffffff, DAT_08006220 < (temp2 | (-param1 | param1) >> 0x1f))) {\n    result1 = FUN_0800016c(param1, param2, param3, param4, param4);\n    return result1;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result1 = FUN_08006d68();\n    return result1;\n  }\n  temp1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | temp2) == 0) {\n    if (temp1 == 2) {\n      return CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n    }\n    if (temp1 != 3) {\n      return CONCAT44(param2, param1);\n    }\n  }\n  else {\n    if ((param3 | temp4) != 0) {\n      if (temp4 == DAT_08006220) {\n        if (temp2 == temp4) {\n          if (temp1 == 2) {\n            return CONCAT44(PTR_DAT_080061ec, PTR_DAT_080061e8);\n          }\n          if (temp1 == 3) {\n            return CONCAT44(PTR_DAT_080061f4, PTR_DAT_080061f0);\n          }\n          if (temp1 != 1) {\n            return CONCAT44(PTR_DAT_0800621c, PTR_DAT_08006218);\n          }\n          return CONCAT44(PTR_DAT_080061e4, PTR_DAT_080061e0);\n        }\n        if (temp1 == 2) {\n          return CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n        }\n        if (temp1 == 3) {\n          return result2;\n        }\n        if (temp1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp2 != DAT_08006220) {\n        temp3 = (int)(temp2 - temp4) >> 0x14;\n        if (temp3 < 0x3d) {\n          if (((int)param4 < 0) && (temp3 + 0x3c < 0 != SCARRY4(temp3,0x3c))) {\n            var1 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            var1 = FUN_08006d68();\n          }\n        }\n        temp3 = (int)(var1 >> 0x20);\n        if (temp1 != 1) {\n          if (temp1 == 2) {\n            result2 = FUNC_08000168((int)var1, temp3, PTR_DAT_08006208, PTR_DAT_0800620c);\n            result1 = CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n          }\n          else {\n            if (temp1 == 0) {\n              return var1;\n            }\n            result1 = FUNC_08000168((int)var1, temp3, PTR_DAT_08006208, PTR_DAT_0800620c);\n            result2 = CONCAT44(PTR_DAT_080061fc, PTR_DAT_080061f8);\n          }\n          var2 = FUNC_08000168((int)result1, (int)((ulonglong)result1 >> 0x20), (int)result2,\n                               (int)((ulonglong)result2 >> 0x20));\n          return var2;\n        }\n        return var1 & 0xffffffff | (ulonglong)(temp3 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = var2;\n    if ((int)param2 < 0) {\n      result1 = CONCAT44(PTR_DAT_080061dc, PTR_DAT_080061d8);\n    }\n  }\n  return result1;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004c8c": "cleanup_data",
                "param_1": "data",
                "FUN_08004ffc": "process_data",
                "puVar1": "data_ptr",
                "PTR_DAT_08004cc4": "data_ptr",
                "FUN_08004cac": "process_data_and_cleanup_08004cac",
                "PTR_DAT_08004cc8": "data_end_ptr"
            },
            "code": "void process_data_and_cleanup_08004cac(undefined4 data){\n  undefined *PTR_DAT_08004cc4;\n  PTR_DAT_08004cc4 = PTR_DAT_08004cc4;\n  process_data(PTR_DAT_08004cc4,PTR_DAT_08004cc8,data);\n  cleanup_data(PTR_DAT_08004cc4);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "process_data_and_cleanup_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "iVar2": "loop_start",
                "iVar3": "loop_end",
                "param_1": "input_data",
                "puVar5": "data_ptr",
                "puVar1": "control_ptr",
                "uVar4": "control_val",
                "FUN_08004c18": "process_data_08004c18"
            },
            "code": "int process_data_08004c18(undefined input_data)\n{\n  int result = 2;\n  ushort *data_ptr = (ushort *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = input_data;\n  undefined *control_ptr = PTR_DAT_08004c2c;\n  if ((control_ptr[0x39] == '\\x01') || (control_ptr[0x39] == '\"')) {\n    if (data_ptr != (ushort *)0x0) {\n      if (control_ptr[0x38] != '\\x01') {\n        control_ptr[0x38] = 1;\n        *(undefined4 *)(control_ptr + 0x3c) = 0;\n        *(undefined2 *)(control_ptr + 0x24) = 1;\n        if (control_ptr[0x39] == '\"') {\n          uVar4 = 0x32;\n        }\n        else {\n          uVar4 = 0x12;\n        }\n        *(undefined2 *)(control_ptr + 0x26) = 1;\n        control_ptr[0x39] = uVar4;\n        while (*(short *)(control_ptr + 0x26) != 0) {\n          *(short *)(control_ptr + 0x26) = *(short *)(control_ptr + 0x26) + -1;\n          if (*(int *)(control_ptr + 8) == 0x1000) {\n            int iVar2 = FUN_0800115c();\n            while (-1 < **(int **)control_ptr << 0x18) {\n              int iVar3 = FUN_0800115c();\n              if (5 < (uint)(iVar3 - iVar2)) break;\n            }\n            (*(int **)control_ptr)[1] = *data_ptr & 0x1ff;\n            if (*(int *)(control_ptr + 0x10) == 0) {\n              data_ptr = data_ptr + 1;\n            }\n          }\n          else {\n            int iVar2 = FUN_0800115c();\n            while (-1 < **(int **)control_ptr << 0x18) {\n              int iVar3 = FUN_0800115c();\n              if (5 < (uint)(iVar3 - iVar2)) break;\n            }\n            (*(int **)control_ptr)[1] = (uint)*(byte *)data_ptr;\n          }\n          data_ptr = (ushort *)((int)data_ptr + 1);\n        }\n        int control_val = *(int *)control_ptr;\n        *(uint *)(control_val + 0xc) = *(uint *)(control_val + 0xc) & 0xffffff7f;\n        *(uint *)(control_val + 0xc) = *(uint *)(control_val + 0xc) & 0xffffffdf;\n        *(uint *)(control_val + 0xc) = *(uint *)(control_val + 0xc) & 0xfffffeff;\n        *(uint *)(control_val + 0x14) = *(uint *)(control_val + 0x14) & 0xfffffffe;\n        control_ptr[0x39] = 1;\n        result = 3;\n      }\n      else {\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004c8c"
            ],
            "imported": true,
            "current_name": "process_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "iVar3": "var_21",
                "uVar1": "var_20",
                "iVar4": "var_22",
                "iVar5": "var_15",
                "iVar6": "var_17",
                "param_1": "params",
                "uVar2": "var_18",
                "FUN_0800483c": "calculate_values_0800483c"
            },
            "code": "void calculate_values_0800483c(int *params)\n{\n  int user_input = params[0];\n  int var_1 = FUNC_08000adc(params[7], params[9]);\n  int var_2 = FUNC_08000ad8(var_1, params[12]);\n  params[10] = var_2;\n  if (user_input == 3) {\n    int var_3 = FUN_08001064(params[10], 0);\n    if (var_3 == 0) {\n      var_3 = FUN_08001028(params[10], DAT_08004974);\n    }\n    else {\n      var_3 = FUN_08001064(params[10], DAT_08004964);\n    }\n    if (var_3 != 0) {\n      int var_4 = params[10];\n      int var_5 = FUNC_08000cec(params[10], DAT_08004968);\n      int var_6 = FUN_08001064(params[10], 0);\n      int var_7 = params[10];\n      if (var_6 == 0) {\n        var_7 = var_7 + -0x80000000;\n      }\n      var_5 = FUNC_08000e54(var_5, var_7);\n      int var_8 = FUNC_08000ad8(var_4, var_5);\n      params[10] = var_8;\n    }\n  }\n  int var_9 = params[2];\n  int var_10 = params[3];\n  int var_11 = FUNC_08000cec(params[1], params[10]);\n  params[14] = var_11;\n  int var_12 = FUNC_08000adc(params[10], params[15]);\n  params[15] = var_12;\n  int var_13 = FUN_08001028(params[15], DAT_0800496c);\n  int var_14 = DAT_0800496c;\n  if ((var_13 == 0) && (var_13 = FUN_08001064(params[15], DAT_08004970), var_14 = DAT_08004970, var_13 == 0)) {\n    var_14 = params[15];\n  }\n  params[15] = var_14;\n  int var_15 = FUNC_08000ad8(params[12], params[13]);\n  params[16] = var_15;\n  int var_16 = params[14];\n  int var_17 = FUNC_08000cec(var_9, params[15]);\n  var_17 = FUNC_08000adc(var_17, var_16);\n  int var_18 = FUNC_08000cec(var_10, params[16]);\n  int var_19 = FUNC_08000ad8(var_17, var_18);\n  params[18] = var_19;\n  int var_20 = FUN_08000c44(params[19]);\n  int var_21 = FUN_08001028(params[18], DAT_0800496c);\n  int var_22 = DAT_0800496c;\n  if ((var_21 == 0) && (var_21 = FUN_08001064(params[18], DAT_08004970), var_22 = DAT_08004970, var_21 == 0)) {\n    var_22 = params[18];\n  }\n  var_22 = FUNC_08000cec(var_22, var_20);\n  params[18] = var_22;\n  params[13] = params[12];\n  params[11] = params[10];\n  params[21] = params[20];\n  return;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "calculate_values_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "iterate_over_pointers_and_call_function_08004c8c",
                "FUN_08000150": "get_index_of_pointer",
                "uVar1": "array_index",
                "puVar2": "current_pointer",
                "param_1": "pointer_array",
                "FUN_08004c18": "call_function_with_pointer"
            },
            "code": "void iterate_over_pointers_and_call_function_08004c8c(void *pointer_array)\n{\n  uint32_t array_index;\n  void **current_pointer;\n  current_pointer = pointer_array;\n  while( true ) {\n    array_index = get_index_of_pointer(current_pointer, pointer_array);\n    if (array_index == 0xFFFFFFFF) break;\n    call_function_with_pointer(*current_pointer);\n    current_pointer = current_pointer + 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004300",
                "FUN_08004cac",
                "FUN_08004490"
            ],
            "imported": true,
            "current_name": "iterate_over_pointers_and_call_function_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "iVar1": "start_time",
                "FUN_08001460": "check_values_and_modify_if_needed_08001460",
                "puVar4": "current_data",
                "param_1": "data_ptr",
                "param_2": "value1",
                "param_3": "value2",
                "uVar3": "check_value"
            },
            "code": "uint32_t check_values_and_modify_if_needed_08001460(uint32_t **data_ptr, uint32_t value1, uint32_t value2)\n{\n  int32_t start_time = get_start_time();\n  do {\n    uint32_t *current_data = *data_ptr;\n    uint32_t check_value = (value1 << 8) >> 0x18 == 1 ? current_data[5] : current_data[6];\n    if ((value1 & 0xffff & ~check_value) == 0) {\n      return 0;\n    }\n    if ((int32_t)(current_data[5] << 0x15) < 0) {\n      *current_data = *current_data | 0x200;\n      current_data[5] = current_data[5] & 0xfffffbff;\n      data_ptr[0xe] = (uint32_t *)0x4;\n      *(uint8_t *)((int32_t)data_ptr + 0x35) = 0x20;\n      *(uint8_t *)(data_ptr + 0xd) = 0;\n      return 1;\n    }\n  } while ((value2 == 0xffffffff) || ((value2 != 0 && (int32_t)(get_start_time() - start_time) <= value2)));\n  *(uint8_t *)((int32_t)data_ptr + 0x35) = 0x20;\n  *(uint8_t *)(data_ptr + 0xd) = 0;\n  return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": true,
            "current_name": "check_values_and_modify_if_needed_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_end_of_string_08001064",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_08001064(void)\n{\n  char current_char;\n  FUN_08000ffc();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "is_end_of_string_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_value_at_offset_08003fd0",
                "param_1": "value",
                "PTR_DAT_08003fd8": "base_address"
            },
            "code": "void set_value_at_offset_08003fd0(int* PTR_DAT_08003fd8, int offset, int value) {\n  *(int*)(*PTR_DAT_08003fd8 + offset) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_value_at_offset_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "bVar4": "temp10",
                "uVar1": "temp5",
                "FUN_08000892": "calculate_08000892",
                "param_1": "a",
                "LAB_080006c8": "label2",
                "unaff_r4": "temp6",
                "param_2": "b",
                "param_3": "c",
                "param_4": "d",
                "uVar3": "temp8",
                "uVar2": "temp7",
                "in_r12": "temp9",
                "LAB_08000704": "label1",
                "bit_mask": "bit_mask"
            },
            "code": "ulonglong calculate_08000892(uint a, uint b, uint c, uint d)\n{\n  uint bit_mask = 0x100000;\n  uint temp1 = a;\n  uint temp2 = b;\n  uint temp3 = c;\n  uint temp4 = d;\n  bool is_unaff_r4_equal_in_r12 = temp1 == temp3;\n  bool is_in_r12_equal_param_4_shifted = (temp4 >> 0x14) == temp3;\n  \n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  bool is_bVar4;\n  \n  uVar2 = temp4 >> 0x14 & temp3;\n  uVar3 = temp2;\n  if (!is_unaff_r4_equal_in_r12 || !is_in_r12_equal_param_4_shifted) {\n    if (is_unaff_r4_equal_in_r12) {\n      if ((a | b << 0xc) == 0) {\n        temp1 = c;\n        uVar3 = d;\n        if (!is_in_r12_equal_param_4_shifted) {\n          return (ulonglong)((b ^ d) & 0x80000000 | 0x7ff00000) << 0x20;\n        }\n      }\n    }\n    else if (is_in_r12_equal_param_4_shifted) {\n      temp1 = c;\n      uVar3 = d;\n      if ((c | d << 0xc) == 0) {\n        return (ulonglong)((b ^ d) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_bVar4 = (a | b << 1) == 0 || (c | d << 1) == 0;\n      if (!is_bVar4) {\n        if (temp1 == 0) {\n          uVar3 = b & 0x80000000;\n          do {\n            uVar1 = a & 0x80000000;\n            a = a << 1;\n            b = b * 2 + (uint)(uVar1 != 0);\n          } while ((b & bit_mask) == 0);\n          b = b | uVar3;\n          if (uVar2 != 0) {\n            return CONCAT44(b,a);\n          }\n        }\n        do {\n          uVar3 = c & 0x80000000;\n          c = c << 1;\n          d = d * 2 + (uint)(uVar3 != 0);\n        } while ((d & bit_mask) == 0);\n        return CONCAT44(b,a);\n      }\n      if ((a | b << 1) != 0) {\n        return (ulonglong)((b ^ d) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((c | d << 1) != 0) {\n        return (ulonglong)((b ^ d) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(uVar3,temp1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": true,
            "current_name": "calculate_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "copy_and_convert_data_08004458",
                "puVar3": "dst_ptr",
                "puVar4": "dst_last_ptr",
                "puVar5": "dst_end_ptr",
                "puVar1": "src_ptr",
                "uVar2": "tmp1",
                "local_30": "tmp2",
                "local_24": "tmp3"
            },
            "code": "void copy_and_convert_data_08004458(void)\n{\n  undefined4 *src_ptr;\n  undefined4 tmp1;\n  undefined4 *dst_ptr;\n  undefined4 *dst_end_ptr;\n  undefined4 *dst_last_ptr;\n  undefined4 dst_last_val;\n  undefined2 *dst_short_ptr;\n  undefined4 tmp2[3];\n  undefined2 tmp3[10];\n  \n  src_ptr = tmp2;\n  dst_end_ptr = (undefined4 *)PTR_DAT_0800448c + 6;\n  do {\n    dst_last_ptr = dst_ptr;\n    dst_ptr = src_ptr;\n    tmp1 = dst_last_ptr[1];\n    src_ptr = dst_last_ptr + 2;\n    *dst_ptr = *dst_last_ptr;\n    dst_ptr[1] = tmp1;\n    src_ptr += 2;\n  } while (src_ptr != dst_end_ptr);\n  dst_ptr[2] = *src_ptr;\n  dst_short_ptr = (undefined2 *)(dst_ptr + 3);\n  *dst_short_ptr = *(undefined2 *)(dst_last_ptr + 3);\n  memset(tmp2, 0, 0x1e);\n  FUN_08004300(0x70, tmp2, 0x1e);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "copy_and_convert_data_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_08004490",
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "imported": true,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "DAT_08000144": "global_variable",
                "FUN_08000134": "concatenate_08000134",
                "param_1": "low_order_bits",
                "PTR_DAT_08000148": "data_pointer",
                "param_2": "high_order_bits",
                "PTR_FUN_0800014c": "function_pointer"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_08000134(uint64_t param_1, uint64_t param_2)\n{\n  if (DAT_08000144 != 0) {\n    param_1 = PTR_FUN_0800014c;\n    param_2 = PTR_DAT_08000148;\n  }\n  return ((uint64_t)param_2 << 32) | param_1;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": true,
            "current_name": "concatenate_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_to_64bit_08003eb0",
                "param_1": "value"
            },
            "code": "longlong convert_to_64bit_08003eb0(uint32_t value) {\n  if (*(int *)PTR_DAT_08003ec4 == 0) {\n    software_interrupt(0x3f);\n    return CONCAT44(value, 1);\n  }\n  return (ulonglong)value << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "convert_to_64bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = FUN_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = FUN_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_08000724",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080009f0",
                "FUN_0800016c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": true,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "iVar1": "command_result",
                "FUN_08001050": "execute_command",
                "PTR_DAT_08002f18": "PTR_DAT_command_argument",
                "FUNC_08000adc": "execute_valid_command",
                "FUN_08002ee8": "check_and_execute_command_08002ee8",
                "DAT_08002f1c": "DAT_command_valid",
                "FUN_08001028": "validate_command",
                "DAT_08002f20": "DAT_command_argument",
                "uVar2": "command_argument",
                "DAT_08002f24": "DAT_command_invalid",
                "FUNC_08000ad8": "execute_invalid_command"
            },
            "code": "void check_and_execute_command_08002ee8(void)\n{\n  int command_result;\n  undefined4 command_argument;\n  \n  command_argument = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  command_result = execute_command(command_argument,DAT_08002f1c);\n  if ((command_result != 0) && (command_result = validate_command(command_argument,DAT_08002f20), command_result != 0)) {\n    execute_valid_command(command_argument,DAT_08002f20);\n    return;\n  }\n  execute_invalid_command(command_argument,DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "check_and_execute_command_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001194": "printMessage",
                "uVar1": "milliseconds",
                "FUN_08002214": "getMillis",
                "param_1": "input",
                "FUN_08001104": "convertMillisToSecondsAndPrint_08001104",
                "FUN_08001214": "printSeconds"
            },
            "code": "int convertMillisToSecondsAndPrint_08001104(uint32_t input){\n  uint32_t milliseconds = getMillis();\n  uint32_t seconds = milliseconds / 1000;\n  printMessage(0xffffffff,input,0);\n  return 0;\n}",
            "called": [
                "FUN_08001214",
                "FUN_08002214",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_08001128",
                "FUN_0800209c"
            ],
            "imported": true,
            "current_name": "convertMillisToSecondsAndPrint_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "PTR_DAT_08001164": "pointer_to_value",
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c"
            },
            "code": "int get_value_from_pointer_thunk_0800115c() {\n  int *PTR_DAT_08001164 = PTR_DAT_08001164;\n  return *PTR_DAT_08001164;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = FUN_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080009f0",
                "FUN_0800016c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": true,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "param_1": "param",
                "puVar1": "global_ptr",
                "FUN_080072b8": "add_param_to_global_080072b8"
            },
            "code": "void add_param_to_global_080072b8(int param){\n  undefined *global_ptr = PTR_DAT_080072cc;\n  if (*(int *)global_ptr == 0) {\n    *(undefined **)global_ptr = PTR_DAT_080072d0;\n  }\n  *(int *)global_ptr = param + *(int *)global_ptr;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": true,
            "current_name": "add_param_to_global_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "iVar2": "result",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "pointer",
                "FUN_0800581c": "initialize_param1_0800581c"
            },
            "code": "void initialize_param1_0800581c(int *output, undefined4 input) {\n  undefined *pointer = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  int result = calculate_input(input);\n  if ((result == -1) && (*(int *)pointer != 0)) {\n    *output = *(int *)pointer;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": true,
            "current_name": "initialize_param1_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "DAT_08004d80": "magic_number",
                "FUN_08001264": "send_data",
                "DAT_08004d84": "data_address",
                "param_1": "data_ptr",
                "local_18": "local_var1",
                "param_2": "data_size",
                "DAT_08004d88": "flag_address",
                "local_14": "local_var2",
                "FUN_08004d48": "send_data_if_match_08004d48"
            },
            "code": "void send_data_if_match_08004d48(int *data_ptr, unsigned int data_size){\n    unsigned int DAT_08004d80 = 0x08004d80;\n    unsigned int DAT_08004d88 = 0x08004d88;\n    unsigned int flag_bitmask = 0x200000;\n    if (*data_ptr == DAT_08004d80) {\n        unsigned int local_var1 = 0xc0;\n        unsigned int local_var2 = 0x12;\n        send_data(DAT_08004d84, &local_var1, *data_ptr, 3, data_ptr, data_size);\n        *(unsigned int *)(DAT_08004d88 + 0x1c) = *(unsigned int *)(DAT_08004d88 + 0x1c) | flag_bitmask;\n    }\n    return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": true,
            "current_name": "send_data_if_match_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_first_pointer_value_080072ac",
                "PTR_PTR_DAT_080072b4": "pointer_to_pointer_array"
            },
            "code": "get_first_pointer_value_080072ac() {\n  return *(undefined4 *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08005900"
            ],
            "imported": true,
            "current_name": "get_first_pointer_value_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_flags_and_registers_08002280",
                "uVar1": "flags_2",
                "param_1": "base_address",
                "param_2": "values",
                "uVar3": "register_2",
                "uVar2": "register_1"
            },
            "code": "void update_flags_and_registers_08002280(int base_address, uint *values) {\n  uint flags_1 = *(uint *)(base_address + 0x20);\n  uint register_1 = *(uint *)(base_address + 4);\n  uint flags_2 = *(uint *)(base_address + 0x20) & 0xfffffffd | values[2];\n  uint register_2 = *(uint *)(base_address + 0x18) & 0xffffff8c | values[0];\n  uint register_3 = register_1 & 0xfffffcff | values[5] | values[6];\n\n  if (base_address == DAT_080022cc) {\n    flags_2 = (flags_2 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    register_3 = register_3 | values[4];\n  }\n\n  *(uint *)(base_address + 0x20) = flags_2;\n  *(uint *)(base_address + 0x18) = register_2;\n  *(uint *)(base_address + 0x34) = values[1];\n  *(uint *)(base_address + 4) = register_3;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_flags_and_registers_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "write_to_memory_08001194",
                "uVar1": "masked_value",
                "param_1": "address",
                "param_2": "value",
                "param_3": "mask",
                "uVar3": "shift_amount",
                "uVar2": "num_bits_to_set",
                "uVar4": "num_bits_to_keep"
            },
            "code": "void write_to_memory_08001194(uint address, uint value, uint mask) {\n  uint shift_amount = (*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  uint num_bits_to_set = 7 - shift_amount;\n  uint num_bits_to_keep = shift_amount + 4;\n  if (num_bits_to_set > 3) {\n    num_bits_to_set = 4;\n  }\n  if (num_bits_to_keep < 7) {\n    shift_amount = 0;\n  }\n  num_bits_to_set = (1 << (num_bits_to_set & 0xff)) - 1;\n  if (num_bits_to_keep > 6) {\n    shift_amount -= 3;\n  }\n  uint masked_value = (value & (1 << (shift_amount & 0xff)) - 1U | (mask & num_bits_to_set) << (shift_amount & 0xff)) << 4;\n  if (address >= 0) {\n    address += 0xe000e100;\n  }\n  else {\n    address &= 0xf;\n    mask = DAT_080011f8;\n  }\n  if (address >= 0) {\n    *(undefined *)(address + 0x300) = (undefined)masked_value;\n  }\n  else {\n    *(undefined *)(mask + address) = (undefined)masked_value;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004514",
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08004e7c"
            ],
            "imported": true,
            "current_name": "write_to_memory_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "local_c": "read_command",
                "FUN_08002cb0": "read_mpu9250_data_08002cb0",
                "param_1": "accelerometer_data",
                "PTR_s____Src_MPU9250_c_08002d80": "MPU9250_ADDRESS",
                "param_2": "gyro_data",
                "param_3": "magnetometer_data",
                "param_4": "temperature_data",
                "puVar1": "ptr_buffer",
                "PTR_DAT_08002d84": "temperature_buffer",
                "uVar2": "temperature_raw_data"
            },
            "code": "void read_mpu9250_data_08002cb0(int16_t* accelerometer_data, int16_t* gyro_data, int16_t* magnetometer_data, uint8_t* temperature_data)\n{\n  uint8_t buffer[21];\n  uint8_t* ptr_buffer = buffer;\n  uint8_t PTR_DAT_08002d84[2];\n  uint8_t* ptr_PTR_DAT_08002d84 = PTR_DAT_08002d84;\n  uint8_t read_command = 0x80 | 0x3B;\n  int16_t temperature_raw_data;\n  int i;\n  i2c_write(PTR_s____Src_MPU9250_c_08002d80, &read_command, 1);\n  i2c_read(PTR_s____Src_MPU9250_c_08002d80, buffer, 21);\n  for(i = 0; i < 3; i++)\n  {\n    accelerometer_data[i] = (int16_t)(ptr_buffer[0] << 8 | ptr_buffer[1]);\n    gyro_data[i] = (int16_t)(ptr_buffer[8] << 8 | ptr_buffer[9]);\n    magnetometer_data[i] = (int16_t)(ptr_buffer[15] << 8 | ptr_buffer[14]);\n    ptr_buffer += 2;\n  }\n  temperature_raw_data = (int16_t)(ptr_buffer[0] << 8 | ptr_buffer[1]);\n  *temperature_data = (uint8_t)((temperature_raw_data / 333.87f) + 21.0f);\n}",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44",
                "FUN_08000adc",
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "read_mpu9250_data_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "PTR_DAT_08004380": "instruction_pointer",
                "local_c": "offset",
                "FUN_08004348": "create_and_call_function_08004348",
                "uStack_8": "stack_param",
                "param_1": "param_1",
                "param_2": "flags",
                "param_3": "param_3",
                "puVar1": "instruction_pointer",
                "local_10": "function_address"
            },
            "code": "void create_and_call_function_08004348(undefined4 param_1, uint32_t flags, undefined4 param_3)\n{\n  uint8_t *PTR_DAT_08004380;\n  uint32_t function_address;\n  uint16_t offset;\n  uint32_t zero = 0;\n  uint32_t stack_param = param_3;\n  PTR_DAT_08004380 = PTR_DAT_08004380;\n  *PTR_DAT_08004380 = 0xe9;\n  PTR_DAT_08004380[1] = 3;\n  PTR_DAT_08004380[2] = 0;\n  PTR_DAT_08004380[3] = 4;\n  offset = *(uint16_t *)(PTR_DAT_08004380 + 4);\n  function_address = offset | (flags & 0xff000000);\n  PTR_DAT_08004380[4] = 0;\n  PTR_DAT_08004380[5] = 0;\n  PTR_DAT_08004380[6] = 0;\n  call_function(function_address, &zero, 7);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "create_and_call_function_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "iVar2": "array_value_1",
                "iVar3": "array_value_3",
                "uVar1": "data_word",
                "iVar4": "constant_value",
                "FUN_08002324": "update_data_structure_08002324",
                "param_1": "data_structure_address",
                "param_2": "data_array",
                "DAT_08002364": "constant_value"
            },
            "code": "void update_data_structure_08002324(int data_structure_address, int *data_array) {\n  uint flags = *(uint *)(data_structure_address + 0x20) & 0xffffefff;\n  uint data_word = *(uint *)(data_structure_address + 4);\n  int array_value_1 = *data_array;\n  int array_value_3 = data_array[2];\n  int DAT_08002364 = DAT_08002364;\n  if (data_structure_address == DAT_08002364) {\n    DAT_08002364 = data_array[5];\n    data_word &= 0xffffbfff;\n  }\n  if (data_structure_address == DAT_08002364) {\n    data_word |= DAT_08002364 << 6;\n  }\n  *(uint *)(data_structure_address + 4) = data_word;\n  *(uint *)(data_structure_address + 0x1c) = (*(uint *)(data_structure_address + 0x1c) & 0xffff8cff) | (array_value_1 << 8);\n  *(int *)(data_structure_address + 0x40) = data_array[1];\n  *(uint *)(data_structure_address + 0x20) = (*(uint *)(data_structure_address + 0x20) & 0xffffdfff) | (array_value_3 << 0xc);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_data_structure_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "uVar1": "shift_amount",
                "FUN_08001078": "convert_param_to_int_08001078",
                "param_1": "param",
                "uVar2": "diff",
                "shifted_param": "converted_param"
            },
            "code": "int32_t convert_param_to_int_08001078(int32_t param) {\n  if (param << 1 < 0x7f000000) {\n    return 0;\n  }\n  int32_t shift_amount = (param << 1) >> 0x18;\n  int32_t diff = 0x9e - shift_amount;\n  if (shift_amount < 0x9f && diff != 0) {\n    int32_t shifted_param = (param << 8 | 0x80000000) >> (diff & 0xff);\n    if ((param & 0x80000000) != 0) {\n      shifted_param = -shifted_param;\n    }\n    return shifted_param;\n  }\n  if ((diff == 0xffffff9f) && ((param & 0x7fffff) != 0)) {\n    return 0;\n  }\n  param = param & 0x80000000;\n  if (param == 0) {\n    param = 0x7fffffff;\n  }\n  return param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_08002f28",
                "FUN_0800411c",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "convert_param_to_int_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "uVar1": "result",
                "(char *)(param_1 + 0xe)": "(char *)(flag + 0xe)",
                "FUN_08002564": "set_flag_and_compute_sum_08002564",
                "param_1": "flag",
                "*(undefined *)((int)param_1 + 0x39)": "*(int *)((int)flag + 0x39)",
                "(undefined *)((int)param_1 + 0x39)": "(int *)((int)flag + 0x39)",
                "param_2": "values",
                "(uint *)(*param_1 + 0x44)": "(uint *)(*flag + 0x44)",
                "*(undefined *)(param_1 + 0xe)": "*(char *)(flag + 0xe)"
            },
            "code": "int set_flag_and_compute_sum_08002564(int *flag, uint *values)\n{\n  int result;\n  result = 2;\n  if (*(char *)(flag + 0xe) != '\\x01') {\n    *(int *)((int)flag + 0x39) = 2;\n    uint sum = 0;\n    for (int i = 0; i < 7; i++) {\n        sum |= values[i];\n    }\n    *(uint *)(*flag + 0x44) = sum;\n    *(int *)((int)flag + 0x39) = 1;\n    result = 0;\n    *(char *)(flag + 0xe) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_flag_and_compute_sum_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "DAT_08001824": "PTR_DAT_08001824",
                "uVar1": "device_config_value1",
                "puVar3": "device_config_ptr1",
                "puVar4": "device_config_ptr2",
                "param_1": "device_config",
                "puVar5": "device_config_ptr3",
                "FUN_08001754": "configure_device_08001754",
                "DAT_08001820": "PTR_DAT_08001820",
                "uVar2": "device_config_value2",
                "uVar7": "device_config_value4",
                "uVar6": "device_config_value3",
                "FUN_08004d48": "perform_operation"
            },
            "code": "int configure_device_08001754(uint **device_config)\n{\n  uint device_config_value1;\n  uint device_config_value2;\n  uint *device_config_ptr1;\n  uint *device_config_ptr2;\n  uint *device_config_ptr3;\n  uint device_config_value3;\n  undefined8 device_config_value4;\n  \n  if (device_config == NULL) {\n    return 1;\n  }\n  if (*(char *)((int)device_config + 0x35) == '\\0') {\n    *(undefined *)(device_config + 0xd) = 0;\n    perform_operation();\n  }\n  *(undefined *)((int)device_config + 0x35) = 0x24;\n  device_config_ptr1 = DAT_08001820;\n  **device_config = **device_config & 0xfffffffe;\n  device_config_value4 = get_device_config_value();\n  device_config_value2 = (uint)((ulonglong)device_config_value4 >> 0x20);\n  device_config_value1 = (uint)device_config_value4;\n  device_config_ptr3 = device_config[1];\n  device_config_value3 = device_config_value1 / DAT_08001824;\n  if (device_config_ptr1 < device_config_ptr3) {\n    device_config_value2 = 300;\n  }\n  device_config_ptr2 = *device_config;\n  if (device_config_ptr1 < device_config_ptr3) {\n    device_config_value2 = device_config_value3 * device_config_value2;\n  }\n  device_config_ptr2[1] = device_config_value3;\n  if (device_config_ptr1 < device_config_ptr3) {\n    device_config_value3 = device_config_value2 / 1000;\n  }\n  device_config_ptr2[8] = device_config_value3 + 1;\n  if (device_config_ptr1 < device_config_ptr3) {\n    if (device_config[2] == NULL) {\n      device_config_value1 = device_config_value1 / (uint)((int)device_config_ptr3 * 3) | 0x8000;\n    }\n    else {\n      device_config_value1 = device_config_value1 / (uint)((int)device_config_ptr3 * 0x19) | 0xc000;\n    }\n    if ((device_config_value1 & 0xfff) == 0) {\n      device_config_value1 = 1;\n    }\n  }\n  else {\n    device_config_value1 = device_config_value1 / (uint)((int)device_config_ptr3 << 1);\n    if ((device_config_value1 & 0xfff) < 4) {\n      device_config_value1 = 4;\n    }\n  }\n  device_config_ptr1 = device_config[8];\n  device_config_ptr3 = device_config[7];\n  device_config_ptr2[7] = device_config_value1;\n  *device_config_ptr2 = (uint)device_config_ptr3 | (uint)device_config_ptr1;\n  device_config_ptr2[2] = (uint)device_config[4] | (uint)device_config[3];\n  device_config_ptr2[3] = (uint)device_config[5] | (uint)device_config[6];\n  *device_config_ptr2 = *device_config_ptr2 | 1;\n  device_config[0xe] = NULL;\n  *(undefined *)((int)device_config + 0x35) = 0x20;\n  *(undefined *)((int)device_config + 0x36) = 0;\n  return 0;\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "configure_device_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_08002ec0",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "param_1": "buffer_ptr",
                "FUN_08003ec8": "increment_and_store_char_in_buffer_08003ec8",
                "*(short *)(param_1 + 0x804)": "*buffer_index_ptr",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(char*)(buffer_ptr + (uint)*buffer_position_ptr)",
                "param_2": "character",
                "*(ushort *)(param_1 + 0x802)": "*buffer_position_ptr"
            },
            "code": "int increment_and_store_char_in_buffer_08003ec8(int buffer_ptr, char character) {\n  short* buffer_index_ptr = (short*)(buffer_ptr + 0x804);\n  *buffer_index_ptr = *buffer_index_ptr + 1;\n  ushort* buffer_position_ptr = (ushort*)(buffer_ptr + 0x802);\n  *(char*)(buffer_ptr + (uint)*buffer_position_ptr) = character;\n  *buffer_position_ptr = (*buffer_position_ptr + 1U) & 0x7ff;\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": true,
            "current_name": "increment_and_store_char_in_buffer_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "iVar1": "ptr_iVar",
                "FUN_08004e7c": "call_function",
                "param_1": "ptr_param",
                "FUN_08002724": "initialize_08002724",
                "FUN_080025e8": "initialize_subfunction"
            },
            "code": "int initialize_08002724(int *ptr_param){\n  int ptr_iVar;\n  if (ptr_param != NULL){\n    if (*(char *)((int)ptr_param + 0x39) == '\\0'){\n      *(undefined *)(ptr_param + 0xe) = 0;\n      call_function();\n    }\n    *(undefined *)((int)ptr_param + 0x39) = 2;\n    *(uint *)(*ptr_param + 0xc) = *(uint *)(*ptr_param + 0xc) & 0xffffdfff;\n    initialize_08002724_subfunction(ptr_param);\n    ptr_iVar = *ptr_param;\n    *(uint *)(ptr_iVar + 0x10) = *(uint *)(ptr_iVar + 0x10) & 0xffffb7ff;\n    *(uint *)(ptr_iVar + 0x14) = *(uint *)(ptr_iVar + 0x14) & 0xffffffd5;\n    *(uint *)(ptr_iVar + 0xc) = *(uint *)(ptr_iVar + 0xc) | 0x2000;\n    ptr_param[0xf] = 0;\n    *(undefined *)((int)ptr_param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_080025e8",
                "FUN_08004e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "initialize_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "PTR_DAT_08003ff0": "ptr_to_dat_08003ff0",
                "param_1": "new_value",
                "FUN_08003fe8": "set_value_at_offset_08003fe8"
            },
            "code": "void set_value_at_offset_08003fe8(int new_value){\n    int* ptr_to_offset = *(int*)PTR_DAT_08003ff0 + 0x3c;\n    *ptr_to_offset = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_value_at_offset_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "iVar4": "block_size_diff",
                "puVar3": "prev_block_ptr",
                "puVar5": "current_block_ptr",
                "puVar7": "prev_block_ptr",
                "FUN_08005714": "allocate_memory_block_08005714",
                "*param_1": "*out_block_start",
                "param_2": "block_size",
                "puVar1": "ptr",
                "uVar2": "result",
                "uVar6": "block_size_diff",
                "uVar8": "aligned_block_size"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *out_block_start, uint block_size)\n{\n  uint aligned_block_size = (block_size + 3 & 0xfffffffc) + 8;\n  if (aligned_block_size < 0xc) {\n    aligned_block_size = 0xc;\n  }\n  if (((int)aligned_block_size < 0) || (aligned_block_size < block_size)) {\n    *out_block_start = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    uint *prev_block_ptr = *(uint **)PTR_DAT_080057c8;\n    uint *current_block_ptr = *(uint **)PTR_DAT_080057c8;\n    while (current_block_ptr != (uint *)0x0) {\n      uint block_size_diff = *current_block_ptr - aligned_block_size;\n      if (-1 < (int)block_size_diff) {\n        if (block_size_diff < 0xc) {\n          if (prev_block_ptr == current_block_ptr) {\n            uint next_block_ptr = prev_block_ptr[1];\n            *(uint *)PTR_DAT_080057c8 = next_block_ptr;\n          }\n          else {\n            uint next_block_ptr = current_block_ptr[1];\n          }\n          if (prev_block_ptr != current_block_ptr) {\n            prev_block_ptr[1] = next_block_ptr;\n            prev_block_ptr = current_block_ptr;\n          }\n        }\n        else {\n          *current_block_ptr = block_size_diff;\n          *(uint *)((int)current_block_ptr + block_size_diff) = aligned_block_size;\n          prev_block_ptr = (uint *)((int)current_block_ptr + block_size_diff);\n        }\n        goto LAB_08005778;\n      }\n      prev_block_ptr = current_block_ptr;\n      current_block_ptr = (uint *)current_block_ptr[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint new_block_ptr = FUN_0800581c(out_block_start);\n      *(uint *)PTR_DAT_080057cc = new_block_ptr;\n    }\n    current_block_ptr = (uint *)FUN_0800581c(out_block_start, aligned_block_size);\n    if ((current_block_ptr != (uint *)0xffffffff) &&\n       ((prev_block_ptr = (uint *)((int)current_block_ptr + 3U & 0xfffffffc), current_block_ptr == prev_block_ptr ||\n        (int block_size_diff = FUN_0800581c(out_block_start,(int)prev_block_ptr - (int)current_block_ptr), block_size_diff != -1)))) {\n      *prev_block_ptr = aligned_block_size;\nLAB_08005778:\n      do_nothing_0800583e(out_block_start);\n      uint aligned_block_end = (int)prev_block_ptr + 0xbU & 0xfffffff8;\n      int block_size_diff = aligned_block_end - (int)(prev_block_ptr + 1);\n      if (block_size_diff != 0) {\n        *(int *)((int)prev_block_ptr + block_size_diff) = -block_size_diff;\n        return aligned_block_end;\n      }\n      return aligned_block_end;\n    }\n    *out_block_start = 0xc;\n    do_nothing_0800583e(out_block_start);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800581c",
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "imported": true,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "iVar2": "function_ptrs_count",
                "iVar3": "i",
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_ptrs_start"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  undefined *function_ptrs_start = PTR_DAT_08004fec;\n  int function_ptrs_count = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i < function_ptrs_count >> 2; i++) {\n    (**(code **)(function_ptrs_start + i * 4))();\n  }\n  do_nothing_080072d4();\n  function_ptrs_start = PTR_DAT_08004ff4;\n  function_ptrs_count = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i < function_ptrs_count >> 2; i++) {\n    (**(code **)(function_ptrs_start + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "param_1": "data_address",
                "uStack_c": "command_size",
                "FUN_080043f0": "execute_command_with_data_080043f0",
                "param_2": "data_size",
                "param_3": "command_type",
                "local_10": "command_address",
                "auStack_8": "data"
            },
            "code": "void execute_command_with_data_080043f0(uint32_t data_address, uint32_t data_size, uint32_t command_type) {\n  uint32_t command_address = *(uint32_t *)PTR_DAT_0800440c;\n  uint32_t command_size = *(uint32_t *)(PTR_DAT_0800440c + 4);\n  uint32_t data[2] = {data_address, data_size};\n  execute_command(command_type, &command_address, command_size, data);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "execute_command_with_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "bVar10": "isNegative",
                "uVar1": "temp1",
                "param_1": "input1",
                "FUN_08000428": "compute_hash_08000428",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "temp3",
                "uVar2": "temp2",
                "bVar9": "isFF",
                "uVar5": "temp5",
                "uVar4": "temp4",
                "uVar7": "temp7",
                "uVar6": "temp6",
                "in_r12": "temp8",
                "bVar8": "isZero"
            },
            "code": "ulonglong compute_hash_08000428(uint input1, undefined4 input2, undefined4 input3, uint input4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int temp6;\n  uint temp7;\n  uint temp8;\n  bool isZero;\n  bool isFF;\n  bool isNegative;\n  \n  temp5 = input1 << 1;\n  isZero = temp5 == 0;\n  temp1 = (uint)((input1 & 0x80000000) != 0) << 0x1f;\n  temp4 = (uint)((int)temp5 >> 3) >> 1;\n  temp3 = temp1 | temp4;\n  input1 = input1 << 0x1d;\n  if (!isZero) {\n    temp8 = temp5 & 0xff000000;\n    isZero = temp8 == 0;\n  }\n  if (!isZero) {\n    isFF = temp8 == 0xff000000;\n  }\n  if (!isZero && !isFF) {\n    return CONCAT44(temp3,input1) ^ 0x3800000000000000;\n  }\n  if (temp5 == 0 || isFF) {\n    return CONCAT44(temp3,input1);\n  }\n  temp2 = input1;\n  temp5 = temp4;\n  if (temp4 == 0) {\n    temp2 = 0;\n    temp5 = input1;\n  }\n  temp6 = count_leading_zeroes(temp5);\n  if (temp4 == 0) {\n    temp6 = temp6 + 0x20;\n  }\n  temp7 = temp6 - 0xb;\n  isNegative = temp7 < 0;\n  isZero = temp7 == 0;\n  if (!isNegative) {\n    isNegative = SBORROW4(temp7,0x20);\n    temp6 = temp6 + -0x1f;\n    isZero = temp6 < 0;\n    isFF = temp6 == 0;\n    temp4 = temp7;\n    if (!isFF && isZero == isNegative) {\n      temp2 = temp5 << (temp7 & 0xff);\n      temp5 = temp5 >> (0xcU - temp6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isFF || isZero != isNegative) {\n    temp8 = 0x20 - temp4;\n  }\n  temp5 = temp5 << (temp4 & 0xff);\n  if (isFF || isZero != isNegative) {\n    temp5 = temp5 | temp2 >> (temp8 & 0xff);\n  }\n  if (isFF || isZero != isNegative) {\n    temp2 = temp2 << (temp4 & 0xff);\n  }\nLAB_080002f0:\n  if (temp7 < 0x381) {\n    return CONCAT44(temp5 + (0x380 - temp7) * 0x100000 | temp1,temp2);\n  }\n  temp4 = ~(0x380 - temp7);\n  if ((int)temp4 < 0x1f) {\n    temp6 = temp4 - 0x13;\n    if (temp6 != 0 && temp6 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp3,temp2 >> (0x20 - (0xcU - temp6) & 0xff) | temp5 << (0xcU - temp6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(temp1 | temp5 >> (temp4 & 0xff),\n                    temp2 >> (temp4 & 0xff) | temp5 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp3,temp5 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "compute_hash_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "iVar1": "data_address",
                "param_1": "flag1",
                "FUN_08004ccc": "update_flags_and_call_functions_08004ccc",
                "param_2": "flag2",
                "param_3": "flag3",
                "uVar3": "flag4",
                "uVar2": "current_flags"
            },
            "code": "void update_flags_and_call_functions_08004ccc(int flag1, int flag2, int flag3)\n{\n  int data_address = DAT_08004d44;\n  uint current_flags = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  *(uint *)(DAT_08004d44 + 0x18) = current_flags;\n  uint flag4 = *(uint *)(data_address + 0x18) & 1;\n  FUN_08001170(3, flag2, current_flags, flag4, flag1, flag4, flag3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": true,
            "current_name": "update_flags_and_call_functions_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "bVar4": "is_zero",
                "uVar1": "result",
                "param_1": "exponent_bits",
                "param_2": "mantissa_bits",
                "FUN_08000a30": "calculate_floating_point_08000a30",
                "uVar3": "normalized_mantissa_bits",
                "SCARRY4": "SCARRY4",
                "uVar2": "double_mantissa_bits",
                "bVar5": "is_normal",
                "in_r12": "denormalized_mantissa_bits"
            },
            "code": "uint calculate_floating_point_08000a30(uint exponent_bits, uint mantissa_bits)\n{\n  uint double_mantissa_bits = mantissa_bits * 2;\n  bool is_normal = double_mantissa_bits < 0x70000000;\n  uint normalized_mantissa_bits = double_mantissa_bits + 0x90000000;\n  uint result = normalized_mantissa_bits;\n  if (!is_normal) {\n    uint denormalized_mantissa_bits = double_mantissa_bits + 0x8fe00000;\n    result = denormalized_mantissa_bits;\n  }\n  bool is_zero = result == 0;\n  if (!is_normal && normalized_mantissa_bits >= 0x200000) {\n    is_zero = denormalized_mantissa_bits == 0x1fc00000;\n  }\n  if (((is_normal || normalized_mantissa_bits < 0x200000) || 0x1fc00000 < denormalized_mantissa_bits) || is_zero) {\n    if ((mantissa_bits & 0x40000000) != 0) {\n      if (((int)double_mantissa_bits >> 0x15 == -1) && ((exponent_bits | mantissa_bits << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return mantissa_bits & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(double_mantissa_bits + 0x92e00000) < 0 != SCARRY4(normalized_mantissa_bits,0x2e00000)) {\n      return mantissa_bits & 0x80000000;\n    }\n    uint shift_amount = 0x18 - (double_mantissa_bits + 0x92e00000 >> 0x15);\n    uint shifted_exponent_bits = exponent_bits >> (shift_amount & 0xff);\n    if (exponent_bits << (0x20 - shift_amount & 0xff) != 0) {\n      shifted_exponent_bits = shifted_exponent_bits | 1;\n    }\n    uint shifted_mantissa_bits = mantissa_bits & 0x1fffff | 0x100000;\n    exponent_bits = shifted_exponent_bits | shifted_mantissa_bits << (0x20 - shift_amount & 0xff);\n    shifted_mantissa_bits = (shifted_mantissa_bits >> (shift_amount & 0xff)) << 1;\n  }\n  result = (mantissa_bits & 0x80000000 | exponent_bits >> 0x1d) + shifted_mantissa_bits * 4 + (uint)(0x7fffffff < exponent_bits * 8);\n  if (exponent_bits * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "calculate_floating_point_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_08004d8c": "initialize",
                "FUN_08002368": "process",
                "param_1": "data",
                "*(undefined *)((int)param_1 + 0x39)": "data[9]",
                "FUN_080023d0": "process_data_080023d0",
                "*(char *)((int)param_1 + 0x39)": "data[9]",
                "*(undefined *)(param_1 + 0xe)": "data[14]"
            },
            "code": "int process_data_080023d0(int *data)\n{\n  if (data != NULL) {\n    if (data[9] == 0) {\n      data[14] = 0;\n      initialize();\n    }\n    data[9] = 2;\n    process(data[0], &data[1]);\n    data[9] = 1;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "iVar5": "var1",
                "puVar2": "ptr2",
                "param_1": "input_array",
                "FUN_08004c30": "check_and_update_08004c30",
                "puVar1": "ptr1",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "code": "int * check_and_update_08004c30(int *input_array)\n{\n  undefined *ptr1;\n  undefined *ptr2;\n  undefined value1;\n  uint value2;\n  int var1;\n  ptr1 = PTR_DAT_08004c58;\n  if (*input_array != DAT_08004c54) {\n    return input_array;\n  }\n  FUN_08003ec8(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  ptr2 = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (ptr1 == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4 *)(ptr2 + 0x3c) = 0;\n      *(undefined2 *)(ptr2 + 0x2c) = 1;\n      *(undefined2 *)(ptr2 + 0x2e) = 1;\n      ptr2[0x38] = 0;\n      if (ptr2[0x39] == '\\x12') {\n        value1 = 0x32;\n      }\n      else {\n        value1 = 0x22;\n      }\n      var1 = *(int *)ptr2;\n      ptr2[0x39] = value1;\n      value2 = *(uint *)(var1 + 0xc);\n      *(undefined **)(ptr2 + 0x28) = ptr1;\n      *(uint *)(var1 + 0xc) = value2 | 0x100;\n      *(uint *)(var1 + 0x14) = *(uint *)(var1 + 0x14) | 1;\n      *(uint *)(var1 + 0xc) = *(uint *)(var1 + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": true,
            "current_name": "check_and_update_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08006c0c",
                "FUN_08005900",
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_08006228",
                "FUN_080071c0"
            ],
            "imported": true,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "param_1": "value",
                "FUN_08003fdc": "set_value_at_offset_of_first_pointer_08003fdc",
                "PTR_DAT_08003fe4": "PTR_DATA"
            },
            "code": "void set_value_at_offset_of_first_pointer_08003fdc(int value)\n{\n  int* first_pointer = *(int*)PTR_DAT_08003fe4;\n  int offset = 0x38;\n  *(int*)(first_pointer + offset) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "set_value_at_offset_of_first_pointer_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_08000980": "execute_function",
                "in_CY": "last_char",
                "FUN_080009f0": "is_string_terminated_080009f0"
            },
            "code": "bool is_string_terminated_080009f0(void)\\n{\\n  char last_char;\\n  execute_function();\\n  return last_char == \"\\0\";\\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006d68",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "is_string_terminated_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "DAT_08004f50": "PTR_DAT_08004f50",
                "puVar1": "data_ptr",
                "FUN_08004f10": "set_bit_and_clear_flags_08004f10",
                "DAT_08004f54": "PTR_DAT_08004f54"
            },
            "code": "void set_bit_and_clear_flags_08004f10(void)\n{\n  uint *data_ptr;\n  data_ptr = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  data_ptr[1] &= DAT_08004f54;\n  *data_ptr &= 0xfef6ffff;\n  *data_ptr &= 0xfffbffff;\n  data_ptr[1] &= 0xff80ffff;\n  data_ptr[2] = 0x9f0000;\n  *(undefined4 *)(PTR_DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "set_bit_and_clear_flags_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "allocate_memory_08005044",
                "LAB_0800508a": "allocation_failed",
                "iVar1": "result",
                "*(ushort *)(param_2 + 3)": "flags",
                "FUN_08005630": "copy_memory",
                "iVar4": "diff",
                "*(uint16_t *)(parameters + 3)": "flags",
                "param_1": "memory",
                "FUN_08005714": "allocate_memory_with_flags",
                "param_2": "parameters",
                "param_3": "size",
                "FUN_080057d0": "allocate_memory_with_size",
                "param_4": "offset",
                "FUN_0800567c": "free_memory",
                "uVar3": "new_size",
                "uVar2": "max_size"
            },
            "code": "int allocate_memory_08005044(uint32_t *memory, int *parameters, uint32_t size, uint32_t offset)\n{\n  int diff;\n  uint32_t max_size, new_size;\n  uint16_t flags;\n  int result;\n  \n  max_size = parameters[2];\n  flags = *(uint16_t *)(parameters + 3);\n  if ((max_size >= size + offset) && ((flags & 0x480) != 0)) {\n    diff = *parameters - parameters[4];\n    new_size = (uint32_t)(parameters[5] * 3) / 2 + size + offset;\n    if (new_size > max_size) {\n      max_size = new_size;\n    }\n    if ((int)((uint32_t)flags << 0x15) < 0) {\n      result = FUN_08005714(memory, max_size);\n      if (result == 0) {\n        *memory = 0xc;\n        *(uint16_t *)(parameters + 3) = flags | 0x40;\n        return -1;\n      }\n      FUN_08005630(result, parameters[4], diff);\n      *(uint16_t *)(parameters + 3) = flags & 0xfb7f | 0x80;\n    }\n    else {\n      result = FUN_080057d0(memory, parameters[4], max_size);\n      if (result == 0) {\n        FUN_0800567c(memory, parameters[4]);\n        *memory = 0xc;\n        *(uint16_t *)(parameters + 3) = flags | 0x40;\n        return -1;\n      }\n    }\n    parameters[4] = result;\n    *parameters = result + diff;\n    parameters[5] = max_size - diff;\n    parameters[2] = max_size - parameters[4];\n    max_size = size + offset;\n  }\n  if (size + offset > max_size) {\n    max_size = size + offset;\n  }\n  FUN_08005646(*parameters, memory, max_size);\n  parameters[2] = parameters[2] - size - offset;\n  *parameters = max_size + *parameters;\n  return 0;\n}",
            "called": [
                "FUN_08005646",
                "FUN_080057d0",
                "FUN_08005630",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": true,
            "current_name": "allocate_memory_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_variables_08004194",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "puVar1": "ptr1",
                "uVar5": "var1",
                "uVar7": "var3",
                "uVar6": "var2",
                "uVar8": "var4"
            },
            "code": "void initialize_variables_08004194(void)\n{\n  int *ptr1 = PTR_DAT_080049e8;\n  int *ptr2 = PTR_DAT_080049ec;\n  int *ptr3 = PTR_DAT_080049f0;\n  int *ptr4 = PTR_DAT_080049f4;\n  int var1 = DAT_080049f8;\n  int var2 = DAT_08004a00;\n  int var3 = DAT_08004a08;\n  int var4 = DAT_08004a10;\n  int var5 = DAT_08004a14;\n  int var6 = DAT_08004a1c;\n  int var7 = DAT_08004a18;\n  int var8 = DAT_08004a20;\n  int var9 = DAT_08004a24;\n  int var10 = DAT_08004a28;\n  int var11 = DAT_08004a2c;\n  \n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  \n  ptr2[19] = 1;\n  ptr1[19] = 1;\n  ptr3[19] = -1;\n  ptr4[5] = 0;\n  ptr2[0] = var1;\n  ptr2[2] = var4;\n  ptr2[3] = var2;\n  ptr2[4] = var3;\n  ptr2[5] = var5;\n  ptr2[6] = var7;\n  ptr2[7] = var6;\n  ptr2[8] = var4;\n  ptr2[9] = var5;\n  ptr2[10] = var8;\n  ptr2[11] = var7;\n  ptr1[1] = var5;\n  ptr1[2] = var7;\n  ptr1[3] = var6;\n  ptr1[4] = var8;\n  ptr1[5] = var5;\n  ptr1[6] = var11;\n  ptr1[7] = var10;\n  ptr1[8] = var5;\n  ptr1[9] = var9;\n  ptr3[1] = var9;\n  ptr3[2] = var10;\n  ptr3[3] = var2;\n  \n  ptr3[4] = 0;\n  ptr3[5] = 0;\n  ptr3[6] = 0;\n  ptr4[1] = var11;\n  \n  ptr4[2] = 0;\n  ptr4[3] = 0;\n  ptr4[4] = 0;\n  ptr4[5] = 0;\n  ptr4[6] = 0;\n}",
            "called": [
                "FUN_08004028",
                "FUN_08004c70",
                "FUN_08002ea0",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "initialize_variables_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "set_bit_08001240",
                "uVar1": "bit_mask",
                "DAT_08001254": "data",
                "param_1": "bit_position"
            },
            "code": "void set_bit_08001240(uint8_t bit_position)\n{\n  uint8_t* DAT_08001254 = DAT_08001254;\n  uint8_t bit_mask = 1 << bit_position;\n  if (bit_position == 4) {\n    *DAT_08001254 |= bit_mask;\n  }\n  else {\n    *DAT_08001254 &= ~bit_mask;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": true,
            "current_name": "set_bit_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "iVar1": "result",
                "FUN_08005840": "calculate_value_08005840",
                "param_1": "base_value",
                "param_2": "offset"
            },
            "code": "int calculate_value_08005840(int base_value, int offset) {\n  int result = *(int *)(offset - 4) - 4;\n  if (*(int *)(offset - 4) < 0) {\n    result += *(int *)(offset + result);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": true,
            "current_name": "calculate_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "pcVar2": "current_position",
                "FUN_08000150": "find_end_of_string_08000150",
                "pcVar3": "current_position",
                "param_1": "input_string",
                "cVar1": "current_char"
            },
            "code": "char* find_end_of_string_08000150(char* input_string) {\n  char current_char;\n  char* current_position = input_string;\n  do {\n    current_position++;\n    current_char = *current_position;\n  } while (current_char != '\\0');\n  return current_position + (-1 - (int)input_string);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": true,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "uVar1": "flags",
                "FUN_08003f3c": "count_leading_zeroes_and_update_flags_08003f3c",
                "param_1": "param1",
                "FUN_08001424": "update_flags",
                "param_2": "param2",
                "param_3": "param3",
                "uVar2": "leading_zeroes",
                "DAT_08003f78": "flags"
            },
            "code": "void count_leading_zeroes_and_update_flags_08003f3c(uint32_t param1, uint32_t param2, uint32_t param3)\n{\n\tuint32_t DAT_08003f78 = DAT_08003f78;\n\tuint32_t leading_zeroes = count_leading_zeroes(param1);\n\tupdate_DAT_08003f78(DAT_08003f78, 0x8000, leading_zeroes >> 5);\n\tleading_zeroes = count_leading_zeroes(param2);\n\tupdate_DAT_08003f78(DAT_08003f78, 0x4000, leading_zeroes >> 5);\n\tleading_zeroes = count_leading_zeroes(param3);\n\tupdate_DAT_08003f78(DAT_08003f78, 0x2000, leading_zeroes >> 5);\n\treturn;\n}",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "count_leading_zeroes_and_update_flags_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "PTR_DAT_0800221c": "pointer",
                "FUN_08002214": "get_value_from_pointer_08002214"
            },
            "code": "get_value_from_pointer_08002214() {\n    int* PTR_DAT_0800221c = PTR_DAT_0800221c;\n    int value = *PTR_DAT_0800221c;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": true,
            "current_name": "get_value_from_pointer_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": true,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08000f9c": "call_function_before_concatenation",
                "FUN_08001004": "reverse_concatenation_08001004",
                "param_1": "first_num",
                "param_2": "second_num"
            },
            "code": "undefined8 reverse_concatenation_08001004(undefined4 first_num, undefined4 second_num)\n{\n  call_function_before_concatenation();\n  return CONCAT44(second_num, first_num);\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001028",
                "FUN_08000ffc",
                "FUN_08001014"
            ],
            "imported": true,
            "current_name": "reverse_concatenation_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "PTR_DAT_08004020": "PTR_DATA_2",
                "PTR_DAT_08004024": "PTR_DATA_3",
                "FUN_08003ff4": "print_memory_addresses_08003ff4",
                "puVar1": "memory_address_1",
                "PTR_DAT_0800401c": "PTR_DATA_1"
            },
            "code": "void print_memory_addresses_08003ff4(void)\n{\n  undefined *memory_address_1;\n  memory_address_1 = PTR_DAT_0800401c;\n  print_hex_address(PTR_DAT_08004020, 4);\n  print_hex_address(PTR_DAT_08004024, 8);\n  print_hex_address(memory_address_1, 8);\n  print_hex_address(memory_address_1, 0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": true,
            "current_name": "print_memory_addresses_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_08004194": "display_welcome_message",
                "FUNC_0800411c": "process_user_input",
                "FUN_080041ae": "run_application_080041ae",
                "FUN_08003eb0": "initialize",
                "FUN_0800114c": "get_user_input"
            },
            "code": "void run_application_080041ae(void)\n{\n  initialize(0);\n  display_welcome_message();\n  do {\n    get_user_input();\n    process_user_input();\n  } while( true );\n}",
            "called": [
                "FUN_0800114c",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_08003eb0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": true,
            "current_name": "run_application_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001170": "call_function_with_int_argument",
                "DAT_08001148": "data_pointer",
                "FUN_08001104": "call_function_with_int_argument",
                "FUN_08001128": "set_flag_and_call_functions_08001128",
                "FUN_08004ccc": "call_another_function"
            },
            "code": "int set_flag_and_call_functions_08001128(void)\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  call_function_with_int_argument(3);\n  call_function_with_int_argument(0);\n  call_another_function();\n  return 0;\n}",
            "called": [
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08001170"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_flag_and_call_functions_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "iVar1": "peripheral_count",
                "local_c": "peripheral_array[4]",
                "iVar4": "peripheral_index",
                "local_1c": "peripheral_array[1]",
                "FUN_08004514": "initialize_peripherals_08004514",
                "local_3c": "peripheral_data[3]",
                "uVar3": "peripheral_address",
                "local_10": "peripheral_array[3]",
                "uVar2": "delay_counter",
                "local_20": "peripheral_array[0]",
                "local_30": "peripheral_array",
                "local_40": "peripheral_data[2]",
                "local_14": "peripheral_array[2]",
                "local_34": "peripheral_data[4]",
                "local_44": "peripheral_data[0]"
            },
            "code": "void initialize_peripherals_08004514(void)\n{\n  int peripheral_count;\n  uint32_t peripheral_address;\n  uint32_t delay_counter;\n  uint32_t peripheral_index;\n  uint32_t peripheral_array[4] = {2, 2, 0, 0x380000};\n  peripheral_count = FUNC_08001b58(peripheral_array);\n  if (peripheral_count == 0) goto END;\n  delay_counter = 60;\n  while (true) {\n    peripheral_address = FUN_08004490(\"peripherals.c\", 0x3c);\nEND:\n    uint32_t peripheral_data[5] = {0xf, 0x400, peripheral_count, peripheral_address, peripheral_address};\n    peripheral_count = FUN_0800209c(peripheral_data, peripheral_count);\n    if (peripheral_count == 0) break;\n  }\n  uint32_t time_in_ms = FUN_08002214();\n  FUN_08001214(time_in_ms / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff, 0, 0);\n  return;\n}",
            "called": [
                "FUN_08001b58",
                "FUN_08001214",
                "FUN_08004490",
                "FUN_08002214",
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08001240"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "initialize_peripherals_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "DAT_08004bfc": "0x08004bfc",
                "DAT_08004c00": "0x08004c00",
                "FUN_08001064": "compare_values",
                "FUNC_08000adc": "function5",
                "FUN_08003f3c": "function1",
                "DAT_08004c0c": "0x08004c0c",
                "iVar8": "result",
                "FUN_08002ec0": "get_value1",
                "FUN_08002ee8": "get_value3",
                "FUN_08001028": "set_value",
                "FUN_0800426c": "function4",
                "FUN_08004a84": "initialize_and_set_values_08004a84",
                "FUN_080041c4": "function3",
                "PTR_DAT_08004bf8": "ptr3",
                "uVar7": "result",
                "uVar6": "value4",
                "PTR_DAT_08004bf0": "ptr1",
                "FUNC_08000cec": "function6",
                "PTR_DAT_08004bf4": "ptr2",
                "DAT_08004c10": "0x08004c10",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "FUN_08002ed4": "get_value2",
                "puVar4": "ptr4",
                "puVar5": "ptr5",
                "puVar1": "ptr1",
                "FUN_0800483c": "function2"
            },
            "code": "void initialize_and_set_values_08004a84(void)\n{\n  int result = 0;\n  int* PTR_DAT_08004bf0 = PTR_DAT_08004bf0;\n  int* PTR_DAT_08004bf4 = PTR_DAT_08004bf4;\n  int* PTR_DAT_08004bf8 = PTR_DAT_08004bf8;\n  int value1 = FUN_08002ec0();\n  int value2 = FUN_08002ed4();\n  int value3 = FUN_08002ee8();\n  PTR_DAT_08004bf0[12] = value1;\n  PTR_DAT_08004bf4[12] = value2;\n  PTR_DAT_08004bf8[12] = value3;\n  FUN_08004a30();\n  if (FUN_08001064(PTR_DAT_08004bf0[12], 0) == 0) {\n    result = FUN_08001028(PTR_DAT_08004bf0[12], DAT_08004c00);\n  }\n  else {\n    result = FUN_08001064(PTR_DAT_08004bf0[12], DAT_08004bfc);\n  }\n  if (result == 0) {\n    if (FUN_08001064(PTR_DAT_08004bf4[12], 0) == 0) {\n      result = FUN_08001028(PTR_DAT_08004bf4[12], DAT_08004c00);\n    }\n    else {\n      result = FUN_08001064(PTR_DAT_08004bf4[12], DAT_08004bfc);\n    }\n    if (result == 0) {\n      FUN_08003f3c(1, 1);\n      FUN_0800483c(PTR_DAT_08004bf0);\n      FUN_0800483c(PTR_DAT_08004bf4);\n      FUN_0800483c(PTR_DAT_08004bf8);\n      int* ptr4 = PTR_DAT_08004c04;\n      int* ptr5 = PTR_DAT_08004c08;\n      if (ptr4[1] != 0) {\n        FUN_0800483c(ptr5);\n        int value4 = FUNC_08000adc(ptr5[18], DAT_08004c0c);\n        ptr5[18] = value4;\n      }\n      ptr5[18] = ptr4[1];\n      if (ptr4[0] == 0) {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(ptr5[18], PTR_DAT_08004bf0[18], PTR_DAT_08004bf4[18], PTR_DAT_08004bf8[18]);\n      }\n      FUNC_08000cec(PTR_DAT_08004bf0[1], DAT_08004c10);\n      ptr4[3] = FUN_080010c4();\n      FUNC_08000cec(PTR_DAT_08004bf0[2], DAT_08004c10);\n      ptr4[4] = FUN_080010c4();\n      FUNC_08000cec(PTR_DAT_08004bf4[1], DAT_08004c10);\n      ptr4[0] = FUN_080010c4();\n      FUNC_08000cec(PTR_DAT_08004bf4[2], DAT_08004c10);\n      ptr4[1] = FUN_080010c4();\n      FUNC_08000cec(PTR_DAT_08004bf8[1], DAT_08004c10);\n      ptr4[2] = FUN_080010c4();\n      FUNC_08000cec(PTR_DAT_08004bf8[2], DAT_08004c10);\n      ptr4[6] = FUN_080010c4();\n      FUNC_08000cec(ptr5[1], DAT_08004c10);\n      ptr4[7] = FUN_080010c4();\n      FUNC_08000cec(ptr5[2], DAT_08004c10);\n      ptr4[8] = FUN_080010c4();\n      FUNC_08000cec(ptr5[3], DAT_08004c10);\n      ptr4[9] = FUN_080010c4();\n      FUNC_08000cec(ptr5[4], DAT_08004c10);\n      ptr4[10] = FUN_080010c4();\n      ptr4[11] = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0, 1);\n}",
            "called": [
                "FUN_08003f3c",
                "FUN_08004a30",
                "FUN_08002ec0",
                "FUN_0800426c",
                "FUN_08000cec",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08000adc",
                "FUN_08001028",
                "FUN_08001064",
                "FUN_080041c4",
                "FUN_080010c4",
                "FUN_08002ed4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "initialize_and_set_values_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_08003fd0": "set_computer_score",
                "param_1": "",
                "FUN_08003fe8": "set_game_board",
                "FUN_08003fc4": "set_player_score",
                "param_2": "",
                "FUN_080041c4": "initialize_game_board_080041c4",
                "param_3": "game_board_size",
                "param_4": "game_board_size",
                "FUN_08003fdc": "set_game_board_size",
                "extraout_r1": ""
            },
            "code": "void initialize_game_board_080041c4(void)\n{\n  undefined4 extraout_r1;\n  \n  set_player_score(0);\n  set_computer_score(0);\n  set_game_board_size(0);\n  set_game_board(0,extraout_r1,game_board_size,game_board_size);\n  return;\n}",
            "called": [
                "FUN_08003fd0",
                "FUN_08003fe8",
                "FUN_08003fdc",
                "FUN_08003fc4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "initialize_game_board_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = FUN_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": true,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_08005840": "calculate_temp_result",
                "FUN_08005630": "print_result",
                "uVar1": "result",
                "param_1": "input_1",
                "FUN_08005714": "calculate_final_result",
                "param_2": "input_2",
                "FUN_080057d0": "calculate_result_080057d0",
                "param_3": "input_3",
                "param_4": "input_4",
                "FUN_0800567c": "print_success",
                "uVar2": "temp_result"
            },
            "code": "uint calculate_result_080057d0(undefined4 input_1, uint input_2, uint input_3, undefined4 input_4)\n{\n  uint result = 0;\n  uint temp_result = 0;\n  if (input_2 != 0) {\n    if (input_3 == 0) {\n      print_error();\n      result = input_3;\n    }\n    else {\n      temp_result = calculate_temp_result();\n      result = input_2;\n      if ((temp_result < input_3) && (result = calculate_final_result(input_1, input_3), result != 0)) {\n        print_result(result, input_2, input_3);\n        print_success(input_1, input_2);\n      }\n    }\n    return result;\n  }\n  result = calculate_final_result(input_1, input_3, input_3, input_4);\n  return result;\n}",
            "called": [
                "FUN_08005840",
                "FUN_08005630",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": true,
            "current_name": "calculate_result_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "piVar4": "element_data",
                "param_1": "list",
                "ppiVar6": "previous_element",
                "ppiVar7": "current_element",
                "param_2": "element_size",
                "param_3": "element",
                "FUN_0800567c": "add_element_to_list_0800567c",
                "param_4": "error_code",
                "puVar1": "pointer_to_list",
                "ppiVar2": "previous_element",
                "extraout_r1": "previous_element",
                "ppiVar3": "current_element",
                "ppiVar5": "first_element"
            },
            "code": "void add_element_to_list_0800567c(int **list, int element_size, int *element, int *error_code)\n{\n  int **current_element;\n  int **previous_element;\n  int **first_element = *(int ***)PTR_DAT_08005710;\n  if (element_size == 0) {\n    return;\n  }\n  current_element = (int **)(element_size + -4 + (char *)element);\n  if (*(int *)(element_size + -4 + (char *)element) < 0) {\n    current_element = (int **)((int)current_element + *(int *)(element_size + -4 + (char *)element));\n  }\n  do_nothing_0800583c();\n  if (first_element == (int **)0x0) {\n    current_element[1] = (int *)0x0;\n    *(int ***)PTR_DAT_08005710 = current_element;\n    previous_element = list;\n    current_element = *(int ***)PTR_DAT_08005710;\n  }\n  else if (current_element < first_element) {\n    previous_element = (int **)*current_element;\n    current_element = (int **)((int)current_element + (int)previous_element);\n    if (first_element == current_element) {\n      int *element_data = *first_element;\n      first_element = (int **)first_element[1];\n      current_element = (int **)((int)element_data + (int)previous_element);\n      *list = (int *)current_element;\n    }\n    current_element[1] = (int *)first_element;\n    *(int ***)PTR_DAT_08005710 = current_element;\n  }\n  else {\n    do {\n      previous_element = first_element;\n      current_element = (int **)first_element[1];\n      if (current_element == (int **)0x0) break;\n      first_element = current_element;\n    } while (current_element <= current_element);\n    previous_element = (int **)*previous_element;\n    if ((int **)((int)previous_element + (int)*previous_element) == current_element) {\n      previous_element = (int **)((int)previous_element + (int)*current_element);\n      *previous_element = (int *)previous_element;\n      if (current_element == (int **)((int)previous_element + (int)*current_element)) {\n        int *element_data = *current_element;\n        current_element = (int **)current_element[1];\n        previous_element = (int **)((int)previous_element + (int)element_data);\n        *previous_element = (int *)current_element;\n      }\n    }\n    else if (current_element < (int **)((int)previous_element + (int)*previous_element)) {\n      *error_code = 0xc;\n    }\n    else {\n      previous_element = (int **)((int)current_element + (int)*current_element);\n      if (current_element == previous_element) {\n        int *element_data = *current_element;\n        current_element = (int **)current_element[1];\n        previous_element = (int **)((int)element_data + (int)*current_element);\n        *current_element = (int *)previous_element;\n      }\n      current_element[1] = (int *)current_element;\n      previous_element[1] = (int *)current_element;\n    }\n  }\n  do_nothing_0800583e(error_code,previous_element,current_element,element);\n  return;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": true,
            "current_name": "add_element_to_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  FUN_08001128();\n  FUN_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  FUN_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = FUN_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = FUN_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = FUN_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = FUN_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = FUN_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = FUN_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = FUN_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        FUN_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = FUN_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = FUN_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = FUN_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  FUN_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = FUN_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = FUN_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = FUN_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = FUN_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = FUN_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = FUN_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = FUN_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = FUN_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  FUN_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08004514",
                "FUN_08001754",
                "FUN_0800245c",
                "FUN_08004490",
                "FUN_080025a4",
                "FUN_08002724",
                "FUN_08001128",
                "FUN_080023d0",
                "FUN_08004e14",
                "FUN_08001264",
                "FUN_08002564",
                "FUN_08001424"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": true,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08004fb4",
                "FUN_08000110",
                "FUN_08000134"
            ],
            "imported": true,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": true,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_0800483c",
                "FUN_0800411c",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_08002cb0",
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_0800426c"
            ],
            "imported": true,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "param_1": "value1",
                "param_2": "value2",
                "FUN_08000ffc": "swap_values_08000ffc"
            },
            "code": "void swap_values_08000ffc(int value1, int value2)\n{\n  int temp = value1;\n  value1 = value2;\n  value2 = temp;\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "imported": true,
            "current_name": "swap_values_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "iVar1": "start_time",
                "iVar2": "flag_value",
                "param_1": "flag_ptr",
                "param_2": "max_time",
                "FUN_080016f4": "check_if_flag_set_080016f4"
            },
            "code": "int check_if_flag_set_080016f4(int *flag_ptr, uint32_t max_time){\n  int start_time = get_current_time();\n  while( true ) {\n    int flag_value = *flag_ptr;\n    if ((*(uint32_t *)(flag_value + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(flag_value + 0x14) << 0x1b < 0) break;\n    if ((max_time == 0) || (flag_value = get_current_time(), max_time < (uint32_t)(flag_value - start_time))) {\n      flag_ptr[0xe] = flag_ptr[0xe] | 0x20;\n      *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n      *(undefined *)(flag_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint32_t *)(flag_value + 0x14) = *(uint32_t *)(flag_value + 0x14) & 0xffffffef;\n  flag_ptr[0xe] = 0;\n  *(undefined *)(flag_ptr + 0xd) = 0;\n  *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n  return 1;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": true,
            "current_name": "check_if_flag_set_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "iVar3": "config_address",
                "uVar1": "flag1",
                "param_1": "config",
                "param_2": "flags",
                "uVar2": "return_value",
                "uVar4": "flag2",
                "FUN_080025a4": "set_flags_and_return_080025a4"
            },
            "code": "int set_flags_and_return_080025a4(int *config, uint *flags)\n{\n  uint flag1 = flags[0];\n  uint flag2 = flags[1];\n  int config_address = *config;\n  int return_value = 2;\n\n  if (*(char *)(config + 0xe) != '\\x01') {\n    *(undefined *)((int)config + 0x39) = 2;\n    *(uint *)(config_address + 4) = *(uint *)(config_address + 4) & 0xffffff8f;\n    *(uint *)(config_address + 4) = *(uint *)(config_address + 4) | flag1;\n    *(uint *)(config_address + 8) = *(uint *)(config_address + 8) & 0xffffff7f;\n    *(uint *)(config_address + 8) = *(uint *)(config_address + 8) | flag2;\n    *(undefined *)((int)config + 0x39) = 1;\n    *(undefined *)(config + 0xe) = 0;\n    return_value = 0;\n  }\n  return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "set_flags_and_return_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": true,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "temp": "temp",
                "FUN_08002220": "get_shifted_value_based_on_bit_position_08002220",
                "uVar1": "leading_zeroes",
                "PTR_DAT_0800224c": "ptr_dat_0800224c",
                "DAT_08002244": "dat_08002244",
                "masked_value": "masked_value",
                "PTR_DAT_08002248": "ptr_dat_08002248",
                "shifted_value": "shifted_value"
            },
            "code": "uint get_shifted_value_based_on_bit_position_08002220(void)\n{\n  uint shift_amount;\n  uint* PTR_DAT_0800224c = (uint*) PTR_DAT_0800224c;\n  uint* PTR_DAT_08002248 = (uint*) PTR_DAT_08002248;\n  uint* DAT_08002244 = (uint*) DAT_08002244;\n  uint temp = *(PTR_DAT_0800224c);\n  uint masked_value = (*(DAT_08002244 + 4) & 0x700);\n  uint leading_zeroes = count_leading_zeroes(0xe00000);\n  uint shifted_value = *(PTR_DAT_08002248 + (masked_value >> (leading_zeroes & 0xff)));\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "imported": true,
            "current_name": "get_shifted_value_based_on_bit_position_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "convert_pressure_to_uint_08003034",
                "local_c": "converted_pressure",
                "param_1": "pressure",
                "param_2": "unused_param",
                "param_3": "conversion_data",
                "param_4": "unused_param",
                "FUN_080040b8": "convert_pressure"
            },
            "code": "uint convert_pressure_to_uint_08003034(uint pressure, uint *conversion_data) {\n  uint converted_pressure;\n  convert_pressure(pressure, 0, &converted_pressure, 3, conversion_data, 0x8c, 0);\n  return converted_pressure;\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": true,
            "current_name": "convert_pressure_to_uint_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08001194": "set_message",
                "local_c": "unused_variable",
                "FUN_080011fc": "display_message",
                "FUN_08004e7c": "set_flag_if_value_matches_08004e7c",
                "FUN_08001264": "set_flag_value",
                "param_1": "value_to_check",
                "uint": "unsigned_int",
                "local_18": "first_arg",
                "DAT_08004ee0": "flag_data_address",
                "local_10": "third_arg",
                "DAT_08004edc": "expected_value",
                "local_14": "second_arg"
            },
            "code": "void set_flag_if_value_matches_08004e7c(int *value_to_check)\n{\n  int DAT_08004edc = 0x08004edc;\n  if (*value_to_check == DAT_08004edc) {\n    uint *flag_address = (uint *)(DAT_08004edc + 0xd818);\n    *flag_address |= 0x4000;\n    int first_arg = 0x200;\n    int second_arg = 2;\n    int third_arg = 3;\n    set_flag_value(DAT_08004ee0, &first_arg);\n    first_arg = 0x400;\n    second_arg = 0;\n    third_arg = 0;\n    set_flag_value(DAT_08004ee0, &first_arg);\n    set_message(0x25,0,0);\n    display_message(0x25);\n  }\n  return;\n}",
            "called": [
                "FUN_080011fc",
                "FUN_08001194",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": true,
            "current_name": "set_flag_if_value_matches_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "iVar1": "result1",
                "iVar2": "result2",
                "FUN_08001530": "set_bit_and_call_function_08001530",
                "puVar3": "pointer1",
                "param_1": "param_list",
                "ppuVar4": "pointer2",
                "param_2": "bit_mask",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "uVar5": "value4",
                "uVar6": "value5"
            },
            "code": "int set_bit_and_call_function_08001530(uint **param_list, uint bit_mask, uint value1, int value2, uint value3) {\n  int result = 0;\n  uint **ppuVar = param_list;\n  uint value4 = bit_mask;\n  uint value5 = value1;\n  uint value6 = value3;\n  **param_list |= 0x100;\n  int iVar1 = FUN_0800115c();\n  do {\n    uint *puVar = *param_list;\n    do {\n      if ((int)(puVar[5] << 0x1f) < 0) {\n        puVar[4] = bit_mask & 0xfe;\n        result = FUN_08001460(param_list, DAT_080015e4, value3, puVar, ppuVar, value5, value6);\n        if (result == 0) {\n          result = FUN_080014e2(param_list, value3, (*param_list)[5], (*param_list)[6]);\n          if (result == 0) {\n            puVar = *param_list;\n            if (value2 == 1) {\n              goto LAB_080015ca;\n            }\n            puVar[4] = value1 >> 8;\n            result = FUN_080014e2(param_list, value3);\n            if (result == 0) {\n              puVar = *param_list;\n              goto LAB_080015ca;\n            }\n          }\n          if (param_list[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **param_list |= 0x200;\n        }\n        else if (param_list[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (value3 == 0xffffffff);\n    if ((value3 == 0) || (int iVar2 = FUN_0800115c(), value3 < (uint)(iVar2 - iVar1))) {\n      *(undefined *)((int)param_list + 0x35) = 0x20;\n      *(undefined *)(param_list + 0xd) = 0;\n      return 3;\n    }\n  } while(true);\n\n}\n",
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": true,
            "current_name": "set_bit_and_call_function_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_param_value_to_pointer_address_08003314",
                "param_1": "param_value",
                "PTR_DAT_0800331c": "PTR_DAT_0800331c"
            },
            "code": "void set_param_value_to_pointer_address_08003314(void* param_value){\n  *(void**)PTR_DAT_0800331c = param_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": true,
            "current_name": "set_param_value_to_pointer_address_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "iVar2": "result",
                "piVar4": "pointer_to_int",
                "FUN_08005854": "check_and_execute_function_08005854",
                "puVar3": "pointer_to_undefined4",
                "param_1": "first_parameter",
                "uStack_34": "local_variable6",
                "local_28": "local_variable7",
                "local_38": "local_variable5",
                "local_48": "local_variable1",
                "param_2": "second_parameter",
                "puVar1": "pointer_to_undefined",
                "uVar5": "return_value",
                "uStack_3c": "local_variable4",
                "local_30": "function_pointer_return_value",
                "local_40": "local_variable3",
                "uVar6": "do_nothing_return_value",
                "local_44": "local_variable2"
            },
            "code": "undefined8 check_and_execute_function_08005854(undefined4 param_1, undefined4 param_2)\n{\n  int result;\n  undefined *pointer_to_dat_f8;\n  undefined8 return_value;\n  undefined8 do_nothing_return_value;\n  undefined8 function_pointer_return_value;\n  int function_pointer_result;\n  undefined4 local_48 = 1;\n  undefined *local_44 = PTR_DAT_080058f0;\n  undefined4 local_40 = param_1;\n  undefined4 uStack_3c = param_2;\n  undefined4 local_38 = param_1;\n  undefined4 uStack_34 = param_2;\n  undefined8 function_pointer_result_2;\n  int local_28;\n  return_value = FUNC_08005c70();\n  pointer_to_dat_f8 = PTR_DAT_080058f8;\n  if (*PTR_DAT_080058f8 == -1)\n  {\n    return return_value;\n  }\n  local_28 = FUN_08000a04(param_1, param_2, param_1, param_2);\n  if (local_28 != 0)\n  {\n    return return_value;\n  }\n  do_nothing_return_value = do_nothing_0800708c(param_1, param_2);\n  function_pointer_result = FUN_080009f0((int)do_nothing_return_value, (int)((ulonglong)do_nothing_return_value >> 0x20), 0, DAT_080058ec);\n  if (function_pointer_result == 0)\n  {\n    return return_value;\n  }\n  function_pointer_result_2 = FUN_080070a4(PTR_DAT_080058f4);\n  if (*pointer_to_dat_f8 != '\\x02')\n  {\n    function_pointer_result = FUN_0800709e(&local_48);\n    if (function_pointer_result != 0)\n    {\n      goto LAB_080058d0;\n    }\n  }\n  function_pointer_result = FUN_080072ac();\n  *(undefined4 *)function_pointer_result = 0x21;\nLAB_080058d0:\n  if (local_28 != 0)\n  {\n    function_pointer_result = FUN_080072ac();\n    *(int *)function_pointer_result = local_28;\n  }\n  return function_pointer_result_2;\n}",
            "called": [
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_08000a04",
                "FUN_080072ac",
                "FUN_0800709e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "check_and_execute_function_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08006c0c",
                "FUN_08005c70",
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_0800411c",
                "FUN_080070b0",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": true,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "in_ZR": "input_char",
                "FUN_08001004": "call_function_to_get_input",
                "FUN_08001014": "check_input_is_not_null_08001014"
            },
            "code": "bool check_input_is_not_null_08001014(void)\\n{\\n  char input_char;\\n  call_function_to_get_input();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "check_input_is_not_null_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "iVar2": "exponent_diff",
                "uVar1": "temp",
                "FUN_080071c0": "calculate_number_080071c0",
                "param_1": "lower_bits",
                "param_2": "upper_bits",
                "param_3": "exponent",
                "param_4": "param_4",
                "uVar3": "upper_bits_masked",
                "uVar5": "upper_bits_shifted",
                "uVar4": "upper_bits_masked",
                "uVar6": "result"
            },
            "code": "ulonglong calculate_number_080071c0(uint32_t lower_bits, uint32_t upper_bits, int exponent, uint32_t param_4)\n{\n  uint32_t temp;\n  int exponent_diff;\n  uint32_t upper_bits_shifted;\n  uint32_t upper_bits_masked;\n  uint64_t result;\n  if (((upper_bits << 1) >> 0x15) == 0) {\n    temp = upper_bits & 0x7fffffff | lower_bits;\n    if (temp == 0) {\n      result = ((uint64_t)upper_bits << 32) | lower_bits;\n      return result;\n    }\n    result = FUNC_080004d0(lower_bits, upper_bits, 0, DAT_08007290);\n    if (exponent < DAT_08007294) {\n      exponent_diff = ((int64_t)(result >> 32) << 1) >> 0x15 - 0x36;\n      goto LAB_0800722e;\n    }\n    temp = ((int64_t)(result >> 32) << 1) >> 0x15 - 0x36;\n  }\n  else {\n    if (((upper_bits << 1) >> 0x15) == 0x7ff) {\n      result = FUNC_0800016c(lower_bits, upper_bits, lower_bits, upper_bits, param_4);\n      return result;\n    }\n    upper_bits_shifted = upper_bits >> 20;\n    exponent_diff = ((upper_bits_shifted & 0x800fffff) | exponent) << 32 | lower_bits;\n    if (exponent_diff < 0x7ff) {\n      if (exponent_diff > 0) {\n        result = ((uint64_t)(upper_bits_shifted & 0x800fffff | exponent_diff * 0x100000) << 32) | lower_bits;\n        return result;\n      }\n      if ((exponent_diff + 0x35 < 0) == SCARRY4(exponent_diff,0x35)) {\n        result = ((uint64_t)(upper_bits_shifted & 0x800fffff | (exponent_diff + 0x36) * 0x100000) << 32) | lower_bits;\n        exponent_diff = 0;\n        goto LAB_0800722e;\n      }\n      if (exponent < 0xc351) {\n        result = do_nothing_0800729c(DAT_08007280, DAT_08007284, (int)result, upper_bits_shifted);\n        exponent_diff = DAT_08007280;\n        upper_bits_masked = DAT_08007284;\n        goto LAB_0800722e;\n      }\n    }\n    result = do_nothing_0800729c(DAT_08007288, DAT_0800728c, (int)result, upper_bits_shifted);\n    exponent_diff = DAT_08007288;\n    upper_bits_masked = DAT_0800728c;\n  }\nLAB_0800722e:\n  result = FUNC_080004d0((int)result, (int)(result >> 32), exponent_diff, upper_bits_masked);\n  return result;\n}",
            "called": [
                "FUN_0800729c",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "calculate_number_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": true,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "pcVar2": "current_char_ptr",
                "pcVar1": "current_char_ptr",
                "param_1": "str",
                "FUN_08005614": "find_char_in_string_08005614",
                "param_2": "target_char",
                "param_3": "str_len"
            },
            "code": "char* find_char_in_string_08005614(char* str, char target_char, int str_len) {\n  char* current_char_ptr = str;\n  while (current_char_ptr != str + str_len) {\n    if (*current_char_ptr == target_char) {\n      return current_char_ptr;\n    }\n    current_char_ptr++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": true,
            "current_name": "find_char_in_string_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08005bc8",
                "FUN_08006c0c",
                "FUN_08005900",
                "FUN_08005c70",
                "FUN_08006070",
                "FUN_08006d68",
                "FUN_08003330",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_64_bits_080070a4",
                "DAT_080070ac": "*data_ptr"
            },
            "code": "unsigned long long shift_left_64_bits_080070a4(unsigned long long DAT_080070ac){\n  return (DAT_080070ac) << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": true,
            "current_name": "shift_left_64_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "iVar1": "error_code",
                "param_1": "arg1",
                "FUN_0800407c": "check_and_return_value_0800407c",
                "param_2": "arg2",
                "param_3": "result_if_error",
                "param_4": "result_if_success",
                "local_14": "return_value"
            },
            "code": "int check_and_return_value_0800407c(int arg1, int arg2, int result_if_error, int result_if_success){\n  int return_value;\n  return_value = 0;\n  int error_code = FUNC_08001938(PTR_DAT_080040b4, arg1, arg2, 1, &return_value, 1, 200);\n  if (error_code != 0) {\n    FUN_08004490(result_if_error, result_if_success);\n  }\n  return return_value;\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_080040e8",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002ad0"
            ],
            "imported": true,
            "current_name": "check_and_return_value_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = FUN_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = FUN_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = FUN_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = FUN_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = FUN_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = FUN_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_0800115c",
                "FUN_080016f4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "imported": true,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08002f28();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004a84();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = FUN_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = FUN_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = FUN_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = FUN_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = FUN_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    FUN_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = FUN_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_08003034",
                "FUN_08000428",
                "FUN_08000c44",
                "FUN_08000a30",
                "FUN_0800403c",
                "FUN_08000e54",
                "FUN_08004384",
                "FUN_08004348",
                "FUN_08001078",
                "FUN_080043bc",
                "FUN_080043f0",
                "FUN_08004410",
                "FUN_08004458",
                "FUN_08005900",
                "FUN_080004d0",
                "FUN_08004434",
                "FUN_08002f28",
                "FUN_08000adc",
                "thunk_FUN_0800115c",
                "FUN_08004a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": true,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "mask4": "0xfffffbff",
                "uVar1": "new_value1",
                "*(uint *)(param_1 + 0x20)": "current_value1",
                "mask1": "0xfffffeff",
                "mask3": "0xfffff7ff",
                "param_1": "param_index",
                "mask2": "0xfffffdff",
                "*(uint *)(param_1 + 0x3c)": "*(uint *)(param_index + 0x3c)",
                "*(uint *)(param_1 + 0x1c)": "*(uint *)(param_index + 0x1c)",
                "param_2": "new_params",
                "*(uint *)(param_1 + 4)": "current_value2",
                "FUN_080022d0": "update_parameters_080022d0",
                "uVar3": "new_params[0]",
                "uVar2": "current_value2"
            },
            "code": "void update_parameters_080022d0(int param_index, uint *new_params)\n{\n  uint mask1 = 0xfffffeff;\n  uint mask2 = 0xfffffdff;\n  uint mask3 = 0xfffff7ff;\n  uint mask4 = 0xfffffbff;\n  uint current_value1 = *(uint *)(param_index + 0x20);\n  uint current_value2 = *(uint *)(param_index + 4);\n  uint new_value1 = (current_value1 & mask1) | (new_params[2] << 8);\n  if (param_index == PTR_DAT_08002320) {\n    new_value1 = (new_value1 & mask2) | (new_params[3] << 8);\n    current_value2 = (current_value2 & 0xffffcfff) | ((new_params[5] | new_params[6]) << 4);\n  }\n  *(uint *)(param_index + 4) = current_value2;\n  *(uint *)(param_index + 0x1c) = (*(uint *)(param_index + 0x1c) & 0xffffff8c) | new_params[0];\n  *(uint *)(param_index + 0x3c) = new_params[1];\n  *(uint *)(param_index + 0x20) = new_value1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": true,
            "current_name": "update_parameters_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "PTR_0804b6c4": "significand",
                "uVar1": "exponent",
                "shift": "shift",
                "param_1": "float_bits",
                "DAT_0804b6c0": "0x800000",
                "FUN_080010c4": "decode_float_080010c4"
            },
            "code": "uint decode_float_080010c4(uint float_bits) {\n  uint exponent = (float_bits << 1) >> 24;\n  if ((float_bits & DAT_0804b6c000) != 0 || exponent < 0x7f) {\n    return 0;\n  }\n  uint PTR_0804b6c4 = (float_bits & 0x7fffff) | DAT_0804b6c0;\n  if (exponent > 0x9e) {\n    return 0xffffffff;\n  }\n  uint shift = 0x9e - exponent;\n  if (shift >= 32) {\n    return 0;\n  }\n  return PTR_0804b6c4 >> shift;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": true,
            "current_name": "decode_float_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "iVar1": "check_data",
                "FUNC_08001938": "perform_check",
                "param_1": "data1",
                "param_6": "result2",
                "param_2": "data2",
                "PTR_DAT_080040e4": "PTR_DAT_check_data",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "result1",
                "FUN_080040b8": "check_data_and_print_result_080040b8"
            },
            "code": "void check_data_and_print_result_080040b8(int data1, int data2, int data3, int data4, int result1, int result2)\n{\n  int check_data;\n  check_data = perform_check(PTR_DAT_080040e4, data1, data2, 1, data3, data4, 200, data4);\n  if (check_data != 0) {\n    print_result(result1, result2);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": true,
            "current_name": "check_data_and_print_result_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "iVar1": "flag_value_4",
                "iVar3": "flags_ptr",
                "extraout_r1_00": "extraout_flags_2",
                "param_1": "flags",
                "param_2": "flag_type",
                "param_3": "flag_value",
                "extraout_r1_02": "extraout_flags_c",
                "extraout_r1_01": "extraout_flags_8",
                "uVar2": "combined_flags",
                "FUN_0800245c": "update_flags_0800245c",
                "extraout_r1": "extraout_flags_1"
            },
            "code": "void update_flags_0800245c(int *flags, int flag_type, int flag_value) {\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  int extraout_r1_02;\n  int flags_ptr;\n  uint combined_flags;\n\n  if (*(char *)(flags + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)flags + 0x39) = 2;\n  *(undefined *)(flags + 0xe) = 1;\n  switch(flag_type) {\n    case 0:\n      set_flag_type_0(*flags);\n      flags_ptr = *flags;\n      combined_flags = *(uint *)(extraout_r1 + 0x10);\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) | 8;\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) & 0xfffffffb;\n      combined_flags = *(uint *)(flags_ptr + 0x18) | combined_flags;\n      break;\n    default:\n      goto switchD_0800247a_caseD_1;\n    case 4:\n      set_flag_type_4(*flags);\n      flags_ptr = *flags;\n      int flag_value_4 = *(int *)(extraout_r1_00 + 0x10);\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) | 0x800;\n      *(uint *)(flags_ptr + 0x18) = *(uint *)(flags_ptr + 0x18) & 0xfffffbff;\n      combined_flags = *(uint *)(flags_ptr + 0x18) | (flag_value_4 << 8);\n      break;\n    case 8:\n      set_flag_type_8(*flags);\n      flags_ptr = *flags;\n      combined_flags = *(uint *)(extraout_r1_01 + 0x10);\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) | 8;\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) & 0xfffffffb;\n      combined_flags = *(uint *)(flags_ptr + 0x1c) | combined_flags;\n      goto LAB_080024fa;\n    case 0xc:\n      set_flag_type_c(*flags);\n      flags_ptr = *flags;\n      int flag_value_c = *(int *)(extraout_r1_02 + 0x10);\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) | 0x800;\n      *(uint *)(flags_ptr + 0x1c) = *(uint *)(flags_ptr + 0x1c) & 0xfffffbff;\n      combined_flags = *(uint *)(flags_ptr + 0x1c) | (flag_value_c << 8);\n      break;\n  }\n  *(uint *)(flags_ptr + 0x18) = combined_flags;\n  switchD_0800247a_caseD_1:\n  *(undefined *)((int)flags + 0x39) = 1;\n  *(undefined *)(flags + 0xe) = 0;\n  return;\n}\n",
            "called": [
                "FUN_080022d0",
                "FUN_08002280",
                "FUN_08002324",
                "FUN_08002404"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "update_flags_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "uVar1": "flags",
                "puVar2": "line_message",
                "puVar3": "error_message",
                "param_1": "error_code",
                "param_2": "line_number",
                "FUN_08004490": "print_error_message_and_wait_08004490"
            },
            "code": "void print_error_message_and_wait_08004490(int error_code, int line_number)\n{\n  int flags = 0x4000 | 0x8000 | 0x2000;\n  char* error_message = \"Error with %s\";\n  char* line_message = \"@ line %d\";\n  do {\n    print_flags(flags);\n    print_string(error_message, \"Error with \");\n    print_integer(error_code);\n    print_string(line_message, \"@ line \");\n    print_integer(line_number);\n    print_newline();\n    wait(500);\n  } while( true );\n}",
            "called": [
                "FUN_0800142e",
                "FUN_08004cac",
                "FUN_08004c8c",
                "FUN_08004c18",
                "thunk_FUN_08001168",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_08004514",
                "FUN_0800403c",
                "FUN_0800458c",
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "imported": true,
            "current_name": "print_error_message_and_wait_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_08002f28",
                "FUN_0800483c",
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": true,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "iVar1": "time_start",
                "iVar2": "time_end",
                "DAT_080016f0": "flag_array",
                "puVar3": "flag_ptr",
                "param_1": "param_array",
                "ppuVar4": "param_array_ptr",
                "param_2": "param_2_copy",
                "param_3": "param_3_copy",
                "param_4": "param_4",
                "param_5": "param_5",
                "uVar5": "param_2_copy",
                "uVar6": "param_3_copy",
                "FUN_080015e8": "set_and_check_flags_080015e8"
            },
            "code": "uint32_t set_and_check_flags_080015e8(uint32_t **param_array, uint32_t param_2, uint32_t param_3, int param_4, uint32_t param_5) {\n  uint32_t *flag_ptr = *param_array;\n  *flag_ptr |= 0x400;\n  *flag_ptr |= 0x100;\n  uint32_t **param_array_ptr = param_array;\n  uint32_t param_2_copy = param_2;\n  uint32_t param_3_copy = param_3;\n  int time_start = get_time();\n\n  while (-1 < (int)(flag_ptr[5] << 0x1f)) {\n    if (param_5 != 0xffffffff) {\n      goto code_r0x08001658;\n    }\n  }\n\n  flag_ptr[4] = param_2 & 0xfe;\n\n  if (set_and_check_flags_080015e8_helper(param_array, DAT_080016f0, param_5, flag_ptr, param_array_ptr, param_2_copy, param_3_copy) != 0) {\n    goto LAB_080016ba;\n  }\n\n  if (set_and_check_flags_080015e8_helper2(param_array, param_5, (*param_array)[5], (*param_array)[6]) == 0) {\n    flag_ptr = *param_array;\n    if (param_4 != 1) {\n      flag_ptr[4] = param_3_copy >> 8;\n      if (set_and_check_flags_080015e8_helper(param_array, param_5) != 0) {\n        goto LAB_08001642;\n      }\n      flag_ptr = *param_array;\n    }\n    flag_ptr[4] = param_3_copy & 0xff;\n    if (set_and_check_flags_080015e8_helper(param_array, param_5) == 0) {\n      **param_array |= 0x100;\n      int time_end = get_time();\n      do {\n        do {\n          if ((int)((*param_array)[5] << 0x1f) < 0) {\n            (*param_array)[4] = param_2 & 0xff | 1;\n            if (set_and_check_flags_080015e8_helper(param_array, DAT_080016f0, param_5) == 0) {\n              return 0;\n            }\n            LAB_080016ba:\n            if (param_array[0xe] != (uint32_t *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (param_5 == 0xffffffff);\n      } while ((param_5 != 0) && (get_time() - time_end <= param_5));\n      *(uint8_t *)((int)param_array + 0x35) = 0x20;\n      *(uint32_t *)(param_array + 0xd) = 0;\n      return 3;\n    }\n  }\n  LAB_08001642:\n  if (param_array[0xe] == (uint32_t *)0x4) {\n    **param_array |= 0x200;\n    return 1;\n  }\n  return 3;\n\ncode_r0x08001658:\n  if ((param_5 == 0) || (get_time() - time_start > param_5))) {\n    *(uint8_t *)((int)param_array + 0x35) = 0x20;\n    *(uint32_t *)(param_array + 0xd) = 0;\n    return 3;\n  }\n  goto LAB_0800160e;\n}\n\nuint32_t set_and_check_flags_080015e8_helper(uint32_t **param_array, uint32_t param, uint32_t param_2, uint32_t *flag_ptr, uint32_t **param_array_ptr, uint32_t param_2_copy, uint32_t param_3_copy) {\n  flag_ptr[3] = param;\n  flag_ptr[2] = param_2;\n  flag_ptr[1] = param_2_copy;\n  flag_ptr[0] = param_3_copy;\n  return FUN_08001460(param_array, flag_ptr, param_5, flag_ptr, param_array_ptr, param_2_copy, param_3_copy);\n}\n\nuint32_t set_and_check_flags_080015e8_helper2(uint32_t **param_array, uint32_t param_5, uint32_t param_6, uint32_t param_7) {\n  return FUN_080014e2(param_array, param_5, param_6, param_7);\n}\n",
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": true,
            "current_name": "set_and_check_flags_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "iVar2": "data_value",
                "local_c": "unused_variable",
                "uVar1": "decoder_value",
                "param_1": "input_data",
                "uStack_10": "decoded_data_3",
                "local_18": "decoded_data_1",
                "param_2": "param_size",
                "param_3": "output_data",
                "local_14": "decoded_data_2",
                "FUN_08004e14": "decode_data_08004e14"
            },
            "code": "void decode_data_08004e14(int *input_data, int param_size, int output_data){\n  int data_value = *input_data;\n  int decoder_value;\n  int decoded_data_1;\n  int decoded_data_2;\n  int decoded_data_3;\n  if (data_value == 134217736){\n    decoder_value = 2048;\n  }\n  else if (data_value == 1073741824){\n    decoder_value = 2;\n  }\n  else {\n    decoder_value = 0;\n    if (data_value == 134217740){\n      decoder_value = 3;\n    }\n    else {\n      if (data_value != 201326592){\n        return;\n      }\n      decoder_value = 768;\n    }\n  }\n  decoded_data_1 = 2;\n  decoded_data_2 = 2;\n  decoded_data_3 = output_data;\n  decode(decoder_value, &decoded_data_1);\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": true,
            "current_name": "decode_data_08004e14"
        }
    },
    "used_tokens": 133217,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08003320",
            "FUN_08004410",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_08001028",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_0800290c",
            "FUN_08002f28",
            "FUN_08004384",
            "FUN_080009a0",
            "FUN_08003298",
            "FUN_08004300",
            "FUN_08005630",
            "FUN_08000980",
            "FUN_08004028",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08005bc8",
            "FUN_08001436",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_08000904",
            "FUN_0800299a",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_080015e8",
            "FUN_08004e14"
        ]
    ],
    "locked_functions": []
}