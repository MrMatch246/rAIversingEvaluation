{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "set_flag_if_not_set_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 setFlagIfNotSet_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "set_flag_if_not_set_080001ac",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *input,uint byte_to_find,uint length)\n\n{\n  byte current_byte;\n  char is_zero_LSB;\n  char is_zero_MSB;\n  char is_zero_2nd_MSB;\n  char is_zero_3rd_MSB;\n  byte *next_byte_ptr;\n  uint *current_byte_ptr;\n  byte *result;\n  uint remainder;\n  uint length_minus_remainder;\n  uint current_word_xor;\n  uint current_word_xor_check;\n  bool is_nonzero_LSB;\n  bool is_nonzero_MSB;\n  bool is_nonzero_2nd_MSB;\n  bool is_nonzero_3rd_MSB;\n  \n  byte_to_find = byte_to_find & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_byte_ptr = (uint *)((int)input + 1);\n      current_byte = *(byte *)input;\n      length = length - 1;\n      input = current_byte_ptr;\n    } while (current_byte != byte_to_find);\n  }\n  else {\n    remainder = (uint)input & 7;\n    while( true ) {\n      if (remainder == 0) {\n        remainder = byte_to_find | byte_to_find << 8;\n        remainder = remainder | remainder << 0x10;\n        length_minus_remainder = length & 0xfffffff8;\n        do {\n          current_byte_ptr = input + 2;\n          length_minus_remainder = length_minus_remainder - 8;\n          current_word_xor = *input ^ remainder;\n          current_word_xor_check = input[1] ^ remainder;\n          is_zero_LSB = -((char)current_word_xor == '\\0');\n          is_zero_MSB = -((char)(current_word_xor >> 8) == '\\0');\n          is_zero_2nd_MSB = -((char)(current_word_xor >> 0x10) == '\\0');\n          is_zero_3rd_MSB = -((char)(current_word_xor >> 0x18) == '\\0');\n          current_word_xor = CONCAT13(is_zero_3rd_MSB,CONCAT12(is_zero_2nd_MSB,CONCAT11(is_zero_MSB,is_zero_LSB)));\n          is_nonzero_LSB = (char)current_word_xor_check != '\\0';\n          is_nonzero_MSB = (char)(current_word_xor_check >> 8) != '\\0';\n          is_nonzero_2nd_MSB = (char)(current_word_xor_check >> 0x10) != '\\0';\n          is_nonzero_3rd_MSB = (char)(current_word_xor_check >> 0x18) != '\\0';\n          current_word_xor_check = CONCAT13(is_nonzero_3rd_MSB * is_zero_3rd_MSB - !is_nonzero_3rd_MSB,\n                            CONCAT12(is_nonzero_2nd_MSB * is_zero_2nd_MSB - !is_nonzero_2nd_MSB,\n                                     CONCAT11(is_nonzero_MSB * is_zero_MSB - !is_nonzero_MSB,is_nonzero_LSB * is_zero_LSB - !is_nonzero_LSB)));\n          if (current_word_xor_check != 0) {\n            if (current_word_xor == 0) {\n              result = (byte *)((int)input + 5);\n              current_word_xor = current_word_xor_check;\n            }\n            else {\n              result = (byte *)((int)input + 1);\n            }\n            if ((current_word_xor & 1) == 0) {\n              is_nonzero_LSB = (current_word_xor & 0x100) == 0;\n              next_byte_ptr = result + 1;\n              if (is_nonzero_LSB) {\n                is_nonzero_LSB = (current_word_xor & 0x18000) == 0;\n                next_byte_ptr = result + 2;\n              }\n              result = next_byte_ptr;\n              if (is_nonzero_LSB) {\n                result = result + 1;\n              }\n            }\n            return result + -1;\n          }\n          input = current_byte_ptr;\n        } while (length_minus_remainder != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_byte_ptr = (uint *)((int)input + 1);\n      length = length - 1;\n      if (*(byte *)input == byte_to_find) break;\n      remainder = (uint)current_byte_ptr & 7;\n      input = current_byte_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_byte_ptr + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "input",
                "param_2": "byte_to_find",
                "param_3": "length",
                "bVar1": "current_byte",
                "cVar2": "is_zero_LSB",
                "cVar3": "is_zero_MSB",
                "cVar4": "is_zero_2nd_MSB",
                "cVar5": "is_zero_3rd_MSB",
                "pbVar6": "next_byte_ptr",
                "puVar7": "current_byte_ptr",
                "pbVar8": "result",
                "uVar9": "remainder",
                "uVar10": "length_minus_remainder",
                "uVar11": "current_word_xor",
                "uVar12": "current_word_xor_check",
                "bVar13": "is_nonzero_LSB",
                "bVar14": "is_nonzero_MSB",
                "bVar15": "is_nonzero_2nd_MSB",
                "bVar16": "is_nonzero_3rd_MSB"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "check_parameters_080002d0",
            "code": "\nundefined8 checkParameters_080002d0(int inputParam1,int inputParam2,int inputParam3,int inputParam4)\n\n{\n  undefined8 result;\n  \n  if ((inputParam4 == 0) && (inputParam3 == 0)) {\n    if (inputParam2 != 0 || inputParam1 != 0) {\n      inputParam2 = -1;\n      inputParam1 = -1;\n    }\n    return CONCAT44(inputParam2,inputParam1);\n  }\n  result = FUN_08000300();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "check_parameters_080002d0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "perform_division_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong performDivision_08000300(uint dividend,uint divisor_low,uint divisor_high,uint remainder,uint *quotient)\n\n{\n  ulonglong result;\n  uint quotient_low;\n  uint quotient_high;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  int shift_amount;\n  bool carry_flag;\n  \n  if (remainder == 0) {\n    if (divisor_low < divisor_high) {\n      shift_amount = LZCOUNT(divisor_high);\n      if (shift_amount != 0) {\n        divisor_high = divisor_high << shift_amount;\n        divisor_low = dividend >> (0x20U - shift_amount & 0xff) | divisor_low << shift_amount;\n        dividend = dividend << shift_amount;\n      }\n      temp5 = divisor_high >> 0x10;\n      temp3 = divisor_low / temp5;\n      temp2 = dividend >> 0x10 | (divisor_low - temp5 * temp3) * 0x10000;\n      temp1 = temp3 * (divisor_high & 0xffff);\n      quotient_high = temp3;\n      if (temp2 <= temp1 && temp1 - temp2 != 0) {\n        carry_flag = CARRY4(temp2,divisor_high);\n        temp2 = temp2 + divisor_high;\n        quotient_high = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= temp1 && temp1 - temp2 != 0)) {\n          quotient_high = temp3 - 2;\n          temp2 = temp2 + divisor_high;\n        }\n      }\n      temp3 = (temp2 - temp1) / temp5;\n      temp2 = dividend & 0xffff | ((temp2 - temp1) - temp5 * temp3) * 0x10000;\n      temp5 = temp3 * (divisor_high & 0xffff);\n      temp1 = temp3;\n      if (temp2 <= temp5 && temp5 - temp2 != 0) {\n        carry_flag = CARRY4(temp2,divisor_high);\n        temp2 = temp2 + divisor_high;\n        temp1 = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= temp5 && temp5 - temp2 != 0)) {\n          temp1 = temp3 - 2;\n          temp2 = temp2 + divisor_high;\n        }\n      }\n      temp2 = temp2 - temp5;\n      temp1 = temp1 | quotient_high << 0x10;\n      quotient_high = 0;\n    }\n    else {\n      if (divisor_high == 0) {\n        divisor_high = 1 / 0;\n      }\n      shift_amount = LZCOUNT(divisor_high);\n      if (shift_amount == 0) {\n        divisor_low = divisor_low - divisor_high;\n        temp2 = divisor_high >> 0x10;\n        temp6 = divisor_high & 0xffff;\n        quotient_high = 1;\n      }\n      else {\n        divisor_high = divisor_high << shift_amount;\n        temp2 = divisor_high >> 0x10;\n        temp1 = divisor_low >> (0x20U - shift_amount & 0xff);\n        temp4 = dividend >> (0x20U - shift_amount & 0xff) | divisor_low << shift_amount;\n        quotient_high = temp1 / temp2;\n        temp6 = divisor_high & 0xffff;\n        temp5 = temp4 >> 0x10 | (temp1 - temp2 * quotient_high) * 0x10000;\n        temp3 = quotient_high * temp6;\n        dividend = dividend << shift_amount;\n        temp1 = quotient_high;\n        if (temp5 <= temp3 && temp3 - temp5 != 0) {\n          carry_flag = CARRY4(temp5,divisor_high);\n          temp5 = temp5 + divisor_high;\n          temp1 = quotient_high - 1;\n          if ((carry_flag == false) && (temp5 <= temp3 && temp3 - temp5 != 0)) {\n            temp1 = quotient_high - 2;\n            temp5 = temp5 + divisor_high;\n          }\n        }\n        quotient_low = (temp5 - temp3) / temp2;\n        divisor_low = temp4 & 0xffff | ((temp5 - temp3) - temp2 * quotient_low) * 0x10000;\n        temp3 = quotient_low * temp6;\n        quotient_high = quotient_low;\n        if (divisor_low <= temp3 && temp3 - divisor_low != 0) {\n          carry_flag = CARRY4(divisor_low,divisor_high);\n          divisor_low = divisor_low + divisor_high;\n          quotient_high = quotient_low - 1;\n          if ((carry_flag == false) && (divisor_low <= temp3 && temp3 - divisor_low != 0)) {\n            quotient_high = quotient_low - 2;\n            divisor_low = divisor_low + divisor_high;\n          }\n        }\n        divisor_low = divisor_low - temp3;\n        quotient_high = quotient_high | temp1 << 0x10;\n      }\n      temp4 = divisor_low / temp2;\n      temp5 = dividend >> 0x10 | (divisor_low - temp2 * temp4) * 0x10000;\n      temp1 = temp6 * temp4;\n      temp3 = temp4;\n      if (temp5 <= temp1 && temp1 - temp5 != 0) {\n        carry_flag = CARRY4(temp5,divisor_high);\n        temp5 = temp5 + divisor_high;\n        temp3 = temp4 - 1;\n        if ((carry_flag == false) && (temp5 <= temp1 && temp1 - temp5 != 0)) {\n          temp3 = temp4 - 2;\n          temp5 = temp5 + divisor_high;\n        }\n      }\n      temp4 = (temp5 - temp1) / temp2;\n      temp2 = dividend & 0xffff | ((temp5 - temp1) - temp2 * temp4) * 0x10000;\n      temp6 = temp6 * temp4;\n      temp1 = temp4;\n      if (temp2 <= temp6 && temp6 - temp2 != 0) {\n        carry_flag = CARRY4(temp2,divisor_high);\n        temp2 = temp2 + divisor_high;\n        temp1 = temp4 - 1;\n        if ((carry_flag == false) && (temp2 <= temp6 && temp6 - temp2 != 0)) {\n          temp1 = temp4 - 2;\n          temp2 = temp2 + divisor_high;\n        }\n      }\n      temp2 = temp2 - temp6;\n      temp1 = temp1 | temp3 << 0x10;\n    }\n    if (quotient != (uint *)0x0) {\n      *quotient = temp2 >> shift_amount;\n      quotient[1] = 0;\n      return CONCAT44(quotient_high,temp1);\n    }\n  }\n  else if (divisor_low < remainder) {\n    if (quotient != (uint *)0x0) {\n      *quotient = dividend;\n      quotient[1] = divisor_low;\n      return 0;\n    }\n    temp1 = 0;\n    quotient_high = 0;\n  }\n  else {\n    shift_amount = LZCOUNT(remainder);\n    if (shift_amount != 0) {\n      temp5 = 0x20 - shift_amount;\n      quotient_high = divisor_high >> (temp5 & 0xff) | remainder << shift_amount;\n      temp6 = quotient_high >> 0x10;\n      temp1 = divisor_low >> (temp5 & 0xff);\n      quotient_low = dividend >> (temp5 & 0xff) | divisor_low << shift_amount;\n      temp4 = temp1 / temp6;\n      temp3 = quotient_low >> 0x10 | (temp1 - temp6 * temp4) * 0x10000;\n      temp2 = temp4 * (quotient_high & 0xffff);\n      dividend = dividend << shift_amount;\n      temp1 = temp4;\n      if (temp3 <= temp2 && temp2 - temp3 != 0) {\n        carry_flag = CARRY4(temp3,quotient_high);\n        temp3 = temp3 + quotient_high;\n        temp1 = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp2 && temp2 - temp3 != 0)) {\n          temp1 = temp4 - 2;\n          temp3 = temp3 + quotient_high;\n        }\n      }\n      temp4 = (temp3 - temp2) / temp6;\n      temp3 = quotient_low & 0xffff | ((temp3 - temp2) - temp6 * temp4) * 0x10000;\n      temp6 = temp4 * (quotient_high & 0xffff);\n      temp2 = temp4;\n      if (temp3 <= temp6 && temp6 - temp3 != 0) {\n        carry_flag = CARRY4(temp3,quotient_high);\n        temp3 = temp3 + quotient_high;\n        temp2 = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp6 && temp6 - temp3 != 0)) {\n          temp2 = temp4 - 2;\n          temp3 = temp3 + quotient_high;\n        }\n      }\n      temp2 = temp2 | temp1 << 0x10;\n      result = (ulonglong)temp2 * (ulonglong)(divisor_high << shift_amount);\n      if (CONCAT44(temp3 - temp6,dividend) < result) {\n        result = result - CONCAT44(quotient_high,divisor_high << shift_amount);\n        temp2 = temp2 - 1;\n      }\n      if (quotient != (uint *)0x0) {\n        temp1 = ((temp3 - temp6) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *quotient = temp1 << (temp5 & 0xff) | dividend - (uint)result >> shift_amount;\n        quotient[1] = temp1 >> shift_amount;\n      }\n      return (ulonglong)temp2;\n    }\n    if ((remainder < divisor_low) || (divisor_high <= dividend)) {\n      carry_flag = dividend < divisor_high;\n      dividend = dividend - divisor_high;\n      divisor_low = (divisor_low - remainder) - (uint)carry_flag;\n      temp1 = 1;\n    }\n    else {\n      temp1 = 0;\n    }\n    quotient_high = 0;\n    if (quotient != (uint *)0x0) {\n      *quotient = dividend;\n      quotient[1] = divisor_low;\n      return (ulonglong)temp1;\n    }\n  }\n  return CONCAT44(quotient_high,temp1);\n}\n\n",
            "renaming": {
                "FUN_08000300": "perform_division_08000300",
                "param_1": "dividend",
                "param_2": "divisor_low",
                "param_3": "divisor_high",
                "param_4": "remainder",
                "param_5": "quotient",
                "uVar1": "result",
                "uVar2": "quotient_low",
                "uVar3": "quotient_high",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "iVar10": "shift_amount",
                "bVar11": "carry_flag"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "get_system_information_080005e0",
            "code": "\nvoid getSystemInformation_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "get_system_information_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "process_data_080005e4",
            "code": "\nundefined4 processData_080005e4(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  returnValue = FUN_080005e0(1,input1,0,0,input4);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "process_data_080005e4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "initialize_data_08000600",
            "code": "\nvoid initializeData_08000600(int **data,undefined4 value)\n\n{\n  char dataType;\n  int result;\n  \n  dataType = *(char *)((int)data + 5);\n  if (dataType == '\\x02') {\n    *data = &DAT_20000338;\n  }\n  else if (dataType == '\\x03') {\n    *data = &DAT_20000338;\n  }\n  else if (dataType == '\\x01') {\n    *data = &DAT_20000338;\n  }\n  else {\n    *data = &DAT_20000338;\n  }\n  FUN_08004388(*data,value,6);\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_08004110(*(byte *)((int)data + 6),1);\n    FUN_080041bc(*(undefined *)((int)data + 6),0);\n  }\n  do {\n    result = (**(code **)(**data + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)data + 0x49) = 0;\n  *(undefined *)((int)data + 0x4a) = 0;\n  *(undefined2 *)(data + 0x15) = 0;\n  *(undefined2 *)((int)data + 0x52) = 0;\n  *(undefined2 *)(data + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "initialize_data_08000600",
                "param_1": "data",
                "param_2": "value",
                "cVar1": "dataType",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "initialize_data_0800066c",
            "code": "\nvoid initializeData_0800066c(int dataBuffer,undefined value,int count,undefined data)\n\n{\n  *(undefined *)(dataBuffer + 4) = value;\n  if (3 < count) {\n    count = 0;\n  }\n  *(char *)(dataBuffer + 5) = (char)count;\n  *(undefined *)(dataBuffer + 6) = data;\n  *(undefined2 *)(dataBuffer + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "initialize_data_0800066c",
                "param_1": "dataBuffer",
                "param_2": "value",
                "param_3": "count",
                "param_4": "data"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_variable_08000682",
            "code": "\nundefined4 initialize_variable_08000682(undefined4 input)\n\n{\n  FUN_0800066c();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_variable_08000682",
                "param_1": "input"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "handle_param_08000690",
            "code": "\nvoid handle_param_08000690(int input_flag,int input_value,undefined4 arg_1,undefined4 arg_2)\n\n{\n  if (input_flag != 1) {\n    return;\n  }\n  if (input_value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,arg_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "handle_param_08000690",
                "param_1": "input_flag",
                "param_2": "input_value",
                "param_3": "arg_1",
                "param_4": "arg_2"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint processData_080006b4(int **data)\n\n{\n  bool bufferFull;\n  undefined value;\n  int result;\n  byte bufferIndex;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    bufferFull = false;\n    while (result = (**(code **)(**data + 8))(), result != 0) {\n      bufferIndex = *(byte *)((int)data + 0x49);\n      value = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + bufferIndex + 9) = value;\n      bufferIndex = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = bufferIndex;\n      if (0x3f < bufferIndex) {\n        bufferFull = true;\n      }\n    }\n  }\n  else {\n    bufferFull = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (bufferFull) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "bufferFull",
                "uVar2": "value",
                "iVar3": "result",
                "bVar4": "bufferIndex"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_checksum_08000728",
            "code": "\nuint calculate_checksum_08000728(int data_address,int data_length)\n\n{\n  byte bit_count;\n  uint checksum;\n  uint bit;\n  uint index;\n  \n  checksum = 0xffff;\n  for (index = 0; (int)index < data_length; index = index + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(data_address + index + 9);\n    for (bit_count = 1; bit_count < 9; bit_count = bit_count + 1) {\n      bit = checksum & 1;\n      checksum = checksum >> 1;\n      if (bit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "param_1": "data_address",
                "param_2": "data_length",
                "bVar1": "bit_count",
                "uVar2": "checksum",
                "uVar3": "bit",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_array_0800076c",
            "code": "\nvoid updateArray_0800076c(int **array,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 ushortValue;\n  int index;\n  uint byteValue;\n  \n  byteValue = (uint)*(byte *)((int)array + 0x49);\n  ushortValue = FUN_08000728(array,byteValue,param3,param4,param4);\n  *(char *)((int)array + byteValue + 9) = (char)((ushort)ushortValue >> 8);\n  byteValue = byteValue + 1 & 0xff;\n  *(char *)((int)array + byteValue + 9) = (char)ushortValue;\n  *(char *)((int)array + 0x49) = (char)byteValue + '\\x01';\n  if (1 < *(byte *)((int)array + 6)) {\n    FUN_080041bc(*(byte *)((int)array + 6),1);\n  }\n  if (*(byte *)((int)array + 5) < 4) {\n    (**(code **)(**array + 4))(*array,(int)array + 9,*(undefined *)((int)array + 0x49));\n  }\n  if (1 < *(byte *)((int)array + 6)) {\n    FUN_080041bc(*(byte *)((int)array + 6),0);\n  }\n  if (*(byte *)((int)array + 5) < 4) {\n    do {\n      index = (**(code **)(**array + 0xc))();\n    } while (-1 < index);\n  }\n  *(undefined *)((int)array + 0x49) = 0;\n  index = FUN_08004204();\n  array[0x17] = (int *)(index + (uint)*(ushort *)((int)array + 0x56));\n  *(short *)((int)array + 0x52) = *(short *)((int)array + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_array_0800076c",
                "param_1": "array",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "ushortValue",
                "iVar2": "index",
                "uVar3": "byteValue"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_parameter_validity_080007f0",
            "code": "\nundefined4 checkParameterValidity_080007f0(int inputStruct,undefined4 param2,uint param3,undefined4 param4)\n\n{\n  bool isValid;\n  byte byteValue;\n  char charValue1;\n  char charValue2;\n  int result1;\n  uint counter;\n  int result2;\n  \n  counter = 0;\n  do {\n    if (7 < counter) {\n      isValid = false;\nLAB_0800080a:\n      if (!isValid) {\n        *(short *)(inputStruct + 0x54) = *(short *)(inputStruct + 0x54) + 1;\n        return 1;\n      }\n      result2 = *(byte *)(inputStruct + 10) - 1;\n      switch(*(byte *)(inputStruct + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        charValue1 = FUN_08004640(*(undefined *)(inputStruct + 0xb),*(undefined *)(inputStruct + 0xc),param3,\n                             result2,param4);\n        charValue2 = FUN_08004640(*(undefined *)(inputStruct + 0xd),*(undefined *)(inputStruct + 0xe));\n        if (*(byte *)(inputStruct + 0x60) < (byte)(charValue2 + charValue1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        result2 = FUN_08004640(*(undefined *)(inputStruct + 0xb),*(undefined *)(inputStruct + 0xc),param3,\n                             result2,param4);\n        if ((uint)*(byte *)(inputStruct + 0x60) < (uint)(result2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        byteValue = FUN_08004640(*(undefined *)(inputStruct + 0xb),*(undefined *)(inputStruct + 0xc),param3,\n                             result2,param4);\n        if (*(byte *)(inputStruct + 0x60) < byteValue) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    param3 = (uint)*(byte *)(inputStruct + 10);\n    if ((byte)(&DAT_08005a10)[counter] == param3) {\n      isValid = true;\n      goto LAB_0800080a;\n    }\n    counter = counter + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  result2 = FUN_08004640(*(undefined *)(inputStruct + 0xb),*(undefined *)(inputStruct + 0xc),param3,result2,\n                       param4);\n  result1 = FUN_08004640(*(undefined *)(inputStruct + 0xd),*(undefined *)(inputStruct + 0xe));\n  if ((uint)*(byte *)(inputStruct + 0x60) <\n      (((uint)(result2 << 0xc) >> 0x10) + ((uint)(result1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_parameter_validity_080007f0",
                "param_1": "inputStruct",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "bVar2": "byteValue",
                "cVar3": "charValue1",
                "cVar4": "charValue2",
                "iVar5": "result1",
                "uVar6": "counter",
                "iVar7": "result2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataStart,undefined newValue)\n\n{\n  *(undefined *)(dataStart + 9) = *(undefined *)(dataStart + 4);\n  *(byte *)(dataStart + 10) = *(byte *)(dataStart + 10) ^ 0x80;\n  *(undefined *)(dataStart + 0xb) = newValue;\n  *(undefined *)(dataStart + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataStart",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "reverse_and_update_bits_080008e2",
            "code": "\nint reverse_and_update_bits_080008e2(int data_ptr,int lookup_table_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint num_bits;\n  uint index;\n  uint bit_index;\n  char bit_value;\n  int offset;\n  \n  result = FUN_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  num_bits = FUN_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  bit_value = (char)((num_bits << 0x15) >> 0x18);\n  if ((num_bits & 7) != 0) {\n    bit_value = bit_value + '\\x01';\n  }\n  *(char *)(data_ptr + 0xb) = bit_value;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  bit_index = 0;\n  for (index = 0; (int)index < (int)num_bits; index = index + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(lookup_table_ptr + ((index + result) * 0x100000 >> 0x18) * 2) >>\n         (index + result & 0xf) & 1U) == 0) {\n      offset = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) & ~(byte)(1 << bit_index);\n    }\n    else {\n      offset = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) | (byte)(1 << bit_index);\n    }\n    bit_index = bit_index + 1 & 0xff;\n    if (7 < bit_index) {\n      *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n      bit_index = 0;\n    }\n  }\n  if ((num_bits & 7) != 0) {\n    *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n  }\n  bit_value = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(bit_value + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "reverse_and_update_bits_080008e2",
                "param_1": "data_ptr",
                "param_2": "lookup_table_ptr",
                "iVar1": "result",
                "uVar2": "num_bits",
                "uVar3": "index",
                "uVar4": "bit_index",
                "cVar5": "bit_value",
                "iVar6": "offset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "extract_decode_data_08000998",
            "code": "\nint extract_decode_data_08000998(int data_ptr,int input_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  byte byte_var;\n  char char_var;\n  byte result_1;\n  byte result_2;\n  uint index;\n  uint next_index;\n  \n  result_1 = FUN_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  result_2 = FUN_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  *(byte *)(data_ptr + 0xb) = result_2 << 1;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  for (index = (uint)result_1; index < (uint)result_1 + (uint)result_2; index = index + 1 & 0xff) {\n    byte_var = *(byte *)(data_ptr + 0x49);\n    *(char *)(data_ptr + (uint)byte_var + 9) = (char)((ushort)*(undefined2 *)(input_ptr + index * 2) >> 8)\n    ;\n    next_index = byte_var + 1 & 0xff;\n    char_var = (char)next_index;\n    *(char *)(data_ptr + 0x49) = char_var;\n    *(undefined *)(data_ptr + next_index + 9) = *(undefined *)(input_ptr + index * 2);\n    *(char *)(data_ptr + 0x49) = char_var + '\\x01';\n  }\n  char_var = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(char_var + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "extract_decode_data_08000998",
                "param_1": "data_ptr",
                "param_2": "input_ptr",
                "bVar1": "byte_var",
                "cVar2": "char_var",
                "bVar3": "result_1",
                "bVar4": "result_2",
                "uVar5": "index",
                "uVar6": "next_index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_flags_and_set_value_08000a00",
            "code": "\nundefined4 updateFlagsAndSetValue_08000a00(int inputOffset,int outputOffset,undefined4 param3,undefined4 param4)\n\n{\n  uint result1;\n  uint shiftedResult1;\n  \n  result1 = FUN_08004640(*(undefined *)(inputOffset + 0xb),*(undefined *)(inputOffset + 0xc),param3,param4,\n                       param4);\n  shiftedResult1 = (result1 << 0x14) >> 0x18;\n  if (*(char *)(inputOffset + 0xd) == -1) {\n    *(ushort *)(outputOffset + shiftedResult1 * 2) =\n         (ushort)(1 << (result1 & 0xf)) | *(ushort *)(outputOffset + shiftedResult1 * 2);\n  }\n  else {\n    *(ushort *)(outputOffset + shiftedResult1 * 2) =\n         *(ushort *)(outputOffset + shiftedResult1 * 2) & ~(ushort)(1 << (result1 & 0xf));\n  }\n  *(undefined *)(inputOffset + 0x49) = 6;\n  FUN_0800076c(inputOffset);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_flags_and_set_value_08000a00",
                "param_1": "inputOffset",
                "param_2": "outputOffset",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "shiftedResult1"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "copy_data_and_set_flag_08000a4e",
            "code": "\nundefined4 copyDataAndSetFlag_08000a4e(int sourceBuffer,int destinationBuffer)\n\n{\n  byte firstByte;\n  undefined2 secondByte;\n  \n  firstByte = FUN_08004640(*(undefined *)(sourceBuffer + 0xb),*(undefined *)(sourceBuffer + 0xc));\n  secondByte = FUN_08004640(*(undefined *)(sourceBuffer + 0xd),*(undefined *)(sourceBuffer + 0xe));\n  *(undefined2 *)(destinationBuffer + (uint)firstByte * 2) = secondByte;\n  *(undefined *)(sourceBuffer + 0x49) = 6;\n  FUN_0800076c(sourceBuffer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "copy_data_and_set_flag_08000a4e",
                "param_1": "sourceBuffer",
                "param_2": "destinationBuffer",
                "bVar1": "firstByte",
                "uVar2": "secondByte"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "decode_and_store_bits_08000a7a",
            "code": "\nundefined4 decodeAndStoreBits_08000a7a(int inputAddress,int outputAddress,undefined4 param3,undefined4 param4)\n\n{\n  int firstResult;\n  int secondResult;\n  uint counter;\n  uint bitIndex;\n  uint bitPosition;\n  uint byteIndex;\n  uint bytePointer;\n  \n  firstResult = FUN_08004640(*(undefined *)(inputAddress + 0xb),*(undefined *)(inputAddress + 0xc),param3,param4,\n                       param4);\n  secondResult = FUN_08004640(*(undefined *)(inputAddress + 0xd),*(undefined *)(inputAddress + 0xe));\n  bitIndex = 0;\n  bytePointer = 7;\n  for (counter = 0; (int)counter < secondResult; counter = counter + 1 & 0xffff) {\n    byteIndex = (counter + firstResult) * 0x100000 >> 0x18;\n    bitPosition = counter + firstResult & 0xf;\n    if (((int)(uint)*(byte *)(inputAddress + bytePointer + 9) >> bitIndex & 1U) == 0) {\n      *(ushort *)(outputAddress + byteIndex * 2) = *(ushort *)(outputAddress + byteIndex * 2) & ~(ushort)(1 << bitPosition);\n    }\n    else {\n      *(ushort *)(outputAddress + byteIndex * 2) = (ushort)(1 << bitPosition) | *(ushort *)(outputAddress + byteIndex * 2);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      bytePointer = bytePointer + 1 & 0xff;\n      bitIndex = 0;\n    }\n  }\n  *(undefined *)(inputAddress + 0x49) = 6;\n  FUN_0800076c(inputAddress);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "decode_and_store_bits_08000a7a",
                "param_1": "inputAddress",
                "param_2": "outputAddress",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "firstResult",
                "iVar2": "secondResult",
                "uVar3": "counter",
                "uVar4": "bitIndex",
                "uVar5": "bitPosition",
                "uVar6": "byteIndex",
                "uVar7": "bytePointer"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "reorder_and_increment_08000b04",
            "code": "\nint reorderAndIncrement_08000b04(int inputArray,int outputArray)\n\n{\n  byte value1;\n  byte value2;\n  char charValue;\n  undefined2 returnValue;\n  uint index;\n  \n  value1 = *(byte *)(inputArray + 0xc);\n  value2 = *(byte *)(inputArray + 0xe);\n  *(undefined *)(inputArray + 0xd) = 0;\n  *(byte *)(inputArray + 0xe) = value2;\n  *(undefined *)(inputArray + 0x49) = 6;\n  for (index = 0; index < value2; index = index + 1 & 0xff) {\n    returnValue = FUN_08004640(*(undefined *)(index * 2 + inputArray + 0x10),\n                         *(undefined *)(inputArray + (index + 4) * 2 + 9));\n    *(undefined2 *)(outputArray + (value1 + index) * 2) = returnValue;\n  }\n  charValue = *(char *)(inputArray + 0x49);\n  FUN_0800076c(inputArray);\n  return (int)(char)(charValue + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "reorder_and_increment_08000b04",
                "param_1": "inputArray",
                "param_2": "outputArray",
                "bVar1": "value1",
                "bVar2": "value2",
                "cVar3": "charValue",
                "uVar4": "returnValue",
                "uVar5": "index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "process_data_08000b54",
            "code": "\nint process_data_08000b54(int **data_ptr,int *input_ptr,undefined4 value)\n\n{\n  byte result_byte;\n  int result_int;\n  uint temp_var;\n  int result;\n  \n  data_ptr[19] = input_ptr;\n  *(char *)(data_ptr + 0x18) = (char)value;\n  if (*(byte *)((int)data_ptr + 5) < 4) {\n    result_byte = (**(code **)(**data_ptr + 8))();\n    temp_var = (uint)result_byte;\n  }\n  if (temp_var == 0) {\n    result = 0;\n  }\n  else if ((int)temp_var < 8) {\n    result = 0;\n  }\n  else {\n    result = FUN_080006b4(data_ptr);\n    *(char *)(data_ptr + 2) = (char)result;\n    if (*(char *)((int)data_ptr + 9) == *(char *)(data_ptr + 1)) {\n      result_int = FUN_080007f0(data_ptr);\n      if (result_int < 1) {\n        result_int = FUN_08004204();\n        data_ptr[23] = (int *)((uint)*(ushort *)((int)data_ptr + 0x56) + result_int);\n        *(undefined *)(data_ptr + 2) = 0;\n        switch(*(undefined *)((int)data_ptr + 10)) {\n        case 1:\n        case 2:\n          result = FUN_080008e2(data_ptr,input_ptr,value);\n          break;\n        case 3:\n        case 4:\n          result = FUN_08000998(data_ptr,input_ptr,value);\n          break;\n        case 5:\n          result = FUN_08000a00(data_ptr,input_ptr,value);\n          break;\n        case 6:\n          result = FUN_08000a4e(data_ptr,input_ptr,value);\n          break;\n        case 0xf:\n          result = FUN_08000a7a(data_ptr,input_ptr,value);\n          break;\n        case 0x10:\n          result = FUN_08000b04(data_ptr,input_ptr,value);\n        }\n      }\n      else {\n        if (result_int != 0xff) {\n          FUN_080008cc(data_ptr,result_int);\n          FUN_0800076c(data_ptr);\n        }\n        *(char *)(data_ptr + 2) = (char)result_int;\n        result = (int)(char)result_int;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "param_1": "data_ptr",
                "param_2": "input_ptr",
                "param_3": "value",
                "bVar1": "result_byte",
                "iVar2": "result_int",
                "unaff_r5": "temp_var",
                "iVar3": "result",
                "param_1[0x13]": "data_ptr[19]",
                "param_1[0x17]": "data_ptr[23]"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_system_08000c4c",
            "code": "\nvoid initializeSystem_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_system_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_data_08000c64",
            "code": "\nvoid initializeData_08000c64(void)\n\n{\n  undefined4 inputValue;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,inputValue,inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_data_08000c64",
                "in_r3": "inputValue"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_system_08000c8c",
            "code": "\n\n\nvoid initializeSystem_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 optionFlag1;\n  undefined4 optionFlag2;\n  undefined4 optionFlag3;\n  undefined4 optionFlag4;\n  undefined4 optionFlag5;\n  undefined4 optionFlag6;\n  undefined4 optionFlag7;\n  undefined4 optionFlag8;\n  undefined4 optionFlag9;\n  undefined4 optionFlag10;\n  undefined4 optionFlag11;\n  undefined4 optionFlag12;\n  undefined4 optionFlag13;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  optionFlag1 = 1;\n  optionFlag2 = 0x50000;\n  optionFlag3 = 2;\n  optionFlag4 = 0x400000;\n  optionFlag5 = 8;\n  optionFlag6 = 0x150;\n  optionFlag7 = 2;\n  optionFlag8 = 7;\n  FUN_0800201c(&optionFlag1);\n  FUN_08001f9c();\n  optionFlag9 = 0xf;\n  optionFlag10 = 2;\n  optionFlag11 = 0;\n  optionFlag12 = 0x1400;\n  optionFlag13 = 0x1000;\n  FUN_08002488(&optionFlag9,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_54": "optionFlag1",
                "local_50": "optionFlag2",
                "local_3c": "optionFlag3",
                "local_38": "optionFlag4",
                "local_34": "optionFlag5",
                "local_30": "optionFlag6",
                "local_2c": "optionFlag7",
                "local_28": "optionFlag8",
                "local_24": "optionFlag9",
                "local_20": "optionFlag10",
                "local_1c": "optionFlag11",
                "local_18": "optionFlag12",
                "local_14": "optionFlag13"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_application_08000d8e",
            "code": "\nvoid initialize_application_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_application_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "check_input_and_initialize_08000d98",
            "code": "\nundefined4 checkInputAndInitialize_08000d98(uint input)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,input,0);\n  DAT_20000028 = input;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "check_input_and_initialize_08000d98",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_system_08000de4",
            "code": "\n\n\nundefined4 initializeSystem_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_system_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "calculate_updated_sum_08000e18",
            "code": "\nvoid calculateUpdatedSum_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "calculate_updated_sum_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_global_data_08000e30",
            "code": "\nundefined4 getGlobalData_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_global_data_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_memory_address_08000e3c",
            "code": "\n\n\nvoid updateMemoryAddress_08000e3c(uint input)\n\n{\n  _DAT_e000ed0c = (input & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_memory_address_08000e3c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_character_08000e60",
            "code": "\n\n\nvoid updateCharacter_08000e60(uint characterIndex,uint bitmask1,uint bitmask2)\n\n{\n  uint shiftAmount;\n  uint shiftedValue;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftedValue = 7 - shiftAmount;\n  if (3 < shiftedValue) {\n    shiftedValue = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitmask1 & (1 << (shiftedValue & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & bitmask2;\n  if ((int)characterIndex < 0) {\n    *(char *)((characterIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(characterIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_character_08000e60",
                "param_1": "characterIndex",
                "param_2": "bitmask1",
                "param_3": "bitmask2",
                "uVar1": "shiftAmount",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_08000ec4",
            "code": "\nvoid setBit_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_08000ec4",
                "param_1": "index"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "set_parameters_08000ee0",
            "code": "\n\n\nundefined4 set_parameters_08000ee0(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "set_parameters_08000ee0",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_08000f0c",
            "code": "\nvoid setBit_08000f0c(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_08000f0c",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_08000f2c",
            "code": "\n\n\nvoid updateFlag_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "initialize_application_08000f4e",
            "code": "\nvoid initialize_application_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "initialize_application_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "set_default_value_08000f56",
            "code": "\nundefined4 setDefaultValue_08000f56(int inputValue)\n\n{\n  if (inputValue != 0) {\n    *(undefined *)(inputValue + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(inputValue + 0x10) = 0;\n    *(undefined *)(inputValue + 4) = 0;\n    *(undefined *)(inputValue + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "set_default_value_08000f56",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **data,uint bitPosition)\n\n{\n  **data = **data & ~(1 << (bitPosition & 0xff));\n  *(undefined *)(data + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "data",
                "param_2": "bitPosition"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_param_08000f8c",
            "code": "\nundefined4 updateParam_08000f8c(uint **paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x35) != '\\x02') {\n    paramElement = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)paramArray + 0x35) = 5;\n  **paramArray = **paramArray & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_param_08000f8c",
                "param_1": "paramArray",
                "param_1[0x15]": "paramElement"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_register_values_08000fb4",
            "code": "\n\n\nvoid updateRegisterValues_08000fb4(uint *registerValues,uint *inputValues)\n\n{\n  uint tempValue1;\n  uint tempValue2;\n  uint loopIndex;\n  uint tempValue3;\n  uint tempValue4;\n  int index1;\n  uint tempValue5;\n  int index2;\n  \n  for (loopIndex = 0; loopIndex < 0x10; loopIndex = loopIndex + 1) {\n    tempValue2 = 1 << (loopIndex & 0xff);\n    tempValue3 = tempValue2 & *inputValues;\n    tempValue1 = _DAT_40013c0c;\n    if (tempValue2 == tempValue3) {\n      if ((inputValues[1] == 2) || (inputValues[1] == 0x12)) {\n        index1 = (loopIndex >> 3) + 8;\n        index2 = (loopIndex & 7) << 2;\n        registerValues[index1] = registerValues[index1] & ~(0xf << index2) | inputValues[4] << index2;\n      }\n      tempValue5 = loopIndex << 1;\n      tempValue1 = ~(3 << (tempValue5 & 0xff));\n      *registerValues = *registerValues & tempValue1 | (inputValues[1] & 3) << (tempValue5 & 0xff);\n      tempValue4 = inputValues[1];\n      if (((tempValue4 - 1 < 2) || (tempValue4 == 0x11)) || (tempValue4 == 0x12)) {\n        registerValues[2] = registerValues[2] & tempValue1 | inputValues[3] << (tempValue5 & 0xff);\n        registerValues[1] = registerValues[1] & ~tempValue2 | ((inputValues[1] << 0x1b) >> 0x1f) << (loopIndex & 0xff);\n      }\n      registerValues[3] = tempValue1 & registerValues[3] | inputValues[2] << (tempValue5 & 0xff);\n      tempValue1 = _DAT_40013c0c;\n      if ((inputValues[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index2 = (loopIndex & 3) << 2;\n        if (registerValues == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (registerValues == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (registerValues == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (registerValues == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (registerValues == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (registerValues == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (registerValues == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (registerValues == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (registerValues == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (registerValues == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index2) | index1 << index2;\n        tempValue1 = ~tempValue3;\n        tempValue2 = _DAT_40013c00 & tempValue1;\n        if ((inputValues[1] & 0x10000) != 0) {\n          tempValue2 = tempValue3 | _DAT_40013c00;\n        }\n        tempValue4 = tempValue1 & _DAT_40013c04;\n        if ((inputValues[1] & 0x20000) != 0) {\n          tempValue4 = tempValue3 | _DAT_40013c04;\n        }\n        tempValue5 = tempValue1 & _DAT_40013c08;\n        if ((inputValues[1] & 0x100000) != 0) {\n          tempValue5 = tempValue3 | _DAT_40013c08;\n        }\n        _DAT_40013c00 = tempValue2;\n        _DAT_40013c04 = tempValue4;\n        _DAT_40013c08 = tempValue5;\n        tempValue1 = tempValue1 & _DAT_40013c0c;\n        if ((inputValues[1] & 0x200000) != 0) {\n          tempValue1 = tempValue3 | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = tempValue1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_register_values_08000fb4",
                "param_1": "registerValues",
                "param_2": "inputValues",
                "uVar1": "tempValue1",
                "uVar2": "tempValue2",
                "uVar3": "loopIndex",
                "uVar4": "tempValue3",
                "uVar5": "tempValue4",
                "iVar6": "index1",
                "uVar7": "tempValue5",
                "iVar8": "index2"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "set_param_based_on_condition_08001198",
            "code": "\nvoid setParamBasedOnCondition_08001198(int baseAddress,int value,int condition)\n\n{\n  if (condition == 0) {\n    *(int *)(baseAddress + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(baseAddress + 0x18) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "set_param_based_on_condition_08001198",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "condition"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_data_and_call_function_080011a4",
            "code": "\n\n\nvoid update_data_and_call_function_080011a4(uint data)\n\n{\n  if ((_DAT_40013c14 & data) != 0) {\n    _DAT_40013c14 = data;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_data_and_call_function_080011a4",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "set_flag_based_on_conditions_080011c0",
            "code": "\nundefined4 setFlagBasedOnConditions_080011c0(int *inputArray)\n\n{\n  if (*(char *)((int)inputArray + 0x3e) == '@') {\n    if (inputArray[20] == 0) {\n      *(uint *)(*inputArray + 0x10) = inputArray[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*inputArray + 0x10) = inputArray[17] & 0xffU | 1;\n    }\n  }\n  else if (inputArray[4] == 0x4000) {\n    if (*(char *)((int)inputArray + 0x3d) == '!') {\n      *(uint *)(*inputArray + 0x10) = inputArray[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*inputArray + 0x10) = inputArray[17] & 0xffU | 1;\n    }\n  }\n  else if (inputArray[20] == 0) {\n    *(uint *)(*inputArray + 0x10) = (uint)(inputArray[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (inputArray[20] == 1) {\n    *(uint *)(*inputArray + 0x10) = (uint)(inputArray[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "set_flag_based_on_conditions_080011c0",
                "param_1": "inputArray",
                "param_1[0x14]": "inputArray[20]",
                "param_1[0x11]": "inputArray[17]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "update_parameter_value_0800124a",
            "code": "\nundefined4 updateParameterValue_0800124a(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0x10) = inputArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "update_parameter_value_0800124a",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "process_flags_08001256",
            "code": "\nundefined4 processFlags_08001256(uint **flags)\n\n{\n  uint *tempPtr;\n  \n  tempPtr = flags[0xb];\n  if ((*(char *)((int)flags + 0x3d) == '\\\"') &&\n     ((flags[0x14] != (uint *)0x0 || (*(char *)((int)flags + 0x3e) != '@')))) {\n    if ((flags[0x14] == (uint *)0x0) && (flags[4] == (uint *)0xc000)) {\n      **flags = **flags | 0x100;\n      flags[0x14] = (uint *)((int)flags[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)flags + 0x2a) == 0) {\n        **flags = **flags | 0x200;\n      }\n      else if (*(short *)((int)flags + 0x2a) == 1) {\n        if (tempPtr == (uint *)0xffff0000) {\n          **flags = **flags & 0xfffffbff;\n          tempPtr = *flags;\n          if ((tempPtr[1] & 0x800) == 0) {\n            *tempPtr = *tempPtr | 0x200;\n          }\n          else {\n            *tempPtr = *tempPtr & 0xfffffbff;\n          }\n        }\n        else if (((tempPtr == (uint *)0x4) || (tempPtr == (uint *)0x8)) ||\n                (flags[0xc] == (uint *)0x12)) {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x200;\n        }\n        else if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)flags + 0x2a) == 2) {\n        if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x800;\n        }\n        tempPtr = *flags;\n        if ((tempPtr[1] & 0x800) != 0) {\n          tempPtr[1] = tempPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **flags = **flags | 0x400;\n        tempPtr = *flags;\n        if ((tempPtr[1] & 0x800) != 0) {\n          tempPtr[1] = tempPtr[1] | 0x1000;\n        }\n      }\n      flags[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "process_flags_08001256",
                "param_1": "flags",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_data_08001420",
            "code": "\nundefined4 updateData_08001420(int *data)\n\n{\n  byte *bytePtr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)bytePtrArray;\n    bytePtrArray = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_data_08001420",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "param_1[9]": "bytePtrArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_data_08001440",
            "code": "\nundefined4 updateData_08001440(int *data)\n\n{\n  undefined *pData;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    pData = (undefined *)data[9];\n    data[9] = (int)(pData + 1);\n    *pData = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_data_08001440",
                "param_1": "data",
                "puVar1": "pData",
                "param_1[9]": "data[9]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "check_and_initialize_data_08001460",
            "code": "\nundefined4 checkAndInitializeData_08001460(uint **ptrToData,uint *ptrToParam2,int param3,uint *ptrToParam4)\n\n{\n  undefined4 result;\n  uint *ptrVar;\n  \n  if (*(char *)((int)ptrToData + 0x3d) == '(') {\n    if (ptrToParam2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptrToData + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptrToData + 0xf) = 1;\n      ptrVar = *ptrToData;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **ptrToData = **ptrToData & 0xfffff7ff;\n      *(undefined *)((int)ptrToData + 0x3d) = 0x29;\n      *(undefined *)((int)ptrToData + 0x3e) = 0x20;\n      result = 0;\n      ptrToDataPlus0x10 = (uint *)0x0;\n      param2Value = ptrToParam2;\n      *(short *)((int)ptrToData + 0x2a) = param3AsShort;\n      param4Value = ptrToParam4;\n      *(undefined2 *)(ptrToData + 10) = *(undefined2 *)((int)ptrToData + 0x2a);\n      *(undefined *)(ptrToData + 0xf) = 0;\n      (*ptrToData)[1] = (*ptrToData)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001460": "check_and_initialize_data_08001460",
                "param_1": "ptrToData",
                "param_2": "ptrToParam2",
                "param_3": "param3",
                "param_4": "ptrToParam4",
                "uVar1": "result",
                "puVar2": "ptrVar",
                "param_1[0x10]": "ptrToDataPlus0x10",
                "param_1[9]": "param2Value",
                "param_1[0xb]": "param4Value",
                "(short)param_3": "param3AsShort"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "check_and_update_params_080014ec",
            "code": "\nundefined4 check_and_update_params_080014ec(uint **ptr_param_list,uint *ptr_param_2,int param_length,uint *ptr_param_4)\n\n{\n  undefined4 result;\n  uint *ptr_var2;\n  \n  if (*(char *)((int)ptr_param_list + 0x3d) == '(') {\n    if (ptr_param_2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptr_param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptr_param_list + 0xf) = 1;\n      ptr_var2 = *ptr_param_list;\n      if ((*ptr_var2 & 1) == 0) {\n        *ptr_var2 = *ptr_var2 | 1;\n      }\n      **ptr_param_list = **ptr_param_list & 0xfffff7ff;\n      *(undefined *)((int)ptr_param_list + 0x3d) = 0x2a;\n      *(undefined *)((int)ptr_param_list + 0x3e) = 0x20;\n      result = 0;\n      ptr_param_list[0x10] = (uint *)0x0;\n      ptr_param_list[9] = ptr_param_2;\n      *(short *)((int)ptr_param_list + 0x2a) = (short)param_length;\n      ptr_param_list[0xb] = ptr_param_4;\n      *(undefined2 *)(ptr_param_list + 10) = *(undefined2 *)((int)ptr_param_list + 0x2a);\n      *(undefined *)(ptr_param_list + 0xf) = 0;\n      (*ptr_param_list)[1] = (*ptr_param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "check_and_update_params_080014ec",
                "param_1": "ptr_param_list",
                "param_2": "ptr_param_2",
                "param_3": "param_length",
                "param_4": "ptr_param_4",
                "uVar1": "result",
                "puVar2": "ptr_var2"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "set_flags_and_values_08001578",
            "code": "\nundefined4 setFlagsAndValues_08001578(uint **ptr_to_ptr)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)ptr_to_ptr + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)ptr_to_ptr + 0x3d) = 0x28;\n  ptr = *ptr_to_ptr;\n  if ((*ptr & 1) == 0) {\n    *ptr = *ptr | 1;\n  }\n  **ptr_to_ptr = **ptr_to_ptr | 0x400;\n  (*ptr_to_ptr)[1] = (*ptr_to_ptr)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "set_flags_and_values_08001578",
                "param_1": "ptr_to_ptr",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "update_and_check_value_080015bc",
            "code": "\nundefined4 updateAndCheckValue_080015bc(int *inputArray)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    bytePointer = (byte *)byteArray;\n    byteArray = (int)(bytePointer + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      intValue = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "update_and_check_value_080015bc",
                "param_1": "inputArray",
                "cVar1": "charValue",
                "pbVar2": "bytePointer",
                "param_1[9]": "byteArray",
                "param_1[0xc]": "intValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "process_param_0800160e",
            "code": "\nundefined4 processParam_0800160e(int *paramArray)\n\n{\n  char charVar;\n  undefined *undefinedPtr;\n  \n  charVar = *(char *)((int)paramArray + 0x3d);\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    undefinedPtr = (undefined *)ptrToParam9;\n    ptrToParam9 = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    if ((*(short *)((int)paramArray + 0x2a) == 0) && (charVar == '*')) {\n      *(uint *)(*paramArray + 4) = *(uint *)(*paramArray + 4) & 0xfffffbff;\n      param12 = 0x22;\n      *(undefined *)((int)paramArray + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "process_param_0800160e",
                "param_1": "paramArray",
                "cVar1": "charVar",
                "puVar2": "undefinedPtr",
                "param_1[9]": "ptrToParam9",
                "param_1[0xc]": "param12"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_data_0800165a",
            "code": "\nundefined4 processData_0800165a(int *data,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined2 value1;\n  uint value2;\n  \n  value2 = *(uint *)(*data + 0x18);\n  if ((value2 & 0x80) == 0) {\n    value1 = *(undefined2 *)(data + 3);\n  }\n  else {\n    value1 = *(undefined2 *)(data + 6);\n  }\n  FUN_08003880(data,(*(uint *)(*data + 0x18) & 4) == 0,value1,value2,arg4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_data_0800165a",
                "param_1": "data",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "handle_param_08001684",
            "code": "\nundefined4 handleParam_08001684(uint **paramArray)\n\n{\n  if (((paramArray[0xb] == (uint *)0x4) || (paramArray[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)paramArray + 0x3d) == '(')) {\n    paramArray[0xb] = (uint *)0xffff0000;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    paramArray[0xc] = (uint *)0x0;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)paramArray + 0x3d) == '!') {\n    paramArray[0xb] = (uint *)0xffff0000;\n    paramArray[0xc] = (uint *)0x21;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*paramArray)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "handle_param_08001684",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_data_0800171a",
            "code": "\nundefined4 processData_0800171a(uint **dataPtr)\n\n{\n  char char1;\n  uint *pointer;\n  \n  char1 = *(char *)((int)dataPtr + 0x3d);\n  pointer = dataPtr[0xb];\n  if ((*(short *)(dataPtr + 10) == 0) && (char1 == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*dataPtr)[1] = (*dataPtr)[1] & 0xfffff8ff;\n      **dataPtr = **dataPtr | 0x200;\n      dataPtr[0xc] = (uint *)0x0;\n      *(undefined *)((int)dataPtr + 0x3d) = 0x20;\n      if (*(char *)((int)dataPtr + 0x3e) == '@') {\n        *(undefined *)((int)dataPtr + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)dataPtr + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*dataPtr)[1] = (*dataPtr)[1] & 0xfffff8ff;\n      dataPtr[0xc] = (uint *)0x11;\n      *(undefined *)((int)dataPtr + 0x3e) = 0;\n      *(undefined *)((int)dataPtr + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((char1 == '!') || ((*(char *)((int)dataPtr + 0x3e) == '@' && (char1 == '\\\"')))) {\n    if (*(short *)((int)dataPtr + 0x2a) == 0) {\n      (*dataPtr)[1] = (*dataPtr)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)dataPtr + 0x3e) == '@') {\n      if (dataPtr[0x14] == (uint *)0x0) {\n        if (dataPtr[0x13] == (uint *)0x1) {\n          (*dataPtr)[4] = (uint)dataPtr[0x12] & 0xff;\n          dataPtr[0x14] = (uint *)((int)dataPtr[0x14] + 2);\n        }\n        else {\n          (*dataPtr)[4] = (uint)((int)dataPtr[0x12] << 0x10) >> 0x18;\n          dataPtr[0x14] = (uint *)((int)dataPtr[0x14] + 1);\n        }\n      }\n      else if (dataPtr[0x14] == (uint *)0x1) {\n        (*dataPtr)[4] = (uint)dataPtr[0x12] & 0xff;\n        dataPtr[0x14] = (uint *)((int)dataPtr[0x14] + 1);\n      }\n      else if (dataPtr[0x14] == (uint *)0x2) {\n        if (*(char *)((int)dataPtr + 0x3d) == '\\\"') {\n          **dataPtr = **dataPtr | 0x100;\n        }\n        else if (*(char *)((int)dataPtr + 0x3d) == '!') {\n          pointer = dataPtr[9];\n          dataPtr[9] = (uint *)((int)pointer + 1);\n          (*dataPtr)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = dataPtr[9];\n      dataPtr[9] = (uint *)((int)pointer + 1);\n      (*dataPtr)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_data_0800171a",
                "param_1": "dataPtr",
                "cVar1": "char1",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "process_param_08001864",
            "code": "\nundefined4 processParam_08001864(uint **param)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = param1_b;\n  if (*(char *)((int)param + 0x3d) == '!') {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        **param = **param | 0x200;\n        param1_c = (uint *)0x0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        param1_c = (uint *)0x11;\n        *(undefined *)((int)param + 0x3e) = 0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      ptrValue = param1_9;\n      param1_9 = (uint *)((int)ptrValue + 1);\n      (*param)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "process_param_08001864",
                "param_1": "param",
                "puVar1": "ptrValue",
                "param_1[0xb]": "param1_b",
                "param_1[0xc]": "param1_c",
                "param_1[9]": "param1_9"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "update_string_08001904",
            "code": "\nundefined4 updateString_08001904(uint **stringPtr)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)stringPtr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)stringPtr + 0x2a) < 4) {\n      if (*(ushort *)((int)stringPtr + 0x2a) < 2) {\n        **stringPtr = **stringPtr & 0xfffffbff;\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffff8ff;\n        tempPtr = stringPtr[9];\n        stringPtr[9] = (uint *)((int)tempPtr + 1);\n        *(char *)tempPtr = (char)(*stringPtr)[4];\n        *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n        *(undefined *)((int)stringPtr + 0x3d) = 0x20;\n        stringPtr[0xc] = (uint *)0x0;\n        if (*(char *)((int)stringPtr + 0x3e) == '@') {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      tempPtr = stringPtr[9];\n      stringPtr[9] = (uint *)((int)tempPtr + 1);\n      *(char *)tempPtr = (char)(*stringPtr)[4];\n      *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n      if (*(short *)((int)stringPtr + 0x2a) == 3) {\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "update_string_08001904",
                "param_1": "stringPtr",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "update_permissions_080019a0",
            "code": "\nundefined4 updatePermissions_080019a0(uint **permissionArray)\n\n{\n  uint *tempPtr;\n  \n  if (*(short *)((int)permissionArray + 0x2a) == 4) {\n    (*permissionArray)[1] = (*permissionArray)[1] & 0xfffffbff;\n    tempPtr = ptrArray;\n    ptrArray = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*permissionArray)[4];\n    *(short *)((int)permissionArray + 0x2a) = *(short *)((int)permissionArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)permissionArray + 0x2a) == 3) {\n    (*permissionArray)[1] = (*permissionArray)[1] & 0xfffffbff;\n    **permissionArray = **permissionArray & 0xfffffbff;\n    tempPtr = ptrArray;\n    ptrArray = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*permissionArray)[4];\n    *(short *)((int)permissionArray + 0x2a) = *(short *)((int)permissionArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)permissionArray + 0x2a) == 2) {\n    if ((int)permissionArray[0xb] - 1U < 2) {\n      **permissionArray = **permissionArray & 0xfffffbff;\n      **permissionArray = **permissionArray | 0x100;\n    }\n    else {\n      **permissionArray = **permissionArray | 0x200;\n    }\n    tempPtr = ptrArray;\n    ptrArray = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*permissionArray)[4];\n    *(short *)((int)permissionArray + 0x2a) = *(short *)((int)permissionArray + 0x2a) + -1;\n    tempPtr = ptrArray;\n    ptrArray = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*permissionArray)[4];\n    *(short *)((int)permissionArray + 0x2a) = *(short *)((int)permissionArray + 0x2a) + -1;\n    (*permissionArray)[1] = (*permissionArray)[1] & 0xfffffcff;\n    *(undefined *)((int)permissionArray + 0x3d) = 0x20;\n    permissionArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)permissionArray + 0x3e) == '@') {\n      *(undefined *)((int)permissionArray + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)permissionArray + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempPtr = ptrArray;\n    ptrArray = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*permissionArray)[4];\n    *(short *)((int)permissionArray + 0x2a) = *(short *)((int)permissionArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "update_permissions_080019a0",
                "param_1": "permissionArray",
                "puVar1": "tempPtr",
                "param_1[9]": "ptrArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_data_08001ab0",
            "code": "\nvoid processData_08001ab0(uint **data)\n\n{\n  int result;\n  uint *pointer1;\n  uint *pointer2;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  pointer2 = *data;\n  if ((pointer2[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = data[9];\n        data[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08001aac(data);\n    }\n    else {\n      if ((pointer2[5] & 0x40) != 0) {\n        pointer1 = data[9];\n        data[9] = (uint *)((int)pointer1 + 1);\n        *(char *)pointer1 = (char)pointer2[4];\n      }\n      FUN_08003900(data);\n    }\n  }\n  else {\n    pointer2[1] = pointer2[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x35) == '\\x01') {\n      data[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          pointer2 = data[9];\n          data[9] = (uint *)((int)pointer2 + 1);\n          *(char *)pointer2 = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xe][0x14])();\n      }\n    }\n    else {\n      data[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(code *)data[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_080038d0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_data_08001ab0",
                "param_1": "data",
                "iVar1": "result",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_data_08001bfc",
            "code": "\nundefined4 processData_08001bfc(uint **data)\n\n{\n  char character;\n  uint *pointer1;\n  uint *pointer2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  pointer1 = *data;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = data[9];\n      data[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      pointer1 = data[9];\n      data[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_data_08001bfc",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_options_08001d00",
            "code": "\nvoid processOptions_08001d00(int *options)\n\n{\n  int ptr;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  ptr = *options;\n  value3 = *(uint *)(ptr + 0x18);\n  value1 = *(uint *)(ptr + 0x14);\n  value2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)options + 0x3e) == '\\x10') || (*(char *)((int)options + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_08001256(options);\n        }\n      }\n      else {\n        FUN_0800124a(options);\n      }\n    }\n    else {\n      FUN_080011c0(options);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08001904(options);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_080019a0(options);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800171a(options);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001864(options);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08001bfc(options);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800160e(options);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001440(options);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_080015bc(options);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001420(options);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_options_08001d00",
                "param_1": "options",
                "iVar1": "ptr",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "update_flags_08001e68",
            "code": "\nvoid updateFlags_08001e68(uint **parameters)\n\n{\n  char character;\n  uint *pointer;\n  uint flag1;\n  uint flag2;\n  \n  pointer = *parameters;\n  flag1 = pointer[5];\n  flag2 = pointer[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_08001ab0(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "update_flags_08001e68",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "pointer",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "execute_operation_08001f9c",
            "code": "\n\n\nundefined4 executeOperation_08001f9c(void)\n\n{\n  int startValue;\n  int currentValue;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  startValue = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      startValue = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentValue = FUN_08000e30();\n      } while ((uint)(currentValue - startValue) < 0x3e9);\n      return 3;\n    }\n    currentValue = FUN_08000e30();\n  } while ((uint)(currentValue - startValue) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "execute_operation_08001f9c",
                "iVar1": "startValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "check_and_control_device_0800201c",
            "code": "\n\n\nundefined4 checkAndControlDevice_0800201c(uint *deviceConfig)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  bool isBitSet;\n  \n  if (deviceConfig == (uint *)0x0) {\n    return 1;\n  }\n  if ((*deviceConfig & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (deviceConfig[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (deviceConfig[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (deviceConfig[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (deviceConfig[1] == 0) {\n        startTime = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentTime = FUN_08000e30();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentTime = FUN_08000e30();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*deviceConfig & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (deviceConfig[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | deviceConfig[4] << 3;\n    }\n    else if (deviceConfig[3] == 0) {\n      _DAT_42470000 = 0;\n      startTime = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      startTime = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | deviceConfig[4] << 3;\n    }\n  }\n  if ((*deviceConfig & 8) != 0) {\n    if (deviceConfig[5] == 0) {\n      _DAT_42470e80 = 0;\n      startTime = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      startTime = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*deviceConfig & 4) != 0) {\n    isBitSet = (_DAT_40023840 & 0x10000000) == 0;\n    if (isBitSet) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08000e30();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (deviceConfig[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (deviceConfig[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (deviceConfig[2] == 0) {\n      startTime = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentTime = FUN_08000e30();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentTime = FUN_08000e30();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isBitSet) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (deviceConfig[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (deviceConfig[6] == 2) {\n    _DAT_42470060 = 0;\n    startTime = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             deviceConfig[7] | deviceConfig[8] | deviceConfig[9] << 6 | ((deviceConfig[10] >> 1) - 1) * 0x10000 |\n             deviceConfig[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        startTime = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08000e30();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08000e30();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    startTime = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08000e30();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "check_and_control_device_0800201c",
                "param_1": "deviceConfig",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "bVar4": "isBitSet"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_frequency_080023b4",
            "code": "\n\n\nuint calculateFrequency_080023b4(void)\n\n{\n  undefined4 input_param;\n  uint frequency;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    frequency = (_DAT_40023804 << 0x11) >> 0x17;\n    frequency = FUN_080002d0(frequency * 16000000,\n                         (((uint)(frequency * 0x20 < frequency) * -0x3f -\n                          (uint)(frequency * 0x7c0 < frequency * 0x1f)) * 8 +\n                         (uint)CARRY4(frequency * 0x3d08,frequency)) * 0x400 | frequency * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_param);\n  }\n  else {\n    frequency = (_DAT_40023804 << 0x11) >> 0x17;\n    frequency = FUN_080002d0(frequency * 8000000,\n                         (((uint)(frequency * 0x20 < frequency) * -0x3f -\n                          (uint)(frequency * 0x7c0 < frequency * 0x1f)) * 8 +\n                         (uint)CARRY4(frequency * 0x3d08,frequency)) * 0x200,_DAT_40023804 & 0x3f,0,input_param);\n  }\n  return frequency / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_frequency_080023b4",
                "in_r3": "input_param",
                "uVar1": "frequency"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "initialize_system_08002488",
            "code": "\n\n\nundefined4 initializeSystem_08002488(uint *configParams,uint uartPort)\n\n{\n  int startTime;\n  int currentTime;\n  uint status;\n  \n  if (configParams == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < uartPort) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)uartPort);\n    if (uartPort != (uartPort & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*configParams & 2) != 0) {\n    if ((*configParams & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*configParams & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | configParams[2];\n  }\n  if ((*configParams & 1) != 0) {\n    status = configParams[1];\n    if (status == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (status - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = status | _DAT_40023808 & 0xfffffffc;\n    startTime = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == configParams[1] * 4) break;\n      currentTime = FUN_08000e30();\n      if (5000 < (uint)(currentTime - startTime)) {\n        return 3;\n      }\n    }\n  }\n  if (uartPort < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)uartPort);\n    if (uartPort != (uartPort & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*configParams & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | configParams[3];\n  }\n  if ((*configParams & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | configParams[4] << 3;\n  }\n  status = FUN_080023b4();\n  DAT_2000002c = status >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "initialize_system_08002488",
                "param_1": "configParams",
                "param_2": "uartPort",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_constant_value_080025e0",
            "code": "\nundefined4 getConstantValue_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_constant_value_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "calculate_shifted_value_080025ec",
            "code": "\n\n\nuint calculateShiftedValue_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "calculate_shifted_value_080025ec",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "shift_right_by_constant_0800260c",
            "code": "\n\n\nuint shiftRightByConstant_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "shift_right_by_constant_0800260c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "initialize_data_0800262c",
            "code": "\n\n\nvoid initializeData_0800262c(int *dataPointer)\n\n{\n  if (((*(unsignedInt *)(*dataPointer + 0xc) & 0x100) != 0) && ((*(unsignedInt *)(*dataPointer + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(unsignedInt *)(*dataPointer + 0xc) = *(unsignedInt *)(*dataPointer + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(unsignedInt *)(*dataPointer + 0xc) & 0x200) != 0) && ((*(unsignedInt *)(*dataPointer + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(dataPointer);\n    *(unsignedInt *)(*dataPointer + 0xc) = *(unsignedInt *)(*dataPointer + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)dataPointer + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "initialize_data_0800262c",
                "param_1": "dataPointer",
                "uint": "unsignedInt"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "update_param_0800268e",
            "code": "\nvoid updateParam_0800268e(uint **param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)param + 0x39) = 2;\n  ptr = *param;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(param);\n  *(undefined *)((int)param + 0x39) = 0;\n  *(undefined *)(param + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "update_param_0800268e",
                "param_1": "param",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_flags_080026ce",
            "code": "\nvoid processFlags_080026ce(int *flags)\n\n{\n  int currentFlag;\n  \n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 2) != 0) && ((*(uint *)(currentFlag + 0xc) & 2) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 6) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 4) != 0) && ((*(uint *)(currentFlag + 0xc) & 4) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 6) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 8) != 0) && ((*(uint *)(currentFlag + 0xc) & 8) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 6) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 0x10) != 0) && ((*(uint *)(currentFlag + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 6) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 1) != 0) && ((*(uint *)(currentFlag + 0xc) & 1) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xfffffffe;\n    FUN_0800376e(flags);\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 0x80) != 0) && ((*(uint *)(currentFlag + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xffffff7f;\n    FUNC_0800293e(flags);\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 0x40) != 0) && ((*(uint *)(currentFlag + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xffffffbf;\n    FUNC_080026cc(flags);\n  }\n  currentFlag = *flags;\n  if (((*(uint *)(currentFlag + 0x10) & 0x20) != 0) && ((*(uint *)(currentFlag + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(currentFlag + 0x10) = 0xffffffdf;\n    FUNC_0800293c(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_flags_080026ce",
                "param_1": "flags",
                "iVar1": "currentFlag"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bit_08002848",
            "code": "\nvoid updateBit_08002848(int ptr,uint bitIndex,int newValue)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | newValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bit_08002848",
                "param_1": "ptr",
                "param_2": "bitIndex",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "update_memory_permissions_08002864",
            "code": "\nundefined4 updateMemoryPermissions_08002864(uint **ptrToMemory,undefined4 valueToSet)\n\n{\n  bool isMemoryValid;\n  uint *memoryPointer;\n  \n  FUN_08002848(*ptrToMemory,valueToSet,0);\n  memoryPointer = *ptrToMemory;\n  if (memoryPointer == (uint *)0x40010000) {\n    isMemoryValid = true;\n  }\n  else if (memoryPointer == (uint *)0x40010400) {\n    isMemoryValid = true;\n  }\n  else {\n    isMemoryValid = false;\n  }\n  if (((isMemoryValid) && ((memoryPointer[8] & 0x1111) == 0)) && ((memoryPointer[8] & 0x444) == 0)) {\n    memoryPointer[0x11] = memoryPointer[0x11] & 0xffff7fff;\n  }\n  memoryPointer = *ptrToMemory;\n  if (((memoryPointer[8] & 0x1111) == 0) && ((memoryPointer[8] & 0x444) == 0)) {\n    *memoryPointer = *memoryPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)ptrToMemory + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "update_memory_permissions_08002864",
                "param_1": "ptrToMemory",
                "param_2": "valueToSet",
                "bVar1": "isMemoryValid",
                "puVar2": "memoryPointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_bitwise_value_080028d4",
            "code": "\nvoid updateBitwiseValue_080028d4(int ptr_offset,uint bit_index,int new_value)\n\n{\n  *(uint *)(ptr_offset + 0x20) = *(uint *)(ptr_offset + 0x20) & ~(4 << (bit_index & 0xff));\n  *(uint *)(ptr_offset + 0x20) = *(uint *)(ptr_offset + 0x20) | new_value << (bit_index & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_bitwise_value_080028d4",
                "param_1": "ptr_offset",
                "param_2": "bit_index",
                "param_3": "new_value"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_flags_and_values_080028f0",
            "code": "\nundefined4 updateFlagsAndValues_080028f0(uint **inputArray,undefined4 value)\n\n{\n  uint *arrayPtr;\n  \n  FUN_080028d4(*inputArray,value,0);\n  arrayPtr = *inputArray;\n  if (((arrayPtr[8] & 0x1111) == 0) && ((arrayPtr[8] & 0x444) == 0)) {\n    arrayPtr[0x11] = arrayPtr[0x11] & 0xffff7fff;\n  }\n  arrayPtr = *inputArray;\n  if (((arrayPtr[8] & 0x1111) == 0) && ((arrayPtr[8] & 0x444) == 0)) {\n    *arrayPtr = *arrayPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_flags_and_values_080028f0",
                "param_1": "inputArray",
                "param_2": "value",
                "puVar1": "arrayPtr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "update_memory_08002940",
            "code": "\nvoid updateMemory_08002940(int *memoryPointer)\n\n{\n  *(uint *)(*memoryPointer + 0xc) = *(uint *)(*memoryPointer + 0xc) & 0xfffffedf;\n  *(uint *)(*memoryPointer + 0x14) = *(uint *)(*memoryPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)memoryPointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "update_memory_08002940",
                "param_1": "memoryPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_parameter_0800295c",
            "code": "\nundefined4 processParameter_0800295c(int *parameter)\n\n{\n  short decrementedValue;\n  byte *bytePointer;\n  \n  if (*(char *)((int)parameter + 0x39) != '!') {\n    return 2;\n  }\n  if (parameter[2] == 0x1000) {\n    *(uint *)(*parameter + 4) = *(ushort *)parameter[8] & 0x1ff;\n    if (parameter[4] == 0) {\n      parameter[8] = parameter[8] + 2;\n    }\n    else {\n      parameter[8] = parameter[8] + 1;\n    }\n  }\n  else {\n    bytePointer = (byte *)parameter[8];\n    parameter[8] = (int)(bytePointer + 1);\n    *(uint *)(*parameter + 4) = (uint)*bytePointer;\n  }\n  decrementedValue = *(short *)((int)parameter + 0x26) + -1;\n  *(short *)((int)parameter + 0x26) = decrementedValue;\n  if (decrementedValue == 0) {\n    *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xffffff7f;\n    *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_parameter_0800295c",
                "param_1": "parameter",
                "sVar1": "decrementedValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_sensor_value_080029c8",
            "code": "\nvoid calculateSensorValue_080029c8(int *sensorData)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int sensorAddress;\n  \n  *(uint *)(*sensorData + 0x10) = *(uint *)(*sensorData + 0x10) & 0xffffcfff | sensorData[3];\n  *(uint *)(*sensorData + 0xc) =\n       *(uint *)(*sensorData + 0xc) & 0xffff69f3 | sensorData[2] | sensorData[4] | sensorData[5] | sensorData[7];\n  *(uint *)(*sensorData + 0x14) = *(uint *)(*sensorData + 0x14) & 0xfffffcff | sensorData[6];\n  if (sensorData[7] == 0x8000) {\n    sensorAddress = *sensorData;\n    if ((sensorAddress != 0x40011000) && (sensorAddress != 0x40011400)) {\n      value1 = FUN_080025ec();\n      value6 = sensorData[1];\n      value2 = FUN_080025ec();\n      value7 = sensorData[1];\n      value3 = FUN_080025ec();\n      value8 = sensorData[1];\n      value4 = FUN_080025ec();\n      value9 = sensorData[1];\n      value5 = FUN_080025ec();\n      *(uint *)(sensorAddress + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                          (int)(((ulonglong)(uint)(value5 * 0x19) /\n                                (ulonglong)(uint)(sensorData[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n             (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n      return;\n    }\n    value1 = FUN_0800260c();\n    value6 = sensorData[1];\n    value2 = FUN_0800260c();\n    value7 = sensorData[1];\n    value3 = FUN_0800260c();\n    value8 = sensorData[1];\n    value4 = FUN_0800260c();\n    value9 = sensorData[1];\n    value5 = FUN_0800260c();\n    *(uint *)(sensorAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(sensorData[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n    return;\n  }\n  sensorAddress = *sensorData;\n  if ((sensorAddress != 0x40011000) && (sensorAddress != 0x40011400)) {\n    value1 = FUN_080025ec();\n    value6 = sensorData[1];\n    value2 = FUN_080025ec();\n    value7 = sensorData[1];\n    value3 = FUN_080025ec();\n    value8 = sensorData[1];\n    value4 = FUN_080025ec();\n    value9 = sensorData[1];\n    value5 = FUN_080025ec();\n    *(uint *)(sensorAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(sensorData[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value1 = FUN_0800260c();\n  value6 = sensorData[1];\n  value2 = FUN_0800260c();\n  value7 = sensorData[1];\n  value3 = FUN_0800260c();\n  value8 = sensorData[1];\n  value4 = FUN_0800260c();\n  value9 = sensorData[1];\n  value5 = FUN_0800260c();\n  *(uint *)(sensorAddress + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                      (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(sensorData[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n         (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_sensor_value_080029c8",
                "param_1": "sensorData",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "iVar10": "sensorAddress"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "check_condition_08002d0c",
            "code": "\nundefined4 check_condition_08002d0c(uint **input_ptr,uint mask,uint expected_result,int reference,uint tolerance)\n\n{\n  int comparison_result;\n  \n  do {\n    if (((mask & ~**input_ptr) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((tolerance == 0xffffffff) ||\n          ((tolerance != 0 && (comparison_result = FUN_08000e30(), (uint)(comparison_result - reference) <= tolerance))));\n  (*input_ptr)[3] = (*input_ptr)[3] & 0xfffffe5f;\n  (*input_ptr)[5] = (*input_ptr)[5] & 0xfffffffe;\n  *(undefined *)((int)input_ptr + 0x39) = 0x20;\n  *(undefined *)((int)input_ptr + 0x3a) = 0x20;\n  *(undefined *)(input_ptr + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "check_condition_08002d0c",
                "param_1": "input_ptr",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "reference",
                "param_5": "tolerance",
                "iVar1": "comparison_result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "initialize_data_08002d72",
            "code": "\nundefined4 initializeData_08002d72(int *dataPtr)\n\n{\n  if (dataPtr != (int *)0x0) {\n    if (*(char *)((int)dataPtr + 0x39) == '\\0') {\n      *(undefined *)(dataPtr + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)dataPtr + 0x39) = 0x24;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffdfff;\n    FUN_080029c8(dataPtr);\n    *(uint *)(*dataPtr + 0x10) = *(uint *)(*dataPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x2000;\n    value4 = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "initialize_data_08002d72",
                "param_1": "dataPtr",
                "param_1[0xf]": "value4"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_data_08002dd0",
            "code": "\nundefined4 processData_08002dd0(int *dataBuffer,ushort *inputBuffer,int bufferSize,undefined4 param_4)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataBuffer + 0x39) == ' ') {\n    if (inputBuffer == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (bufferSize == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataBuffer + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataBuffer + 0xe) = 1;\n      dataBuffer[0xf] = 0;\n      *(undefined *)((int)dataBuffer + 0x39) = 0x21;\n      returnValue = FUN_08000e30();\n      *(short *)(dataBuffer + 9) = (short)bufferSize;\n      *(short *)((int)dataBuffer + 0x26) = (short)bufferSize;\n      while (*(short *)((int)dataBuffer + 0x26) != 0) {\n        *(short *)((int)dataBuffer + 0x26) = *(short *)((int)dataBuffer + 0x26) + -1;\n        if (dataBuffer[2] == 0x1000) {\n          result = FUN_08002d0c(dataBuffer,0x80,0,returnValue,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = *inputBuffer & 0x1ff;\n          if (dataBuffer[4] == 0) {\n            inputBuffer = inputBuffer + 1;\n          }\n          else {\n            inputBuffer = (ushort *)((int)inputBuffer + 1);\n          }\n        }\n        else {\n          result = FUN_08002d0c(dataBuffer,0x80,0,returnValue,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = (uint)*(byte *)inputBuffer;\n          inputBuffer = (ushort *)((int)inputBuffer + 1);\n        }\n      }\n      result = FUN_08002d0c(dataBuffer,0x40,0,returnValue,param_4);\n      if (result == 0) {\n        *(undefined *)((int)dataBuffer + 0x39) = 0x20;\n        *(undefined *)(dataBuffer + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "param_1": "dataBuffer",
                "param_2": "inputBuffer",
                "param_3": "bufferSize",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "validate_input_08002eb2",
            "code": "\nundefined4 validate_input_08002eb2(int *input_data,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_data + 0xe) != '\\x01') {\n    input_data_8 = value_1;\n    *(short *)(input_data + 9) = (short)value_2;\n    *(short *)((int)input_data + 0x26) = (short)value_2;\n    input_data_0xf = 0;\n    *(undefined *)((int)input_data + 0x39) = 0x21;\n    *(undefined *)(input_data + 0xe) = 0;\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "validate_input_08002eb2",
                "param_1": "input_data",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "input_data_8",
                "param_1[0xf]": "input_data_0xf"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "validate_input_08002efa",
            "code": "\nundefined4 validate_input_08002efa(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array_element_10 = value1;\n    *(short *)(input_array + 0xb) = (short)value2;\n    *(short *)((int)input_array + 0x2e) = (short)value2;\n    input_array_element_0xf = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "validate_input_08002efa",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "input_array_element_10",
                "param_1[0xf]": "input_array_element_0xf"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "set_flag_and_call_function_08002f4c",
            "code": "\nundefined4 setFlagAndCallFunction_08002f4c(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputArray + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "set_flag_and_call_function_08002f4c",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_string_08002f66",
            "code": "\nundefined4 processString_08002f66(int *parameters)\n\n{\n  byte *bytePointer;\n  short shortVar;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)parameters + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (parameters[2] == 0x1000) {\n    if (parameters[4] == 0) {\n      *(ushort *)parameters[10] = (ushort)((uint)(*(int *)(*parameters + 4) << 0x17) >> 0x17);\n      parameters[10] = parameters[10] + 2;\n    }\n    else {\n      *(ushort *)parameters[10] = (ushort)*(undefined4 *)(*parameters + 4) & 0xff;\n      parameters[10] = parameters[10] + 1;\n    }\n  }\n  else if (parameters[4] == 0) {\n    undefinedPointer = (undefined *)parameters[10];\n    parameters[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*parameters + 4);\n  }\n  else {\n    bytePointer = (byte *)parameters[10];\n    parameters[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*parameters + 4) & 0x7f;\n  }\n  shortVar = *(short *)((int)parameters + 0x2e) + -1;\n  *(short *)((int)parameters + 0x2e) = shortVar;\n  if (shortVar != 0) {\n    return 0;\n  }\n  *(uint *)(*parameters + 0xc) = *(uint *)(*parameters + 0xc) & 0xfffffedf;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffffe;\n  *(undefined *)((int)parameters + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_string_08002f66",
                "param_1": "parameters",
                "pbVar1": "bytePointer",
                "sVar2": "shortVar",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "process_flags_08002ffc",
            "code": "\nvoid processFlags_08002ffc(uint **flagArray)\n\n{\n  int returnValue;\n  uint flagValue;\n  uint *currentFlag;\n  uint checkFlag;\n  uint checkValue;\n  \n  currentFlag = *flagArray;\n  checkValue = *currentFlag;\n  flagValue = currentFlag[3];\n  if ((((checkValue & 0xf) == 0) && ((checkValue & 0x20) != 0)) && ((flagValue & 0x20) != 0)) {\n    FUN_08002f66(flagArray);\n    return;\n  }\n  if (((checkValue & 0xf) == 0) || ((checkFlag = currentFlag[5] & 1, checkFlag == 0 && ((flagValue & 0x120) == 0)))) {\n    if (((checkValue & 0x80) != 0) && ((flagValue & 0x80) != 0)) {\n      FUN_0800295c(flagArray);\n      return;\n    }\n    if (((checkValue & 0x40) != 0) && ((flagValue & 0x40) != 0)) {\n      FUN_08002f4c(flagArray);\n    }\n  }\n  else {\n    if (((checkValue & 1) != 0) && ((flagValue & 0x100) != 0)) {\n      flagArray[0xf] = (uint *)((uint)flagArray[0xf] | 1);\n    }\n    if (((checkValue & 4) != 0) && (checkFlag != 0)) {\n      flagArray[0xf] = (uint *)((uint)flagArray[0xf] | 2);\n    }\n    if (((checkValue & 2) != 0) && (checkFlag != 0)) {\n      flagArray[0xf] = (uint *)((uint)flagArray[0xf] | 4);\n    }\n    if (((checkValue & 8) != 0) && (checkFlag != 0)) {\n      flagArray[0xf] = (uint *)((uint)flagArray[0xf] | 8);\n    }\n    if (flagArray[0xf] != (uint *)0x0) {\n      if (((checkValue & 0x20) != 0) && ((flagValue & 0x20) != 0)) {\n        FUN_08002f66(flagArray);\n      }\n      if ((((uint)flagArray[0xf] & 8) == 0) && (((*flagArray)[5] & 0x40) == 0)) {\n        FUNC_08003f94(flagArray);\n        flagArray[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(flagArray);\n      currentFlag = *flagArray;\n      if ((currentFlag[5] & 0x40) == 0) {\n        FUNC_08003f94(flagArray);\n        return;\n      }\n      currentFlag[5] = currentFlag[5] & 0xffffffbf;\n      if (flagArray[0xd] == (uint *)0x0) {\n        FUNC_08003f94(flagArray);\n        return;\n      }\n      flagArray[0xd][0x14] = (uint)&LAB_0800311c_1;\n      returnValue = FUN_08000f8c(flagArray[0xd]);\n      if (returnValue != 0) {\n        (*(code *)flagArray[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "process_flags_08002ffc",
                "param_1": "flagArray",
                "iVar1": "returnValue",
                "uVar2": "flagValue",
                "puVar3": "currentFlag",
                "uVar4": "checkFlag",
                "uVar5": "checkValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combineBytes_0800312c(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "address"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "get_bit_value_08003138",
            "code": "\nuint get_bit_value_08003138(uint bit_position,int data_array)\n\n{\n  return *(uint *)(data_array + ((bit_position << 0x18) >> 0x1c) * 4) >> (bit_position & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "get_bit_value_08003138",
                "param_1": "bit_position",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_0800314e",
            "code": "\nvoid setBit_0800314e(uint input,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (input << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_0800314e",
                "param_1": "input",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "clear_bit_0800316c",
            "code": "\nvoid clearBit_0800316c(uint bitPosition,int arrayAddress)\n\n{\n  uint shiftedBitPosition;\n  \n  shiftedBitPosition = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedBitPosition * 4) = *(uint *)(arrayAddress + shiftedBitPosition * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "clear_bit_0800316c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "shiftedBitPosition"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "map_param_to_constant_0800318c",
            "code": "\nundefined4 mapParamToConstant_0800318c(undefined4 inputParam)\n\n{\n  switch(inputParam) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "map_param_to_constant_0800318c",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_memory_address_flags_080031fc",
            "code": "\n\n\nundefined4 setMemoryAddressFlags_080031fc(undefined4 memorySegmentIndex)\n\n{\n  undefined4 baseAddress;\n  \n  switch(memorySegmentIndex) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    baseAddress = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    baseAddress = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    baseAddress = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    baseAddress = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    baseAddress = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    baseAddress = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    baseAddress = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    baseAddress = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    baseAddress = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    baseAddress = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    baseAddress = 0x40022800;\n    break;\n  default:\n    baseAddress = 0;\n  }\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_memory_address_flags_080031fc",
                "param_1": "memorySegmentIndex",
                "uVar1": "baseAddress"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_value_08003380",
            "code": "\nundefined4 check_value_08003380(undefined4 input_param,undefined4 unused_param,undefined4 data_param,undefined4 size_param)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_param,&DAT_08005a18,data_param,size_param,size_param);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_value_08003380",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "data_param",
                "param_4": "size_param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "determine_return_code_0800339c",
            "code": "\nundefined4 determineReturnCode_0800339c(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_0800354a(input_param1,&DAT_08005a3c,input_param3,input_param4,input_param4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "determine_return_code_0800339c",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_control_bit_080033c8",
            "code": "\n\n\nvoid clearControlBit_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_control_bit_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_function_080033d8",
            "code": "\nvoid processFunction_080033d8(undefined4 inputParam)\n\n{\n  int returnValue;\n  int arrayVar [5];\n  \n  arrayVar[0] = FUN_080034f4(inputParam,&DAT_08005a18);\n  if ((arrayVar[0] != 0) && ((returnValue = FUN_08003380(inputParam), returnValue == 0 || (returnValue == 0x10)))) {\n    FUN_08000f72(arrayVar,returnValue);\n    FUN_08000f56(arrayVar);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_function_080033d8",
                "param_1": "inputParam",
                "iVar1": "returnValue",
                "local_1c": "arrayVar"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_app_0800340c",
            "code": "\nvoid initialize_app_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_app_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_data_08003414",
            "code": "\nvoid processData_08003414(undefined4 input)\n\n{\n  int status;\n  uint flag;\n  int results [16];\n  \n  results[0] = FUN_080034f4(input,&DAT_08005a3c);\n  if ((results[0] != 0) &&\n     ((((status = FUN_0800339c(input), status == 0 || (status == 4)) || (status == 8)) ||\n      ((status == 0xc || (status == 0x18)))))) {\n    flag = FUN_0800354a(input,&DAT_08005a3c);\n    if ((flag & 0x100000) == 0) {\n      FUN_08002864(results,status);\n    }\n    else {\n      FUN_080028f0(results,status);\n    }\n    FUN_0800268e(results);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_data_08003414",
                "param_1": "input",
                "iVar1": "status",
                "uVar2": "flag",
                "local_4c": "results"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_application_0800346c",
            "code": "\nvoid initialize_application_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_application_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_08003476",
            "code": "\nvoid initialize_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "set_bit_in_array_08003486",
            "code": "\nvoid setBitInArray_08003486(uint bitPosition,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 modifiedParam1;\n  uint bitMask;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 constantTwo;\n  \n  modifiedParam1 = FUN_080031fc((bitPosition << 0x18) >> 0x1c);\n  bitMask = 1 << (bitPosition & 0xf) & 0xffff;\n  constantTwo = 2;\n  param2Copy = param2;\n  param3Copy = param3;\n  FUN_08000fb4(modifiedParam1,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "set_bit_in_array_08003486",
                "param_1": "bitPosition",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "modifiedParam1",
                "local_24": "bitMask",
                "local_20": "param2Copy",
                "local_1c": "param3Copy",
                "local_18": "constantTwo"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "parameter_check_080034b6",
            "code": "\nvoid parameterCheck_080034b6(undefined4 functionPointer,undefined2 parameter,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_08001198(functionPointer,parameter,0,data,data);\n    return;\n  }\n  FUN_08001198(functionPointer,parameter,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "parameter_check_080034b6",
                "param_1": "functionPointer",
                "param_2": "parameter",
                "param_3": "flag",
                "param_4": "data"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_system_080034ce",
            "code": "\nvoid initializeSystem_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_system_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_value_index_080034da",
            "code": "\nundefined4 find_value_index_080034da(int search_value,short *value_array)\n\n{\n  while( true ) {\n    if (*value_array == -1) {\n      return 0;\n    }\n    if (*value_array == search_value) break;\n    value_array = value_array + 6;\n  }\n  return *(undefined4 *)(value_array + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_value_index_080034da",
                "param_1": "search_value",
                "param_2": "value_array"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_valid_param_080034f4",
            "code": "\nundefined4 checkValidParam_080034f4(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != -1) {\n    returnValue = FUN_080034da();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_valid_param_080034f4",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_value_by_index_08003506",
            "code": "\nint findValueByIndex_08003506(int index,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == index) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_value_by_index_08003506",
                "param_1": "index",
                "param_2": "array"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "check_parameter_value_0800351e",
            "code": "\nundefined4 checkParameterValue_0800351e(int valueToCheck)\n\n{\n  undefined4 returnValue;\n  \n  if (valueToCheck != 0) {\n    returnValue = FUN_08003506();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "check_parameter_value_0800351e",
                "param_1": "valueToCheck",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_in_array_0800352e",
            "code": "\nundefined4 find_value_in_array_0800352e(int value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_in_array_0800352e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "validate_input_0800354a",
            "code": "\nundefined4 validate_input_0800354a(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800352e();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "validate_input_0800354a",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "find_value_in_array_0800355e",
            "code": "\nundefined4 findValueInArray_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "find_nonzero_08003582",
            "code": "\nint find_nonzero_08003582(int num1,int num2)\n\n{\n  if (num1 != num2) {\n    if (num1 == 0) {\n      return num2;\n    }\n    if (num2 == 0) {\n      return num1;\n    }\n    num1 = 0;\n  }\n  return num1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "find_nonzero_08003582",
                "param_1": "num1",
                "param_2": "num2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_callback_08003594",
            "code": "\nvoid executeCallback_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_callback_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_data_080035bc",
            "code": "\n\n\nvoid initializeData_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_data_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "update_data_based_on_value_080035fc",
            "code": "\n\n\nvoid updateDataBasedOnValue_080035fc(int *value)\n\n{\n  if (*value == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*value == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*value == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*value == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*value == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*value == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*value == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*value == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*value == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*value == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*value == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*value == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "update_data_based_on_value_080035fc",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtract_four_08003750(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_callback_if_enabled_08003754",
            "code": "\nvoid executeCallbackIfEnabled_08003754(int callbackData)\n\n{\n  int callbackFunction;\n  \n  callbackFunction = FUN_08003750();\n  if ((*(callbackType **)(callbackFunction + 0x48) != (callbackType *)0x0) && (*(char *)(callbackData + 0x18) == '\\x01')) {\n    (**(callbackType **)(callbackFunction + 0x48))(callbackFunction,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_callback_if_enabled_08003754",
                "param_1": "callbackData",
                "iVar1": "callbackFunction",
                "code": "callbackType"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "FUNC_0800376e",
            "code": "\nvoid FUNC_0800376e(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_08003750();\n  if (*(code **)(iVar1 + 0x44) != (code *)0x0) {\n    (**(code **)(iVar1 + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "FUNC_0800376e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_execute_functions_0800377c",
            "code": "\nvoid check_and_execute_functions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_execute_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtractFour_0800387c(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "update_settings_08003880",
            "code": "\nvoid updateSettings_08003880(int bufferAddress,int flag,int value,undefined4 param)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_0800387c();\n  if (value == *(int *)(bufferAddress + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(returnValue + 0x88) = 0;\n      *(undefined *)(returnValue + 0x5e) = 0;\n      if (*(code **)(returnValue + 100) != (code *)0x0) {\n        (**(code **)(returnValue + 100))();\n      }\n      FUN_08001460(bufferAddress,returnValue + 0x68,*(undefined *)(returnValue + 0x88),8);\n      return;\n    }\n    *(undefined *)(returnValue + 0x5e) = 1;\n    FUN_080014ec(bufferAddress,returnValue + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "update_settings_08003880",
                "param_1": "bufferAddress",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_action_if_valid_080038d0",
            "code": "\nvoid executeActionIfValid_080038d0(undefined4 actionParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_0800387c();\n  if (((*(functionType **)(functionPointer + 0x60) != (functionType *)0x0) && (*(char *)(functionPointer + 0x5e) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionType **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08001578(actionParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_action_if_valid_080038d0",
                "param_1": "actionParameter",
                "iVar1": "functionPointer",
                "code": "functionType"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_perform_action_if_flag_set_08003900",
            "code": "\nvoid checkAndPerformActionIfFlagSet_08003900(undefined4 data)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    FUN_08001578(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_perform_action_if_flag_set_08003900",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "initialize_peripheral_08003978",
            "code": "\n\n\nvoid initializePeripheral_08003978(int *peripheralInfo)\n\n{\n  int uartPin;\n  int uartPin2;\n  undefined4 uartConfig;\n  uint pinInfo;\n  uint pinMask;\n  uint gpioConfig;\n  uint alternateFunction;\n  undefined4 uartConfig2;\n  uint uartConfig3;\n  \n  if (peripheralInfo != (int *)0x0) {\n    uartPin = FUN_080034f4((int)*(short *)(peripheralInfo + 0x16),&DAT_08005ca0);\n    uartPin2 = FUN_080034f4((int)*(short *)((int)peripheralInfo + 0x5a),&DAT_08005c10);\n    if ((uartPin2 == 0) || (uartPin == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin = FUN_08003582(uartPin);\n      *peripheralInfo = uartPin;\n      if (uartPin == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(peripheralInfo + 0x11) = 0;\n          *(undefined *)(peripheralInfo + 0x17) = 0x25;\n        }\n        else if (uartPin == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(peripheralInfo + 0x11) = 1;\n          *(undefined *)(peripheralInfo + 0x17) = 0x26;\n        }\n        else if (uartPin == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(peripheralInfo + 0x11) = 2;\n          *(undefined *)(peripheralInfo + 0x17) = 0x27;\n        }\n        else if (uartPin == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(peripheralInfo + 0x11) = 3;\n          *(undefined *)(peripheralInfo + 0x17) = 0x34;\n        }\n        else if (uartPin == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(peripheralInfo + 0x11) = 4;\n          *(undefined *)(peripheralInfo + 0x17) = 0x35;\n        }\n        else if (uartPin == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(peripheralInfo + 0x11) = 5;\n          *(undefined *)(peripheralInfo + 0x17) = 0x47;\n        }\n        else if (uartPin == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(peripheralInfo + 0x11) = 6;\n          *(undefined *)(peripheralInfo + 0x17) = 0x52;\n        }\n        else if (uartPin == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(peripheralInfo + 0x11) = 7;\n          *(undefined *)(peripheralInfo + 0x17) = 0x53;\n        }\n        uartConfig = FUN_080031fc((uint)((int)*(short *)((int)peripheralInfo + 0x5a) << 0x18) >> 0x1c);\n        pinInfo = FUN_0800354a((int)*(short *)((int)peripheralInfo + 0x5a),&DAT_08005c10);\n        pinMask = 1 << (*(ushort *)((int)peripheralInfo + 0x5a) & 0xf) & 0xffff;\n        gpioConfig = (pinInfo >> 3 & 1) << 4 | pinInfo & 7;\n        alternateFunction = (pinInfo << 0x1a) >> 0x1e;\n        uartConfig3 = (pinInfo << 0x11) >> 0x19;\n        uartConfig2 = 3;\n        FUN_08000fb4(uartConfig,&pinMask);\n        uartConfig = FUN_080031fc((uint)((int)*(short *)(peripheralInfo + 0x16) << 0x18) >> 0x1c);\n        pinInfo = FUN_0800354a((int)*(short *)(peripheralInfo + 0x16),&DAT_08005ca0);\n        pinMask = 1 << (*(ushort *)(peripheralInfo + 0x16) & 0xf) & 0xffff;\n        gpioConfig = (pinInfo >> 3 & 1) << 4 | pinInfo & 7;\n        alternateFunction = (pinInfo << 0x1a) >> 0x1e;\n        FUN_08000fb4(uartConfig,&pinMask);\n        (&DAT_200002b4)[*(byte *)(peripheralInfo + 0x11)] = peripheralInfo + 1;\n        peripheralInfo[1] = *peripheralInfo;\n        peripheralInfo[2] = peripheralInfo[0x12];\n        peripheralInfo[3] = peripheralInfo[0x13];\n        peripheralInfo[4] = peripheralInfo[0x14];\n        peripheralInfo[5] = peripheralInfo[0x15];\n        peripheralInfo[6] = 0xc;\n        peripheralInfo[7] = 0;\n        peripheralInfo[8] = 0;\n        FUN_08002d72(peripheralInfo + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "initialize_peripheral_08003978",
                "param_1": "peripheralInfo",
                "iVar1": "uartPin",
                "iVar2": "uartPin2",
                "uVar3": "uartConfig",
                "uVar4": "pinInfo",
                "local_2c": "pinMask",
                "local_28": "gpioConfig",
                "local_24": "alternateFunction",
                "local_20": "uartConfig2",
                "local_1c": "uartConfig3"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 anotherResult;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    anotherResult = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(anotherResult,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "anotherResult"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "check_connection_08003d18",
            "code": "\nuint check_connection_08003d18(undefined4 status,uint timeout)\n\n{\n  int initial_time;\n  int result;\n  uint index;\n  \n  initial_time = FUN_08000e30();\n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 10 &&\n      (((&DAT_200002b4)[index] == 0 ||\n       (result = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[index] != result))));\n      index = index + 1 & 0xff) {\n  }\n  if (9 < index) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    index = (uint)DAT_20000074;\n  }\n  do {\n    result = FUN_08002dd0((&DAT_200002b4)[index],status,timeout & 0xffff,1000);\n    if (result == 0) {\n      return timeout;\n    }\n    result = FUN_08000e30();\n  } while ((uint)(result - initial_time) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "check_connection_08003d18",
                "param_1": "status",
                "param_2": "timeout",
                "iVar1": "initial_time",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "is_header_valid_08003dd0",
            "code": "\nbool isHeaderValid_08003dd0(int headerAddress)\n\n{\n  uint flag;\n  \n  flag = FUN_0800312c((&DAT_200002b4)[*(index *)(headerAddress + 0x44)]);\n  return (flag & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "is_header_valid_08003dd0",
                "param_1": "headerAddress",
                "uVar1": "flag",
                "byte": "index"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_flag_set_08003df4",
            "code": "\nbool isFlagSet_08003df4(int flag)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(flag + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_flag_set_08003df4",
                "param_1": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "extract_data_08003e18",
            "code": "\nundefined4 extract_data_08003e18(int input_data,undefined *output_data,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  \n  if (input_data == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_data + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(input_data + 0x44)],input_data + 0x45,1,&DAT_200002b4,param4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "extract_data_08003e18",
                "param_1": "input_data",
                "param_2": "output_data",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_data_record_08003e54",
            "code": "\nvoid updateDataRecord_08003e54(int dataRecord,undefined4 newValue,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (dataRecord != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataRecord + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = newValue;\n      *(int *)(&DAT_2000023c + index * 4) = dataRecord;\n      FUN_08000e60((int)*(char *)(dataRecord + 0x5c),0,1,index,unused2);\n      FUN_08000ec4((int)*(char *)(dataRecord + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(dataRecord + 0x44)],dataRecord + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_data_record_08003e54",
                "param_1": "dataRecord",
                "param_2": "newValue",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_data_08003eac",
            "code": "\nvoid updateData_08003eac(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)byteValue * 4) = dataPtr;\n    FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 0x68) + (uint)*(ushort *)(dataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_data_08003eac",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_number_index_08003f00",
            "code": "\nuint find_number_index_08003f00(int number)\n\n{\n  uint index;\n  \n  if (number == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (number == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_number_index_08003f00",
                "param_1": "number",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_functions_with_threshold_08003f24",
            "code": "\nvoid executeFunctionsWithThreshold_08003f24(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_08003f00();\n  if (functionIndex < 10) {\n    (**(code **)(&DAT_20000214 + functionIndex * 4))(*(undefined4 *)(&DAT_2000023c + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_functions_with_threshold_08003f24",
                "uVar1": "functionIndex"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "handle_data_08003f48",
            "code": "\nvoid handleData_08003f48(void)\n\n{\n  uint randomIndex;\n  int result;\n  int dataElement;\n  \n  randomIndex = FUN_08003f00();\n  dataElement = *(int *)(&DAT_2000028c + randomIndex * 4);\n  if ((randomIndex < 10) && (result = (**(code **)(&DAT_20000264 + randomIndex * 4))(dataElement), result != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataElement + 0x44)],\n                 *(int *)(dataElement + 0x68) + (uint)*(ushort *)(dataElement + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "handle_data_08003f48",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "dataElement"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocate_memory_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= stack_pointer) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "&stack0x00000000": "stack_pointer"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "get_default_value_080040d0",
            "code": "\nundefined4 get_default_value_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "get_default_value_080040d0"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "initialize_memory_080040d6",
            "code": "\nundefined4 initializeMemory_080040d6(undefined4 arg1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "initialize_memory_080040d6",
                "param_1": "arg1",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "check_return_value_080040e0",
            "code": "\nint check_return_value_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "check_return_value_080040e0",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_080040e4",
            "code": "\nundefined4 initialize_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_080040e4"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_080040e8",
            "code": "\nundefined4 initialize_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_080040e8"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "execute_function_080040ec",
            "code": "\nvoid execute_function_080040ec(undefined4 argument_1,undefined4 argument_2,undefined4 argument_3,undefined4 argument_4)\n\n{\n  FUN_08003d18(argument_2,argument_3,argument_3,argument_4,argument_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "execute_function_080040ec",
                "param_1": "argument_1",
                "param_2": "argument_2",
                "param_3": "argument_3",
                "param_4": "argument_4"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "infinite_loop_080040f8",
            "code": "\nvoid infiniteLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "infinite_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "initialize_data_080040fc",
            "code": "\nundefined4 initializeData_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "initialize_0800410c",
            "code": "\nundefined4 initialize_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "initialize_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "process_data_08004110",
            "code": "\nvoid processData_08004110(uint index,undefined4 mode,undefined4 address,undefined *data)\n\n{\n  int result;\n  undefined *ptr;\n  int value;\n  \n  if (index < 0x60) {\n    value = (int)*(short *)(&DAT_08005d3c + index * 2);\n    ptr = &DAT_08005d3c;\n  }\n  else {\n    value = -1;\n    ptr = data;\n  }\n  if (value != -1) {\n    result = FUN_08003138(value,&DAT_200002e0,address,ptr,data);\n    if (result != 0) {\n      result = FUN_0800355e(value,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(value,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(value);\n        }\n      }\n      else {\n        FUN_080033d8(value);\n      }\n      FUN_0800316c(value,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08003486(value,0);\n      break;\n    case 1:\n      FUN_08003486(value,1,0);\n      break;\n    case 2:\n      FUN_08003486(value,0,1);\n      break;\n    case 3:\n      FUN_08003486(value,0,2);\n    }\n    FUN_0800314e(value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "process_data_08004110",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "address",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "process_data_080041bc",
            "code": "\nvoid processData_080041bc(uint inputSize,undefined4 param2,undefined4 param3,undefined *param4)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *ptrToValue;\n  uint value;\n  \n  if (inputSize < 0x60) {\n    value = (uint)*(short *)(&DAT_08005d3c + inputSize * 2);\n    ptrToValue = &DAT_08005d3c;\n  }\n  else {\n    value = 0xffffffff;\n    ptrToValue = param4;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08003138(value,&DAT_2000030c,param3,ptrToValue,param4), result != 0)) {\n    shiftedValue = FUN_0800318c((value << 0x18) >> 0x1c);\n    FUN_080034b6(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "param_1": "inputSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "ptrToValue",
                "uVar4": "value"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "initiate_program_08004204",
            "code": "\nvoid initiate_program_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "initiate_program_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_offset_08004240",
            "code": "\nushort calculate_offset_08004240(int base_address)\n\n{\n  return (*(short *)(base_address + 0x138) + 0x40) - *(short *)(base_address + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_data_and_index_080042ac",
            "code": "\nvoid updateDataAndIndex_080042ac(int dataPtr)\n\n{\n  int funcResult;\n  ushort newIndex;\n  undefined newValue;\n  \n  funcResult = FUN_08003e18(dataPtr,&newValue);\n  if ((funcResult == 0) &&\n     (newIndex = *(short *)(dataPtr + 100) + 1U & 0x3f, newIndex != *(ushort *)(dataPtr + 0x66))) {\n    *(undefined *)(*(int *)(dataPtr + 0x60) + (uint)*(ushort *)(dataPtr + 100)) = newValue;\n    *(ushort *)(dataPtr + 100) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_data_and_index_080042ac",
                "param_1": "dataPtr",
                "iVar1": "funcResult",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "update_data_080042e8",
            "code": "\nundefined4 updateData_080042e8(int dataOffset,undefined newData)\n\n{\n  byte newValue;\n  byte maskedValue;\n  int incrementedValue;\n  \n  *(undefined *)(dataOffset + 0x10) = 1;\n  incrementedValue = *(ushort *)(dataOffset + 0x140) + 1;\n  newValue = (byte)incrementedValue;\n  maskedValue = newValue & 0x7f;\n  if (incrementedValue == 0) {\n    maskedValue = -(-newValue & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(dataOffset + 0x142) == (ushort)maskedValue);\n  *(undefined *)(*(int *)(dataOffset + 0x13c) + (uint)*(ushort *)(dataOffset + 0x140)) = newData;\n  *(ushort *)(dataOffset + 0x140) = (ushort)maskedValue;\n  incrementedValue = FUN_08003df4(dataOffset + 0xd4);\n  if (incrementedValue == 0) {\n    FUN_08003eac(dataOffset + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "update_data_080042e8",
                "param_1": "dataOffset",
                "param_2": "newData",
                "bVar1": "newValue",
                "bVar2": "maskedValue",
                "iVar3": "incrementedValue"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_data_08004364",
            "code": "\nvoid initializeData_08004364(int dataAddress)\n\n{\n  *(int *)(dataAddress + 0x134) = dataAddress + 0x11;\n  *(undefined2 *)(dataAddress + 0x138) = 0;\n  *(undefined2 *)(dataAddress + 0x13a) = 0;\n  *(int *)(dataAddress + 0x13c) = dataAddress + 0x51;\n  *(undefined2 *)(dataAddress + 0x140) = 0;\n  *(undefined2 *)(dataAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_data_08004364",
                "param_1": "dataAddress"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_serial_communication_08004388",
            "code": "\nvoid initializeSerialCommunication_08004388(int serialPort,undefined4 baudRate,byte configuration)\n\n{\n  uint selectedBaudRate;\n  byte configMask;\n  int configValue;\n  code *failureJumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x144) = configuration;\n  configMask = configuration & 7;\n  if (configMask == 4) {\n    configValue = 7;\n  }\n  else if (configMask == 6) {\n    configValue = 8;\n  }\n  else if (configMask == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((configuration & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((configuration & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((configuration & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08003978(serialPort + 0xd4);\n    FUN_08003e54(serialPort + 0xd4,0x80042ad);\n    return;\n  }\n  failureJumpTable = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (selectedBaudRate < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + selectedBaudRate * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*failureJumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_serial_communication_08004388",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "configuration",
                "extraout_r1": "selectedBaudRate",
                "bVar1": "configMask",
                "iVar2": "configValue",
                "UNRECOVERED_JUMPTABLE": "failureJumpTable"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "update_parameter_08004444",
            "code": "\nvoid updateParameter_08004444(int address,uint value)\n\n{\n  undefined2 updatedValue;\n  code *jumpTablePtr;\n  \n  if (value < 0x60) {\n    updatedValue = *(undefined2 *)(&DAT_08005d3c + value * 2);\n  }\n  else {\n    updatedValue = 0xffff;\n  }\n  *(undefined2 *)(address + 0x12e) = updatedValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTablePtr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "update_parameter_08004444",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "updatedValue",
                "UNRECOVERED_JUMPTABLE": "jumpTablePtr"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "initialize_value_08004460",
            "code": "\nvoid initializeValue_08004460(int memoryAddress,uint index)\n\n{\n  undefined2 value;\n  \n  if (index < 0x60) {\n    value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    value = 0xffff;\n  }\n  *(undefined2 *)(memoryAddress + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "initialize_value_08004460",
                "param_1": "memoryAddress",
                "param_2": "index",
                "uVar1": "value"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_params_0800447c",
            "code": "\nundefined4 *\ninitializeParams_0800447c(undefined4 *paramArray,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 result;\n  \n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_FUN_080042e8_1_08005ed4;\n  if (paramArray == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,value2,&DAT_20000338,value3);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    result = FUN_0800351e(value1,&DAT_08005c10);\n    *(undefined2 *)((int)paramArray + 0x12e) = result;\n    result = FUN_0800351e(value1,&DAT_08005ca0);\n    *(undefined2 *)(paramArray + 0x4b) = result;\n  }\n  FUN_08004364(paramArray);\n  return paramArray;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_params_0800447c",
                "param_1": "paramArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_param_and_call_080044d8",
            "code": "\nvoid check_param_and_call_080044d8(int flag,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_param_and_call_080044d8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_data_08004544",
            "code": "\nvoid initializeData_08004544(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08005f28;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "check_params_and_call_function_08004560",
            "code": "\nvoid checkParamsAndCallFunction_08004560(int input1,int input2)\n\n{\n  if ((input1 == 1) && (input2 == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "check_params_and_call_function_08004560",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_values_08004640",
            "code": "\nuint combineValues_08004640(int value1,uint value2)\n\n{\n  return value2 | value1 << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_application_08004648",
            "code": "\nvoid initializeApplication_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_application_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "execute_main_loop_08004658",
            "code": "\nvoid execute_main_loop_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "execute_main_loop_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "calculate_binary_length_08004678",
            "code": "\nchar calculateBinaryLength_08004678(uint number)\n\n{\n  char binaryLength;\n  \n  binaryLength = '\\0';\n  for (; number != 1; number = number >> 1) {\n    binaryLength = binaryLength + '\\x01';\n  }\n  return binaryLength;\n}\n\n",
            "renaming": {
                "FUN_08004678": "calculate_binary_length_08004678",
                "param_1": "number",
                "cVar1": "binaryLength"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_config_080046b4",
            "code": "\nvoid initializeConfig_080046b4(int configFlag,int paramValue,undefined4 param3,undefined4 param4)\n\n{\n  if (configFlag != 1) {\n    return;\n  }\n  if (paramValue == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&ptr1,&DAT_20000000,&DAT_20000488,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_config_080046b4",
                "param_1": "configFlag",
                "param_2": "paramValue",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_0800468c_1": "ptr1"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "check_and_execute_080047c0",
            "code": "\nvoid checkAndExecute_080047c0(int ptr)\n\n{\n  int index;\n  \n  if (*(int *)(ptr + 8) != 0) {\n    (**(code **)(ptr + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    checkAndExecute_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "check_and_execute_080047c0",
                "param_1": "ptr",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_and_execute_function_080047d0",
            "code": "\nvoid checkAndExecuteFunction_080047d0(void)\n\n{\n  int index;\n  \n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_and_execute_function_080047d0",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "copy_parameters_080047fe",
            "code": "\nvoid copyParameters_080047fe(undefined4 destination,undefined4 source)\n\n{\n  FUN_08004844(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "copy_parameters_080047fe",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "validate_assertion_08004808",
            "code": "\nvoid validateAssertion_08004808(undefined4 file,undefined4 line,char *assertion,undefined4 function)\n\n{\n  undefined4 filePointer;\n  char *extraInfo;\n  undefined8 result;\n  undefined4 functionPointer;\n  \n  filePointer = *(undefined4 *)(DAT_200000a0 + 0xc);\n  functionPointer = function;\n  if (assertion == (char *)0x0) goto LAB_0800482c;\n  extraInfo = \", function: \";\n  do {\n    FUN_08004860(filePointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,extraInfo,assertion,functionPointer);\n    result = FUN_080051ac();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePointer = (undefined4)result;\nLAB_0800482c:\n    assertion = \"\";\n    extraInfo = assertion;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "validate_assertion_08004808",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertion",
                "param_4": "function",
                "uVar1": "filePointer",
                "pcVar2": "extraInfo",
                "uVar3": "result",
                "uVar4": "functionPointer"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "convert_to64bit_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong convertTo64bit_08004844(undefined4 input,uint value)\n\n{\n  return (ulongLong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "convert_to64bit_08004844",
                "param_1": "input",
                "param_2": "value",
                "ulonglong": "ulongLong"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "initialize_stack_08004860",
            "code": "\nvoid initializeStack_08004860(undefined4 input_1,undefined4 input_2,undefined4 stack_param_1,undefined4 stack_param_2)\n\n{\n  undefined4 stack_variable_1;\n  undefined4 stack_variable_2;\n  \n  stack_variable_1 = stack_param_1;\n  stack_variable_2 = stack_param_2;\n  FUN_08004a84(DAT_200000a0,input_1,input_2,&stack_variable_1,input_1,&stack_variable_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "initialize_stack_08004860",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "stack_param_1",
                "param_4": "stack_param_2",
                "uStack_8": "stack_variable_1",
                "uStack_4": "stack_variable_2"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_functions_08004884",
            "code": "\nvoid executeFunctions_08004884(void)\n\n{\n  int counter;\n  \n  for (counter = 0; counter != 0; counter = counter + 1) {\n    (*(code *)(&DAT_08006008)[counter])();\n  }\n  FUNC_080059f8();\n  for (counter = 0; counter != 10; counter = counter + 1) {\n    (*(code *)(&DAT_08006008)[counter])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_functions_08004884",
                "iVar1": "counter"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "fill_array_with_value_080048cc",
            "code": "\nvoid fillArrayWithValue_080048cc(undefined *array,undefined value,int size)\n\n{\n  undefined *endPointer;\n  \n  endPointer = array + size;\n  for (; array != endPointer; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "fill_array_with_value_080048cc",
                "param_1": "array",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "extract_data_080048dc",
            "code": "\nvoid extractData_080048dc(undefined4 *output,int size,undefined4 param_3,undefined4 param_4)\n\n{\n  int *currentPtr;\n  int **temp1;\n  int **currentBlock;\n  int **prevBlock;\n  int **currBlockPtr;\n  int **inputPtr;\n  bool isFound;\n  \n  if (size == 0) {\n    return;\n  }\n  inputPtr = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    inputPtr = (int **)((int)inputPtr + *(int *)(size + -4));\n  }\n  FUNC_0800557c();\n  prevBlock = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    inputPtr[1] = (int *)0x0;\n    currentBlock = temp1;\n    DAT_200005c8 = inputPtr;\n  }\n  else {\n    prevBlock = DAT_200005c8;\n    if (inputPtr < DAT_200005c8) {\n      currentBlock = (int **)*inputPtr;\n      prevBlock = (int **)((int)inputPtr + (int)currentBlock);\n      isFound = DAT_200005c8 == prevBlock;\n      if (isFound) {\n        prevBlock = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      inputPtr[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = inputPtr;\n      if (isFound) {\n        prevBlock = (int **)((int)prevBlock + (int)currentBlock);\n        *inputPtr = (int *)prevBlock;\n      }\n    }\n    else {\n      do {\n        currBlockPtr = prevBlock;\n        prevBlock = (int **)currBlockPtr[1];\n        if (prevBlock == (int **)0x0) break;\n      } while (prevBlock <= inputPtr);\n      currentBlock = (int **)*currBlockPtr;\n      if ((int **)((int)currBlockPtr + (int)currentBlock) == inputPtr) {\n        currentBlock = (int **)((int)currentBlock + (int)*inputPtr);\n        *currBlockPtr = (int *)currentBlock;\n        if (prevBlock == (int **)((int)currBlockPtr + (int)currentBlock)) {\n          currentPtr = *prevBlock;\n          prevBlock = (int **)prevBlock[1];\n          currBlockPtr[1] = (int *)prevBlock;\n          currentBlock = (int **)((int)currentBlock + (int)currentPtr);\n          *currBlockPtr = (int *)currentBlock;\n        }\n      }\n      else if (inputPtr < (int **)((int)currBlockPtr + (int)currentBlock)) {\n        *output = 0xc;\n      }\n      else {\n        currentBlock = (int **)((int)inputPtr + (int)*inputPtr);\n        isFound = prevBlock == currentBlock;\n        if (isFound) {\n          currentBlock = (int **)*prevBlock;\n          prevBlock = (int **)prevBlock[1];\n        }\n        inputPtr[1] = (int *)prevBlock;\n        if (isFound) {\n          currentBlock = (int **)((int)currentBlock + (int)*inputPtr);\n          *inputPtr = (int *)currentBlock;\n        }\n        currBlockPtr[1] = (int *)inputPtr;\n      }\n    }\n  }\n  FUNC_0800557e(output,currentBlock,prevBlock,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "extract_data_080048dc",
                "param_1": "output",
                "param_2": "size",
                "piVar1": "currentPtr",
                "extraout_r1": "temp1",
                "ppiVar2": "currentBlock",
                "ppiVar3": "prevBlock",
                "ppiVar4": "currBlockPtr",
                "ppiVar5": "inputPtr",
                "bVar6": "isFound"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_memory_08004978",
            "code": "\nuint allocate_memory_08004978(undefined4 *output_buffer,uint requested_size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *previous_block;\n  uint unused_space;\n  uint *last_block;\n  uint allocated_size;\n  \n  allocated_size = (requested_size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < requested_size)) {\n    *output_buffer = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    last_block = DAT_200005c8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      unused_space = *previous_block - allocated_size;\n      if (-1 < (int)unused_space) {\n        if (unused_space < 0xc) {\n          if (last_block == previous_block) {\n            current_block = (uint *)last_block[1];\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (last_block != previous_block) {\n            last_block[1] = (uint)current_block;\n            last_block = previous_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *previous_block = unused_space;\n          *(uint *)((int)previous_block + unused_space) = allocated_size;\n          last_block = (uint *)((int)previous_block + unused_space);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      last_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(output_buffer);\n    }\n    current_block = (uint *)FUN_0800500c(output_buffer,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((last_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == last_block ||\n        (remaining_space = FUN_0800500c(output_buffer,(int)last_block - (int)current_block), remaining_space != -1)))) {\n      *last_block = allocated_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(output_buffer);\n      allocated_size = (int)last_block + 0xbU & 0xfffffff8;\n      remaining_space = allocated_size - (int)(last_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)last_block + remaining_space) = -remaining_space;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_buffer = 0xc;\n    FUNC_0800557e(output_buffer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_memory_08004978",
                "param_1": "output_buffer",
                "param_2": "requested_size",
                "puVar1": "current_block",
                "iVar2": "remaining_space",
                "puVar3": "previous_block",
                "uVar4": "unused_space",
                "puVar5": "last_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_input_08004a34",
            "code": "\nuint processInput_08004a34(int input1,byte input2,byte **input3)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint returnValue;\n  \n  tempVar2 = input3[2] + -1;\n  input3[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)input3[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)input2, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *input3;\n    *input3 = tempVar2 + 1;\n    *tempVar2 = input2;\n    return (uint)input2;\n  }\n  if ((input1 != 0) && (*(int *)(input1 + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (input3 == (byte **)&DAT_08005fc0) {\n    input3 = *(byte ***)(input1 + 4);\n  }\n  else if (input3 == (byte **)&DAT_08005fe0) {\n    input3 = *(byte ***)(input1 + 8);\n  }\n  else if (input3 == (byte **)&DAT_08005fa0) {\n    input3 = *(byte ***)(input1 + 0xc);\n  }\n  input3[2] = input3[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(input3 + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = input3[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_080050d0(input1,input3,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    tempVar1 = (int)*input3 - (int)input3[4];\n    returnValue = (uint)input2;\n    if ((tempVar1 < (int)input3[5]) || (tempVar1 = FUN_080052cc(input1,input3), tempVar1 == 0)) {\n      input3[2] = input3[2] + -1;\n      tempVar2 = *input3;\n      *input3 = tempVar2 + 1;\n      *tempVar2 = input2;\n      if ((byte *)(tempVar1 + 1) != input3[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input3 + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar1 = FUN_080052cc(input1,input3);\n      if (tempVar1 == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_input_08004a34",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint process_data_08004a60(undefined4 input1,undefined4 input2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_of_data;\n  int current_length;\n  \n  end_of_data = data + length;\n  current_length = length;\n  do {\n    if (data == end_of_data) {\n      return 0;\n    }\n    result = FUN_08004a34(input1,*data,input2,length,current_length);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "end_of_data",
                "iVar3": "current_length"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "parse_input_string_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint parseInputString_08004a84(int inputPointer,undefined4 *paramPointer,byte *inputString,int *outputPointer)\n\n{\n  int result;\n  int *piVar;\n  bool isDigit;\n  byte *currentChar;\n  byte *nextChar;\n  int unaff_r9;\n  int numValue;\n  int *outputPointer;\n  uint flags;\n  int precision;\n  undefined4 local_80;\n  int width;\n  int totalLength;\n  byte formatSpecifier;\n  undefined local_6f;\n  undefined local_6e;\n  undefined signSpecifier;\n  undefined4 local_30;\n  \n  outputPointer = outputPointer;\n  if ((inputPointer != 0) && (*(int *)(inputPointer + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (paramPointer == &DAT_08005fc0) {\n    paramPointer = *(undefined4 **)(inputPointer + 4);\n  }\n  else if (paramPointer == (undefined4 *)&DAT_08005fe0) {\n    paramPointer = *(undefined4 **)(inputPointer + 8);\n  }\n  else if (paramPointer == (undefined4 *)&DAT_08005fa0) {\n    paramPointer = *(undefined4 **)(inputPointer + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(paramPointer + 3) << 0x1c)) || (paramPointer[4] == 0)) &&\n     (numValue = FUN_080050d0(inputPointer,paramPointer), numValue != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  currentChar = inputString;\nLAB_08004ac6:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  numValue = (int)nextChar - (int)inputString;\n  if (numValue != 0) {\n    result = FUN_08004a60(inputPointer,paramPointer,inputString,numValue);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(paramPointer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + numValue;\n  }\n  if (*nextChar == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  local_80 = 0;\n  signSpecifier = 0;\n  local_30 = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    numValue = FUN_08000230(\"#-0+ \",*currentChar);\n    inputString = currentChar + 1;\n    if (numValue == 0) break;\n    flags = 1 << (numValue + 0xf7ffa094U & 0xff) | flags;\n    currentChar = inputString;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    signSpecifier = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    signSpecifier = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    piVar = outputPointer + 1;\n    numValue = *outputPointer;\n    outputPointer = piVar;\n    if (numValue < 0) {\n      width = -numValue;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    isDigit = false;\n    numValue = width;\n    inputString = currentChar;\n    while( true ) {\n      if (9 < *inputString - 0x30) break;\n      numValue = numValue * 10 + (*inputString - 0x30);\n      isDigit = true;\n      inputString = inputString + 1;\n    }\n    if (!isDigit) goto LAB_08004bae;\n  }\n  width = numValue;\nLAB_08004bae:\n  if (*inputString == 0x2e) {\n    if (inputString[1] == 0x2a) {\n      precision = *outputPointer;\n      if (precision < 0) {\n        precision = -1;\n      }\n      inputString = inputString + 2;\n      outputPointer = outputPointer + 1;\n    }\n    else {\n      isDigit = false;\n      precision = 0;\n      numValue = 0;\n      while( true ) {\n        inputString = inputString + 1;\n        if (9 < *inputString - 0x30) break;\n        numValue = numValue * 10 + (*inputString - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        precision = numValue;\n      }\n    }\n  }\n  numValue = FUN_08000230(&DAT_08005f72,*inputString,3);\n  if (numValue != 0) {\n    flags = flags | 0x40 << (numValue + 0xf7ffa08eU & 0xff);\n    inputString = inputString + 1;\n  }\n  formatSpecifier = *inputString;\n  inputString = inputString + 1;\n  numValue = FUN_08000230(\"efgEFG\",formatSpecifier,6);\n  if (numValue == 0) {\n    unaff_r9 = FUN_08004d9c(inputPointer,&flags,paramPointer,0x8004a61,&outputPointer);\n    if (unaff_r9 == -1) goto LAB_08004c70;\n  }\n  else {\n    outputPointer = (int *)(((int)outputPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + unaff_r9;\n  currentChar = inputString;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "parse_input_string_08004a84",
                "param_1": "inputPointer",
                "param_2": "paramPointer",
                "param_3": "inputString",
                "param_4": "outputPointer",
                "iVar1": "result",
                "piVar2": "piVar",
                "bVar3": "isDigit",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "iVar6": "numValue",
                "local_8c": "outputPointer",
                "local_88": "flags",
                "local_84": "precision",
                "local_7c": "width",
                "local_74": "totalLength",
                "local_70": "formatSpecifier",
                "local_45": "signSpecifier"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "process_data_08004cb0",
            "code": "\nundefined4\nprocessData_08004cb0(undefined4 input,uint *data,uint *output,undefined4 param4,code *callback)\n\n{\n  int index;\n  int result;\n  uint maxValue;\n  uint counter;\n  bool isFlagSet;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callback)(input,param4,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n    maxValue = maxValue + 2;\n  }\n  index = (*callback)(input,param4,(int)data + 0x43,maxValue);\n  if (index != -1) {\n    maxValue = data[3];\n    isFlagSet = (*data & 6) == 4;\n    if (isFlagSet) {\n      maxValue = maxValue - *output;\n    }\n    if (isFlagSet) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    else {\n      maxValue = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (maxValue == counter) {\n        return 0;\n      }\n      index = (*callback)(input,param4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "process_data_08004cb0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param4",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "maxValue",
                "uVar4": "counter",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "convert_to_hex_string_08004d9c",
            "code": "\nuint convertToHexString_08004d9c(undefined4 input,uint *output,undefined4 length,code *readBytes,uint **count)\n\n{\n  byte byteValue;\n  int index;\n  uint *ptr;\n  int result;\n  char *hexChars;\n  uint value;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value2;\n  uint value3;\n  char *outputIndex;\n  char *outputPtr;\n  uint outputLength [2];\n  \n  byteValue = *(byte *)(output + 6);\n  outputPtr = (char *)((int)output + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_08004f56;\n          if (byteValue != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)output + 0x45) = 0x58;\n          hexChars = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          value = *output;\n          ptr = *count;\n          *count = ptr + 1;\n          if (((value & 0x80) == 0) && ((int)(value << 0x19) < 0)) {\n            value2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            value2 = *ptr;\n          }\n          if ((int)(value << 0x1f) < 0) {\n            *output = value | 0x20;\n          }\n          if (value2 == 0) {\n            *output = *output & 0xffffffdf;\n          }\n          value = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)output + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_08004dcc;\n          value2 = *output;\n          ptr = *count;\n          if ((value2 & 0x80) == 0) {\n            *count = ptr + 1;\n            if ((value2 & 0x40) == 0) goto LAB_08004dec;\n            value2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *count = ptr + 1;\nLAB_08004dec:\n            value2 = *ptr;\n          }\n          if ((int)value2 < 0) {\n            value2 = -value2;\n            *(undefined *)((int)output + 0x43) = 0x2d;\n          }\n          hexChars = \"0123456789ABCDEF\";\n          value = 10;\n        }\n        value3 = output[1];\n        output[2] = value3;\n        outputIndex = outputPtr;\n        if ((int)value3 < 0) {\n          if (value2 != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)output + 0x42) = *hexChars;\n          outputIndex = (char *)((int)output + 0x42);\n        }\n        else {\n          *output = *output & 0xfffffffb;\n          if (value2 == 0) {\n            if (value3 != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              value3 = value2 / value;\n              outputIndex = outputIndex + -1;\n              *outputIndex = hexChars[value2 - value * value3];\n              value2 = value3;\n            } while (value3 != 0);\n          }\n        }\n        if (((value == 8) && ((int)(*output << 0x1f) < 0)) && ((int)output[1] <= (int)output[4]))\n        {\n          outputIndex[-1] = '0';\n          outputIndex = outputIndex + -1;\n        }\n        output[4] = (int)outputPtr - (int)outputIndex;\n        outputPtr = outputIndex;\n        goto LAB_08004ec2;\n      }\n      ptr = *count;\n      *count = ptr + 1;\n      *(char *)((int)output + 0x42) = (char)*ptr;\nLAB_08004e2c:\n      outputPtr = (char *)((int)output + 0x42);\n      value2 = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_08004e52:\n            value2 = *output;\n            ptr = *count;\n            if ((value2 & 0x80) == 0) {\n              *count = ptr + 1;\n              if ((value2 & 0x40) == 0) goto LAB_08004e60;\n              value2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *count = ptr + 1;\nLAB_08004e60:\n              value2 = *ptr;\n            }\n            hexChars = \"0123456789ABCDEF\";\n            if (byteValue == 0x6f) {\n              value = 8;\n            }\n            else {\n              value = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byteValue == 0x70) {\n            *output = *output | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)output + 0x45) = 0x78;\n            hexChars = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_08004e52;\n          if (byteValue == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)output + 0x42) = byteValue;\n        goto LAB_08004e2c;\n      }\n      ppcVar8 = (char **)*count;\n      *count = (uint *)(ppcVar8 + 1);\n      outputPtr = *ppcVar8;\n      index = FUN_08000230(outputPtr,0,output[1]);\n      if (index != 0) {\n        output[1] = index - (int)outputPtr;\n      }\n      value2 = output[1];\n    }\n    output[4] = value2;\n    *(undefined *)((int)output + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value2 = *output;\n  ppuVar7 = (uint **)*count;\n  value = output[5];\n  if ((value2 & 0x80) == 0) {\n    *count = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((value2 & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr = (short)value;\n  }\n  else {\n    *count = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08004f42:\n    *ptr = value;\n  }\nLAB_08004f56:\n  output[4] = 0;\nLAB_08004ec2:\n  index = FUN_08004cb0(input,output,outputLength,length,readBytes);\n  if ((index == -1) || (index = (*readBytes)(input,length,outputPtr,output[4]), index == -1)) {\nLAB_08004ed6:\n    value2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*output << 0x1e) < 0) {\n      for (index = 0; index < (int)(output[3] - outputLength[0]); index = index + 1) {\n        result = (*readBytes)(input,length,(int)output + 0x19,1);\n        if (result == -1) goto LAB_08004ed6;\n      }\n    }\n    value2 = output[3];\n    if ((int)output[3] < (int)outputLength[0]) {\n      value2 = outputLength[0];\n    }\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "convert_to_hex_string_08004d9c",
                "param_1": "input",
                "param_2": "output",
                "param_3": "length",
                "param_4": "readBytes",
                "param_5": "count",
                "bVar1": "byteValue",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "result",
                "pcVar5": "hexChars",
                "uVar6": "value",
                "uVar9": "value2",
                "uVar10": "value3",
                "pcVar11": "outputIndex",
                "pcVar12": "outputPtr",
                "local_24": "outputLength"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "execute_function_08004fdc",
            "code": "\nvoid executeFunction_08004fdc(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPtr;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  \n  dataPtr = DAT_200000a0;\n  param1Copy = input1;\n  param2Copy = input2;\n  param3Copy = input3;\n  param4Copy = input4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(dataPtr,*(undefined4 *)(dataPtr + 8),input1,&param2Copy,param1Copy,&param2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "execute_function_08004fdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPtr",
                "uVar2": "param1Copy",
                "uStack_c": "param2Copy",
                "uStack_8": "param3Copy",
                "uStack_4": "param4Copy"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "check_and_update_value_0800500c",
            "code": "\nvoid checkAndUpdateValue_0800500c(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_08004094(inputValue);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputValue = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "check_and_update_value_0800500c",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "decode_and_update_data_080050d0",
            "code": "\nuint decode_and_update_data_080050d0(undefined4 *output_ptr,undefined4 *input_ptr)\n\n{\n  int data_buffer_ptr;\n  uint result;\n  ushort input_value;\n  \n  data_buffer_ptr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input_ptr == &DAT_08005fc0) {\n    input_ptr = *(undefined4 **)(data_buffer_ptr + 4);\n  }\n  else if (input_ptr == (undefined4 *)&DAT_08005fe0) {\n    input_ptr = *(undefined4 **)(data_buffer_ptr + 8);\n  }\n  else if (input_ptr == (undefined4 *)&DAT_08005fa0) {\n    input_ptr = *(undefined4 **)(data_buffer_ptr + 0xc);\n  }\n  input_value = *(ushort *)(input_ptr + 3);\n  result = (uint)input_value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_ptr = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)next_data != (undefined4 *)0x0) {\n        if ((undefined4 *)next_data != input_ptr + 0x11) {\n          FUN_080048dc(output_ptr);\n        }\n        next_data = 0;\n      }\n      *(ushort *)(input_ptr + 3) = *(ushort *)(input_ptr + 3) & 0xffdb;\n      input_ptr[1] = 0;\n      *input_ptr = data_condition;\n    }\n    *(ushort *)(input_ptr + 3) = *(ushort *)(input_ptr + 3) | 8;\n  }\n  if ((data_condition == 0) && ((*(ushort *)(input_ptr + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output_ptr,input_ptr);\n  }\n  input_value = *(ushort *)(input_ptr + 3);\n  result = input_value & 1;\n  if ((input_value & 1) == 0) {\n    if (-1 < (int)((uint)input_value << 0x1e)) {\n      result = data_value;\n    }\n    input_ptr[2] = result;\n  }\n  else {\n    input_ptr[2] = 0;\n    input_ptr[6] = -data_value;\n  }\n  if (data_condition == 0) {\n    input_value = *(ushort *)(input_ptr + 3);\n    result = (int)(short)input_value & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input_ptr + 3) = input_value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "decode_and_update_data_080050d0",
                "param_1": "output_ptr",
                "param_2": "input_ptr",
                "iVar1": "data_buffer_ptr",
                "uVar2": "result",
                "uVar3": "input_value",
                "param_2[0xd]": "next_data",
                "param_2[4]": "data_condition",
                "param_2[5]": "data_value"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "process_function_080051ac",
            "code": "\nvoid processFunction_080051ac(void)\n\n{\n  uint *puVar1;\n  int var1;\n  int *parameters;\n  int *var2;\n  uint value1;\n  ushort value2;\n  int var3;\n  code *functionPointer;\n  int var4;\n  uint value3;\n  code *jumpTable;\n  bool condition;\n  undefined8 returnValue;\n  \n  FUN_080055d0(6);\n  jumpTable = (code *)0x80051bb;\n  returnValue = FUN_080040f8(1);\n  parameters = (int *)((ulonglong)returnValue >> 0x20);\n  puVar1 = (uint *)returnValue;\n  value2 = *(ushort *)(parameters + 3);\n  value1 = (uint)value2;\n  if ((int)(value1 << 0x1c) < 0) {\n    var1 = parameters[4];\n    if (var1 != 0) {\n      var3 = value1 << 0x1e;\n      condition = var3 == 0;\n      var4 = *parameters;\n      if (condition) {\n        var3 = parameters[5];\n      }\n      *parameters = var1;\n      if (!condition) {\n        var3 = 0;\n      }\n      parameters[2] = var3;\n      for (var4 = var4 - var1; 0 < var4; var4 = var4 - var3) {\n        var3 = (*(code *)parameters[10])(puVar1,parameters[8],var1,var4);\n        if (var3 < 1) {\n          value2 = *(ushort *)(parameters + 3);\n          goto LAB_080052b2;\n        }\n        var1 = var1 + var3;\n      }\n    }\n  }\n  else if (((0 < parameters[1]) || (0 < parameters[0x10])) &&\n          (functionPointer = (code *)parameters[0xb], functionPointer != (code *)0x0)) {\n    value3 = *puVar1;\n    *puVar1 = 0;\n    if ((value2 & 0x1000) == 0) {\n      var1 = (*functionPointer)(puVar1,parameters[8],value1 & 0x1000,1);\n      if ((var1 == -1) && (value1 = *puVar1, value1 != 0)) {\n        if ((value1 != 0x1d) && (value1 != 0x16)) {\n          *(ushort *)(parameters + 3) = *(ushort *)(parameters + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *puVar1 = value3;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      var1 = parameters[0x15];\n    }\n    if (((int)((uint)*(ushort *)(parameters + 3) << 0x1d) < 0) &&\n       (var1 = var1 - parameters[1], parameters[0xd] != 0)) {\n      var1 = var1 - parameters[0x10];\n    }\n    var1 = (*(code *)parameters[0xb])(puVar1,parameters[8],var1,0);\n    value2 = *(ushort *)(parameters + 3);\n    if ((var1 == -1) &&\n       ((0x1d < *puVar1 || (-1 < (int)((0x20400001U >> (*puVar1 & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(parameters + 3) = value2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    parameters[1] = 0;\n    *parameters = parameters[4];\n    if (((int)((uint)value2 << 0x13) < 0) && ((var1 != -1 || (*puVar1 == 0)))) {\n      parameters[0x15] = var1;\n    }\n    var2 = (int *)parameters[0xd];\n    *puVar1 = value3;\n    if (var2 != (int *)0x0) {\n      if (var2 != parameters + 0x11) {\n        FUN_080048dc(puVar1);\n      }\n      parameters[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "process_function_080051ac",
                "piVar3": "parameters",
                "iVar2": "var1",
                "piVar4": "var2",
                "uVar5": "value1",
                "uVar6": "value2",
                "iVar7": "var3",
                "pcVar8": "functionPointer",
                "iVar9": "var4",
                "uVar10": "value3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "condition",
                "uVar12": "returnValue"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "execute_function_080052cc",
            "code": "\nundefined4 executeFunction_080052cc(uint *arg1,int *arg2)\n\n{\n  undefined4 returnValue;\n  int count;\n  int *pointer;\n  uint tempVar;\n  ushort tempVar2;\n  int tempVar3;\n  undefined4 result4;\n  undefined4 result5;\n  code *functionPtr;\n  int tempVar4;\n  uint tempVar5;\n  code *unrecoveredJumptable;\n  bool conditionFlag;\n  \n  if (arg2[4] != 0) {\n    if ((arg1 != (uint *)0x0) && (arg1[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (arg2 == &DAT_08005fc0) {\n      arg2 = (int *)arg1[1];\n    }\n    else if (arg2 == (int *)&DAT_08005fe0) {\n      arg2 = (int *)arg1[2];\n    }\n    else if (arg2 == (int *)&DAT_08005fa0) {\n      arg2 = (int *)arg1[3];\n    }\n    if (*(short *)(arg2 + 3) != 0) {\n      tempVar2 = *(ushort *)(arg2 + 3);\n      tempVar = (uint)tempVar2;\n      if ((int)(tempVar << 0x1c) < 0) {\n        count = arg2[4];\n        if (count != 0) {\n          tempVar3 = tempVar << 0x1e;\n          conditionFlag = tempVar3 == 0;\n          tempVar4 = *arg2;\n          if (conditionFlag) {\n            tempVar3 = arg2[5];\n          }\n          *arg2 = count;\n          if (!conditionFlag) {\n            tempVar3 = 0;\n          }\n          arg2[2] = tempVar3;\n          for (tempVar4 = tempVar4 - count; 0 < tempVar4; tempVar4 = tempVar4 - tempVar3) {\n            tempVar3 = (*(code *)arg2[10])(arg1,arg2[8],count,tempVar4,result4,result5);\n            if (tempVar3 < 1) {\n              tempVar2 = *(ushort *)(arg2 + 3);\n              goto LAB_080052b2;\n            }\n            count = count + tempVar3;\n          }\n        }\n      }\n      else if (((0 < arg2[1]) || (0 < arg2[0x10])) &&\n              (functionPtr = (code *)arg2[0xb], functionPtr != (code *)0x0)) {\n        tempVar5 = *arg1;\n        *arg1 = 0;\n        if ((tempVar2 & 0x1000) == 0) {\n          count = (*functionPtr)(arg1,arg2[8],tempVar & 0x1000,1);\n          if ((count == -1) && (tempVar = *arg1, tempVar != 0)) {\n            if ((tempVar != 0x1d) && (tempVar != 0x16)) {\n              *(ushort *)(arg2 + 3) = *(ushort *)(arg2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*unrecoveredJumptable)();\n              return returnValue;\n            }\n            *arg1 = tempVar5;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          count = arg2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(arg2 + 3) << 0x1d) < 0) &&\n           (count = count - arg2[1], arg2[0xd] != 0)) {\n          count = count - arg2[0x10];\n        }\n        count = (*(code *)arg2[0xb])(arg1,arg2[8],count,0);\n        tempVar2 = *(ushort *)(arg2 + 3);\n        if ((count == -1) &&\n           ((0x1d < *arg1 || (-1 < (int)((0x20400001U >> (*arg1 & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(arg2 + 3) = tempVar2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredJumptable)(0xffffffff);\n          return returnValue;\n        }\n        arg2[1] = 0;\n        *arg2 = arg2[4];\n        if (((int)((uint)tempVar2 << 0x13) < 0) && ((count != -1 || (*arg1 == 0)))) {\n          arg2[0x15] = count;\n        }\n        pointer = (int *)arg2[0xd];\n        *arg1 = tempVar5;\n        if (pointer != (int *)0x0) {\n          if (pointer != arg2 + 0x11) {\n            FUN_080048dc(arg1);\n          }\n          arg2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredJumptable)();\n          return returnValue;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*unrecoveredJumptable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "execute_function_080052cc",
                "param_1": "arg1",
                "param_2": "arg2",
                "uVar1": "returnValue",
                "iVar2": "count",
                "piVar3": "pointer",
                "uVar4": "tempVar",
                "uVar5": "tempVar2",
                "iVar6": "tempVar3",
                "unaff_r4": "result4",
                "unaff_r5": "result5",
                "pcVar7": "functionPtr",
                "iVar8": "tempVar4",
                "uVar9": "tempVar5",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredJumptable",
                "bVar10": "conditionFlag"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_data_0800532c",
            "code": "\nvoid initializeData_0800532c(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080048cc(data + 0x17,0,8);\n  data[9] = 0x8005609;\n  data[10] = 0x800562b;\n  data[0xb] = 0x8005663;\n  data[8] = data;\n  data[0xc] = &LAB_08005686_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_data_0800532c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_data_08005374",
            "code": "\nundefined4 * initializeData_08005374(undefined4 inputData,int count)\n\n{\n  undefined4 *dataPtr;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  dataPtr = (undefined4 *)FUN_08004978(inputData,offset + 0x74);\n  if (dataPtr != (undefined4 *)0x0) {\n    *dataPtr = 0;\n    dataPtr[1] = count;\n    dataPtr[2] = dataPtr + 3;\n    FUN_080048cc(dataPtr + 3,0,offset + 0x68);\n  }\n  return dataPtr;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_data_08005374",
                "param_1": "inputData",
                "param_2": "count",
                "puVar1": "dataPtr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *dataPointer)\n\n{\n  undefined4 tempVar1;\n  undefined4 *temporaryPointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    temporaryPointer = &DAT_200000a4;\n    dataPointer[10] = &specialLabel;\n    if (dataPointer == &DAT_200000a4) {\n      temporaryPointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_200000a4) {\n      dataPointer[6] = temporaryPointer;\n    }\n    tempVar1 = FUN_08005400();\n    dataPointer[1] = tempVar1;\n    tempVar1 = FUN_08005400(dataPointer);\n    dataPointer[2] = tempVar1;\n    tempVar1 = FUN_08005400(dataPointer);\n    dataPointer[3] = tempVar1;\n    FUN_0800532c(dataPointer[1],4,0);\n    FUN_0800532c(dataPointer[2],9,1);\n    FUN_0800532c(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "dataPointer",
                "uVar1": "tempVar1",
                "puVar2": "temporaryPointer",
                "LAB_08005320_1": "specialLabel"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_data_structures_08005400",
            "code": "\nint * initializeDataStructures_08005400(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *ptr1;\n  int *ptr2;\n  int **ptrArray;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  ptrArray = (int **)&DAT_200000ec;\n  do {\n    ptr2 = ptrArray[2];\n    ptr1 = ptrArray[1];\n    while (ptr1 = (int *)((int)ptr1 + -1), -1 < (int)ptr1) {\n      if (*(short *)(ptr2 + 3) == 0) {\n        *(undefined2 *)((int)ptr2 + 0xe) = 0xffff;\n        *(undefined2 *)(ptr2 + 3) = 1;\n        var1 = 0;\n        *ptr2 = 0;\n        ptr2[2] = 0;\n        ptr2[1] = 0;\n        ptr2[4] = 0;\n        ptr2[5] = 0;\n        ptr2[6] = 0;\n        FUN_080048cc(ptr2 + 0x17,0,8,1,param4);\n        var2 = 0;\n        var3 = 0;\n        var4 = 0;\n        var5 = 0;\n        return ptr2;\n      }\n      ptr2 = ptr2 + 0x1a;\n    }\n    if (*ptrArray == (int *)0x0) {\n      ptr1 = (int *)FUN_08005374(errorCode,4);\n      *ptrArray = ptr1;\n      if (ptr1 == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptrArray = (int **)*ptrArray;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_data_structures_08005400",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "ptr1",
                "piVar2": "ptr2",
                "ppiVar3": "ptrArray",
                "piVar2[0x19]": "var1",
                "piVar2[0xd]": "var2",
                "piVar2[0xe]": "var3",
                "piVar2[0x12]": "var4",
                "piVar2[0x13]": "var5"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_and_set_flag_080054b4",
            "code": "\nundefined4 checkAndSetFlag_080054b4(undefined4 param1,int param2,undefined4 *flagResult,uint *flagValue)\n\n{\n  int returnValue;\n  undefined4 flag;\n  undefined stackVar [4];\n  uint localFlag;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (returnValue = FUN_080056d4(param1,(int)*(short *)(param2 + 0xe),stackVar), returnValue < 0)) {\n    *flagValue = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      flag = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *flagValue = (uint)((localFlag & 0xf000) == 0x2000);\n  }\n  flag = 0x400;\nLAB_080054f4:\n  *flagResult = flag;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_and_set_flag_080054b4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "flagResult",
                "param_4": "flagValue",
                "iVar1": "returnValue",
                "uVar2": "flag",
                "auStack_4c": "stackVar",
                "local_48": "localFlag"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "update_data_080054fc",
            "code": "\nvoid updateData_080054fc(int dataAddress,int *dataPointer)\n\n{\n  ushort result;\n  int returnValue;\n  int localData;\n  int *localPointer;\n  \n  if (-1 < (int)((uint)*(ushort *)(dataPointer + 3) << 0x1e)) {\n    localData = dataAddress;\n    localPointer = dataPointer;\n    result = FUN_080054b4(dataAddress,dataPointer,&localData,&localPointer);\n    returnValue = FUN_08004978(dataAddress,localData);\n    if (returnValue != 0) {\n      *(undefined **)(dataAddress + 0x28) = &LAB_08005320_1;\n      *dataPointer = returnValue;\n      *(ushort *)(dataPointer + 3) = *(ushort *)(dataPointer + 3) | 0x80;\n      dataPointer[5] = localData;\n      dataPointer[4] = returnValue;\n      if ((localPointer != (int *)0x0) &&\n         (returnValue = FUN_080056f8(dataAddress,(int)*(short *)((int)dataPointer + 0xe)), returnValue != 0)) {\n        *(ushort *)(dataPointer + 3) = *(ushort *)(dataPointer + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(dataPointer + 3) = result | *(ushort *)(dataPointer + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(dataPointer + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(dataPointer + 3) = *(ushort *)(dataPointer + 3) & 0xfffc | 2;\n  }\n  *dataPointer = (int)dataPointer + 0x47;\n  dataPointer[4] = (int)dataPointer + 0x47;\n  dataPointer[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "update_data_080054fc",
                "param_1": "dataAddress",
                "param_2": "dataPointer",
                "uVar1": "result",
                "iVar2": "returnValue",
                "local_18": "localData",
                "local_14": "localPointer"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "process_data_080055d0",
            "code": "\nint processData_080055d0(uint data)\n\n{\n  int *dataArray;\n  undefined4 result;\n  int length;\n  code *functionPtr;\n  undefined4 tempRegister4;\n  undefined4 tempRegister5;\n  undefined4 linkRegister;\n  undefined4 *dataPtr;\n  \n  dataArray = DAT_200000a0;\n  dataPtr = &DAT_200000a0;\n  if (0x1f < data) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  length = DAT_200000a0[0x11];\n  if ((length != 0) && (functionPtr = *(code **)(length + data * 4), functionPtr != (code *)0x0)) {\n    if (functionPtr != (code *)0x1) {\n      if (functionPtr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(length + data * 4) = 0;\n      (*functionPtr)(data);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  length = FUN_080040fc(result,data,data,0,dataPtr,tempRegister4,tempRegister5,linkRegister);\n  if ((length == -1) && (DAT_20000674 != 0)) {\n    *dataArray = DAT_20000674;\n  }\n  return length;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "process_data_080055d0",
                "param_1": "data",
                "piVar1": "dataArray",
                "uVar2": "result",
                "iVar3": "length",
                "pcVar4": "functionPtr",
                "unaff_r4": "tempRegister4",
                "unaff_r5": "tempRegister5",
                "in_lr": "linkRegister",
                "puVar5": "dataPtr"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "get_one_thunk_0800410c",
            "code": "\nint get_one_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "get_one_thunk_0800410c",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_data_08005608",
            "code": "\nvoid updateData_08005608(undefined4 param,int data)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800573c(param,(int)*(short *)(data + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(data + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(data + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(data + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_data_08005608",
                "param_1": "param",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "process_data_0800562a",
            "code": "\nvoid processData_0800562a(int *result,int data,undefined4 arg1,undefined4 arg2)\n\n{\n  int iVar1;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if ((int)((uint)*(ushort *)(data + 0xc) << 0x17) < 0) {\n    FUN_08005718(result,(int)*(short *)(data + 0xe),0,2);\n  }\n  *(ushort *)(data + 0xc) = *(ushort *)(data + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  iVar1 = FUN_080040ec((int)*(short *)(data + 0xe),arg1,arg2,arg2,arg2,temp1,\n                       temp2,temp3);\n  if ((iVar1 == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "process_data_0800562a",
                "param_1": "result",
                "param_2": "data",
                "param_3": "arg1",
                "param_4": "arg2",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "in_lr": "temp3"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_status_08005662",
            "code": "\nvoid updateStatus_08005662(undefined4 statusPtr,int dataPtr)\n\n{\n  int result;\n  ushort updatedFlags;\n  bool isFailure;\n  \n  result = FUN_08005718(statusPtr,(int)*(short *)(dataPtr + 0xe));\n  isFailure = result == -1;\n  if (isFailure) {\n    updatedFlags = *(ushort *)(dataPtr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(dataPtr + 0x54) = result;\n    updatedFlags = *(ushort *)(dataPtr + 0xc) | 0x1000;\n  }\n  if (isFailure) {\n    *(ushort *)(dataPtr + 0xc) = updatedFlags;\n  }\n  if (!isFailure) {\n    *(ushort *)(dataPtr + 0xc) = updatedFlags;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_status_08005662",
                "param_1": "statusPtr",
                "param_2": "dataPtr",
                "iVar1": "result",
                "uVar2": "updatedFlags",
                "bVar3": "isFailure"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "process_data_080056d4",
            "code": "\nvoid processData_080056d4(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040d6(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "process_data_080056d4",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "update_param_and_check_error_080056f8",
            "code": "\nvoid updateParamAndCheckError_080056f8(int *outputParam,undefined4 inputParam)\n\n{\n  int resultVar;\n  \n  DAT_20000674 = 0;\n  resultVar = FUN_080040e0(inputParam);\n  if ((resultVar == -1) && (DAT_20000674 != 0)) {\n    *outputParam = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "update_param_and_check_error_080056f8",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "resultVar"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "update_param_with_value_if_needed_08005718",
            "code": "\nvoid updateParamWithValueIfNeeded_08005718(int *ptrToUpdate,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e4(value1,value2,value3,value3,value3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *ptrToUpdate = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "update_param_with_value_if_needed_08005718",
                "param_1": "ptrToUpdate",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "process_data_0800573c",
            "code": "\nvoid processData_0800573c(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e8(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "process_data_0800573c",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_flags_08005760",
            "code": "\nvoid initializeFlags_08005760(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeFlags_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_flags_08005760",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 117140,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}