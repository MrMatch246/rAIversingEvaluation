{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_string_length_08000178",
            "code": "\nchar * find_string_length_08000178(char *str)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_str;\n  \n  current_str = str;\n  do {\n    next_char = current_str + 1;\n    current_char = *current_str;\n    current_str = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)str);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_string_length_08000178",
                "param_1": "str",
                "pcVar2": "next_char",
                "cVar1": "current_char",
                "pcVar3": "current_str"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "send_system_interrupt_08000188",
            "code": "\nvoid sendSystemInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "send_system_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "execute_function_0800018c",
            "code": "\nundefined4 executeFunction_0800018c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "execute_function_0800018c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint size,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  bool isValid;\n  int result;\n  \n  if (0x3b < (int)size) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,size,param2,param3,param3);\n  if (result == 3) {\n    if (size < 0x3c) {\n      if ((&DAT_0800a908)[size] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[size]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[size],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(size,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,size,param1);\n  }\n  else if (result == 4) {\n    if (size < 0x3c) {\n      if ((&DAT_0800a908)[size] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[size]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[size] * 3,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,size,param1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "size",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint index,undefined4 value,undefined4 param3,undefined4 param4)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,index,param3,param4,param4);\n  if (result == 3) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(index,value);\n    }\n    FUN_08002fc2(&DAT_200003d4,index,value);\n  }\n  else if (result == 4) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3,value);\n    }\n    FUN_08002fc2(&DAT_200003d4,index,value);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "index",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_08000488",
            "code": "\nvoid updateData_08000488(uint dataIndex,int flag)\n\n{\n  undefined4 result;\n  \n  if ((int)dataIndex < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (dataIndex & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (dataIndex & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,dataIndex,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_08000488",
                "param_1": "dataIndex",
                "param_2": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_parameters_080004d4",
            "code": "\nvoid process_parameters_080004d4(int input_flag,int value)\n\n{\n  int counter;\n  undefined *data_ptr;\n  \n  if (input_flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    data_ptr = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      FUN_08002580(data_ptr);\n      data_ptr = data_ptr + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_parameters_080004d4",
                "param_1": "input_flag",
                "param_2": "value",
                "iVar1": "counter",
                "puVar2": "data_ptr"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "manage_servos_08000500",
            "code": "\nvoid manageServos_08000500(int servoIndex,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "manage_servos_08000500",
                "param_1": "servoIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_08000588",
            "code": "\nvoid updateData_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initialize_data_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "process_pin_080005f8",
            "code": "\nvoid processPin_080005f8(uint pinNumber,int pinMode)\n\n{\n  int result;\n  char isSpecialCase;\n  bool isConditionMet;\n  uint maskedPinNumber;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        isSpecialCase = '\\0';\n      }\n      else {\n        isSpecialCase = DAT_20000170;\n        if (pinMode == 6) {\n          isSpecialCase = '\\0';\n        }\n      }\n    }\n    else {\n      isSpecialCase = '\\0';\n    }\n    if (isSpecialCase != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else if (pinMode == 4) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    maskedPinNumber = pinNumber - 0x2e & 0xff;\n    if (maskedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isConditionMet = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isConditionMet = false;\n        }\n        else {\n          isConditionMet = true;\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_08000488(maskedPinNumber,pinMode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      if ((pinMode == 0) || (pinMode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(pinMode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (maskedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isConditionMet = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (result == 1) {\n                isConditionMet = false;\n              }\n            }\n          }\n        }\n        else {\n          isConditionMet = false;\n        }\n        if (isConditionMet) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           result != 0)) {\n          isConditionMet = false;\n        }\n        if (isConditionMet) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "process_pin_080005f8",
                "param_1": "pinNumber",
                "param_2": "pinMode",
                "iVar1": "result",
                "cVar2": "isSpecialCase",
                "bVar3": "isConditionMet",
                "uVar4": "maskedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int returnValue;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        returnValue = 0;\n      }\n      else {\n        returnValue = FUN_080036ac();\n        if (returnValue == 0) {\n          returnValue = 0;\n        }\n        else {\n          returnValue = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (returnValue == 1) {\n            returnValue = 0;\n          }\n          else {\n            returnValue = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (returnValue == 0) {\n              returnValue = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    if (returnValue != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "returnValue",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (uVar3 = 0; uVar3 < 5; uVar3 = uVar3 + 1 & 0xff) {\n    (&DAT_200001e8)[uVar3] = 0;\n    (&DAT_20000174)[uVar3] = 0;\n    (&DAT_20000180)[uVar3] = 0;\n  }\n  for (uVar3 = 0; uVar3 < 0x3c; uVar3 = uVar3 + 1 & 0xff) {\n    if ((uVar3 - 0x2e & 0xff) < 0xe) {\n      if (uVar3 < 0x3c) {\n        iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n      }\n      else {\n        iVar2 = -1;\n      }\n      iVar2 = FUN_080036ac(iVar2);\n      if (iVar2 == 0) {\n        bVar1 = false;\n      }\n      else {\n        if (uVar3 < 0x3c) {\n          iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 1) {\n          bVar1 = false;\n        }\n        else {\n          bVar1 = true;\n        }\n      }\n    }\n    else {\n      bVar1 = false;\n    }\n    if (bVar1) {\n      FUN_080005f8(uVar3,2);\n    }\n    else {\n      if ((((uVar3 < 0x3c) && ((&DAT_0800a908)[uVar3] != -1)) &&\n          (iVar2 = FUN_080036ac(), iVar2 != 0)) &&\n         (iVar2 = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar3]), iVar2 != 1)) {\n        bVar1 = true;\n      }\n      if (bVar1) {\n        FUN_080005f8(uVar3,1);\n      }\n    }\n    (&DAT_200001f0)[uVar3] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "update_byte_data_08000be8",
            "code": "\nvoid updateByteData_08000be8(int index,uint mask,int condition,undefined4 value)\n\n{\n  undefined1 *dataPtr1;\n  undefined1 *dataPtr2;\n  \n  dataPtr1 = &DAT_20000174;\n  dataPtr2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((condition != 0) ||\n     (dataPtr1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPtr2 != dataPtr1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPtr2,dataPtr1,value);\n    (&DAT_20000180)[index] = (char)dataPtr2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "update_byte_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "value",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_device_settings_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureDeviceSettings_08000ef8(void)\n\n{\n  byte tempByte1;\n  int tempInt;\n  bool tempBool;\n  byte settingMask;\n  \n  tempByte1 = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      settingMask = 0;\n    }\n    else {\n      tempInt = FUN_080036ac(3);\n      if (tempInt == 1) {\n        settingMask = 0;\n      }\n      else if ((tempByte1 & 1) == 0) {\n        settingMask = 0;\n      }\n      else {\n        tempInt = FUN_08008a6c(0);\n        if (tempInt == 0) {\n          settingMask = 0;\n        }\n        else {\n          settingMask = 1;\n        }\n      }\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(2);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 2) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(1);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 2;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(10);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 4) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(2);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 4;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x13);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 8) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(3);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 8;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x15);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x10) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(4);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x10;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x14);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x20) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(5);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x20;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x1a);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x40) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(6);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x40;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(8);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x80) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(7);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x80;\n    }\n    FUN_08000be8(0,settingMask);\n  }\n  tempByte1 = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      settingMask = 0;\n    }\n    else {\n      tempInt = FUN_080036ac(9);\n      if (tempInt == 1) {\n        settingMask = 0;\n      }\n      else if ((tempByte1 & 1) == 0) {\n        settingMask = 0;\n      }\n      else {\n        tempInt = FUN_08008a6c(8);\n        if (tempInt == 0) {\n          settingMask = 0;\n        }\n        else {\n          settingMask = 1;\n        }\n      }\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x27);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 2) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(9);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 2;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x16);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 4) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(10);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 4;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(7);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 8) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0xb);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 8;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(6);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x10) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0xc);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x10;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(5);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x20) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0xd);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x20;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x19);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x40) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0xe);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x40;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x18);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x80) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0xf);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x80;\n    }\n    FUN_08000be8(1,settingMask,0);\n  }\n  tempByte1 = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      settingMask = 0;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2a);\n      if (tempInt == 1) {\n        settingMask = 0;\n      }\n      else if ((tempByte1 & 1) == 0) {\n        settingMask = 0;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x10);\n        if (tempInt == 0) {\n          settingMask = 0;\n        }\n        else {\n          settingMask = 1;\n        }\n      }\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2c);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 2) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x11);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 2;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0xd);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 8) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x13);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 8;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0xe);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x10) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x14);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x10;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0xf);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x20) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x15);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x20;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x17);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x40) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x16);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x40;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2d);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x80) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x17);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x80;\n    }\n    FUN_08000be8(2,settingMask,0);\n  }\n  tempByte1 = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      settingMask = 0;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2e);\n      if (tempInt == 1) {\n        settingMask = 0;\n      }\n      else if ((tempByte1 & 1) == 0) {\n        settingMask = 0;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x18);\n        if (tempInt == 0) {\n          settingMask = 0;\n        }\n        else {\n          settingMask = 1;\n        }\n      }\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2f);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 2) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x19);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 2;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x30);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 4) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1a);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 4;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x31);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 8) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1b);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 8;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x22);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x10) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1c);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x10;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x23);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x20) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1d);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x20;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x2b);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x40) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1e);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x40;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x32);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x80) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x1f);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x80;\n    }\n    FUN_08000be8(3,settingMask,0);\n  }\n  tempByte1 = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      settingMask = 0;\n    }\n    else {\n      tempInt = FUN_080036ac(0x29);\n      if (tempInt == 1) {\n        settingMask = 0;\n      }\n      else if ((tempByte1 & 1) == 0) {\n        settingMask = 0;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x20);\n        if (tempInt == 0) {\n          settingMask = 0;\n        }\n        else {\n          settingMask = 1;\n        }\n      }\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x28);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 2) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x21);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 2;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x26);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 4) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x22);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 4;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x25);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 8) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x23);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 8;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0xc);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x10) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x24);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x10;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0xb);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x20) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x25);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x20;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x1c);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x40) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x26);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x40;\n    }\n    tempInt = FUN_080036ac();\n    if (tempInt == 0) {\n      tempBool = false;\n    }\n    else {\n      tempInt = FUN_080036ac(0x1b);\n      if (tempInt == 1) {\n        tempBool = false;\n      }\n      else if ((tempByte1 & 0x80) == 0) {\n        tempBool = false;\n      }\n      else {\n        tempInt = FUN_08008a6c(0x27);\n        if (tempInt == 0) {\n          tempBool = false;\n        }\n        else {\n          tempBool = true;\n        }\n      }\n    }\n    if (tempBool) {\n      settingMask = settingMask | 0x80;\n    }\n    FUN_08000be8(4,settingMask,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_device_settings_08000ef8",
                "bVar1": "tempByte1",
                "iVar2": "tempInt",
                "bVar3": "tempBool",
                "bVar4": "settingMask"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&firmwareLab1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&lab1);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&lab2);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "LAB_080002ec_1": "firmwareLab1",
                "LAB_08000c18_1": "lab1",
                "LAB_080001a8_1": "lab2"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer,undefined4 unused,undefined4 size,undefined4 value)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer,size,value,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer",
                "param_2": "unused",
                "param_3": "size",
                "param_4": "value"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint receivedSize,int expectedSize,undefined4 message)\n\n{\n  undefined byteValue;\n  int receivedCount;\n  int byteAvailable;\n  bool isAvailable;\n  \n  if (receivedSize == 0xffffffff) {\n    receivedSize = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(receivedSize & 0xff);\n    FUN_08002a58(&DAT_20000314,message);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedSize);\n  receivedCount = FUN_0800270c(&DAT_20000314);\n  if (expectedSize < receivedCount) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedCount = FUN_0800270c(&DAT_20000314);\n    if (receivedCount < expectedSize) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)receivedSize;\n  receivedCount = 0;\n  while( true ) {\n    if (receivedCount < expectedSize) {\n      byteAvailable = FUN_0800270c(&DAT_20000314);\n      if (byteAvailable == 0) {\n        isAvailable = false;\n      }\n      else {\n        isAvailable = true;\n      }\n    }\n    else {\n      isAvailable = false;\n    }\n    if (!isAvailable) break;\n    byteValue = FUN_08001c08();\n    (&DAT_20000132)[receivedCount] = byteValue;\n    receivedCount = receivedCount + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedSize + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "receivedSize",
                "param_3": "expectedSize",
                "param_4": "message",
                "uVar1": "byteValue",
                "iVar2": "receivedCount",
                "iVar3": "byteAvailable",
                "bVar4": "isAvailable"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_command_08001cd0",
            "code": "\nvoid processCommand_08001cd0(undefined4 commandType,int param2,byte *data,undefined4 param4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 temp;\n  byte byte4;\n  char char1;\n  int index;\n  int tempIndex;\n  uint counter1;\n  uint counter2;\n  int tempVar;\n  bool boolVar;\n  \n  switch(commandType) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (counter1 = 0; counter1 < 0x3c; counter1 = counter1 + 1 & 0xff) {\n      counter2 = counter1 - 0x2e & 0xff;\n      if (counter2 < 0xe) {\n        if (counter1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[counter1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          counter2 = 0x7f;\n        }\n        else {\n          if (counter1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[counter1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            counter2 = 0x7f;\n          }\n        }\n      }\n      else {\n        counter2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,counter2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (counter1 = 0; counter1 < 0x3c; counter1 = counter1 + 1 & 0xff) {\n      if (counter1 < 0x3c) {\n        if ((&DAT_0800a908)[counter1] == -1) {\n          boolVar = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            boolVar = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[counter1]);\n            if (index == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((counter1 - 0x2e & 0xff) < 0xe) {\n        if (counter1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[counter1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          boolVar = false;\n        }\n        else {\n          if (counter1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[counter1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            boolVar = false;\n          }\n          else {\n            boolVar = true;\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (counter1 < 0x3c) {\n        if ((&DAT_0800a908)[counter1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[counter1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[counter1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (counter1 < 0x3c) {\n        if ((&DAT_0800a908)[counter1] == -1) {\n          boolVar = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            boolVar = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[counter1]);\n            if (index == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (counter1 < 0x3c) {\n        if ((&DAT_0800a908)[counter1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[counter1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[counter1],&DAT_0800a69c);\n              if (index == 0) {\n                index = FUN_0800738a((int)(char)(&DAT_0800a908)[counter1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (param2 != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        temp = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,temp);\n        counter1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,counter1 & 0x7f);\n        counter1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((counter1 & 0xff80) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        counter1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((counter1 & 0xc000) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < param2) {\n      counter1 = (uint)data[1];\n      if (2 < param2) {\n        counter1 = counter1 | (uint)data[2] << 7;\n      }\n      if (3 < param2) {\n        counter1 = counter1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,counter1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < param2) {\n      counter1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (counter1 < 0x3c) {\n        if ((&DAT_0800a908)[counter1] == -1) {\n          boolVar = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            boolVar = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[counter1]);\n            if (index == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        if ((byte)(&DAT_200001f0)[counter1] < 0xc) {\n          index = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[counter1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          FUN_08000588(counter1);\n        }\n        FUN_08000500(counter1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(counter1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param4);\n      return;\n    }\n    byte2 = *data;\n    boolVar = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (counter1 = 2; (int)counter1 < param2; counter1 = counter1 + 2 & 0xff) {\n          FUN_08001bf8(data[counter1 + 1] * -0x80 + data[counter1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (param2 == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        FUN_08001c18(byte2,index,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (param2 == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          tempIndex = (int)DAT_20000004;\n          tempVar = tempIndex * 0xc;\n          (&DAT_20000188)[tempVar] = byte2;\n          (&DAT_2000018c)[tempIndex * 3] = index;\n          (&DAT_20000190)[tempVar] = char1;\n          (&DAT_20000191)[tempVar] = boolVar;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,boolVar,param4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (counter1 = 0; index = DAT_20000004 + 1, (int)counter1 < index; counter1 = counter1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[counter1 * 0xc]) goto LAB_08001e66;\n      }\n      counter1 = 0;\nLAB_08001e66:\n      for (; (int)counter1 < index; counter1 = counter1 + 1 & 0xff) {\n        if (counter1 < 8) {\n          tempIndex = (counter1 + 1) * 0xc;\n          tempVar = counter1 * 0xc;\n          (&DAT_20000188)[tempVar] = (&DAT_20000188)[tempIndex];\n          (&DAT_2000018c)[counter1 * 3] = (&DAT_2000018c)[(counter1 + 1) * 3];\n          (&DAT_20000190)[tempVar] = (&DAT_20000190)[tempIndex];\n          (&DAT_20000191)[tempVar] = (&DAT_20000191)[tempIndex];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < param2) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < param2) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_command_08001cd0",
                "param_1": "commandType",
                "param_2": "param2",
                "param_3": "data",
                "param_4": "param4",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "temp",
                "bVar5": "byte4",
                "cVar6": "char1",
                "iVar7": "index",
                "iVar8": "tempIndex",
                "uVar9": "counter1",
                "uVar10": "counter2",
                "iVar11": "tempVar",
                "bVar12": "boolVar"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool isValid;\n  int result;\n  undefined4 value;\n  uint i;\n  uint j;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (i = 0; i < 0x3c; i = i + 1 & 0xff) {\n      j = i - 0x2e & 0xff;\n      if (j < 0xe) {\n        if (i < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[i];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          if (i < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[i];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,i);\n            if (result == 2) {\n              isValid = true;\n            }\n            else {\n              isValid = false;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if ((isValid) && ((DAT_20000114 >> j & 1U) != 0)) {\n        value = FUN_08008880(j);\n        FUN_08002ef2(&DAT_200003d4,j,value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (i = 0; (int)i < DAT_20000004 + 1; i = i + 1 & 0xff) {\n        result = i * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[i * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "bVar1": "isValid",
                "iVar2": "result",
                "uVar3": "value",
                "uVar4": "i",
                "uVar5": "j"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_flagged_positions_08002400",
            "code": "\nundefined4 check_flagged_positions_08002400(int row_index)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(row_index * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_flagged_positions_08002400",
                "param_1": "row_index",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socket,undefined4 timeout,undefined4 bufferSize,undefined4 callback)\n\n{\n  FUN_08007648(socket,60000,0x5dc,&errorHandlingFunction,callback);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socket",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "callback",
                "LAB_08002444_1": "errorHandlingFunction"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_system_08002578",
            "code": "\nvoid initialize_system_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_data_08002580",
            "code": "\nvoid initializeData_08002580(byte *output)\n\n{\n  char nextValue;\n  uint dataSize;\n  \n  dataSize = (uint)DAT_20000250;\n  if (0xb < dataSize) {\n    *output = 0xff;\n    return;\n  }\n  nextValue = DAT_20000250 + 1;\n  *output = DAT_20000250;\n  DAT_20000250 = nextValue;\n  *(undefined4 *)(&DAT_2000025c + dataSize * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "param_1": "output",
                "uVar2": "dataSize",
                "cVar1": "nextValue"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte updateData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint maskedValue;\n  uint dataByte;\n  uint numIterations;\n  int tempVar1;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    dataByte = (uint)*data;\n    maskedValue = (byte)(&DAT_20000258)[dataByte * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[dataByte * 8] = (char)maskedValue;\n    tempVar1 = -offset1 + 0x220;\n    if (tempVar1 < 0) {\n      tempVar1 = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(tempVar1 << 0x16) >> 0x18);\n    tempVar1 = -offset2 + 0x960;\n    if (tempVar1 < 0) {\n      tempVar1 = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(tempVar1 << 0x16) >> 0x18);\n    numIterations = *data / 0xc;\n    tempVar1 = FUN_08002400(numIterations,maskedValue,dataByte,(uint)*data * -0x55555555);\n    if (tempVar1 == 0) {\n      DAT_200002fc = (undefined)numIterations;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "maskedValue",
                "uVar2": "dataByte",
                "uVar3": "numIterations",
                "iVar4": "tempVar1"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_data_08002634",
            "code": "\nvoid initializeData_08002634(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_080025ac(input1,input2,0x220,0x960,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_data_08002634",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "modify_and_call_function_08002644",
            "code": "\nvoid modifyAndCallFunction_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte value;\n  uint index;\n  int result;\n  \n  index = (uint)*data;\n  value = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = value & 0xbf;\n  result = FUN_08002400(index / 0xc,param2,value & 0xbf,index * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "modify_and_call_function_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "value",
                "uVar2": "index",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_value_0800267c",
            "code": "\nvoid updateValue_0800267c(byte *data,int value)\n\n{\n  int calculationResult;\n  \n  if (*data < 0xc) {\n    calculationResult = (0x88 - (char)data[1]) * 4;\n    if ((calculationResult - value == 0 || calculationResult < value) &&\n       (calculationResult = (600 - (char)data[2]) * 4,\n       value == calculationResult || value + (600 - (char)data[2]) * -4 < 0 != SBORROW4(value,calculationResult)))\n    {\n      calculationResult = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*data * 8) = calculationResult;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_value_0800267c",
                "param_1": "data",
                "param_2": "value",
                "iVar1": "calculationResult"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "update_parameter_080026b0",
            "code": "\nvoid updateParameter_080026b0(int inputParameter,int value)\n\n{\n  if (value < 0x220) {\n    if (value < 0) {\n      value = 0;\n    }\n    else if (0xb4 < value) {\n      value = 0xb4;\n    }\n    value = FUN_08008ef4(value,0,0xb4,(0x88 - *(char *)(inputParameter + 1)) * 4,\n                           (600 - *(char *)(inputParameter + 2)) * 4);\n  }\n  FUN_0800267c(inputParameter,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "update_parameter_080026b0",
                "param_1": "inputParameter",
                "param_2": "value"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "bitwise_shift_function_080026f8",
            "code": "\nuint bitwise_shift_function_080026f8(byte_value *input_byte)\n\n{\n  return ((uint)(byte_value)(&DAT_20000258)[(uint)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "bitwise_shift_function_080026f8",
                "param_1": "input_byte",
                "byte": "byte_value"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculateDifference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "read_next_byte_08002720",
            "code": "\nuint readNextByte_08002720(void)\n\n{\n  uint currentIndex;\n  \n  currentIndex = (uint)DAT_200003b5;\n  if (currentIndex < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + currentIndex);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "read_next_byte_08002720",
                "uVar1": "currentIndex"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint processData_080027f0(int baseAddress,undefined4 inputValue,uint offset)\n\n{\n  int result;\n  uint updatedOffset;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(baseAddress + 0x14,inputValue,offset & 0xffff);\n    if (result == 0) {\n      return offset;\n    }\n    return 0;\n  }\n  updatedOffset = DAT_200003b8 + offset;\n  if (DAT_200003c5 < updatedOffset) {\n    if (updatedOffset < 0x20) {\n      updatedOffset = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,updatedOffset);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)updatedOffset;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(baseAddress + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,inputValue,offset);\n  DAT_200003b6 = DAT_200003b6 + (char)offset;\n  DAT_200003b8 = DAT_200003b6;\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "baseAddress",
                "param_2": "inputValue",
                "param_3": "offset",
                "iVar1": "result",
                "uVar2": "updatedOffset"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "copy_char_to_buffer_0800288c",
            "code": "\nundefined4 copyCharToBuffer_0800288c(int buffer,undefined character)\n\n{\n  undefined4 result;\n  int status;\n  uint newSize;\n  undefined charToCopy;\n  \n  charToCopy = character;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(buffer + 0x14,&charToCopy,1);\n    if (status == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(buffer + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = charToCopy;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "copy_char_to_buffer_0800288c",
                "param_1": "buffer",
                "param_2": "character",
                "uVar1": "result",
                "iVar2": "status",
                "uVar3": "newSize",
                "local_11": "charToCopy"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_parameters_0800291c",
            "code": "\nvoid initializeParameters_0800291c(undefined4 *parameters)\n\n{\n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(parameters + 0x1b) = 0x19;\n  *(undefined *)((int)parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_parameters_0800291c",
                "param_1": "parameters"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "process_parameter_08002948",
            "code": "\nvoid processParameter_08002948(int inputParam,int statusFlag)\n\n{\n  if (inputParam != 1) {\n    return;\n  }\n  if (statusFlag == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "process_parameter_08002948",
                "param_1": "inputParam",
                "param_2": "statusFlag"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_device_08002968",
            "code": "\nvoid initializeDevice_08002968(int deviceAddress,uint deviceCode)\n\n{\n  int shiftedCode;\n  int deviceSettings;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedCode = (deviceCode & 0x7f) << 1;\n  *(char *)(deviceAddress + 0x10) = (char)shiftedCode;\n  if (deviceCode == 0x33) {\n    *(undefined *)(deviceAddress + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(deviceAddress + 0x11) = 0;\n  }\n  deviceSettings = deviceAddress + 0x14;\n  FUN_080077b0(deviceSettings,100000,0x4000,shiftedCode,*(undefined *)(deviceAddress + 0x11));\n  if (*(char *)(deviceAddress + 0x11) == '\\0') {\n    FUN_08007f8e(deviceSettings,&responseFunction1);\n    FUN_08007f7c(deviceSettings,&responseFunction2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_device_08002968",
                "param_1": "deviceAddress",
                "param_2": "deviceCode",
                "iVar1": "shiftedCode",
                "iVar2": "deviceSettings",
                "LAB_08002774_1": "responseFunction1",
                "LAB_08002b00_1": "responseFunction2"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "initialize_function_08002a1c",
            "code": "\nvoid initialize_function_08002a1c(undefined4 arg1,undefined arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002968(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "initialize_function_08002a1c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_function_08002a26",
            "code": "\nvoid initializeFunction_08002a26(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002a1c(param1,0x33,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_function_08002a26",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param1,int param2)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(param2 << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_parameter_status_08002a58",
            "code": "\nundefined4 checkParameterStatus_08002a58(int parameter)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(parameter + 0x11) == '\\0') {\n    returnValue = 4;\n  }\n  else {\n    result = FUN_08007e74(parameter + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      returnValue = 0;\n    }\n    else if (result == 1) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_parameter_status_08002a58",
                "param_1": "parameter",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_variables_08002ac0",
            "code": "\nvoid initializeVariables_08002ac0(undefined4 arg_1,undefined4 arg_2,undefined4 arg_3,undefined4 arg_4)\n\n{\n  FUN_08002a58(arg_1,1,arg_3,arg_4,arg_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_variables_08002ac0",
                "param_1": "arg_1",
                "param_2": "arg_2",
                "param_3": "arg_3",
                "param_4": "arg_4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_if_greater_than_limit_08002acc",
            "code": "\nvoid updateIfGreaterThanLimit_08002acc(uint inputSize,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < inputSize) {\n    if (inputSize < 0x20) {\n      inputSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,inputSize,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)inputSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_if_greater_than_limit_08002acc",
                "param_1": "inputSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "process_data_08002b68",
            "code": "\nundefined4\nprocessData_08002b68(undefined4 *dataBuffer,uint bufferSize,undefined4 param3,uint param4,byte byteData)\n\n{\n  int result;\n  uint byteCount;\n  uint tempVar;\n  \n  byteCount = (uint)byteData;\n  if (*(char *)((int)dataBuffer + 0x11) == '\\0') {\n    return 0;\n  }\n  tempVar = param4;\n  FUN_08002acc(param3);\n  if (DAT_200003c8 != 0) {\n    if (byteCount != 0) {\n      FUN_08002a30(dataBuffer,bufferSize);\n      if (3 < byteCount) {\n        byteCount = 3;\n      }\n      while( true ) {\n        if (byteCount == 0) break;\n        (**(code **)*dataBuffer)(dataBuffer,param4 >> ((byteCount - 1 & 0x1f) << 3) & 0xff);\n        byteCount = byteCount - 1 & 0xff;\n      }\n      FUN_08002a58(dataBuffer,0);\n    }\n    result = FUN_08007f0e(dataBuffer + 5,(bufferSize & 0x7f) << 1,DAT_200003c8,param3,tempVar);\n    if (result != 0) {\n      param3 = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)param3;\n    return param3;\n  }\n  dataBuffer[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "process_data_08002b68",
                "param_1": "dataBuffer",
                "param_2": "bufferSize",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "byteData",
                "iVar1": "result",
                "uVar2": "byteCount",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_08002c00",
            "code": "\nvoid initialize_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_program_08002c14",
            "code": "\nvoid initializeProgram_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_program_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_process_08002c1e",
            "code": "\nvoid initializeProcess_08002c1e(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002948(1,0xffff,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_process_08002c1e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 callbackFunction,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(arg1,arg2,arg2,DAT_200005d4,arg3);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "callbackFunction",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_08002ce0",
            "code": "\nint initialize_08002ce0(int base_address)\n\n{\n  int offset;\n  \n  FUN_0800314e(base_address + 0x40);\n  offset = base_address + 0x44;\n  FUN_080032bc(offset,base_address,0x40);\n  *(undefined *)(base_address + 0xc4) = 0;\n  *(undefined4 *)(base_address + 200) = 0;\n  *(undefined *)(base_address + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,&lab2,0);\n  FUN_08003306(offset,0xc0,&lab3,0);\n  FUN_08003306(offset,0xd0,&lab4,0);\n  FUN_08003306(offset,0xf4,&lab5,0);\n  FUN_08003306(offset,0xf5,&lab6,0);\n  FUN_08003366(offset,0x71,&lab7,0);\n  FUN_08003370(offset,0xf0,&lab8,0);\n  FUN_08003346(offset,0x79,&lab9,base_address);\n  FUN_08003350(offset,0xf9,&LAB_08002dea_1,base_address);\n  FUN_08003350(offset,0xff,&lab10,0);\n  return base_address;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_08002ce0",
                "param_1": "base_address",
                "iVar1": "offset",
                "LAB_08002c40_1": "lab2",
                "LAB_08002c7c_1": "lab3",
                "LAB_08002c90_1": "lab4",
                "LAB_08002c54_1": "lab5",
                "LAB_08002c68_1": "lab6",
                "LAB_08002ca4_1": "lab7",
                "LAB_08002cb8_1": "lab8",
                "LAB_08002e1a_1": "lab9",
                "LAB_08002cd0_1": "lab10"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_parameter_and_update_data_08002dbc",
            "code": "\nvoid checkParameterAndUpdateData_08002dbc(int inputParam,int statusParam)\n\n{\n  if (inputParam != 1) {\n    return;\n  }\n  if (statusParam == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_parameter_and_update_data_08002dbc",
                "param_1": "inputParam",
                "param_2": "statusParam"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "copy_and_increment_values_08002ddc",
            "code": "\nvoid copy_and_increment_values_08002ddc(int input_value,undefined4 constant_value_1,undefined4 constant_value_2,undefined4 output_value)\n\n{\n  FUN_0800322c(input_value + 0x40,2,5,output_value,output_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "copy_and_increment_values_08002ddc",
                "param_1": "input_value",
                "param_2": "constant_value_1",
                "param_3": "constant_value_2",
                "param_4": "output_value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int data)\n\n{\n  undefined *dataPtr;\n  \n  if (*(byte *)(data + 0xc4) == 0) {\n    return;\n  }\n  dataPtr = *(undefined **)(data + 200);\n  FUN_080031ce(data + 0x40,*dataPtr,dataPtr[1],*(byte *)(data + 0xc4) - 2,dataPtr + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_param_08002e26",
            "code": "\nvoid updateParam_08002e26(int objPtr,undefined4 newValue)\n\n{\n  *(undefined4 *)(objPtr + 0xc0) = newValue;\n  FUN_08003154(objPtr + 0x40);\n  FUN_08002ddc(objPtr);\n  FUN_08002df6(objPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_param_08002e26",
                "param_1": "objPtr",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "reverse_and_update_string_08002e44",
            "code": "\nvoid reverse_and_update_string_08002e44(int string_ptr,int index,undefined char_1,undefined char_2)\n\n{\n  byte byte_value;\n  char char_value;\n  int cpp_extension_len;\n  int slash_index;\n  undefined *string_ptr2;\n  \n  cpp_extension_len = FUN_080099a4(index,\".cpp\");\n  slash_index = FUN_0800997e(index,0x2f);\n  if (slash_index == 0) {\n    slash_index = FUN_0800997e(index,0x5c);\n  }\n  if (slash_index != 0) {\n    index = slash_index + 1;\n  }\n  if (cpp_extension_len == 0) {\n    char_value = FUN_08000178(index);\n    *(char *)(string_ptr + 0xc4) = char_value + '\\x02';\n  }\n  else {\n    *(char *)(string_ptr + 0xc4) = ((char)cpp_extension_len - (char)index) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(string_ptr + 200));\n  byte_value = *(byte *)(string_ptr + 0xc4);\n  string_ptr2 = (undefined *)FUN_08009190(byte_value + 1);\n  *(undefined **)(string_ptr + 200) = string_ptr2;\n  string_ptr2[byte_value] = 0;\n  *string_ptr2 = char_1;\n  string_ptr2[1] = char_2;\n  FUN_08009954(string_ptr2 + 2,index,*(byte *)(string_ptr + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "reverse_and_update_string_08002e44",
                "param_1": "string_ptr",
                "param_2": "index",
                "param_3": "char_1",
                "param_4": "char_2",
                "bVar1": "byte_value",
                "cVar2": "char_value",
                "iVar3": "cpp_extension_len",
                "iVar4": "slash_index",
                "puVar5": "string_ptr2"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_code_08002ec4",
            "code": "\nvoid executeCode_08002ec4(int functionPointer)\n\n{\n  (**(code **)(**(int **)(functionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_code_08002ec4",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "process_return_value_08002ed2",
            "code": "\nvoid processReturnValue_08002ed2(int inputParam)\n\n{\n  uint returnValue;\n  \n  returnValue = (**(code **)(**(int **)(inputParam + 0xc0) + 0xc))();\n  if (returnValue != 0xffffffff) {\n    FUN_08003474(inputParam + 0x44,returnValue & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "process_return_value_08002ed2",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "copy_and_process_data_08002ef2",
            "code": "\nvoid copy_and_process_data_08002ef2(int input_buffer,undefined4 param2_value,undefined2 param3_value,undefined4 param4_value)\n\n{\n  FUN_08003158(input_buffer + 0x40,param2_value,param3_value,param4_value,param4_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "copy_and_process_data_08002ef2",
                "param_1": "input_buffer",
                "param_2": "param2_value",
                "param_3": "param3_value",
                "param_4": "param4_value"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "initialize_data_08002efe",
            "code": "\nvoid initializeData_08002efe(int dataAddress,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_0800319e(dataAddress + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "initialize_data_08002efe",
                "param_1": "dataAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_memory_08002f0a",
            "code": "\nvoid initializeMemory_08002f0a(int initialAddress)\n\n{\n  FUN_0800325a(initialAddress + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_memory_08002f0a",
                "param_1": "initialAddress"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_function_08002f14",
            "code": "\nvoid initializeFunction_08002f14(int inputParameter)\n\n{\n  FUN_080032a2(inputParameter + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_function_08002f14",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_pointer_08002f1e",
            "code": "\nvoid executeFunctionPointer_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  void;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_pointer_08002f1e",
                "param_1": "functionPointer",
                "return": "void"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_08002f2c",
            "code": "\nvoid updateData_08002f2c(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 updatedVar1;\n  \n  if (param2 == 0xd0) {\n    DAT_200005f0 = param3;\n    return;\n  }\n  if (0xd0 < param2) {\n    if (param2 == 0xf4) {\n      DAT_200005e0 = param3;\n      return;\n    }\n    updatedVar1 = param3;\n    if ((param2 != 0xf5) && (updatedVar1 = DAT_200005e4, param2 == 0xe0)) {\n      DAT_200005d4 = param3;\n      return;\n    }\n    DAT_200005e4 = updatedVar1;\n    return;\n  }\n  if (param2 == 0x90) {\n    DAT_200005dc = param3;\n    return;\n  }\n  if (param2 != 0xc0) {\n    return;\n  }\n  DAT_200005ec = param3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "updatedVar1"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_08002f84",
            "code": "\nvoid updateData_08002f84(undefined4 dataPtr,int value,undefined4 newValue)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_1": "dataPtr",
                "param_2": "value",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "set_data_to_memory_08002f94",
            "code": "\nvoid set_data_to_memory_08002f94(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3)\n\n{\n  DAT_200005d0 = input_param_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "set_data_to_memory_08002f94",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_value_from_offset_08002fa0",
            "code": "\nundefined getValueFromOffset_08002fa0(int offset,int baseAddress)\n\n{\n  return *(undefined *)(baseAddress + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_memory_value_08002fa8",
            "code": "\nvoid updateMemoryValue_08002fa8(int baseAddress,int offset,undefined newValue)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_memory_value_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_memory_value_08002fba",
            "code": "\nundefined4 getMemoryValue_08002fba(int address,int offset)\n\n{\n  return *(undefined4 *)(address + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_memory_value_08002fba",
                "param_1": "address",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_offset_08002fc2",
            "code": "\nvoid storeValueAtOffset_08002fc2(int baseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(baseAddress + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_offset_08002fc2",
                "param_1": "baseAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "perform_action_n_times_08002fca",
            "code": "\nvoid performActionNTimes_08002fca(undefined4 actionParam1,undefined4 actionParam2,int numIterations,undefined4 param4,\n                 undefined4 param5)\n\n{\n  uint iterationCount;\n  \n  for (iterationCount = 0; (int)iterationCount < numIterations; iterationCount = iterationCount + 1 & 0xff) {\n    FUNC_08008ac4(param5);\n    FUN_08008a24(actionParam2,1);\n    FUNC_08008ac4(param4);\n    FUN_08008a24(actionParam2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "perform_action_n_times_08002fca",
                "param_1": "actionParam1",
                "param_2": "actionParam2",
                "param_3": "numIterations",
                "param_4": "param4",
                "param_5": "param5",
                "uVar1": "iterationCount"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_commands_08003002",
            "code": "\nvoid checkAndExecuteCommands_08003002(int commandAddress)\n\n{\n  if (*(char *)(commandAddress + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(commandAddress,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(commandAddress,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_commands_08003002",
                "param_1": "commandAddress"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 dataInitializer,undefined4 value,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_08008c44(&DAT_20000700,value,6,parameter4,parameter4);\n  FUN_08003002(dataInitializer);\n  FUN_08002e26(dataInitializer,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "dataInitializer",
                "param_2": "value",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_varint_0800307a",
            "code": "\nvoid decode_varint_0800307a(undefined4 *ptr_func,uint num_elements,byte *byte_array,uint max_iterations)\n\n{\n  uint current_byte;\n  uint bit_offset;\n  uint iteration_count;\n  uint element_index;\n  \n  current_byte = (uint)*byte_array;\n  if (max_iterations == 0) {\n    max_iterations = 0xffffffff;\n  }\n  element_index = 0;\n  bit_offset = 0;\n  iteration_count = 0;\n  while ((element_index < num_elements && (iteration_count < max_iterations))) {\n    (***(code ***)(undefined4 *)*ptr_func)\n              ((undefined4 *)*ptr_func,((uint)byte_array[element_index] << (bit_offset & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)byte_array[element_index] >> (7 - bit_offset & 0xff) & 0xff;\n    bit_offset = bit_offset + 1;\n    while ((iteration_count = iteration_count + 1, 6 < bit_offset && (iteration_count < max_iterations))) {\n      (***(code ***)(undefined4 *)*ptr_func)((undefined4 *)*ptr_func,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_offset = bit_offset - 7;\n    }\n    element_index = element_index + 1;\n  }\n  if ((bit_offset != 0) && (iteration_count < max_iterations)) {\n    (***(code ***)(undefined4 *)*ptr_func)((undefined4 *)*ptr_func,(1 << (bit_offset & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_varint_0800307a",
                "param_1": "ptr_func",
                "param_2": "num_elements",
                "param_3": "byte_array",
                "param_4": "max_iterations",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "iteration_count",
                "uVar4": "element_index"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid executeFunction_08003106(undefined4 *functionPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 *pointerToFunction;\n  \n  pointerToFunction = (undefined4 *)*functionPointer;\n  if (pointerToFunction != (undefined4 *)0x0) {\n    (**(code **)*pointerToFunction)(pointerToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x6f);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,value1);\n    FUN_0800307a(functionPointer,value2,value3,value2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "functionPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "pointerToFunction"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_pointer_to_zero_0800314e",
            "code": "\nvoid setPointerToZero_0800314e(undefined4 *pointer)\n\n{\n  *pointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_pointer_to_zero_0800314e",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "set_parameter_value_08003154",
            "code": "\nvoid set_parameter_value_08003154(undefined4 *output_ptr,undefined4 input_value)\n\n{\n  *output_ptr = input_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "set_parameter_value_08003154",
                "param_1": "output_ptr",
                "param_2": "input_value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionPointer,uint flag,ushort value)\n\n{\n  undefined4 *functionAddress;\n  ushort localValue;\n  \n  functionAddress = (undefined4 *)*functionPointer;\n  if (functionAddress != (undefined4 *)0x0) {\n    localValue = value;\n    if (((int)flag < 0x10) && (value < 0x4000)) {\n      (**(code **)*functionAddress)(functionAddress,flag | 0xe0);\n      FUN_0800307a(functionPointer,2,&localValue);\n    }\n    else {\n      FUN_08003106(functionPointer,flag,2,&localValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionPointer",
                "param_2": "flag",
                "param_3": "value",
                "puVar1": "functionAddress",
                "local_a": "localValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_with_param_0800319e",
            "code": "\nvoid executeFunctionWithParam_0800319e(undefined4 *functionPointer,uint value,undefined2 parameter)\n\n{\n  undefined4 *nextFunction;\n  undefined2 paramValue;\n  \n  nextFunction = (undefined4 *)*functionPointer;\n  if (nextFunction != (undefined4 *)0x0) {\n    paramValue = parameter;\n    (**(code **)*nextFunction)(nextFunction,value & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_with_param_0800319e",
                "param_1": "functionPointer",
                "param_2": "value",
                "param_3": "parameter",
                "puVar1": "nextFunction",
                "local_a": "paramValue"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid execute_function_080031ce(undefined4 *function_ptr_list,undefined4 arg1,undefined4 arg2,uint num_functions,int start_index\n                 )\n\n{\n  undefined4 *current_function_ptr;\n  uint index;\n  \n  current_function_ptr = (undefined4 *)*function_ptr_list;\n  if (current_function_ptr != (undefined4 *)0x0) {\n    (**(code **)*current_function_ptr)(current_function_ptr,0xf0,arg2,*(code **)*current_function_ptr,num_functions);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,0x79);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,arg1);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,arg2);\n    for (index = 0; index < num_functions; index = index + 1) {\n      FUN_0800307a(function_ptr_list,1,start_index + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "function_ptr_list",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "num_functions",
                "param_5": "start_index",
                "puVar1": "current_function_ptr",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 secondParameter,undefined4 thirdParameter)\n\n{\n  undefined4 *functionPtr;\n  \n  functionPtr = (undefined4 *)*functionPointer;\n  if (functionPtr != (undefined4 *)0x0) {\n    (**(code **)*functionPtr)(functionPtr,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,secondParameter);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,thirdParameter);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "param_2": "secondParameter",
                "param_3": "thirdParameter",
                "puVar1": "functionPtr"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_operation_0800325a",
            "code": "\nvoid executeOperation_0800325a(undefined4 *functionPtr,undefined4 param2Value,uint numIterations,int initialValue)\n\n{\n  undefined4 *ptrToFunction;\n  uint iterationCounter;\n  \n  ptrToFunction = (undefined4 *)*functionPtr;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,param2Value);\n    for (iterationCounter = 0; iterationCounter < numIterations; iterationCounter = iterationCounter + 1) {\n      FUN_0800307a(functionPtr,1,initialValue + iterationCounter,0);\n    }\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_operation_0800325a",
                "param_1": "functionPtr",
                "param_2": "param2Value",
                "param_3": "numIterations",
                "param_4": "initialValue",
                "puVar1": "ptrToFunction",
                "uVar2": "iterationCounter"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "initialize_data_080032a2",
            "code": "\nvoid initializeData_080032a2(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(data2);\n  FUN_0800325a(data1,0x71,result,data2,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "initialize_data_080032a2",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_memory_080032bc",
            "code": "\nvoid initializeMemory_080032bc(int memoryAddress,int value,undefined4 initialValue)\n\n{\n  *(int *)(memoryAddress + 4) = value;\n  *(undefined4 *)(memoryAddress + 8) = initialValue;\n  *(undefined *)(memoryAddress + 0xc) = 0;\n  *(undefined *)(memoryAddress + 0xd) = 0;\n  *(undefined4 *)(memoryAddress + 0x10) = 0;\n  *(undefined *)(memoryAddress + 0x14) = 0;\n  *(undefined4 *)(memoryAddress + 0x18) = 0;\n  *(undefined4 *)(memoryAddress + 0x1c) = 0;\n  *(undefined4 *)(memoryAddress + 0x20) = 0;\n  *(undefined4 *)(memoryAddress + 0x24) = 0;\n  *(undefined4 *)(memoryAddress + 0x28) = 0;\n  *(undefined4 *)(memoryAddress + 0x2c) = 0;\n  *(undefined4 *)(memoryAddress + 0x30) = 0;\n  *(undefined4 *)(memoryAddress + 0x34) = 0;\n  *(undefined4 *)(memoryAddress + 0x38) = 0;\n  *(undefined4 *)(memoryAddress + 0x3c) = 0;\n  *(undefined4 *)(memoryAddress + 0x40) = 0;\n  *(undefined4 *)(memoryAddress + 0x44) = 0;\n  *(undefined4 *)(memoryAddress + 0x48) = 0;\n  *(undefined4 *)(memoryAddress + 0x4c) = 0;\n  *(undefined4 *)(memoryAddress + 0x50) = 0;\n  *(undefined4 *)(memoryAddress + 0x54) = 0;\n  *(undefined4 *)(memoryAddress + 0x58) = 0;\n  *(undefined4 *)(memoryAddress + 0x5c) = 0;\n  *(undefined4 *)(memoryAddress + 0x60) = 0;\n  *(undefined4 *)(memoryAddress + 100) = 0;\n  *(undefined4 *)(memoryAddress + 0x68) = 0;\n  *(undefined4 *)(memoryAddress + 0x6c) = 0;\n  *(undefined4 *)(memoryAddress + 0x70) = 0;\n  *(undefined4 *)(memoryAddress + 0x74) = 0;\n  *(undefined4 *)(memoryAddress + 0x78) = 0;\n  *(bool *)memoryAddress = value == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_memory_080032bc",
                "param_1": "memoryAddress",
                "param_2": "value",
                "param_3": "initialValue"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_values_08003306",
            "code": "\nvoid updateValues_08003306(int ptr,uint value,undefined4 data1,undefined4 data2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(ptr + 0x58) = data1;\n    *(undefined4 *)(ptr + 0x28) = data2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(ptr + 0x5c) = data1;\n      *(undefined4 *)(ptr + 0x2c) = data2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(ptr + 0x60) = data1;\n      *(undefined4 *)(ptr + 0x30) = data2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(ptr + 0x4c) = data1;\n      *(undefined4 *)(ptr + 0x1c) = data2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(ptr + 0x50) = data1;\n    *(undefined4 *)(ptr + 0x20) = data2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(ptr + 0x54) = data1;\n    *(undefined4 *)(ptr + 0x24) = data2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_values_08003306",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_data_08003346",
            "code": "\nvoid updateData_08003346(int dataPointer,int flag,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (flag == 0x79) {\n    *(undefined4 *)(dataPointer + 0x70) = newValue1;\n    *(undefined4 *)(dataPointer + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_data_08003346",
                "param_1": "dataPointer",
                "param_2": "flag",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_params_08003350",
            "code": "\nvoid updateParams_08003350(int objPtr,int flag,undefined4 value1,undefined4 value2)\n\n{\n  if (flag == 0xf9) {\n    *(undefined4 *)(objPtr + 0x74) = value1;\n    *(undefined4 *)(objPtr + 0x38) = value2;\n    return;\n  }\n  if (flag != 0xff) {\n    return;\n  }\n  *(undefined4 *)(objPtr + 0x78) = value1;\n  *(undefined4 *)(objPtr + 0x48) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_params_08003350",
                "param_1": "objPtr",
                "param_2": "flag",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_params_08003366",
            "code": "\nvoid updateParams_08003366(int baseAddress,int value,undefined4 param1Value,undefined4 param2Value)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(baseAddress + 0x68) = param1Value;\n    *(undefined4 *)(baseAddress + 0x40) = param2Value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_params_08003366",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "param1Value",
                "param_4": "param2Value"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_values_in_structure_08003370",
            "code": "\nvoid setValuesInStructure_08003370(int structurePtr,undefined4 param2,undefined4 newValue1,undefined4 newValue2)\n\n{\n  *(undefined4 *)(structurePtr + 0x6c) = newValue1;\n  *(undefined4 *)(structurePtr + 0x44) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_values_in_structure_08003370",
                "param_1": "structurePtr",
                "param_2": "param2",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_memory_value_08003376",
            "code": "\nvoid updateMemoryValue_08003376(undefined *memory,undefined value,uint index)\n\n{\n  bool isIndexValid;\n  \n  if (index < *(uint *)(memory + 8)) {\n    isIndexValid = false;\n  }\n  else {\n    isIndexValid = true;\n    if (*(code **)(memory + 100) != (code *)0x0) {\n      *memory = 1;\n      (**(code **)(memory + 100))(*(undefined4 *)(memory + 0x3c));\n      if (index < *(uint *)(memory + 8)) {\n        isIndexValid = false;\n      }\n      else {\n        isIndexValid = true;\n      }\n    }\n  }\n  if (!isIndexValid) {\n    *(undefined *)(*(int *)(memory + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_memory_value_08003376",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "isIndexValid"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bytes_080033a8",
            "code": "\nvoid copyAndShiftBytes_080033a8(undefined4 unknownParameter,uint byteCount,int dataStart)\n\n{\n  byte currentByte;\n  int outputIndex;\n  uint inputIndex;\n  \n  outputIndex = 0;\n  for (inputIndex = 0; inputIndex < byteCount; inputIndex = inputIndex + 2) {\n    currentByte = *(byte *)(dataStart + inputIndex);\n    *(byte *)(dataStart + outputIndex) = currentByte;\n    *(byte *)(dataStart + outputIndex) = *(char *)(dataStart + inputIndex + 1) << 7 | currentByte;\n    outputIndex = outputIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bytes_080033a8",
                "param_1": "unknownParameter",
                "param_2": "byteCount",
                "param_3": "dataStart",
                "bVar1": "currentByte",
                "iVar2": "outputIndex",
                "uVar3": "inputIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputStruct,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int result;\n  char *ptrToChar;\n  \n  ptrToChar = *(char **)(inputStruct + 4);\n  firstChar = *ptrToChar;\n  if (firstChar == 'q') {\n    if (*(int *)(inputStruct + 0x68) != 0) {\n      result = FUN_080033a8(inputStruct,*(int *)(inputStruct + 0x18) + -1,ptrToChar + 1,ptrToChar,param4);\n      FUN_08003376(inputStruct,0,result + 1);\n      (**(code **)(inputStruct + 0x68))(*(undefined4 *)(inputStruct + 0x40),*(int *)(inputStruct + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputStruct + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputStruct + 0x18) < 3) {\n        (**(code **)(inputStruct + 0x70))(*(undefined4 *)(inputStruct + 0x34),0,0);\n        return;\n      }\n      result = FUN_080033a8(inputStruct,*(uint *)(inputStruct + 0x18) - 3,ptrToChar + 3,ptrToChar,param4);\n      FUN_08003376(inputStruct,0,result + 3);\n      result = *(int *)(inputStruct + 4);\n      (**(code **)(inputStruct + 0x70))\n                (*(undefined4 *)(inputStruct + 0x34),*(undefined *)(result + 1),*(undefined *)(result + 2)\n                 ,result + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputStruct + 0x6c) != (code *)0x0) {\n    (**(code **)(inputStruct + 0x6c))\n              (*(undefined4 *)(inputStruct + 0x44),firstChar,*(int *)(inputStruct + 0x18) + -1,ptrToChar + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputStruct",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "result",
                "pcVar3": "ptrToChar"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_0800344a",
            "code": "\nvoid initializeData_0800344a(int dataAddress)\n\n{\n  uint index;\n  \n  *(undefined4 *)(dataAddress + 0x10) = 0;\n  *(undefined *)(dataAddress + 0xc) = 0;\n  *(undefined *)(dataAddress + 0xd) = 0;\n  for (index = 0; index < *(uint *)(dataAddress + 8); index = index + 1) {\n    *(undefined *)(*(int *)(dataAddress + 4) + index) = 0;\n  }\n  *(undefined *)(dataAddress + 0x14) = 0;\n  *(undefined4 *)(dataAddress + 0x18) = 0;\n  if (*(code **)(dataAddress + 0x78) != (code *)0x0) {\n    (**(code **)(dataAddress + 0x78))(*(undefined4 *)(dataAddress + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "dataAddress",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_data_08003474",
            "code": "\nvoid process_data_08003474(int data_address,uint data_value)\n\n{\n  byte byte_value;\n  \n  if (*(char *)(data_address + 0x14) != '\\0') {\n    if (data_value != 0xf7) {\n      FUN_08003376(data_address,data_value,*(undefined4 *)(data_address + 0x18));\n      *(int *)(data_address + 0x18) = *(int *)(data_address + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data_address + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(data_address + 0x10) == 0) || (0x7f < (int)data_value)) {\n    if ((int)data_value < 0xf0) {\n      *(byte *)(data_address + 0xd) = (byte)data_value & 0xf;\n      data_value = data_value & 0xf0;\n    }\n    if (data_value == 0xf0) {\n      *(undefined *)(data_address + 0x14) = 1;\n      *(undefined4 *)(data_address + 0x18) = 0;\n      return;\n    }\n    if (data_value < 0xf1) {\n      if (data_value != 0xc0) {\n        if (data_value < 0xc1) {\n          if (data_value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (data_value == 0xd0) goto label_process_data_08003474;\n          if (data_value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data_address + 0x10) = 2;\n        *(char *)(data_address + 0xc) = (char)data_value;\n        return;\n      }\nlabel_process_data_08003474:\n      *(undefined4 *)(data_address + 0x10) = 1;\n      *(char *)(data_address + 0xc) = (char)data_value;\n      return;\n    }\n    if (data_value != 0xf9) {\n      if (0xf9 < data_value) {\n        if (data_value == 0xff) {\n          FUN_0800344a(data_address);\n          return;\n        }\n        return;\n      }\n      if (1 < data_value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(data_address + 0x74) != (code *)0x0) {\n      (**(code **)(data_address + 0x74))(*(undefined4 *)(data_address + 0x38));\n    }\n  }\n  else {\n    *(int *)(data_address + 0x10) = *(int *)(data_address + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(data_address + 0x10) == 0) && (byte_value = *(byte *)(data_address + 0xc), byte_value != 0)) {\n      if (byte_value == 0xd0) {\n        if (*(code **)(data_address + 0x58) != (code *)0x0) {\n          (**(code **)(data_address + 0x58))\n                    (*(undefined4 *)(data_address + 0x28),*(undefined *)(data_address + 0xd),\n                     **(undefined **)(data_address + 4));\n        }\n      }\n      else if (byte_value < 0xd1) {\n        if (byte_value == 0x90) {\n          if (*(code **)(data_address + 0x50) != (code *)0x0) {\n            (**(code **)(data_address + 0x50))\n                      (*(undefined4 *)(data_address + 0x20),*(undefined *)(data_address + 0xd),\n                       (uint)(*(byte **)(data_address + 4))[1] + (uint)**(byte **)(data_address + 4) * 0x80);\n          }\n        }\n        else if ((byte_value == 0xc0) && (*(code **)(data_address + 0x54) != (code *)0x0)) {\n          (**(code **)(data_address + 0x54))\n                    (*(undefined4 *)(data_address + 0x24),*(undefined *)(data_address + 0xd),\n                     **(undefined **)(data_address + 4));\n        }\n      }\n      else if (byte_value == 0xf4) {\n        if (*(code **)(data_address + 0x5c) != (code *)0x0) {\n          (**(code **)(data_address + 0x5c))\n                    (*(undefined4 *)(data_address + 0x2c),(*(undefined **)(data_address + 4))[1],\n                     **(undefined **)(data_address + 4));\n        }\n      }\n      else if (byte_value == 0xf5) {\n        if (*(code **)(data_address + 0x60) != (code *)0x0) {\n          (**(code **)(data_address + 0x60))\n                    (*(undefined4 *)(data_address + 0x30),(*(undefined **)(data_address + 4))[1],\n                     **(undefined **)(data_address + 4));\n        }\n      }\n      else if ((byte_value == 0xe0) && (*(code **)(data_address + 0x4c) != (code *)0x0)) {\n        (**(code **)(data_address + 0x4c))\n                  (*(undefined4 *)(data_address + 0x1c),*(undefined *)(data_address + 0xd),\n                   (uint)(*(byte **)(data_address + 4))[1] + (uint)**(byte **)(data_address + 4) * 0x80);\n      }\n      *(undefined *)(data_address + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "data_address",
                "param_2": "data_value",
                "bVar1": "byte_value",
                "LAB_0800359c": "label_process_data"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_stm32_080035b8",
            "code": "\nvoid initializeSTM32_080035b8(void)\n\n{\n  int result;\n  uint delay;\n  undefined4 pinValues [2];\n  undefined4 pinValue;\n  undefined4 desiredMode;\n  undefined4 desiredState;\n  undefined4 pullMode;\n  undefined4 pullState;\n  undefined4 resistorState;\n  undefined4 pinModes [4];\n  undefined4 pinCount;\n  undefined4 maxPinCount;\n  undefined4 pinIndex;\n  undefined4 initialized;\n  undefined4 GPIOCBaseAddress;\n  \n  pinModes[0] = 2;\n  pinCount = 1;\n  maxPinCount = 0x10;\n  pinIndex = 2;\n  initialized = 0;\n  GPIOCBaseAddress = 0x380000;\n  result = FUN_08005460(pinModes);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  desiredMode = 0xf;\n  desiredState = 2;\n  pullMode = 0;\n  pullState = 0x400;\n  resistorState = 0;\n  result = FUN_080058ac(&desiredMode);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  pinValues[0] = 2;\n  pinValue = 0x8000;\n  result = FUN_08005aa4(pinValues);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  delay = FUN_08005a1c();\n  FUN_08003fd8(delay / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_stm32_080035b8",
                "local_54": "pinValues",
                "local_4c": "pinValue",
                "local_44": "desiredMode",
                "local_40": "desiredState",
                "local_3c": "pullMode",
                "local_38": "pullState",
                "local_34": "resistorState",
                "local_30": "pinModes",
                "local_20": "pinCount",
                "local_1c": "maxPinCount",
                "local_14": "pinIndex",
                "local_10": "initialized",
                "local_c": "GPIOCBaseAddress",
                "iVar1": "result",
                "uVar2": "delay"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_application_080036a2",
            "code": "\nvoid initialize_application_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_application_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_char_match_080036ac",
            "code": "\nuint find_char_match_080036ac(int input_value)\n\n{\n  uint index;\n  \n  if ((uint)(input_value << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_value != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_char_match_080036ac",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_set_param_080036d8",
            "code": "\nundefined4 checkAndSetParam_080036d8(uint inputValue)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputValue,0);\n  DAT_20000010 = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_set_param_080036d8",
                "param_1": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "set_flag_and_call_functions_08003724",
            "code": "\n\n\nundefined4 setFlagAndCallFunctions_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "set_flag_and_call_functions_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "update_value_by_sum_08003748",
            "code": "\nvoid updateValueBySum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "update_value_by_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_value_08003760",
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "check_memory_access_0800376c",
            "code": "\nundefined4 checkMemoryAccess_0800376c(uint **inputParams,uint maxIterations)\n\n{\n  int initialValue;\n  uint randomValue;\n  int iterationValue;\n  undefined4 result;\n  uint *memoryPointer;\n  uint resultValue;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08003760();\n  resultValue = DAT_20000018;\n  memoryPointer = *inputParams;\n  if ((memoryPointer[2] & 0x100) == 0) {\n    if (((memoryPointer[1] & 0x100) == 0) && ((memoryPointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputParams & 2) != 0) goto LAB_0800387e;\n      } while ((maxIterations == 0xffffffff) ||\n              ((maxIterations != 0 && (iterationValue = FUN_08003760(), (uint)(iterationValue - initialValue) <= maxIterations))));\n      inputParams[10] = (uint *)((uint)inputParams[10] | 4);\n      *(undefined *)(inputParams + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomValue = FUN_08005bb8(2);\n      memoryPointer = *inputParams;\n      if (((memoryPointer[4] & 0x24924924) == 0) && ((memoryPointer[3] & 0x924924) == 0)) {\n        if ((memoryPointer[4] & 0x12492492) == 0) {\n          if ((memoryPointer[3] & 0x492492) == 0) {\n            iterationValue = 0x14;\n          }\n          else {\n            iterationValue = 0x29;\n          }\n        }\n        else {\n          iterationValue = 0x29;\n        }\n      }\n      else if (((memoryPointer[4] & 0x12492492) == 0) && ((memoryPointer[3] & 0x492492) == 0)) {\n        iterationValue = 0x54;\n      }\n      else if ((memoryPointer[4] & 0x249249) == 0) {\n        if ((memoryPointer[3] & 0x249249) == 0) {\n          iterationValue = 0x54;\n        }\n        else {\n          iterationValue = 0xfc;\n        }\n      }\n      else {\n        iterationValue = 0xfc;\n      }\n      resultValue = (resultValue / randomValue) * iterationValue;\n      for (; counter <= resultValue && resultValue - counter != 0; counter = counter + 1) {\n        if ((maxIterations != 0xffffffff) &&\n           ((maxIterations == 0 || (iterationValue = FUN_08003760(), maxIterations < (uint)(iterationValue - initialValue))))) {\n          inputParams[10] = (uint *)((uint)inputParams[10] | 4);\n          *(undefined *)(inputParams + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **inputParams = 0xffffffed;\n      inputParams[10] = (uint *)((uint)inputParams[10] | 0x200);\n      if (((*inputParams)[2] & 0xe0000) == 0xe0000) {\n        if (inputParams[3] == (uint *)0x0) {\n          inputParams[10] = (uint *)((uint)inputParams[10] & 0xfffffeff);\n          if (((uint)inputParams[10] & 0x1000) == 0) {\n            inputParams[10] = (uint *)((uint)inputParams[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputParams[10] = (uint *)((uint)inputParams[10] | 0x20);\n    *(undefined *)(inputParams + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "check_memory_access_0800376c",
                "param_1": "inputParams",
                "param_2": "maxIterations",
                "iVar1": "initialValue",
                "uVar2": "randomValue",
                "iVar3": "iterationValue",
                "uVar4": "result",
                "puVar5": "memoryPointer",
                "uVar6": "resultValue",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *inputPointer)\n\n{\n  return *(undefined4 *)(*inputPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_settings_080038e4",
            "code": "\nundefined4 updateSettings_080038e4(int *settings,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int delay;\n  \n  if (*(char *)(settings + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(settings + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*settings + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*settings + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*settings + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*settings + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*settings + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*settings + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*settings + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*settings + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*settings == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (delay = (DAT_20000018 / 1000000) * 10; delay != 0; delay = delay + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        settings[10] = settings[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(settings + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_settings_080038e4",
                "param_1": "settings",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "index",
                "local_c": "delay"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_pointer_value_08003a1c",
            "code": "\nundefined4 getPointerValue_08003a1c(int inputPointer)\n\n{\n  return *(undefined4 *)(inputPointer + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_pointer_value_08003a1c",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "set_flag_if_not_set_08003a20",
            "code": "\nundefined4 setFlagIfNotSet_08003a20(int *input,undefined4 flag)\n\n{\n  int result;\n  undefined4 returnValue;\n  int ptr;\n  uint count;\n  \n  ptr = *input;\n  if ((*(uint *)(ptr + 8) & 1) == 0) {\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) | 1;\n    for (count = DAT_20000018 / 1000000; count != 0; count = count - 1) {\n    }\n    ptr = FUN_08003760(input,flag,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*input + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - ptr) < 3);\n    input[10] = input[10] | 0x10;\n    input[0xb] = input[0xb] | 1;\n    *(undefined *)(input + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "set_flag_if_not_set_08003a20",
                "param_1": "input",
                "param_2": "flag",
                "iVar1": "result",
                "iVar3": "ptr",
                "uVar2": "returnValue",
                "local_14": "count"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "handle_function_08003aa0",
            "code": "\n\n\nint handle_function_08003aa0(int *params)\n\n{\n  int result;\n  undefined4 *ptr;\n  int index;\n  \n  if (*(char *)(params + 9) != '\\x01') {\n    *(undefined *)(params + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      params[10] = params[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*params;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        params[10] = params[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          params[10] = params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        params[10] = params[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          params[10] = params[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((params[10] & 0x1000U) == 0) {\n        params[0xb] = 0;\n      }\n      else {\n        params[0xb] = params[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(params + 9) = 0;\n      *ptr = 0xfffffffd;\n      index = *params;\n      if (((*(uint *)(index + 8) & 0xe0000) == 0xe0000) &&\n         ((index != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(index + 8) = *(uint *)(index + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(index + 8) = *(uint *)(index + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(params + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "handle_function_08003aa0",
                "param_1": "params",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "reverse_and_update_values_08003b8c",
            "code": "\nundefined4 reverse_and_update_values_08003b8c(int *input_array)\n\n{\n  int current_value;\n  int initial_value;\n  \n  initial_value = *input_array;\n  if ((*(uint *)(initial_value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(initial_value + 8) = *(uint *)(initial_value + 8) & 0xfffffffe;\n  initial_value = FUN_08003760();\n  do {\n    if ((*(uint *)(*input_array + 8) & 1) == 0) {\n      return 0;\n    }\n    current_value = FUN_08003760();\n  } while ((uint)(current_value - initial_value) < 3);\n  input_array[10] = input_array[10] | 0x10;\n  input_array[0xb] = input_array[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "reverse_and_update_values_08003b8c",
                "param_1": "input_array",
                "iVar1": "current_value",
                "iVar2": "initial_value"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "initialize_device_08003bd8",
            "code": "\nundefined4 initializeDevice_08003bd8(int *deviceConfig)\n\n{\n  int result;\n  uint var1;\n  uint var2;\n  \n  if (deviceConfig == (int *)0x0) {\n    return 1;\n  }\n  if (deviceConfig[10] == 0) {\n    deviceConfig[0xb] = 0;\n    *(undefined *)(deviceConfig + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(deviceConfig);\n  if (((deviceConfig[10] & 0x10U) == 0) && (result == 0)) {\n    deviceConfig[10] = deviceConfig[10] & 0xffffeefdU | 2;\n    var1 = deviceConfig[1] | deviceConfig[7] | deviceConfig[3] << 1;\n    if (deviceConfig[2] == 0x100) {\n      var2 = 0x100;\n    }\n    else {\n      var2 = 0;\n      if (deviceConfig[2] == 1) {\n        var2 = 0x100;\n      }\n    }\n    if (deviceConfig[5] == 1) {\n      if (deviceConfig[3] == 0) {\n        var2 = var2 | (deviceConfig[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        deviceConfig[10] = deviceConfig[10] | 0x20;\n        deviceConfig[0xb] = deviceConfig[0xb] | 1;\n      }\n    }\n    *(uint *)(*deviceConfig + 4) = var2 | *(uint *)(*deviceConfig + 4) & 0xffff16ff;\n    *(uint *)(*deviceConfig + 8) = *(uint *)(*deviceConfig + 8) & 0xffe1f7fd | var1;\n    if ((deviceConfig[2] == 0x100) || (deviceConfig[2] == 1)) {\n      var2 = (deviceConfig[4] + -1) * 0x100000;\n    }\n    else {\n      var2 = 0;\n    }\n    *(uint *)(*deviceConfig + 0x2c) = var2 | *(uint *)(*deviceConfig + 0x2c) & 0xff0fffff;\n    if (var1 != (*(uint *)(*deviceConfig + 8) & 0xff1f0efe)) {\n      deviceConfig[10] = deviceConfig[10] & 0xffffffedU | 0x10;\n      deviceConfig[0xb] = deviceConfig[0xb] | 1;\n      return 1;\n    }\n    deviceConfig[0xb] = 0;\n    deviceConfig[10] = deviceConfig[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  deviceConfig[10] = deviceConfig[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "initialize_device_08003bd8",
                "param_1": "deviceConfig",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "sanitize_memory_08003ce8",
            "code": "\nint sanitizeMemory_08003ce8(int *input)\n\n{\n  int result;\n  \n  if (input == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    input[10] = input[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*input = 0xffffffe0;\n      *(uint *)(*input + 4) = *(uint *)(*input + 4) & 0xff3f0000;\n      *(uint *)(*input + 8) = *(uint *)(*input + 8) & 0xff0106f0;\n      *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xff000000;\n      *(uint *)(*input + 0x10) = *(uint *)(*input + 0x10) & 0xc0000000;\n      *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffff000;\n      *(uint *)(*input + 0x18) = *(uint *)(*input + 0x18) & 0xfffff000;\n      *(uint *)(*input + 0x1c) = *(uint *)(*input + 0x1c) & 0xfffff000;\n      *(uint *)(*input + 0x20) = *(uint *)(*input + 0x20) & 0xfffff000;\n      *(uint *)(*input + 0x24) = *(uint *)(*input + 0x24) & 0xfffff000;\n      *(uint *)(*input + 0x28) = *(uint *)(*input + 0x28) & 0xfffff000;\n      *(uint *)(*input + 0x2c) = *(uint *)(*input + 0x2c) & 0xff000000;\n      *(uint *)(*input + 0x2c) = *(uint *)(*input + 0x2c) & 0xff000000;\n      *(uint *)(*input + 0x30) = *(uint *)(*input + 0x30) & 0xc0000000;\n      *(uint *)(*input + 0x34) = *(uint *)(*input + 0x34) & 0xc0000000;\n      *(uint *)(*input + 0x38) = *(uint *)(*input + 0x38) & 0xffc00000;\n      *(uint *)(*input + 0x38) = *(uint *)(*input + 0x38) & 0xffc00000;\n      FUN_08006d24(input);\n      input[0xb] = 0;\n      input[10] = 0;\n    }\n    *(undefined *)(input + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "sanitize_memory_08003ce8",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_update_value_08003de4",
            "code": "\nint checkAndUpdateValue_08003de4(int input)\n\n{\n  int returnValue;\n  \n  if (*(char *)(input + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input + 0x24) = 1;\n  returnValue = FUN_08003b8c();\n  if (returnValue == 0) {\n    *(uint *)(input + 0x28) = *(uint *)(input + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(input + 0x24) = 0;\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_update_value_08003de4",
                "param_1": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "process_data_08003e20",
            "code": "\nint processData_08003e20(int *data)\n\n{\n  uint constant1;\n  int result;\n  uint constant2;\n  int tempVar1;\n  int tempVar2;\n  int loopCounter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    constant1 = DAT_20000018;\n    constant2 = FUN_08005bb8(2);\n    for (loopCounter = constant1 / constant2 << 1; loopCounter != 0; loopCounter = loopCounter + -1) {\n    }\n    FUN_08003a20(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    tempVar1 = FUN_08003760();\n    while (tempVar2 = *data, (*(uint *)(tempVar2 + 8) & 8) != 0) {\n      tempVar2 = FUN_08003760();\n      if (10 < (uint)(tempVar2 - tempVar1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) | 4;\n    tempVar1 = FUN_08003760();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      tempVar2 = FUN_08003760();\n      if (10 < (uint)(tempVar2 - tempVar1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "process_data_08003e20",
                "param_1": "data",
                "uVar1": "constant1",
                "iVar2": "result",
                "uVar3": "constant2",
                "iVar4": "tempVar1",
                "iVar5": "tempVar2",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_memory_address_08003f0c",
            "code": "\n\n\nvoid updateMemoryAddress_08003f0c(uint newValue)\n\n{\n  _DAT_e000ed0c = (newValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_memory_address_08003f0c",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "apply_bitwise_operations_08003f30",
            "code": "\n\n\nvoid applyBitwiseOperations_08003f30(uint inputValue,uint mask1,uint mask2)\n\n{\n  uint maskedValue;\n  uint shiftDifference;\n  \n  maskedValue = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftDifference = 7 - maskedValue;\n  if (3 < shiftDifference) {\n    shiftDifference = 4;\n  }\n  if (maskedValue + 4 < 7) {\n    maskedValue = 0;\n  }\n  else {\n    maskedValue = maskedValue - 3;\n  }\n  maskedValue = (mask1 & (1 << (shiftDifference & 0xff)) - 1U) << (maskedValue & 0xff) |\n          (1 << (maskedValue & 0xff)) - 1U & mask2;\n  if ((int)inputValue < 0) {\n    *(char *)((inputValue & 0xf) + 0xe000ed14) = (char)(maskedValue << 4);\n  }\n  else {\n    *(char *)(inputValue + 0xe000e400) = (char)(maskedValue << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "apply_bitwise_operations_08003f30",
                "param_1": "inputValue",
                "param_2": "mask1",
                "param_3": "mask2",
                "uVar1": "maskedValue",
                "uVar2": "shiftDifference"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_in_memory_08003f94",
            "code": "\nvoid setBitInMemory_08003f94(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_in_memory_08003f94",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_location_08003fb0",
            "code": "\nvoid setBitInMemoryLocation_08003fb0(uint input)\n\n{\n  if (-1 < (int)input) {\n    *(int *)(((input >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_location_08003fb0",
                "param_1": "input"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "set_param_and_return_08003fd8",
            "code": "\n\n\nundefined4 set_param_and_return_08003fd8(int input_param)\n\n{\n  if (input_param - 1U < 0x1000000) {\n    _DAT_e000e014 = input_param - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "set_param_and_return_08003fd8",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_array_08004004",
            "code": "\nvoid setBitInArray_08004004(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "set_flag_08004024",
            "code": "\n\n\nvoid set_flag_08004024(int input_value)\n\n{\n  if (input_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "set_flag_08004024",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_system_08004046",
            "code": "\nvoid initializeSystem_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_system_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "initialize_settings_08004050",
            "code": "\n\n\nundefined4 initializeSettings_08004050(uint **settings)\n\n{\n  uint *currentSetting;\n  \n  if (*(char *)((int)settings + 0x21) != '\\x02') {\n    settings[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **settings = **settings & 0xfffffff1;\n  **settings = **settings & 0xfffffffe;\n  currentSetting = *settings;\n  if (currentSetting == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentSetting == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentSetting == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentSetting == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentSetting == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentSetting == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)settings + 0x21) = 1;\n  *(undefined *)(settings + 8) = 0;\n  if (settings[0xd] != (uint *)0x0) {\n    (*(code *)settings[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "initialize_settings_08004050",
                "param_1": "settings",
                "puVar1": "currentSetting"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_params_080040e8",
            "code": "\n\n\nvoid updateParams_080040e8(uint *outputParams,uint *inputParams)\n\n{\n  uint *outputPtr;\n  uint mask;\n  uint inputMask;\n  uint bitIndex;\n  uint value;\n  uint result;\n  int shift;\n  int index;\n  \n  result = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    mask = 1 << (bitIndex & 0xff);\n    inputMask = *inputParams & mask;\n    if (mask == inputMask) {\n      value = inputParams[1];\n      if (value == 0x12) {\n        result = inputParams[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          result = inputParams[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_0800423a;\n          if (value == 1) {\n            result = inputParams[3];\n          }\n        }\n        else if (value == 3) {\n          result = 0;\n        }\n        else if (value == 0x11) {\n          result = inputParams[3] + 4;\n        }\n      }\n      else if (value == 0x10210000) {\nLAB_0800423a:\n        if (inputParams[2] == 0) {\n          result = 4;\n        }\n        else if (inputParams[2] == 1) {\n          outputParams[4] = mask;\n          result = 8;\n        }\n        else {\n          outputParams[5] = mask;\n          result = 8;\n        }\n      }\n      else if (value < 0x10210001) {\n        if ((value == 0x10110000) || (value == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((value == 0x10310000) || ((value == 0x10320000 || (value == 0x10220000))))\n      goto LAB_0800423a;\n      mask = bitIndex;\n      outputPtr = outputParams;\n      if (0xff < inputMask) {\n        mask = bitIndex - 8;\n        outputPtr = outputParams + 1;\n      }\n      *outputPtr = *outputPtr & ~(0xf << (mask << 2 & 0xff)) | result << (mask << 2 & 0xff);\n      if ((inputParams[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift = (bitIndex & 3) << 2;\n        if (outputParams == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (outputParams == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (outputParams == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (outputParams == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shift) | index << shift;\n        if ((inputParams[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~inputMask;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | inputMask;\n        }\n        if ((inputParams[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~inputMask;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | inputMask;\n        }\n        if ((inputParams[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~inputMask;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | inputMask;\n        }\n        if ((inputParams[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~inputMask;\n        }\n        else {\n          _DAT_4001040c = inputMask | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_params_080040e8",
                "param_1": "outputParams",
                "param_2": "inputParams",
                "puVar1": "outputPtr",
                "uVar2": "mask",
                "uVar3": "inputMask",
                "uVar4": "bitIndex",
                "uVar5": "value",
                "uVar6": "result",
                "iVar7": "shift",
                "iVar8": "index"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int base_address,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(base_address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "base_address",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objectAddress,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "check_and_update_data_080042f0",
            "code": "\n\n\nvoid checkAndUpdateData_080042f0(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "check_and_update_data_080042f0",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "update_status_0800430c",
            "code": "\nundefined4 updateStatus_0800430c(int *status)\n\n{\n  if (*(char *)((int)status + 0x3e) == '@') {\n    if (condition1 == 0) {\n      *(uint *)(*status + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition2 == 0x4000) {\n    if (*(char *)((int)status + 0x3d) == '!') {\n      *(uint *)(*status + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition1 == 0) {\n    *(uint *)(*status + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition1 == 1) {\n    *(uint *)(*status + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "update_status_0800430c",
                "param_1": "status",
                "param_1[0x14]": "condition1",
                "param_1[4]": "condition2",
                "param_1[0x11]": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_byte_from_int_08004396",
            "code": "\nundefined4 set_byte_from_int_08004396(int *input_array)\n\n{\n  *(uint *)(*input_array + 0x10) = source_value & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_byte_from_int_08004396",
                "param_1": "input_array",
                "param_1[0x11]": "source_value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "update_flags_080043a2",
            "code": "\nundefined4 updateFlags_080043a2(uint **input)\n\n{\n  uint *ptr;\n  \n  ptr = input[0xb];\n  if ((*(char *)((int)input + 0x3d) == '\\\"') &&\n     ((ptr1 != (uint *)0x0 || (*(char *)((int)input + 0x3e) != '@')))) {\n    if ((ptr1 == (uint *)0x0) && (ptr2 == (uint *)0xc000)) {\n      **input = **input | 0x100;\n      ptr1 = (uint *)((int)ptr1 + 1);\n    }\n    else {\n      if (*(short *)((int)input + 0x2a) == 0) {\n        **input = **input | 0x200;\n      }\n      else if (*(short *)((int)input + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **input = **input & 0xfffffbff;\n          ptr = *input;\n          if ((ptr[1] & 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr & 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (input[0xc] == (uint *)0x12)) {\n          **input = **input & 0xfffffbff;\n          **input = **input | 0x200;\n        }\n        else if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)input + 0x2a) == 2) {\n        if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input | 0x800;\n          **input = **input & 0xfffffbff;\n        }\n        ptr = *input;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **input = **input | 0x400;\n        ptr = *input;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      ptr1 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "input",
                "puVar1": "ptr",
                "param_1[0x14]": "ptr1",
                "param_1[4]": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_param_0800457c",
            "code": "\nundefined4 updateParam_0800457c(int *paramPtr)\n\n{\n  byte *bytePtr;\n  \n  if (*(short *)((int)paramPtr + 0x2a) != 0) {\n    bytePtr = (byte *)paramArray;\n    paramArray = (int)(bytePtr + 1);\n    *(uint *)(*paramPtr + 0x10) = (uint)*bytePtr;\n    *(short *)((int)paramPtr + 0x2a) = *(short *)((int)paramPtr + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_param_0800457c",
                "param_1": "paramPtr",
                "pbVar1": "bytePtr",
                "param_1[9]": "paramArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_array_element_0800459c",
            "code": "\nundefined4 updateArrayElement_0800459c(int *array)\n\n{\n  undefined *ptrElement;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptrElement = (undefined *)arrayPtr;\n    arrayPtr = (int)(ptrElement + 1);\n    *ptrElement = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_array_element_0800459c",
                "param_1": "array",
                "puVar1": "ptrElement",
                "param_1[9]": "arrayPtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_values_080045c0",
            "code": "\nundefined4 calculateValues_080045c0(uint **inputArray)\n\n{\n  bool isLessThanLimit;\n  uint totalValue;\n  uint *arrayElement;\n  uint calculatedValue;\n  \n  if (inputArray == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)inputArray + 0x3d) == '\\0') {\n    *(undefined *)(inputArray + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)inputArray + 0x3d) = 0x24;\n  **inputArray = **inputArray & 0xfffffffe;\n  totalValue = FUN_08005a28();\n  if (inputArray[1] < (uint *)0x186a1) {\n    if (totalValue < 2000000) {\n      isLessThanLimit = true;\n    }\n    else {\n      isLessThanLimit = false;\n    }\n  }\n  else {\n    isLessThanLimit = totalValue < 4000000;\n  }\n  if (isLessThanLimit) {\n    return 1;\n  }\n  calculatedValue = totalValue / 1000000;\n  (*inputArray)[1] = calculatedValue;\n  if ((uint *)0x186a0 < inputArray[1]) {\n    calculatedValue = (calculatedValue * 300) / 1000;\n  }\n  (*inputArray)[8] = calculatedValue + 1;\n  arrayElement = inputArray[1];\n  if (arrayElement < (uint *)0x186a1) {\n    totalValue = (totalValue - 1) / (uint)((int)arrayElement << 1) + 1 & 0xfff;\n    if (totalValue < 4) {\n      totalValue = 4;\n    }\n  }\n  else {\n    if (inputArray[2] == (uint *)0x0) {\n      calculatedValue = (totalValue - 1) / (uint)((int)arrayElement * 3);\n    }\n    else {\n      calculatedValue = (totalValue - 1) / (uint)((int)arrayElement * 0x19);\n    }\n    if ((calculatedValue + 1 & 0xfff) == 0) {\n      totalValue = 1;\n    }\n    else if (inputArray[2] == (uint *)0x0) {\n      totalValue = (totalValue - 1) / (uint)((int)arrayElement * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      totalValue = (totalValue - 1) / (uint)((int)arrayElement * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*inputArray)[7] = totalValue;\n  **inputArray = (uint)inputArray[7] | (uint)inputArray[8];\n  (*inputArray)[2] = (uint)inputArray[4] | (uint)inputArray[3];\n  (*inputArray)[3] = (uint)inputArray[5] | (uint)inputArray[6];\n  **inputArray = **inputArray | 1;\n  inputArray[0x10] = (uint *)0x0;\n  *(undefined *)((int)inputArray + 0x3d) = 0x20;\n  inputArray[0xc] = (uint *)0x0;\n  *(undefined *)((int)inputArray + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_values_080045c0",
                "param_1": "inputArray",
                "bVar1": "isLessThanLimit",
                "uVar2": "totalValue",
                "puVar3": "arrayElement",
                "uVar4": "calculatedValue"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_data_08004728",
            "code": "\nundefined4 processData_08004728(uint **data,uint *ptr1,uint *ptr2,undefined2 param2)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int count;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    count = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (count == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      count = count + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = ptr2;\n      *(undefined2 *)((int)data + 0x2a) = param2;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = ptr1;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "param_1": "data",
                "param_2": "ptr1",
                "param_3": "ptr2",
                "param_4": "param2",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "count"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_data_080047f4",
            "code": "\nundefined4 process_data_080047f4(uint **data,uint *param_2,uint *param_3,undefined2 param_4)\n\n{\n  undefined4 result;\n  uint *temp;\n  int count;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    count = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (count == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      temp = *data;\n      count = count + -1;\n    } while ((temp[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*temp & 1) == 0) {\n        *temp = *temp | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x22;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param_3;\n      *(undefined2 *)((int)data + 0x2a) = param_4;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param_2;\n      **data = **data | 0x400;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_data_080047f4",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "temp",
                "local_c": "count"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validate_input_080048c8(uint **input_ptr,uint *data_ptr,int data_length,uint *flag_ptr)\n\n{\n  undefined4 result;\n  uint *flag_ptr2;\n  \n  if (*(char *)((int)input_ptr + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (data_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_ptr + 0xf) = 1;\n      flag_ptr2 = *input_ptr;\n      if ((*flag_ptr2 & 1) == 0) {\n        *flag_ptr2 = *flag_ptr2 | 1;\n      }\n      **input_ptr = **input_ptr & 0xfffff7ff;\n      *(undefined *)((int)input_ptr + 0x3d) = 0x29;\n      *(undefined *)((int)input_ptr + 0x3e) = 0x20;\n      result = 0;\n      input_ptr[0x10] = (uint *)0x0;\n      input_ptr[9] = data_ptr;\n      *(short *)((int)input_ptr + 0x2a) = (short)data_length;\n      input_ptr[0xb] = flag_ptr;\n      *(undefined2 *)(input_ptr + 10) = *(undefined2 *)((int)input_ptr + 0x2a);\n      *(undefined *)(input_ptr + 0xf) = 0;\n      (*input_ptr)[1] = (*input_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_ptr",
                "param_2": "data_ptr",
                "param_3": "data_length",
                "param_4": "flag_ptr",
                "uVar1": "result",
                "puVar2": "flag_ptr2"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "process_function_08004954",
            "code": "\nundefined4 processFunction_08004954(uint **paramList,uint *inputParam,int size,uint *outputParam)\n\n{\n  undefined4 returnValue;\n  uint *ptr;\n  \n  if (*(char *)((int)paramList + 0x3d) == '(') {\n    if (inputParam == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (size == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(paramList + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(paramList + 0xf) = 1;\n      ptr = *paramList;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **paramList = **paramList & 0xfffff7ff;\n      *(undefined *)((int)paramList + 0x3d) = 0x2a;\n      *(undefined *)((int)paramList + 0x3e) = 0x20;\n      returnValue = 0;\n      listPtr = (uint *)0x0;\n      inputPtr = inputParam;\n      *(short *)((int)paramList + 0x2a) = (short)size;\n      outputPtr = outputParam;\n      *(undefined2 *)(paramList + 10) = *(undefined2 *)((int)paramList + 0x2a);\n      *(undefined *)(paramList + 0xf) = 0;\n      (*paramList)[1] = (*paramList)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004954": "process_function_08004954",
                "param_1": "paramList",
                "param_2": "inputParam",
                "param_3": "size",
                "param_4": "outputParam",
                "uVar1": "returnValue",
                "puVar2": "ptr",
                "param_1[0x10]": "listPtr",
                "param_1[9]": "inputPtr",
                "param_1[0xb]": "outputPtr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "set_flags_and_values_080049e0",
            "code": "\nundefined4 setFlagsAndValues_080049e0(uint **param)\n\n{\n  uint *pointer;\n  \n  if (*(char *)((int)param + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)param + 0x3d) = 0x28;\n  pointer = *param;\n  if ((*pointer & 1) == 0) {\n    *pointer = *pointer | 1;\n  }\n  **param = **param | 0x400;\n  (*param)[1] = (*param)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "set_flags_and_values_080049e0",
                "param_1": "param",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "update_data_08004a24",
            "code": "\nundefined4 updateData_08004a24(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "update_data_08004a24",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_data_08004a76",
            "code": "\nundefined4 processData_08004a76(int *data)\n\n{\n  char flag;\n  undefined *pointer;\n  \n  flag = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    pointer = (undefined *)buffer;\n    buffer = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (flag == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      anotherVar = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "param_1": "data",
                "cVar1": "flag",
                "puVar2": "pointer",
                "param_1[9]": "buffer",
                "param_1[0xc]": "anotherVar"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 selectedValue;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(data + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(data + 6);\n  }\n  FUN_08007fa0(data,(*(uint *)(*data + 0x18) & 4) == 0,selectedValue,flag,value3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "selectedValue",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_param_08004aec",
            "code": "\nundefined4 process_param_08004aec(uint **param_list)\n\n{\n  if (((param_list[0xb] == (uint *)0x4) || (param_list[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param_list + 0x3d) == '(')) {\n    param_list[0xb] = (uint *)0xffff0000;\n    (*param_list)[1] = (*param_list)[1] & 0xfffff8ff;\n    (*param_list)[5] = 0xfffffbff;\n    **param_list = **param_list & 0xfffffbff;\n    param_list[0xc] = (uint *)0x0;\n    *(undefined *)((int)param_list + 0x3d) = 0x20;\n    *(undefined *)((int)param_list + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)param_list + 0x3d) == '!') {\n    param_list[0xb] = (uint *)0xffff0000;\n    param_list[0xc] = (uint *)0x21;\n    *(undefined *)((int)param_list + 0x3d) = 0x20;\n    *(undefined *)((int)param_list + 0x3e) = 0;\n    (*param_list)[1] = (*param_list)[1] & 0xfffff8ff;\n    (*param_list)[5] = 0xfffffbff;\n    **param_list = **param_list & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*param_list)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "param_1": "param_list"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "parse_flags_08004b82",
            "code": "\nundefined4 parseFlags_08004b82(uint **input)\n\n{\n  char charValue;\n  uint *pointerValue;\n  \n  charValue = *(char *)((int)input + 0x3d);\n  pointerValue = input[11];\n  if ((*(short *)(input + 10) == 0) && (charValue == '!')) {\n    if ((pointerValue == (uint *)0x4) || ((pointerValue == (uint *)0x8 || (pointerValue == (uint *)0xffff0000)))) {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      **input = **input | 0x200;\n      input[12] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      if (*(char *)((int)input + 0x3e) == '@') {\n        *(undefined *)((int)input + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)input + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      input[12] = (uint *)0x11;\n      *(undefined *)((int)input + 0x3e) = 0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)input + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)input + 0x2a) == 0) {\n      (*input)[1] = (*input)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)input + 0x3e) == '@') {\n      if (input[20] == (uint *)0x0) {\n        if (input[19] == (uint *)0x1) {\n          (*input)[4] = (uint)input[18] & 0xff;\n          input[20] = (uint *)((int)input[20] + 2);\n        }\n        else {\n          (*input)[4] = (uint)((int)input[18] << 0x10) >> 0x18;\n          input[20] = (uint *)((int)input[20] + 1);\n        }\n      }\n      else if (input[20] == (uint *)0x1) {\n        (*input)[4] = (uint)input[18] & 0xff;\n        input[20] = (uint *)((int)input[20] + 1);\n      }\n      else if (input[20] == (uint *)0x2) {\n        if (*(char *)((int)input + 0x3d) == '\\\"') {\n          **input = **input | 0x100;\n        }\n        else if (*(char *)((int)input + 0x3d) == '!') {\n          pointerValue = input[9];\n          input[9] = (uint *)((int)pointerValue + 1);\n          (*input)[4] = (uint)*(byte *)pointerValue;\n          *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerValue = input[9];\n      input[9] = (uint *)((int)pointerValue + 1);\n      (*input)[4] = (uint)*(byte *)pointerValue;\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "parse_flags_08004b82",
                "param_1": "input",
                "cVar1": "charValue",
                "puVar2": "pointerValue",
                "param_1[0xb]": "input[11]",
                "param_1[0x14]": "input[20]",
                "param_1[0x13]": "input[19]",
                "param_1[0x12]": "input[18]",
                "param_1[9]": "input[9]",
                "param_1[0xc]": "input[12]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_input_08004ccc",
            "code": "\nundefined4 processInput_08004ccc(uint **input)\n\n{\n  uint *tempVar1;\n  \n  tempVar1 = input[0xb];\n  if (*(char *)((int)input + 0x3d) == '!') {\n    if (*(short *)((int)input + 0x2a) == 0) {\n      if (((tempVar1 == (uint *)0x4) || (tempVar1 == (uint *)0x8)) || (tempVar1 == (uint *)0xffff0000)) {\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        **input = **input | 0x200;\n        input[0xc] = (uint *)0x0;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        if (*(char *)((int)input + 0x3e) == '@') {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        input[0xc] = (uint *)0x11;\n        *(undefined *)((int)input + 0x3e) = 0;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      tempVar1 = input[9];\n      input[9] = (uint *)((int)tempVar1 + 1);\n      (*input)[4] = (uint)*(byte *)tempVar1;\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_input_08004ccc",
                "param_1": "input",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_input_08004d6c",
            "code": "\nundefined4 processInput_08004d6c(uint **input)\n\n{\n  uint *tempVar1;\n  \n  if (*(char *)((int)input + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)input + 0x2a) < 4) {\n      if (*(ushort *)((int)input + 0x2a) - 2 < 2) {\n        if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input & 0xfffffbff;\n          **input = **input | 0x800;\n        }\n        (*input)[1] = (*input)[1] & 0xfffffbff;\n      }\n      else {\n        if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input & 0xfffffbff;\n        }\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        tempVar1 = input[9];\n        input[9] = (uint *)((int)tempVar1 + 1);\n        *(char *)tempVar1 = (char)(*input)[4];\n        *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        input[0xc] = (uint *)0x0;\n        if (*(char *)((int)input + 0x3e) == '@') {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempVar1 = input[9];\n      input[9] = (uint *)((int)tempVar1 + 1);\n      *(char *)tempVar1 = (char)(*input)[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_input_08004d6c",
                "param_1": "input",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "update_data_08004e3c",
            "code": "\nundefined4 updateData_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "update_data_08004e3c",
                "param_1": "data",
                "puVar1": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_input_08004f3c",
            "code": "\nvoid processInput_08004f3c(uint **input)\n\n{\n  int returnValue;\n  uint *ptr2;\n  uint *ptr3;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  ptr3 = *input;\n  if ((ptr3[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((ptr3[5] & 0x40) != 0) {\n        ptr2 = input[9];\n        input[9] = (uint *)((int)ptr2 + 1);\n        *(char *)ptr2 = (char)ptr3[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_08004f3a(input);\n    }\n    else {\n      if ((ptr3[5] & 0x40) != 0) {\n        ptr2 = input[9];\n        input[9] = (uint *)((int)ptr2 + 1);\n        *(char *)ptr2 = (char)ptr3[4];\n      }\n      FUN_08008020(input);\n    }\n  }\n  else {\n    ptr3[1] = ptr3[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x21) == '\\x01') {\n      input[0xe][0xd] = (uint)&LAB_080053cc_1;\n      returnValue = FUN_08004050(input[0xe]);\n      if (returnValue != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          ptr3 = input[9];\n          input[9] = (uint *)((int)ptr3 + 1);\n          *(char *)ptr3 = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0xd])();\n      }\n    }\n    else {\n      input[0xd][0xd] = (uint)&LAB_080053cc_1;\n      returnValue = FUN_08004050(input[0xd]);\n      if (returnValue != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_08007ff0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_input_08004f3c",
                "param_1": "input",
                "iVar1": "returnValue",
                "puVar2": "ptr2",
                "puVar3": "ptr3"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_parameters_08005084",
            "code": "\nundefined4 processParameters_08005084(uint **parameters)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  ptr1 = *parameters;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = parameters[9];\n      parameters[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      ptr1 = parameters[9];\n      parameters[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_parameters_08005084",
                "param_1": "parameters",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data)\n\n{\n  int ptrData;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  ptrData = *data;\n  flag3 = *(uint *)(ptrData + 0x18);\n  flag1 = *(uint *)(ptrData + 0x14);\n  flag2 = *(uint *)(ptrData + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data",
                "iVar1": "ptrData",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "update_status_080052f0",
            "code": "\nvoid updateStatus_080052f0(uint **param)\n\n{\n  char charVar;\n  uint *ptr;\n  uint statusMask;\n  uint flag;\n  \n  ptr = *param;\n  statusMask = ptr[5];\n  flag = ptr[1];\n  if (((statusMask & 0x10100) != 0) && ((flag & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **param = **param | 0x8000;\n  }\n  if (((statusMask & 0x10200) != 0) && ((flag & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 2);\n    (*param)[5] = 0xfffffdff;\n  }\n  if (((statusMask & 0x10400) != 0) && ((flag & 0x100) != 0)) {\n    charVar = *(char *)((int)param + 0x3d);\n    if (((*(char *)((int)param + 0x3e) == ' ') && (*(short *)((int)param + 0x2a) == 0)) &&\n       (((charVar == '!' || (charVar == ')')) || ((charVar == '(' && (param[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(param);\n    }\n    else {\n      param[0x10] = (uint *)((uint)param[0x10] | 4);\n      if (*(char *)((int)param + 0x3e) == '\\x10') {\n        **param = **param | 0x200;\n      }\n      (*param)[5] = 0xfffffbff;\n    }\n  }\n  if (((statusMask & 0x10800) != 0) && ((flag & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 8);\n    (*param)[5] = 0xfffff7ff;\n  }\n  if (param[0x10] != (uint *)0x0) {\n    FUN_08004f3c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "update_status_080052f0",
                "param_1": "param",
                "puVar2": "ptr",
                "uVar3": "statusMask",
                "uVar4": "flag",
                "cVar1": "charVar"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_byte_at_offset_0800542a",
            "code": "\nundefined get_byte_at_offset_0800542a(int base_address)\n\n{\n  return *(undefined *)(base_address + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_byte_at_offset_0800542a",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_offset_value_08005430",
            "code": "\nundefined4 getOffsetValue_08005430(int baseAddress)\n\n{\n  return *(undefined4 *)(baseAddress + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_offset_value_08005430",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_08005434",
            "code": "\nvoid delay_08005434(int milliseconds)\n\n{\n  bool isNotZero;\n  int counter;\n  \n  counter = milliseconds * (DAT_20000018 / 8000);\n  do {\n    isNotZero = counter != 0;\n    counter = counter + -1;\n  } while (isNotZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_08005434",
                "param_1": "milliseconds",
                "local_4": "counter",
                "bVar1": "isNotZero"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_conditions_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 check_conditions_08005460(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint flag_value;\n  bool is_flag_set;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      flag_value = flags[1];\n      if (flag_value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (flag_value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (flag_value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08003760();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    flag_value = flags[3];\n    if (flag_value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (flag_value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (flag_value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        start_time = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08003760();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_conditions_08005460",
                "param_1": "flags",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "result",
                "uVar4": "flag_value",
                "bVar5": "is_flag_set"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_processing_time_08005840",
            "code": "\n\n\nuint calculateProcessingTime_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 constantValue;\n  undefined4 offsetValue;\n  undefined4 multiplier1;\n  undefined4 multiplier2;\n  undefined4 magicNumber;\n  \n  magicNumber = 0x10100f0e;\n  multiplier2 = 0xd0c0b0a;\n  multiplier1 = 0x9080706;\n  offsetValue = 0x5040302;\n  constantValue = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&offsetValue + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_processing_time_08005840",
                "local_1c": "constantValue",
                "uStack_18": "offsetValue",
                "uStack_14": "multiplier1",
                "uStack_10": "multiplier2",
                "uStack_c": "magicNumber"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "update_settings_080058ac",
            "code": "\n\n\nundefined4 updateSettings_080058ac(uint *settings,uint size)\n\n{\n  int iVar1;\n  int iVar2;\n  uint value;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    value = settings[1];\n    if (value == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((value != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = value | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08003760();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  value = FUN_08005840();\n  DAT_20000018 = value >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "update_settings_080058ac",
                "param_1": "settings",
                "param_2": "size",
                "uVar3": "value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "initialize_device_080058d2",
            "code": "\n\n\nundefined4 initializeDevice_080058d2(uint *deviceConfig,uint configSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint configValue;\n  \n  if ((*deviceConfig & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | deviceConfig[2];\n  }\n  if ((*deviceConfig & 1) != 0) {\n    configValue = deviceConfig[1];\n    if (configValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((configValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = configValue | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (deviceConfig[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (deviceConfig[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (configSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*deviceConfig & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | deviceConfig[3];\n  }\n  if ((*deviceConfig & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | deviceConfig[4] << 3;\n  }\n  configValue = FUN_08005840();\n  DAT_20000018 = configValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "initialize_device_080058d2",
                "param_1": "deviceConfig",
                "param_2": "configSize",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "configValue"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_data_variable_08005a1c",
            "code": "\nundefined4 get_data_variable_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_data_variable_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_08005a28",
            "code": "\n\n\nuint shiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shifted_value_08005a48",
            "code": "\n\n\nuint shiftedValue_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shifted_value_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_params_08005a68",
            "code": "\n\n\nvoid initialize_params_08005a68(undefined4 *output_params,uint *input_params)\n\n{\n  *output_params = 0xf;\n  output_params[1] = _DAT_40021004 & 3;\n  output_params[2] = _DAT_40021004 & 0xf0;\n  output_params[3] = _DAT_40021004 & 0x700;\n  output_params[4] = _DAT_40021004 >> 3 & 0x700;\n  *input_params = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_params_08005a68",
                "param_1": "output_params",
                "param_2": "input_params"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "configure_hardware_08005aa4",
            "code": "\n\n\nundefined4 configureHardware_08005aa4(uint *config)\n\n{\n  uint flag1;\n  uint flag2;\n  int startTime;\n  int currentTime;\n  bool isFirstTime;\n  \n  if ((*config & 1) != 0) {\n    isFirstTime = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFirstTime) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        startTime = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentTime = FUN_08003760();\n          if (5000 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isFirstTime) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "configure_hardware_08005aa4",
                "param_1": "config",
                "uVar1": "flag1",
                "uVar2": "flag2",
                "iVar3": "startTime",
                "iVar4": "currentTime",
                "bVar5": "isFirstTime"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_08005bb8",
            "code": "\n\n\nuint calculateParameter_08005bb8(int inputValue)\n\n{\n  uint result;\n  undefined2 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  \n  tempVar5 = 0x10100f0e;\n  tempVar4 = 0xd0c0b0a;\n  tempVar3 = 0x9080706;\n  tempVar2 = 0x5040302;\n  tempVar1 = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&tempVar1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&tempVar2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_08005bb8",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "tempVar1",
                "uStack_20": "tempVar2",
                "uStack_1c": "tempVar3",
                "uStack_18": "tempVar4",
                "uStack_14": "tempVar5"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "initialize_data_08005cb4",
            "code": "\n\n\nvoid initializeData_08005cb4(uint **dataPointer)\n\n{\n  if (((**dataPointer & 2) != 0) && (((*dataPointer)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*dataPointer)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)dataPointer + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "initialize_data_08005cb4",
                "param_1": "dataPointer"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_status_08005cec",
            "code": "\nvoid updateStatus_08005cec(int statusPtr,uint *dataPtr)\n\n{\n  uint updatedStatus;\n  uint currentStatus;\n  uint dataValue;\n  \n  *(uint *)(statusPtr + 0x20) = *(uint *)(statusPtr + 0x20) & 0xfffffffe;\n  currentStatus = *(uint *)(statusPtr + 4);\n  dataValue = *dataPtr;\n  updatedStatus = *(uint *)(statusPtr + 0x20) & 0xfffffffd | dataPtr[2];\n  if (statusPtr == 0x40012c00) {\n    updatedStatus = (updatedStatus & 0xfffffff7 | dataPtr[3]) & 0xfffffffb;\n    currentStatus = currentStatus & 0xfffffcff | dataPtr[5] | dataPtr[6];\n  }\n  *(uint *)(statusPtr + 4) = currentStatus;\n  *(uint *)(statusPtr + 0x18) = *(uint *)(statusPtr + 0x18) & 0xffffff8c | dataValue;\n  *(uint *)(statusPtr + 0x34) = dataPtr[1];\n  *(uint *)(statusPtr + 0x20) = updatedStatus;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_status_08005cec",
                "param_1": "statusPtr",
                "param_2": "dataPtr",
                "uVar1": "updatedStatus",
                "uVar2": "currentStatus",
                "uVar3": "dataValue"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_data_08005d48",
            "code": "\nvoid updateData_08005d48(int dataAddress,uint *data)\n\n{\n  uint updatedVar1;\n  uint updatedVar2;\n  uint updatedVar3;\n  \n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & 0xfffffeff;\n  updatedVar2 = *(uint *)(dataAddress + 4);\n  updatedVar3 = *data;\n  updatedVar1 = *(uint *)(dataAddress + 0x20) & 0xfffffdff | data[2] << 8;\n  if (dataAddress == 0x40012c00) {\n    updatedVar1 = (updatedVar1 & 0xfffff7ff | data[3] << 8) & 0xfffffbff;\n    updatedVar2 = updatedVar2 & 0xffffcfff | data[5] << 4 | data[6] << 4;\n  }\n  *(uint *)(dataAddress + 4) = updatedVar2;\n  *(uint *)(dataAddress + 0x1c) = *(uint *)(dataAddress + 0x1c) & 0xffffff8c | updatedVar3;\n  *(uint *)(dataAddress + 0x3c) = data[1];\n  *(uint *)(dataAddress + 0x20) = updatedVar1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_data_08005d48",
                "param_1": "dataAddress",
                "param_2": "data",
                "uVar1": "updatedVar1",
                "uVar2": "updatedVar2",
                "uVar3": "updatedVar3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "set_bitmask_08005dac",
            "code": "\nvoid setBitmask_08005dac(int baseAddress,int *params)\n\n{\n  uint originalValue;\n  int param1Value;\n  int param2Value;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffefff;\n  originalValue = *(uint *)(baseAddress + 4);\n  param1Value = *params;\n  param2Value = params[2];\n  if (baseAddress == 0x40012c00) {\n    originalValue = originalValue & 0xffffbfff | params[5] << 6;\n  }\n  *(uint *)(baseAddress + 4) = originalValue;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffff8cff | param1Value << 8;\n  *(int *)(baseAddress + 0x40) = params[1];\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffdfff | param2Value << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "set_bitmask_08005dac",
                "param_1": "baseAddress",
                "param_2": "params",
                "uVar1": "originalValue",
                "iVar2": "param1Value",
                "iVar3": "param2Value"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "set_flag_and_call_function_08005df4",
            "code": "\nvoid set_flag_and_call_function_08005df4(uint **parameter)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)parameter + 0x3d) = 2;\n  pointer = *parameter;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUNC_08007710(parameter);\n  *(undefined *)((int)parameter + 0x3d) = 0;\n  *(undefined *)(parameter + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "set_flag_and_call_function_08005df4",
                "param_1": "parameter",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "set_flag_and_clear_08005e2e",
            "code": "\nvoid setFlagAndClear_08005e2e(uint **param)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  pointer = *param;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08007110(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "set_flag_and_clear_08005e2e",
                "param_1": "param",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "process_parameters_08005e6e",
            "code": "\nvoid processParameters_08005e6e(int *paramArray)\n\n{\n  int currentParam;\n  \n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 2) != 0) && ((*(uint *)(currentParam + 0xc) & 2) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xfffffffd;\n    *(undefined *)(paramArray + 7) = 1;\n    if ((*(uint *)(*paramArray + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(paramArray);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(paramArray + 7) = 0;\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 4) != 0) && ((*(uint *)(currentParam + 0xc) & 4) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xfffffffb;\n    *(undefined *)(paramArray + 7) = 2;\n    if ((*(uint *)(*paramArray + 0x18) & 0x300) == 0) {\n      FUN_0800771c(paramArray);\n      FUNC_08005e6a(paramArray);\n    }\n    else {\n      FUNC_08005e68(paramArray);\n    }\n    *(undefined *)(paramArray + 7) = 0;\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 8) != 0) && ((*(uint *)(currentParam + 0xc) & 8) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xfffffff7;\n    *(undefined *)(paramArray + 7) = 4;\n    if ((*(uint *)(*paramArray + 0x1c) & 3) == 0) {\n      FUN_0800771c(paramArray);\n      FUNC_08005e6a(paramArray);\n    }\n    else {\n      FUNC_08005e68(paramArray);\n    }\n    *(undefined *)(paramArray + 7) = 0;\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 0x10) != 0) && ((*(uint *)(currentParam + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xffffffef;\n    *(undefined *)(paramArray + 7) = 8;\n    if ((*(uint *)(*paramArray + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(paramArray);\n      FUNC_08005e6a(paramArray);\n    }\n    else {\n      FUNC_08005e68(paramArray);\n    }\n    *(undefined *)(paramArray + 7) = 0;\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 1) != 0) && ((*(uint *)(currentParam + 0xc) & 1) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xfffffffe;\n    FUN_08007736(paramArray);\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 0x80) != 0) && ((*(uint *)(currentParam + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xffffff7f;\n    FUNC_080064ae(paramArray);\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 0x40) != 0) && ((*(uint *)(currentParam + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(paramArray);\n  }\n  currentParam = *paramArray;\n  if (((*(uint *)(currentParam + 0x10) & 0x20) != 0) && ((*(uint *)(currentParam + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(currentParam + 0x10) = 0xffffffdf;\n    FUNC_080064ac(paramArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "process_parameters_08005e6e",
                "param_1": "paramArray",
                "iVar1": "currentParam"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_08005fe8",
            "code": "\nvoid updateMemory_08005fe8(uint *memoryBlock,uint *newValue)\n\n{\n  uint currentValue;\n  \n  currentValue = *memoryBlock;\n  if ((((memoryBlock == (uint *)0x40012c00) || (memoryBlock == (uint *)0x40000000)) ||\n      (memoryBlock == (uint *)0x40000400)) || (memoryBlock == (uint *)0x40000800)) {\n    currentValue = currentValue & 0xffffff8f | newValue[1];\n  }\n  if (((memoryBlock == (uint *)0x40012c00) || (memoryBlock == (uint *)0x40000000)) ||\n     ((memoryBlock == (uint *)0x40000400 || (memoryBlock == (uint *)0x40000800)))) {\n    currentValue = currentValue & 0xfffffcff | newValue[3];\n  }\n  *memoryBlock = currentValue & 0xffffff7f | newValue[5];\n  memoryBlock[11] = newValue[2];\n  memoryBlock[10] = *newValue;\n  if (memoryBlock == (uint *)0x40012c00) {\n    globalValue = newValue[4];\n  }\n  memoryBlock[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memoryBlock",
                "param_2": "newValue",
                "uVar1": "currentValue",
                "uRam40012c30": "globalValue",
                "param_1[0xb]": "memoryBlock[11]",
                "param_1[10]": "memoryBlock[10]",
                "param_2[1]": "newValue[1]",
                "param_2[3]": "newValue[3]",
                "param_2[5]": "newValue[5]"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "initialize_and_process_08006060",
            "code": "\nundefined4 initializeAndProcess_08006060(undefined4 *inputArray)\n\n{\n  if (inputArray != (undefined4 *)0x0) {\n    if (*(char *)((int)inputArray + 0x3d) == '\\0') {\n      *(undefined *)(inputArray + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)inputArray + 0x3d) = 2;\n    FUN_08005fe8(*inputArray,inputArray + 1);\n    *(undefined *)((int)inputArray + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "initialize_and_process_08006060",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "initialize_and_process_08006092",
            "code": "\nundefined4 initializeAndProcess_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "initialize_and_process_08006092",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_parameters_080060c4",
            "code": "\nvoid updateParameters_080060c4(int baseAddress,int *paramArray)\n\n{\n  uint modified1;\n  uint modified2;\n  int indexValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  modified2 = *(uint *)(baseAddress + 4);\n  indexValue = *paramArray;\n  modified1 = *(uint *)(baseAddress + 0x20) & 0xffffffdf | paramArray[2] << 4;\n  if (baseAddress == 0x40012c00) {\n    modified1 = (modified1 & 0xffffff7f | paramArray[3] << 4) & 0xffffffbf;\n    modified2 = modified2 & 0xfffff3ff | paramArray[5] << 2 | paramArray[6] << 2;\n  }\n  *(uint *)(baseAddress + 4) = modified2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | indexValue << 8;\n  *(int *)(baseAddress + 0x38) = paramArray[1];\n  *(uint *)(baseAddress + 0x20) = modified1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_parameters_080060c4",
                "param_1": "baseAddress",
                "param_2": "paramArray",
                "uVar1": "modified1",
                "uVar2": "modified2",
                "iVar3": "indexValue"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "check_and_process_08006128",
            "code": "\nundefined4 check_and_process_08006128(undefined4 *result,undefined4 input_param,undefined4 switch_param)\n\n{\n  if (*(char *)(result + 0xf) != '\\x01') {\n    *(undefined *)(result + 0xf) = 1;\n    *(undefined *)((int)result + 0x3d) = 2;\n    switch(switch_param) {\n    case 0:\n      FUN_08005cec(*result);\n      break;\n    case 4:\n      FUN_080060c4(*result);\n      break;\n    case 8:\n      FUN_08005d48(*result);\n      break;\n    case 0xc:\n      FUN_08005dac(*result);\n    }\n    *(undefined *)((int)result + 0x3d) = 1;\n    *(undefined *)(result + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "check_and_process_08006128",
                "param_1": "result",
                "param_2": "input_param",
                "param_3": "switch_param"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "process_data_08006186",
            "code": "\nundefined4 processData_08006186(int *data,int param,undefined4 option)\n\n{\n  if (*(char *)(data + 0xf) != '\\x01') {\n    *(undefined *)(data + 0xf) = 1;\n    *(undefined *)((int)data + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*data);\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | 8;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffffffb;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | *(uint *)(param + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*data);\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | 0x800;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffffbff;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) | *(int *)(param + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*data);\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | 8;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffffffb;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | *(uint *)(param + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*data);\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | 0x800;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffffbff;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) | *(int *)(param + 0x10) << 8;\n    }\n    *(undefined *)((int)data + 0x3d) = 1;\n    *(undefined *)(data + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "process_data_08006186",
                "param_1": "data",
                "param_2": "param",
                "param_3": "option"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_value_08006262",
            "code": "\nvoid updateBitValue_08006262(int structPtr,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(structPtr + 0x20) = *(uint *)(structPtr + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(structPtr + 0x20) = *(uint *)(structPtr + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "structPtr",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_08006280",
            "code": "\nundefined4 updatePermissions_08006280(uint **data,undefined4 permissionFlag)\n\n{\n  switch(permissionFlag) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  FUN_08006262(*data,permissionFlag,1);\n  if (*data == (uint *)0x40012c00) {\n    status = status | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_08006280",
                "param_1": "data",
                "param_2": "permissionFlag",
                "uRam40012c44": "status"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "clear_bit_and_check_conditions_080062f4",
            "code": "\nundefined4 clearBitAndCheckConditions_080062f4(uint **data,undefined4 bitIndex)\n\n{\n  uint *tempPtr;\n  \n  switch(bitIndex) {\n  case 0:\n    (*data)[3] = (*data)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] & 0xffffffef;\n  }\n  FUN_08006262(*data,bitIndex,0);\n  if (((*data == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "clear_bit_and_check_conditions_080062f4",
                "param_1": "data",
                "param_2": "bitIndex",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flags_and_permissions_08006390",
            "code": "\nundefined4 setFlagsAndPermissions_08006390(uint **dataPointer,undefined4 value)\n\n{\n  FUN_08006262(*dataPointer,value,1);\n  if (*dataPointer == (uint *)0x40012c00) {\n    dataRegister1 = dataRegister1 | 0x8000;\n  }\n  **dataPointer = **dataPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flags_and_permissions_08006390",
                "param_1": "dataPointer",
                "param_2": "value",
                "uRam40012c44": "dataRegister1"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_memory_080063c0",
            "code": "\nundefined4 updateMemory_080063c0(uint **memoryPtr,undefined4 newValue)\n\n{\n  uint *ptr;\n  \n  FUN_08006262(*memoryPtr,newValue,0);\n  if (((*memoryPtr == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  ptr = *memoryPtr;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryPtr + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_memory_080063c0",
                "param_1": "memoryPtr",
                "param_2": "newValue",
                "puVar1": "ptr",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_bitwise_flags_08006420",
            "code": "\nvoid updateBitwiseFlags_08006420(int dataAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_bitwise_flags_08006420",
                "param_1": "dataAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_0800643c",
            "code": "\nundefined4 setFlags_0800643c(uint **ptr_to_uint_ptr,undefined4 value)\n\n{\n  FUN_08006420(*ptr_to_uint_ptr,value,4);\n  (*ptr_to_uint_ptr)[0x11] = (*ptr_to_uint_ptr)[0x11] | 0x8000;\n  **ptr_to_uint_ptr = **ptr_to_uint_ptr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_0800643c",
                "param_1": "ptr_to_uint_ptr",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_permissions_08006460",
            "code": "\nundefined4 updatePermissions_08006460(uint **ptrPermissions,undefined4 value)\n\n{\n  uint *ptrData;\n  \n  FUN_08006420(*ptrPermissions,value,0);\n  ptrData = *ptrPermissions;\n  if (((ptrData[8] & 0x1111) == 0) && ((ptrData[8] & 0x444) == 0)) {\n    ptrData[17] = ptrData[17] & 0xffff7fff;\n  }\n  ptrData = *ptrPermissions;\n  if (((ptrData[8] & 0x1111) == 0) && ((ptrData[8] & 0x444) == 0)) {\n    *ptrData = *ptrData & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_permissions_08006460",
                "param_1": "ptrPermissions",
                "param_2": "value",
                "puVar1": "ptrData",
                "puVar1[8]": "ptrData[8]",
                "puVar1[0x11]": "ptrData[17]"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "set_bitwise_operations_080064b0",
            "code": "\nvoid setBitwiseOperations_080064b0(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xfffffedf;\n  *(uint *)(*ptr + 0x14) = *(uint *)(*ptr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)ptr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "set_bitwise_operations_080064b0",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_data_080064cc",
            "code": "\nundefined4 processData_080064cc(int *data)\n\n{\n  short tempShort;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  tempShort = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = tempShort;\n  if (tempShort == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "sVar1": "tempShort",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_values_08006538",
            "code": "\nvoid calculateValues_08006538(int *parameters)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  result10 = *parameters;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = parameters[1];\n    result2 = FUN_08005a28();\n    result7 = parameters[1];\n    result3 = FUN_08005a28();\n    result8 = parameters[1];\n    result4 = FUN_08005a28();\n    result9 = parameters[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = parameters[1];\n  result1 = FUN_08005a48();\n  result6 = parameters[1];\n  result2 = FUN_08005a48();\n  result7 = parameters[1];\n  result3 = FUN_08005a48();\n  result8 = parameters[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_values_08006538",
                "param_1": "parameters",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_validity_080066e8",
            "code": "\nundefined4 checkValidity_080066e8(uint **data,uint flags,uint condition,int threshold,uint limit)\n\n{\n  int result;\n  \n  do {\n    if (((flags & ~**data) == 0) != condition) {\n      return 0;\n    }\n  } while ((limit == 0xffffffff) ||\n          ((limit != 0 && (result = FUN_08003760(), (uint)(result - threshold) <= limit))));\n  (*data)[3] = (*data)[3] & 0xfffffe5f;\n  (*data)[5] = (*data)[5] & 0xfffffffe;\n  *(undefined *)((int)data + 0x39) = 0x20;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  *(undefined *)(data + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_validity_080066e8",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "condition",
                "param_4": "threshold",
                "param_5": "limit",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_structure_0800674e",
            "code": "\nundefined4 initialize_data_structure_0800674e(int *data_structure_ptr)\n\n{\n  if (data_structure_ptr != (int *)0x0) {\n    if (*(char *)((int)data_structure_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_structure_ptr + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)data_structure_ptr + 0x39) = 0x24;\n    *(uint *)(*data_structure_ptr + 0xc) = *(uint *)(*data_structure_ptr + 0xc) & 0xffffdfff;\n    FUN_08006538(data_structure_ptr);\n    *(uint *)(*data_structure_ptr + 0x10) = *(uint *)(*data_structure_ptr + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_structure_ptr + 0x14) = *(uint *)(*data_structure_ptr + 0x14) & 0xffffffd5;\n    *(uint *)(*data_structure_ptr + 0xc) = *(uint *)(*data_structure_ptr + 0xc) | 0x2000;\n    count = 0;\n    *(undefined *)((int)data_structure_ptr + 0x39) = 0x20;\n    *(undefined *)((int)data_structure_ptr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_structure_0800674e",
                "param_1": "data_structure_ptr",
                "param_1[0xf]": "count"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *dataPtr,ushort *ushortPtr,int length,undefined4 param)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataPtr + 0x39) == ' ') {\n    if (ushortPtr == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (length == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataPtr + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataPtr + 0xe) = 1;\n      dataPtr[0xf] = 0;\n      *(undefined *)((int)dataPtr + 0x39) = 0x21;\n      returnValue = FUN_08003760();\n      *(short *)(dataPtr + 9) = (short)length;\n      *(short *)((int)dataPtr + 0x26) = (short)length;\n      while (*(short *)((int)dataPtr + 0x26) != 0) {\n        *(short *)((int)dataPtr + 0x26) = *(short *)((int)dataPtr + 0x26) + -1;\n        if (dataPtr[2] == 0x1000) {\n          result = FUN_080066e8(dataPtr,0x80,0,returnValue,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = *ushortPtr & 0x1ff;\n          if (dataPtr[4] == 0) {\n            ushortPtr = ushortPtr + 1;\n          }\n          else {\n            ushortPtr = (ushort *)((int)ushortPtr + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(dataPtr,0x80,0,returnValue,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = (uint)*(byte *)ushortPtr;\n          ushortPtr = (ushort *)((int)ushortPtr + 1);\n        }\n      }\n      result = FUN_080066e8(dataPtr,0x40,0,returnValue,param);\n      if (result == 0) {\n        *(undefined *)((int)dataPtr + 0x39) = 0x20;\n        *(undefined *)(dataPtr + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "dataPtr",
                "param_2": "ushortPtr",
                "param_3": "length",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "initialize_data_0800688e",
            "code": "\nundefined4 initializeData_0800688e(int *dataPtr,int value1,int value2)\n\n{\n  if (*(char *)((int)dataPtr + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(dataPtr + 0xe) != '\\x01') {\n    dataValue1 = value1;\n    *(short *)(dataPtr + 9) = (short)value2;\n    *(short *)((int)dataPtr + 0x26) = (short)value2;\n    dataValue4 = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x21;\n    *(undefined *)(dataPtr + 0xe) = 0;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "initialize_data_0800688e",
                "param_1": "dataPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "dataValue1",
                "param_1[0xf]": "dataValue4"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_and_set_values_080068d6",
            "code": "\nundefined4 validate_and_set_values_080068d6(int *data_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)data_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    data_array[10] = value_1;\n    *(short *)(data_array + 0xb) = (short)value_2;\n    *(short *)((int)data_array + 0x2e) = (short)value_2;\n    data_array[0xf] = 0;\n    *(undefined *)((int)data_array + 0x3a) = 0x22;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x100;\n    *(uint *)(*data_array + 0x14) = *(uint *)(*data_array + 0x14) | 1;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_and_set_values_080068d6",
                "param_1": "data_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "data_array[10]",
                "param_1[0xf]": "data_array[0xf]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "set_flag_and_call_function_08006932",
            "code": "\nundefined4 setFlagAndCallFunction_08006932(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputArray + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "set_flag_and_call_function_08006932",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_data_0800694c",
            "code": "\nundefined4 processData_0800694c(int *dataPtr)\n\n{\n  byte *bytePtr;\n  short counter;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)dataPtr + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (value1 == 0x1000) {\n    if (value2 == 0) {\n      *(ushort *)dataPtr[10] = (ushort)((uint)(*(int *)(*dataPtr + 4) << 0x17) >> 0x17);\n      dataPtr[10] = dataPtr[10] + 2;\n    }\n    else {\n      *(ushort *)dataPtr[10] = (ushort)*(undefined4 *)(*dataPtr + 4) & 0xff;\n      dataPtr[10] = dataPtr[10] + 1;\n    }\n  }\n  else if (value2 == 0) {\n    undefinedPtr = (undefined *)dataPtr[10];\n    dataPtr[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*dataPtr + 4);\n  }\n  else {\n    bytePtr = (byte *)dataPtr[10];\n    dataPtr[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*dataPtr + 4) & 0x7f;\n  }\n  counter = *(short *)((int)dataPtr + 0x2e) + -1;\n  *(short *)((int)dataPtr + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffffdf;\n  *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xfffffeff;\n  *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "dataPtr",
                "pbVar1": "bytePtr",
                "sVar2": "counter",
                "puVar3": "undefinedPtr",
                "param_1[2]": "value1",
                "param_1[4]": "value2"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_flags_080069ec",
            "code": "\nvoid processFlags_080069ec(uint **flagsParam)\n\n{\n  int result;\n  uint flagsParam3;\n  uint *ptrToFlags;\n  uint tempVar;\n  uint flagsParam1;\n  \n  ptrToFlags = *flagsParam;\n  flagsParam1 = *ptrToFlags;\n  flagsParam3 = ptrToFlags[3];\n  if ((((flagsParam1 & 0xf) == 0) && ((flagsParam1 & 0x20) != 0)) && ((flagsParam3 & 0x20) != 0)) {\n    FUN_0800694c(flagsParam);\n    return;\n  }\n  if (((flagsParam1 & 0xf) == 0) || ((tempVar = ptrToFlags[5] & 1, tempVar == 0 && ((flagsParam3 & 0x120) == 0)))) {\n    if (((flagsParam1 & 0x80) != 0) && ((flagsParam3 & 0x80) != 0)) {\n      FUN_080064cc(flagsParam);\n      return;\n    }\n    if (((flagsParam1 & 0x40) != 0) && ((flagsParam3 & 0x40) != 0)) {\n      FUN_08006932(flagsParam);\n    }\n  }\n  else {\n    if (((flagsParam1 & 1) != 0) && ((flagsParam3 & 0x100) != 0)) {\n      flagsParam[0xf] = (uint *)((uint)flagsParam[0xf] | 1);\n    }\n    if (((flagsParam1 & 4) != 0) && (tempVar != 0)) {\n      flagsParam[0xf] = (uint *)((uint)flagsParam[0xf] | 2);\n    }\n    if (((flagsParam1 & 2) != 0) && (tempVar != 0)) {\n      flagsParam[0xf] = (uint *)((uint)flagsParam[0xf] | 4);\n    }\n    if (((flagsParam1 & 8) != 0) && (tempVar != 0)) {\n      flagsParam[0xf] = (uint *)((uint)flagsParam[0xf] | 8);\n    }\n    if (flagsParam[0xf] != (uint *)0x0) {\n      if (((flagsParam1 & 0x20) != 0) && ((flagsParam3 & 0x20) != 0)) {\n        FUN_0800694c(flagsParam);\n      }\n      if ((((uint)flagsParam[0xf] & 8) == 0) && (((*flagsParam)[5] & 0x40) == 0)) {\n        FUNC_0800877c(flagsParam);\n        flagsParam[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(flagsParam);\n      ptrToFlags = *flagsParam;\n      if ((ptrToFlags[5] & 0x40) == 0) {\n        FUNC_0800877c(flagsParam);\n        return;\n      }\n      ptrToFlags[5] = ptrToFlags[5] & 0xffffffbf;\n      if (flagsParam[0xd] == (uint *)0x0) {\n        FUNC_0800877c(flagsParam);\n        return;\n      }\n      flagsParam[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      result = FUN_08004050(flagsParam[0xd]);\n      if (result != 0) {\n        (*(code *)flagsParam[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_flags_080069ec",
                "param_1": "flagsParam",
                "iVar1": "result",
                "uVar2": "flagsParam3",
                "puVar3": "ptrToFlags",
                "uVar4": "tempVar",
                "uVar5": "flagsParam1"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_byte_values_08006b1c",
            "code": "\nbyte combineByteValues_08006b1c(int inputValue)\n\n{\n  return *(byte *)(inputValue + 0x3a) | *(byte *)(inputValue + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_byte_values_08006b1c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "extract_bit_value_08006b28",
            "code": "\nuint extractBitValue_08006b28(uint inputValue,int arrayOffset)\n\n{\n  return *(uint *)(arrayOffset + ((inputValue << 0x18) >> 0x1c) * 4) >> (inputValue & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "extract_bit_value_08006b28",
                "param_1": "inputValue",
                "param_2": "arrayOffset"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_in_array_08006b3e",
            "code": "\nvoid setBitInArray_08006b3e(uint bitIndex,int arrayAddress)\n\n{\n  uint byteIndex;\n  \n  byteIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + byteIndex * 4) = *(uint *)(arrayAddress + byteIndex * 4) | 1 << (bitIndex & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_in_array_08006b3e",
                "param_1": "bitIndex",
                "param_2": "arrayAddress",
                "uVar1": "byteIndex"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_08006b5c",
            "code": "\nvoid updateBit_08006b5c(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_08006b5c",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "map_param_to_value_08006b7c",
            "code": "\nundefined4 mapParamToValue_08006b7c(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "map_param_to_value_08006b7c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_flag_and_return_address_08006bb8",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08006bb8(undefined4 flag)\n\n{\n  undefined4 address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "address"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "calculate_output_08006c60",
            "code": "\nuint calculateOutput_08006c60(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_08007376(input1,&DAT_0800a5b8,input3,input4,input4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedResult - 1) {\n    shiftedResult = 0;\n  }\n  return shiftedResult;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "calculate_output_08006c60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "check_and_return_value_08006c7c",
            "code": "\nundefined4 check_and_return_value_08006c7c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08007376(input_1,&DAT_0800a6cc,input_3,input_4,input_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "check_and_return_value_08006c7c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "initialize_flags_08006ca8",
            "code": "\n\n\nvoid initializeFlags_08006ca8(int *flag,undefined4 value)\n\n{\n  undefined4 result;\n  uint updatedFlags;\n  int flagValue;\n  uint bitMask;\n  undefined4 shiftAmount;\n  undefined4 offset;\n  \n  flagValue = *flag;\n  if (flagValue == 0x40012400) {\n    updatedFlags = _DAT_40021018 | 0x200;\n    flagValue = 0x200;\n    _DAT_40021018 = updatedFlags;\n  }\n  else {\n    updatedFlags = 0x40012800;\n    if (flagValue == 0x40012800) {\n      updatedFlags = _DAT_40021018 | 0x400;\n      flagValue = 0x400;\n      _DAT_40021018 = updatedFlags;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,value,updatedFlags,flagValue);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  shiftAmount = 3;\n  offset = 0;\n  FUN_080040e8(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "initialize_flags_08006ca8",
                "param_1": "flag",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "updatedFlags",
                "iVar3": "flagValue",
                "local_18": "bitMask",
                "local_14": "shiftAmount",
                "local_10": "offset"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_control_registers_08006d24",
            "code": "\n\n\nvoid updateControlRegisters_08006d24(int *registerValue)\n\n{\n  if (*registerValue != 0x40012400) {\n    if (*registerValue == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_control_registers_08006d24",
                "param_1": "registerValue"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "verify_license_08006d80",
            "code": "\nundefined2 verify_license_08006d80(undefined4 license_code)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 license_verification_result;\n  uint flag;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 counter1;\n  undefined4 counter2;\n  undefined4 counter3;\n  undefined4 increment;\n  undefined4 counter4;\n  undefined4 counter6;\n  undefined4 mask;\n  undefined4 counter5;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  flag = 0;\n  flag1 = 0;\n  flag2 = 0;\n  license_verification_result = 0;\n  buffer = FUN_08007320(license_code,&DAT_0800a5b8);\n  if (buffer == 0) {\n    license_verification_result = 0;\n  }\n  else {\n    counter1 = 0;\n    counter2 = 0;\n    counter3 = 0;\n    counter4 = 0;\n    mask = 0xe0000;\n    counter5 = 0;\n    increment = 1;\n    counter6 = 0;\n    DAT_20000014 = (undefined)license_code;\n    iVar1 = FUN_08003bd8(&buffer);\n    if (iVar1 == 0) {\n      flag = FUN_08006c60(license_code);\n      if (flag < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_080038e4(&buffer,&flag);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08003e20(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08003aa0(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800376c(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08003a1c(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  license_verification_result = FUN_080038dc(&buffer);\n                }\n                iVar1 = FUN_08003de4(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_08003ce8(&buffer);\n                  if (iVar1 != 0) {\n                    license_verification_result = 0;\n                  }\n                }\n                else {\n                  license_verification_result = 0;\n                }\n              }\n              else {\n                license_verification_result = 0;\n              }\n            }\n            else {\n              license_verification_result = 0;\n            }\n          }\n          else {\n            license_verification_result = 0;\n          }\n        }\n        else {\n          license_verification_result = 0;\n        }\n      }\n      else {\n        license_verification_result = 0;\n      }\n    }\n    else {\n      license_verification_result = 0;\n    }\n  }\n  return license_verification_result;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "verify_license_08006d80",
                "param_1": "license_code",
                "local_46": "license_verification_result",
                "local_44": "flag",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "counter1",
                "local_30": "counter2",
                "local_2c": "counter3",
                "local_24": "counter4",
                "local_1c": "mask",
                "local_10": "counter5",
                "local_28": "increment",
                "local_20": "counter6"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_peripheral_08006e68",
            "code": "\n\n\nvoid initializePeripheral_08006e68(undefined4 peripheral)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  uint flag;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  result = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(peripheral);\n  shiftedValue = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value2 = 2;\n  value3 = 0;\n  value4 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(result << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  flag = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(shiftedValue,&flag);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_peripheral_08006e68",
                "param_1": "peripheral",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "local_20": "flag",
                "local_1c": "value2",
                "local_18": "value3",
                "local_14": "value4"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_application_08007110",
            "code": "\nvoid initialize_application_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_application_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "extract_and_process_data_08007118",
            "code": "\nvoid extract_and_process_data_08007118(undefined4 data_offset,uint divisor,int increment,undefined4 param_value,char flag)\n\n{\n  uint data_size;\n  int result;\n  int process_result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int data_pointer;\n  int modified_size;\n  undefined4 var8;\n  int var9;\n  undefined4 var10;\n  undefined4 var11;\n  undefined var12;\n  \n  FUN_080091c6(&data_pointer,0,0x40);\n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  data_pointer = FUN_08007320(data_offset,&DAT_0800a6cc);\n  if (data_pointer != 0) {\n    data_size = FUN_080075dc();\n    modified_size = data_size / divisor - 1;\n    var9 = increment + -1;\n    var10 = 0;\n    var8 = 0;\n    var11 = 0;\n    var12 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)data_offset;\n      result = FUN_08006092(&data_pointer);\n      if (result != 0) {\n        return;\n      }\n    }\n    result = FUN_08006c7c(data_offset);\n    if ((((result == 0) || (result == 4)) || (result == 8)) || ((result == 0xc || (result == 0x18)))) {\n      var1 = 0x60;\n      var3 = 0;\n      var5 = 0;\n      var4 = 0;\n      var7 = 0;\n      var6 = 0;\n      var2 = param_value;\n      process_result = FUN_08006186(&data_pointer,&var1,result);\n      if (process_result == 0) {\n        data_size = FUN_08007376(data_offset,&DAT_0800a6cc);\n        if ((data_size & 0x100000) == 0) {\n          FUN_08006390(&data_pointer,result);\n        }\n        else {\n          FUN_0800643c(&data_pointer,result);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "extract_and_process_data_08007118",
                "param_1": "data_offset",
                "param_2": "divisor",
                "param_3": "increment",
                "param_4": "param_value",
                "param_5": "flag",
                "uVar1": "data_size",
                "iVar2": "result",
                "iVar3": "process_result",
                "local_74": "var1",
                "local_70": "var2",
                "local_6c": "var3",
                "local_68": "var4",
                "local_64": "var5",
                "local_60": "var6",
                "local_5c": "var7",
                "local_58": "data_pointer",
                "local_54": "modified_size",
                "local_50": "var8",
                "local_4c": "var9",
                "local_48": "var10",
                "local_44": "var11",
                "local_1b": "var12"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320",
                "FUN_08006186"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 inputData)\n\n{\n  int result;\n  uint flag;\n  int dataArray [17];\n  \n  dataArray[0] = FUN_08007320(inputData,&DAT_0800a6cc);\n  if ((dataArray[0] != 0) &&\n     ((((result = FUN_08006c7c(inputData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_08007376(inputData,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(dataArray,result);\n    }\n    else {\n      FUN_08006460(dataArray,result);\n    }\n    FUN_08005e2e(dataArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "flag",
                "local_50": "dataArray"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "execute_initialization_0800723c",
            "code": "\nvoid execute_initialization_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "execute_initialization_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "execute_function_08007246",
            "code": "\nvoid execute_function_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "execute_function_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_function_08007258",
            "code": "\n\n\nvoid initializeFunction_08007258(uint inputValue,undefined4 param,undefined4 param3)\n\n{\n  undefined4 result;\n  uint bitmask;\n  undefined4 localParam1;\n  undefined4 localParam2;\n  undefined4 localVariable;\n  \n  result = FUN_08006bb8((inputValue << 0x18) >> 0x1c);\n  bitmask = 1 << (inputValue & 0xf) & 0xffff;\n  localVariable = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((inputValue - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((inputValue == 0xf) || (inputValue == 0x13)) || (inputValue == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localParam1 = param;\n  localParam2 = param3;\n  FUN_080040e8(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_function_08007258",
                "param_1": "inputValue",
                "param_2": "param",
                "param_3": "param3",
                "uVar1": "result",
                "local_20": "bitmask",
                "local_1c": "localParam1",
                "local_18": "localParam2",
                "local_14": "localVariable"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "perform_operation_based_on_param_080072d8",
            "code": "\nvoid performOperationBasedOnParam_080072d8(undefined4 input1,undefined2 input2,int condition,undefined4 additionalParam)\n\n{\n  if (condition == 0) {\n    FUN_080042e2(input1,input2,0,additionalParam,additionalParam);\n    return;\n  }\n  FUN_080042e2(input1,input2,1,additionalParam,additionalParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "perform_operation_based_on_param_080072d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition",
                "param_4": "additionalParam"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "initialize_data_080072f0",
            "code": "\nvoid initializeData_080072f0(undefined4 data1,undefined2 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_080042d4(data1,data2,data3,data4,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "initialize_data_080072f0",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_application_080072fa",
            "code": "\nvoid initialize_application_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_application_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_08007306",
            "code": "\nundefined4 find_value_08007306(int value_to_find,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0;\n    }\n    if (*data_array == value_to_find) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_08007306",
                "param_1": "value_to_find",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_return_value_08007320",
            "code": "\nundefined4 checkReturnValue_08007320(int input)\n\n{\n  undefined4 returnValue;\n  \n  if (input != -1) {\n    returnValue = FUN_08007306();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_return_value_08007320",
                "param_1": "input",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_value_in_list_08007332",
            "code": "\nint find_value_in_list_08007332(int value_to_find,char *list_ptr)\n\n{\n  while( true ) {\n    if (*(int *)(list_ptr + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(list_ptr + 4) == value_to_find) break;\n    list_ptr = list_ptr + 0xc;\n  }\n  return (int)*list_ptr;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_value_in_list_08007332",
                "param_1": "value_to_find",
                "param_2": "list_ptr"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_param_0800734a",
            "code": "\nundefined4 check_param_0800734a(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_param_0800734a",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_offset_0800735a",
            "code": "\nundefined4 find_value_offset_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_offset_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_param_08007376",
            "code": "\nundefined4 checkParam_08007376(int input)\n\n{\n  undefined4 result;\n  \n  if (input == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_param_08007376",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "is_param_in_array_0800738a",
            "code": "\nundefined4 is_param_in_array_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "is_param_in_array_0800738a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_zero_080073ae",
            "code": "\nint compare_and_return_zero_080073ae(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_zero_080073ae",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_function_080073c0",
            "code": "\nvoid executeCallbackFunction_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_device_080073ec",
            "code": "\n\n\nvoid initializeDevice_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_device_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_data_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateData_08007438(int *data)\n\n{\n  if (*data == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = data;\n  }\n  if (*data == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = data;\n  }\n  if (*data == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = data;\n  }\n  if (*data == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = data;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_data_08007438",
                "param_1": "data"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_memory_flags_080074e0",
            "code": "\n\n\nvoid updateMemoryFlags_080074e0(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_memory_flags_080074e0",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_ir_qn_08007544",
            "code": "\nundefined4 getTimerIRQn_08007544(uint irqNumber)\n\n{\n  if (irqNumber == 0xffffffff) {\n    return 0;\n  }\n  if (irqNumber == 0x40000400) {\n    return 0x1d;\n  }\n  if (irqNumber < 0x40000401) {\n    if (irqNumber == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (irqNumber == 0x40000800) {\n      return 0x1e;\n    }\n    if (irqNumber == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "param_1": "irqNumber"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "calculate_clock_factor_080075dc",
            "code": "\nint calculateClockFactor_080075dc(undefined4 inputValue)\n\n{\n  uint clockFactor1;\n  int result;\n  uint clockFactor2;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  undefined4 variable4;\n  uint variable5;\n  uint variable6;\n  \n  variable2 = 0;\n  variable3 = 0;\n  variable4 = 0;\n  variable5 = 0;\n  variable6 = 0;\n  variable1 = 0;\n  FUN_08005a68(&variable2,&variable1);\n  result = FUN_08007594(inputValue);\n  clockFactor1 = variable6;\n  clockFactor2 = variable5;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    clockFactor2 = clockFactor1;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    clockFactor2 = 0;\n  }\n  if (clockFactor2 != 0x500) {\n    if (clockFactor2 < 0x501) {\n      if (clockFactor2 != 0x400) {\n        return result;\n      }\n    }\n    else if ((clockFactor2 != 0x600) && (clockFactor2 != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "calculate_clock_factor_080075dc",
                "param_1": "inputValue",
                "uVar1": "clockFactor1",
                "iVar2": "result",
                "uVar3": "clockFactor2",
                "local_20": "variable1",
                "local_1c": "variable2",
                "local_18": "variable3",
                "local_14": "variable4",
                "local_10": "variable5",
                "local_c": "variable6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_parameters_08007648",
            "code": "\nvoid initializeParameters_08007648(undefined4 *parameters,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char charValue;\n  uint result;\n  int result2;\n  undefined4 *incrementedParameters;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  undefined4 localVariable4;\n  undefined4 localVariable5;\n  undefined4 localVariable6;\n  undefined4 localVariable7;\n  \n  localVariable1 = 0;\n  localVariable2 = 0;\n  localVariable3 = 0;\n  localVariable4 = 0;\n  localVariable5 = 0;\n  localVariable6 = 0;\n  localVariable7 = 0;\n  incrementedParameters = parameters + 1;\n  *parameters = 0x40000000;\n  parameters[1] = 0x40000000;\n  parameters[4] = value1;\n  result = FUN_080075dc();\n  parameters[2] = result / 1000000 - 1;\n  parameters[5] = 0;\n  parameters[3] = 0;\n  parameters[6] = 0;\n  parameters[0x13] = value3;\n  localVariable1 = 0;\n  localVariable3 = 0;\n  localVariable5 = 0;\n  localVariable4 = 0;\n  localVariable6 = 0;\n  localVariable7 = 0;\n  localVariable2 = value2;\n  charValue = FUN_08007544(*parameters);\n  FUN_08003f30((int)charValue,0xe,0);\n  charValue = FUN_08007544(*parameters);\n  FUN_08003f94((int)charValue);\n  result2 = FUN_08006060(incrementedParameters);\n  if ((result2 == 0) && (result2 = FUN_08006128(incrementedParameters,&localVariable1,0), result2 == 0)) {\n    FUN_08006280(incrementedParameters,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_parameters_08007648",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "charValue",
                "uVar2": "result",
                "iVar3": "result2",
                "puVar4": "incrementedParameters",
                "local_34": "localVariable1",
                "local_30": "localVariable2",
                "local_2c": "localVariable3",
                "local_28": "localVariable4",
                "local_24": "localVariable5",
                "local_20": "localVariable6",
                "local_1c": "localVariable7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *data)\n\n{\n  char character;\n  int result;\n  \n  data[0x13] = 0;\n  character = FUN_08007544(*data);\n  FUN_08003fb0((int)character);\n  result = FUN_08005df4(data + 1);\n  if (result == 0) {\n    FUN_080062f4(data + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "data",
                "cVar1": "character",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_program_08007708",
            "code": "\nvoid initializeProgram_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_program_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "FUNC_08007710",
            "code": "\nvoid FUNC_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "FUNC_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtractFour_08007718(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_callback_if_needed_0800771c",
            "code": "\nvoid executeCallbackIfNeeded_0800771c(int callbackParameter)\n\n{\n  int funcPointer;\n  \n  funcPointer = FUN_08007718();\n  if ((*(code **)(funcPointer + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(funcPointer + 0x4c))(funcPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_callback_if_needed_0800771c",
                "param_1": "callbackParameter",
                "iVar1": "funcPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_function_08007736",
            "code": "\nvoid executeFunction_08007736(void)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007718();\n  if (*(functionType **)(functionPointer + 0x48) != (functionType *)0x0) {\n    (**(functionType **)(functionPointer + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_function_08007736",
                "iVar1": "functionPointer",
                "code": "functionType"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_pointer_value_08007744",
            "code": "\nundefined4 getPointerValue_08007744(int inputPointer)\n\n{\n  return *(undefined4 *)(*(int *)(inputPointer + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_pointer_value_08007744",
                "param_1": "inputPointer"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "update_pointer_value_0800774a",
            "code": "\nvoid updatePointerValue_0800774a(int ptrToData,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(ptrToData + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "update_pointer_value_0800774a",
                "param_1": "ptrToData",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "store_param_value_08007750",
            "code": "\nvoid storeParamValue_08007750(int ptrToStruct,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(ptrToStruct + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "store_param_value_08007750",
                "param_1": "ptrToStruct",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *pinConfig,int param2,int param3,int param4,undefined param5)\n\n{\n  int peripheralPin1;\n  int peripheralPin2;\n  undefined4 pinValue;\n  uint tempVar1;\n  uint tempVar2;\n  int *nextPinConfig;\n  uint pinMask;\n  uint localVar1;\n  uint localVar2;\n  undefined4 localVar3;\n  \n  if (pinConfig != (int *)0x0) {\n    nextPinConfig = pinConfig + 1;\n    peripheralPin1 = FUN_08007320((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n    peripheralPin2 = FUN_08007320((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n    if ((peripheralPin1 == 0) || (peripheralPin2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheralPin1 = FUN_080073ae(peripheralPin1,peripheralPin2);\n      *pinConfig = peripheralPin1;\n      if (peripheralPin1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheralPin1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x1f;\n          *(undefined *)((int)pinConfig + 0x5b) = 0x20;\n          DAT_20000668 = nextPinConfig;\n        }\n        if (*pinConfig == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x21;\n          *(undefined *)((int)pinConfig + 0x5b) = 0x22;\n          DAT_2000066c = nextPinConfig;\n        }\n        pinValue = FUN_08006bb8((uint)((int)*(char *)((int)pinConfig + 0x59) << 0x18) >> 0x1c);\n        pinMask = 1 << ((int)*(char *)((int)pinConfig + 0x59) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        tempVar2 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        localVar1 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        localVar3 = 3;\n        peripheralPin1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        localVar2 = (uint)(peripheralPin1 << 0x1a) >> 0x1e;\n        peripheralPin1 = FUN_08007376((int)*(char *)((int)pinConfig + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(peripheralPin1 << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(pinValue,&pinMask,tempVar1,tempVar2);\n        pinValue = FUN_08006bb8((uint)((int)*(char *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        pinMask = 1 << ((int)*(char *)(pinConfig + 0x16) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        tempVar2 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        localVar1 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        localVar3 = 3;\n        peripheralPin1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        localVar2 = (uint)(peripheralPin1 << 0x1a) >> 0x1e;\n        peripheralPin1 = FUN_08007376((int)*(char *)(pinConfig + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(peripheralPin1 << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(pinValue,&pinMask,tempVar1,tempVar2);\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = param2;\n        pinConfig[3] = 0;\n        pinConfig[4] = param4;\n        pinConfig[7] = 0xff;\n        pinConfig[5] = param3;\n        pinConfig[6] = 0;\n        pinConfig[8] = 0;\n        pinConfig[9] = 0;\n        *(undefined *)((int)pinConfig + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)pinConfig + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)pinConfig + 0x5a));\n        FUN_08003f30((int)*(char *)((int)pinConfig + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)pinConfig + 0x5b));\n        FUN_080045c0(nextPinConfig);\n        *(undefined *)((int)pinConfig + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "pinConfig",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "peripheralPin1",
                "iVar2": "peripheralPin2",
                "uVar3": "pinValue",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "piVar6": "nextPinConfig",
                "local_38": "pinMask",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "check_condition_08007e74",
            "code": "\nint checkCondition_08007e74(int inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int functionResult;\n  uint difference;\n  int status;\n  int tempValue;\n  undefined4 param4Copy;\n  \n  param4Copy = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempValue = inputValue + 4;\n    functionResult = FUN_08004728(tempValue,param2,param3,param4,param4Copy);\n    if (functionResult == 0) {\n      status = 0;\n      while ((functionResult = FUN_0800542a(tempValue), functionResult != 0x20 && (status == 0))) {\n        functionResult = FUN_08003760();\n        difference = functionResult - initialValue;\n        if (difference < 0x65) {\n          functionResult = FUN_08005430(tempValue);\n          if (functionResult != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    functionResult = FUN_08005430(tempValue);\n  } while ((functionResult == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "check_condition_08007e74",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "functionResult",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempValue",
                "uVar6": "param4Copy"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_to_dest_08007ede",
            "code": "\nundefined4 copy_data_to_dest_08007ede(int dest_address,int src_address,uint data_length)\n\n{\n  uint i;\n  \n  if (0x20 < data_length) {\n    return 2;\n  }\n  for (i = 0; i < data_length; i = i + 1 & 0xff) {\n    *(undefined *)(dest_address + i + 0x68) = *(undefined *)(src_address + i);\n    *(char *)(dest_address + 0x88) = *(char *)(dest_address + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_to_dest_08007ede",
                "param_1": "dest_address",
                "param_2": "src_address",
                "param_3": "data_length",
                "uVar1": "i"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "process_data_08007f0e",
            "code": "\nint processData_08007f0e(int input,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initialValue;\n  int result;\n  uint counter;\n  int status;\n  int temp;\n  undefined4 tempValue;\n  \n  tempValue = param3;\n  initialValue = FUN_08003760();\n  counter = 0;\n  status = 2;\n  do {\n    temp = input + 4;\n    result = FUN_080047f4(temp,param1,param2,param3,tempValue);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(temp), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        counter = result - initialValue;\n        if (counter < 0x65) {\n          result = FUN_08005430(temp);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp);\n  } while ((result == 4) && (counter < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "process_data_08007f0e",
                "param_1": "input",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "counter",
                "iVar4": "status",
                "iVar5": "temp",
                "uVar6": "tempValue"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtractFour_08007f78(int inputNum)\n\n{\n  return inputNum + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "inputNum"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_08007f7c",
            "code": "\nvoid updateData_08007f7c(int dataPointer,int newValue)\n\n{\n  if (dataPointer != 0) {\n    if (newValue != 0) {\n      *(int *)(dataPointer + 0x60) = newValue;\n      FUN_080049e0(dataPointer + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_08007f7c",
                "param_1": "dataPointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid updateParamAndCallFunction_08007f8e(int param1,int param2)\n\n{\n  if (param1 != 0) {\n    if (param2 != 0) {\n      *(int *)(param1 + 100) = param2;\n      FUN_080049e0(param1 + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_params_08007fa0",
            "code": "\nvoid processParams_08007fa0(int inputParam1,int inputParam2,int inputParam3,undefined4 inputParam4)\n\n{\n  int tempVar1;\n  \n  tempVar1 = FUN_08007f78();\n  if (inputParam3 == *(int *)(inputParam1 + 0xc)) {\n    if (inputParam2 == 0) {\n      *(undefined *)(tempVar1 + 0x88) = 0;\n      *(undefined *)(tempVar1 + 0x5c) = 0;\n      if (*(code **)(tempVar1 + 100) != (code *)0x0) {\n        (**(code **)(tempVar1 + 100))();\n      }\n      FUN_080048c8(inputParam1,tempVar1 + 0x68,*(undefined *)(tempVar1 + 0x88),8);\n      return;\n    }\n    *(undefined *)(tempVar1 + 0x5c) = 1;\n    FUN_08004954(inputParam1,tempVar1 + 0x68,0x20,8,inputParam4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "tempVar1"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_08007ff0",
            "code": "\nvoid executeFunction_08007ff0(undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (((*(functionPointer **)(result + 0x60) != (functionPointer *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(functionPointer **)(result + 0x60))(result + 0x68);\n  }\n  FUN_080049e0(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_08007ff0",
                "param_1": "param",
                "iVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_execute_function_08008020",
            "code": "\nvoid checkAndExecuteFunction_08008020(undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (*(char *)(returnValue + 0x5d) == '\\0') {\n    FUN_080049e0(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_execute_function_08008020",
                "param_1": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_08008078",
            "code": "\n\n\nvoid initializeUART_08008078(int *uartConfig)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 uartConfigValue;\n  uint uartConfigValue2;\n  uint pinMask;\n  uint shiftedValue;\n  uint shiftedValue2;\n  undefined4 tempValue;\n  \n  if (uartConfig != (int *)0x0) {\n    uartPin1 = FUN_08007320((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n    uartPin2 = FUN_08007320((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_080073ae(uartPin1);\n      *uartConfig = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x27;\n        }\n        uartConfigValue = FUN_08006bb8((uint)((int)*(char *)((int)uartConfig + 0x59) << 0x18) >> 0x1c);\n        uartConfigValue2 = FUN_08007376((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n        pinMask = 1 << (*(byte *)((int)uartConfig + 0x59) & 0xf) & 0xffff;\n        shiftedValue = (uartConfigValue2 >> 3 & 1) << 4 | uartConfigValue2 & 7;\n        shiftedValue2 = (uartConfigValue2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartConfigValue2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        tempValue = 3;\n        FUN_080040e8(uartConfigValue,&pinMask);\n        uartConfigValue = FUN_08006bb8((uint)((int)*(char *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        uartConfigValue2 = FUN_08007376((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n        pinMask = 1 << (*(byte *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        shiftedValue = (uartConfigValue2 >> 3 & 1) << 4 | uartConfigValue2 & 7;\n        shiftedValue2 = (uartConfigValue2 << 0x1a) >> 0x1e;\n        FUN_080040e8(uartConfigValue,&pinMask);\n        (&DAT_200006c0)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_0800674e(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_08008078",
                "param_1": "uartConfig",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "uartConfigValue",
                "uVar4": "uartConfigValue2",
                "local_20": "pinMask",
                "local_1c": "shiftedValue",
                "local_18": "shiftedValue2",
                "local_14": "tempValue"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 errorCode;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    errorCode = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(errorCode,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "errorCode"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "process_data_08008500",
            "code": "\nuint processData_08008500(undefined4 inputPointer,uint inputValue)\n\n{\n  int startTime;\n  int result;\n  uint index;\n  \n  startTime = FUN_08003760();\n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (result = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    result = FUN_080067ac((&DAT_200006c0)[index],inputPointer,inputValue & 0xffff,1000);\n    if (result == 0) {\n      return inputValue;\n    }\n    result = FUN_08003760();\n  } while ((uint)(result - startTime) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "process_data_08008500",
                "param_1": "inputPointer",
                "param_2": "inputValue",
                "iVar1": "startTime",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_flag_set_080085b8",
            "code": "\nbool isFlagSet_080085b8(int flagValue)\n\n{\n  uint flagCheckResult;\n  \n  flagCheckResult = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flagValue + 0x44)]);\n  return (flagCheckResult & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "flagValue",
                "uVar1": "flagCheckResult"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_condition_met_080085dc",
            "code": "\nbool isConditionMet_080085dc(int input)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_condition_met_080085dc",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_data_from_binary_08008600",
            "code": "\nundefined4 extract_data_from_binary_08008600(int binary_data_addr,undefined *extracted_data,undefined4 constant_1,undefined4 constant_2)\n\n{\n  int result;\n  \n  if (binary_data_addr == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *extracted_data = *(undefined *)(binary_data_addr + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(binary_data_addr + 0x44)],binary_data_addr + 0x45,1,&DAT_200006c0,constant_2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_data_from_binary_08008600",
                "param_1": "binary_data_addr",
                "param_2": "extracted_data",
                "param_3": "constant_1",
                "param_4": "constant_2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int data,undefined4 value,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = value;\n      *(int *)(&DAT_20000684 + index * 4) = data;\n      FUN_08003f30((int)*(char *)(data + 0x5a),0,1,index,unused2);\n      FUN_08003f94((int)*(char *)(data + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "data",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int dataPointer,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPointer != 0) {\n    byteValue = *(byte *)(dataPointer + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = dataPointer;\n    FUN_08003f30((int)*(char *)(dataPointer + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(dataPointer + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "lookup_value_080086e8",
            "code": "\nuint lookupValue_080086e8(int value)\n\n{\n  uint result;\n  \n  if (value == 0) {\n    result = 5;\n  }\n  else {\n    result = 0;\n    while( true ) {\n      if (4 < result) {\n        return result;\n      }\n      if (value == (&DAT_200006c0)[result]) break;\n      result = result + 1 & 0xff;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "lookup_value_080086e8",
                "param_1": "value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_selected_function_0800870c",
            "code": "\nvoid executeSelectedFunction_0800870c(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_080086e8();\n  if (returnValue < 5) {\n    (**(code **)(&DAT_20000670 + returnValue * 4))(*(undefined4 *)(&DAT_20000684 + returnValue * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_selected_function_0800870c",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int pointer;\n  \n  randomIndex = FUN_080086e8();\n  pointer = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (returnValue = (**(code **)(&DAT_20000698 + randomIndex * 4))(pointer), returnValue != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(pointer + 0x44)],\n                 *(int *)(pointer + 100) + (uint)*(ushort *)(pointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "pointer"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackPointer) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackPointer"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_default_value_08008840",
            "code": "\nuint32_t get_default_value_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_default_value_08008840",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "initialize_memory_08008846",
            "code": "\nundefined4 initializeMemory_08008846(undefined4 baseAddress,int buffer)\n\n{\n  *(undefined4 *)(buffer + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "baseAddress",
                "param_2": "buffer"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_program_08008850",
            "code": "\nundefined4 initializeProgram_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_program_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_program_08008854",
            "code": "\nundefined4 initializeProgram_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_program_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_08008858",
            "code": "\nvoid initialize_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_08008858",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_0800885c",
            "code": "\nvoid initialize_0800885c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08008500(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_0800885c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "initialize_application_0800887c",
            "code": "\nundefined4 initializeApplication_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "initialize_application_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "calculate_shifted_value_08008880",
            "code": "\nuint calculate_shifted_value_08008880(uint input_value)\n\n{\n  bool is_input_valid;\n  char result_char;\n  uint shifted_value;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_input_valid = true;\n    }\n    else {\n      is_input_valid = false;\n    }\n  }\n  else {\n    is_input_valid = input_value < 0x3c;\n  }\n  if (is_input_valid) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    result_char = (&DAT_0800a908)[input_value];\n  }\n  else {\n    result_char = -1;\n  }\n  if (result_char == -1) {\n    shifted_value = 0;\n  }\n  else {\n    shifted_value = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return shifted_value >> (0xc - DAT_20000088 & 0xff);\n      }\n      return shifted_value << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_08008880": "calculate_shifted_value_08008880",
                "param_1": "input_value",
                "bVar1": "is_input_valid",
                "cVar2": "result_char",
                "uVar3": "shifted_value"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint index,uint data)\n\n{\n  int result;\n  int lookupIndex;\n  \n  if (index < 0x3c) {\n    lookupIndex = (int)(char)(&DAT_0800a908)[index];\n  }\n  else {\n    lookupIndex = -1;\n  }\n  if (lookupIndex != -1) {\n    result = FUN_0800738a(lookupIndex,&DAT_0800a6cc);\n    if (result == 0) {\n      FUN_08008990(index,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          data = data << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          data = data >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (data < 0x80) {\n        FUN_08008a24(index,0);\n      }\n      else {\n        FUN_08008a24(index,1);\n      }\n    }\n    else {\n      result = FUN_08006b28(lookupIndex,&DAT_200006d8);\n      if (result == 0) {\n        FUN_08006b3e(lookupIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          data = data << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          data = data >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(lookupIndex,0x3e418,0xff,data,result == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "index",
                "param_2": "data",
                "iVar1": "result",
                "iVar2": "lookupIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "execute_function_08008990",
            "code": "\nvoid executeFunction_08008990(uint index,undefined4 option,undefined4 value,undefined1 *data)\n\n{\n  int result;\n  undefined1 *arrayPointer;\n  int selectedValue;\n  \n  if (index < 0x3c) {\n    selectedValue = (int)(char)(&DAT_0800a908)[index];\n    arrayPointer = &DAT_0800a908;\n  }\n  else {\n    selectedValue = -1;\n    arrayPointer = data;\n  }\n  if (selectedValue != -1) {\n    result = FUN_08006b28(selectedValue,&DAT_200006d8,value,arrayPointer,data);\n    if (result != 0) {\n      result = FUN_0800738a(selectedValue,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(selectedValue);\n      }\n      FUN_08006b5c(selectedValue,&DAT_200006d8);\n    }\n    switch(option) {\n    case 0:\n      FUN_08007258(selectedValue,0);\n      break;\n    case 1:\n      FUN_08007258(selectedValue,1,0);\n      break;\n    case 2:\n      FUN_08007258(selectedValue,0,1);\n      break;\n    case 3:\n      FUN_08007258(selectedValue,0,2);\n    }\n    FUN_08006b3e(selectedValue,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "execute_function_08008990",
                "param_1": "index",
                "param_2": "option",
                "param_3": "value",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "arrayPointer",
                "iVar3": "selectedValue"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "decode_and_process_data_08008a24",
            "code": "\nvoid decode_and_process_data_08008a24(uint input_index,undefined4 param2,undefined4 param3,undefined1 *buffer)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined1 *data_ptr;\n  uint value;\n  \n  if (input_index < 0x3c) {\n    value = (uint)(char)(&DAT_0800a908)[input_index];\n    data_ptr = &DAT_0800a908;\n  }\n  else {\n    value = 0xffffffff;\n    data_ptr = buffer;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08006b28(value,&DAT_200006ec,param3,data_ptr,buffer), result != 0)) {\n    shifted_value = FUN_08006b7c((value << 0x18) >> 0x1c);\n    FUN_080072d8(shifted_value,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "decode_and_process_data_08008a24",
                "param_1": "input_index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "buffer",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "data_ptr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_parameter_08008a6c",
            "code": "\nchar checkParameter_08008a6c(uint parameter)\n\n{\n  char result;\n  int checkResult;\n  undefined4 shiftedValue;\n  uint lookupValue;\n  \n  if (parameter < 0x3c) {\n    lookupValue = (uint)(char)(&DAT_0800a908)[parameter];\n  }\n  else {\n    lookupValue = 0xffffffff;\n  }\n  if (lookupValue == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    checkResult = FUN_08006b28(lookupValue,&DAT_200006ec);\n    if (checkResult == 0) {\n      result = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((lookupValue << 0x18) >> 0x1c);\n      result = FUN_080072f0(shiftedValue,1 << (lookupValue & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_parameter_08008a6c",
                "param_1": "parameter",
                "cVar1": "result",
                "iVar2": "checkResult",
                "uVar3": "shiftedValue",
                "uVar4": "lookupValue"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_application_08008abc",
            "code": "\nvoid initialize_application_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_application_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_checksum_08008afa",
            "code": "\nushort calculate_checksum_08008afa(int data_start_address)\n\n{\n  checksum_result (*(short *)(data_start_address + 0x134) + 0x40) - *(short *)(data_start_address + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_checksum_08008afa",
                "param_1": "data_start_address",
                "return": "checksum_result"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int inputData)\n\n{\n  int status;\n  ushort newIndex;\n  undefined newValue;\n  \n  status = FUN_08008600(inputData,&newValue);\n  if ((status == 0) &&\n     (newIndex = *(short *)(inputData + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(inputData + 0x62))) {\n    *(undefined *)(*(int *)(inputData + 0x5c) + (uint)*(ushort *)(inputData + 0x60)) = newValue;\n    *(ushort *)(inputData + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "inputData",
                "iVar1": "status",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_parameters_08008c20",
            "code": "\nvoid initializeParameters_08008c20(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_parameters_08008c20",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "initialize_hardware_serial_08008c44",
            "code": "\nvoid initializeHardwareSerial_08008c44(int instance,undefined4 param,byte flags)\n\n{\n  uint result;\n  byte flag;\n  int option;\n  code *jumpTable;\n  \n  *(undefined4 *)(instance + 0x11c) = param;\n  *(byte *)(instance + 0x140) = flags;\n  flag = flags & 7;\n  if (flag == 4) {\n    option = 7;\n  }\n  else if (flag == 6) {\n    option = 8;\n  }\n  else if (flag == 2) {\n    option = 6;\n  }\n  else {\n    option = 0;\n  }\n  if ((flags & 0x30) == 0x30) {\n    *(undefined4 *)(instance + 0x128) = 0x600;\n    option = option + 1;\n  }\n  else if ((flags & 0x20) == 0) {\n    *(undefined4 *)(instance + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(instance + 0x128) = 0x400;\n    option = option + 1;\n  }\n  if ((flags & 8) == 0) {\n    *(undefined4 *)(instance + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(instance + 0x124) = 0x2000;\n  }\n  if (option == 8) {\n    *(undefined4 *)(instance + 0x120) = 0;\n  }\n  else if (option == 9) {\n    *(undefined4 *)(instance + 0x120) = 0x1000;\n  }\n  else {\n    option = 0;\n  }\n  if (option != 0) {\n    FUN_08008078(instance + 0xd4);\n    FUN_0800863c(instance + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (result < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[result];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,result,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "initialize_hardware_serial_08008c44",
                "param_1": "instance",
                "param_2": "param",
                "param_3": "flags",
                "extraout_r1": "result",
                "bVar1": "flag",
                "iVar2": "option",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_byte_value_and_jump_08008d00",
            "code": "\nvoid setByteValueAndJump_08008d00(int baseAddress,uint index)\n\n{\n  undefined byteValue;\n  code *jumpTableFunction;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_byte_value_and_jump_08008d00",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunction"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int baseAddress,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_parameters_08008d30",
            "code": "\nundefined4 *\ninitializeParameters_08008d30(undefined4 *parameters,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_08008ba4_1_0800aab8;\n  if (parameters == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,input2,&DAT_20000700,input3);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(input1,&DAT_0800a81c);\n    *(undefined *)((int)parameters + 0x12d) = result;\n    result = FUN_0800734a(input1,&DAT_0800a864);\n    *(undefined *)(parameters + 0x4b) = result;\n  }\n  FUN_08008c20(parameters);\n  return parameters;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_parameters_08008d30",
                "param_1": "parameters",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_and_execute_08008d8c",
            "code": "\nvoid check_and_execute_08008d8c(int flag,int value,undefined4 data1,undefined4 data2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,data1,0xffff,data2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_and_execute_08008d8c",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *outputData,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *outputData = &DAT_0800ab0c;\n  *(undefined *)(outputData + 1) = value1;\n  *(undefined *)((int)outputData + 5) = value2;\n  *(undefined *)((int)outputData + 6) = value3;\n  *(undefined *)((int)outputData + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "outputData",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_parameters_08008e14",
            "code": "\nvoid checkParameters_08008e14(int input1,int input2)\n\n{\n  if ((input1 == 1) && (input2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_parameters_08008e14",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolated_value_08008ef4",
            "code": "\nint calculate_interpolated_value_08008ef4(int start_value_1,int start_value_2,int end_value_2,int start_interpolated_value,int end_interpolated_value)\n\n{\n  return (uint)((end_interpolated_value - start_interpolated_value) * (start_value_1 - start_value_2)) / (uint)(end_value_2 - start_value_2) + start_interpolated_value;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolated_value_08008ef4",
                "param_1": "start_value_1",
                "param_2": "start_value_2",
                "param_3": "end_value_2",
                "param_4": "start_interpolated_value",
                "param_5": "end_interpolated_value"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initializeApplication_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "run_infinite_loop_08008f1c",
            "code": "\nvoid run_infinite_loop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "run_infinite_loop_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_bits_08008f3c",
            "code": "\nchar count_bits_08008f3c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_bits_08008f3c",
                "param_1": "number",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_settings_08008f78",
            "code": "\nvoid initializeSettings_08008f78(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_settings_08008f78",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_function_if_not_null_08009084",
            "code": "\nvoid executeFunctionIfNotNull_08009084(int functionPointer)\n\n{\n  int index;\n  \n  if (*(int *)(functionPointer + 8) != 0) {\n    (**(code **)(functionPointer + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeFunctionIfNotNull_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_function_if_not_null_08009084",
                "param_1": "functionPointer",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_function_08009094",
            "code": "\nvoid checkAndExecuteFunction_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "execute_function_080090c2",
            "code": "\nvoid executeFunction_080090c2(undefined4 input1,undefined4 input2)\n\n{\n  FUN_08009108(input2,input1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "execute_function_080090c2",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "print_assertion_failure_080090cc",
            "code": "\nvoid printAssertionFailure_080090cc(undefined4 file,undefined4 lineNum,char *expression,undefined4 function)\n\n{\n  undefined4 assertionFlag;\n  char *additionalInfo;\n  undefined8 timestamp;\n  undefined4 endOfString;\n  \n  assertionFlag = *(undefined4 *)(DAT_20000090 + 0xc);\n  endOfString = function;\n  if (expression == (char *)0x0) goto LAB_080090f0;\n  additionalInfo = \", function: \";\n  do {\n    FUN_08009124(assertionFlag,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,lineNum\n                 ,additionalInfo,expression,endOfString);\n    timestamp = FUN_08009b5c();\n    lineNum = (undefined4)((ulonglong)timestamp >> 0x20);\n    assertionFlag = (undefined4)timestamp;\nLAB_080090f0:\n    expression = \"\";\n    additionalInfo = expression;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "print_assertion_failure_080090cc",
                "param_1": "file",
                "param_2": "lineNum",
                "param_3": "expression",
                "param_4": "function",
                "uVar1": "assertionFlag",
                "pcVar2": "additionalInfo",
                "uVar3": "timestamp",
                "uVar4": "endOfString"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_unsigned_int64_left_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftUnsignedInt64Left_08009108(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_unsigned_int64_left_08009108",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "execute_function_08009124",
            "code": "\nvoid executeFunction_08009124(undefined4 input1,undefined4 input2,undefined4 stackValue1,undefined4 stackValue2)\n\n{\n  undefined4 stackValue3;\n  undefined4 stackValue4;\n  \n  stackValue3 = stackValue1;\n  stackValue4 = stackValue2;\n  FUN_0800937c(DAT_20000090,input1,input2,&stackValue3,input1,&stackValue3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "execute_function_08009124",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "stackValue1",
                "param_4": "stackValue2",
                "uStack_8": "stackValue3",
                "uStack_4": "stackValue4"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_function_array_08009148",
            "code": "\nvoid executeFunctionArray_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_function_array_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 data)\n\n{\n  FUN_08009270(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_array_080091b0",
            "code": "\nvoid copyArray_080091b0(int arrayAddress,undefined *sourceArray,int arraySize)\n\n{\n  undefined *destArray;\n  undefined *currentIndex;\n  \n  currentIndex = (undefined *)(arrayAddress + -1);\n  destArray = sourceArray + arraySize;\n  for (; sourceArray != destArray; sourceArray = sourceArray + 1) {\n    currentIndex = currentIndex + 1;\n    *currentIndex = *sourceArray;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_array_080091b0",
                "param_1": "arrayAddress",
                "param_2": "sourceArray",
                "param_3": "arraySize",
                "puVar1": "destArray",
                "puVar2": "currentIndex"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_080091c6",
            "code": "\nvoid fillMemory_080091c6(undefined *destination,undefined value,int length)\n\n{\n  undefined *end;\n  \n  end = destination + length;\n  for (; destination != end; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "end"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "process_data_080091d8",
            "code": "\nvoid processData_080091d8(undefined4 *outputArray,int arraySize,undefined4 var1,undefined4 var2)\n\n{\n  int **tmpVar;\n  int **ptrVar1;\n  int **ptrVar2;\n  int *intPtrVar;\n  int **ptrVar3;\n  int **ptrVar4;\n  \n  if (arraySize == 0) {\n    return;\n  }\n  ptrVar4 = (int **)(arraySize + -4);\n  if (*(int *)(arraySize + -4) < 0) {\n    ptrVar4 = (int **)((int)ptrVar4 + *(int *)(arraySize + -4));\n  }\n  FUNC_08009f48();\n  ptrVar2 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    ptrVar4[1] = (int *)0x0;\n    ptrVar1 = tmpVar;\n    DAT_2000098c = ptrVar4;\n  }\n  else {\n    ptrVar2 = DAT_2000098c;\n    if (ptrVar4 < DAT_2000098c) {\n      ptrVar1 = (int **)*ptrVar4;\n      ptrVar2 = (int **)((int)ptrVar4 + (int)ptrVar1);\n      if (DAT_2000098c == ptrVar2) {\n        intPtrVar = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        ptrVar2 = (int **)((int)intPtrVar + (int)ptrVar1);\n        *ptrVar4 = (int *)ptrVar2;\n      }\n      ptrVar4[1] = (int *)DAT_2000098c;\n      DAT_2000098c = ptrVar4;\n    }\n    else {\n      do {\n        ptrVar3 = ptrVar2;\n        ptrVar2 = (int **)ptrVar3[1];\n        if (ptrVar2 == (int **)0x0) break;\n      } while (ptrVar2 <= ptrVar4);\n      ptrVar1 = (int **)*ptrVar3;\n      if ((int **)((int)ptrVar3 + (int)ptrVar1) == ptrVar4) {\n        ptrVar1 = (int **)((int)ptrVar1 + (int)*ptrVar4);\n        *ptrVar3 = (int *)ptrVar1;\n        if (ptrVar2 == (int **)((int)ptrVar3 + (int)ptrVar1)) {\n          intPtrVar = *ptrVar2;\n          ptrVar2 = (int **)ptrVar2[1];\n          ptrVar1 = (int **)((int)ptrVar1 + (int)intPtrVar);\n          *ptrVar3 = (int *)ptrVar1;\n          ptrVar3[1] = (int *)ptrVar2;\n        }\n      }\n      else if (ptrVar4 < (int **)((int)ptrVar3 + (int)ptrVar1)) {\n        *outputArray = 0xc;\n      }\n      else {\n        ptrVar1 = (int **)((int)ptrVar4 + (int)*ptrVar4);\n        if (ptrVar2 == ptrVar1) {\n          intPtrVar = *ptrVar2;\n          ptrVar2 = (int **)ptrVar2[1];\n          ptrVar1 = (int **)((int)intPtrVar + (int)*ptrVar4);\n          *ptrVar4 = (int *)ptrVar1;\n        }\n        ptrVar4[1] = (int *)ptrVar2;\n        ptrVar3[1] = (int *)ptrVar4;\n      }\n    }\n  }\n  FUNC_08009f4a(outputArray,ptrVar1,ptrVar2,var2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "process_data_080091d8",
                "param_1": "outputArray",
                "param_2": "arraySize",
                "param_3": "var1",
                "param_4": "var2",
                "extraout_r1": "tmpVar",
                "ppiVar1": "ptrVar1",
                "ppiVar2": "ptrVar2",
                "piVar3": "intPtrVar",
                "ppiVar4": "ptrVar3",
                "ppiVar5": "ptrVar4"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_block_08009270",
            "code": "\nuint allocate_memory_block_08009270(undefined4 *out_ptr,uint size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *previous_block;\n  uint difference;\n  uint *previous_block_next;\n  uint total_size;\n  \n  total_size = (size + 3 & 0xfffffffc) + 8;\n  if (total_size < 0xc) {\n    total_size = 0xc;\n  }\n  if (((int)total_size < 0) || (total_size < size)) {\n    *out_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    previous_block_next = DAT_2000098c;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - total_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (previous_block_next == previous_block) {\n            current_block = (uint *)previous_block_next[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (previous_block_next != previous_block) {\n            previous_block_next[1] = (uint)current_block;\n            previous_block_next = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = total_size;\n          previous_block_next = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_080092d4;\n      }\n      previous_block_next = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(out_ptr);\n    }\n    current_block = (uint *)FUN_08009918(out_ptr,total_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block_next = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block_next ||\n        (remaining_space = FUN_08009918(out_ptr,(int)previous_block_next - (int)current_block), remaining_space != -1)))) {\n      *previous_block_next = total_size;\nLAB_080092d4:\n      FUNC_08009f4a(out_ptr);\n      total_size = (int)previous_block_next + 0xbU & 0xfffffff8;\n      remaining_space = total_size - (int)(previous_block_next + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)previous_block_next + remaining_space) = -remaining_space;\n        return total_size;\n      }\n      return total_size;\n    }\n    *out_ptr = 0xc;\n    FUNC_08009f4a(out_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_block_08009270",
                "param_1": "out_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "remaining_space",
                "puVar3": "previous_block",
                "uVar4": "difference",
                "puVar5": "previous_block_next",
                "uVar6": "total_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "extract_and_store_character_0800932c",
            "code": "\nuint extract_and_store_character_0800932c(int function_param1,byte character,byte **character_pointers)\n\n{\n  int temp1;\n  byte *temp2;\n  byte *temp3;\n  uint result;\n  \n  temp2 = character_pointers[2] + -1;\n  character_pointers[2] = temp2;\n  if ((-1 < (int)temp2) ||\n     (((int)character_pointers[6] <= (int)temp2 && (temp2 = (byte *)(uint)character, temp2 != (byte *)0xa))))\n  {\n    temp2 = *character_pointers;\n    *character_pointers = temp2 + 1;\n    *temp2 = character;\n    return (uint)character;\n  }\n  if ((function_param1 != 0) && (*(int *)(function_param1 + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (character_pointers == (byte **)&DAT_0800aba4) {\n    character_pointers = *(byte ***)(function_param1 + 4);\n  }\n  else if (character_pointers == (byte **)&DAT_0800abc4) {\n    character_pointers = *(byte ***)(function_param1 + 8);\n  }\n  else if (character_pointers == (byte **)&DAT_0800ab84) {\n    character_pointers = *(byte ***)(function_param1 + 0xc);\n  }\n  character_pointers[2] = character_pointers[6];\n  temp3 = (byte *)(uint)*(ushort *)(character_pointers + 3);\n  temp1 = (int)temp3 << 0x1c;\n  if (((temp1 < 0) && (temp3 = character_pointers[4], temp3 != (byte *)0x0)) ||\n     (temp1 = FUN_08009a80(function_param1,character_pointers,temp1,temp3,temp2), temp1 == 0)) {\n    result = (uint)character;\n    temp1 = (int)*character_pointers - (int)character_pointers[4];\n    if ((temp1 < (int)character_pointers[5]) || (temp1 = FUN_08009c7c(function_param1,character_pointers), temp1 == 0)) {\n      character_pointers[2] = character_pointers[2] + -1;\n      temp2 = *character_pointers;\n      *character_pointers = temp2 + 1;\n      *temp2 = character;\n      if ((byte *)(temp1 + 1) != character_pointers[5]) {\n        if (-1 < (int)((uint)*(ushort *)(character_pointers + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp1 = FUN_08009c7c(function_param1,character_pointers);\n      if (temp1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "extract_and_store_character_0800932c",
                "param_1": "function_param1",
                "param_2": "character",
                "param_3": "character_pointers",
                "iVar1": "temp1",
                "pbVar2": "temp2",
                "pbVar3": "temp3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "process_data_08009358",
            "code": "\nint process_data_08009358(undefined4 value1,undefined4 value2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_of_data;\n  int remaining_length;\n  \n  end_of_data = data + length;\n  remaining_length = length;\n  do {\n    if (data == end_of_data) {\n      return 0;\n    }\n    result = FUN_0800932c(value1,*data,value2,length,remaining_length);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "end_of_data",
                "iVar3": "remaining_length"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "reverse_code_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint reverseCode_0800937c(int input1,undefined4 *input2,byte *input3,int *input4)\n\n{\n  int result;\n  int *ptrVar;\n  bool isTrue;\n  byte *byteVar1;\n  byte *byteVar2;\n  int unaffectedVar;\n  int intVar;\n  int *localVar1;\n  uint localVar2;\n  int localVar3;\n  undefined4 localVar4;\n  int localVar5;\n  int localVar6;\n  byte localVar7;\n  undefined localVar8;\n  undefined localVar9;\n  undefined localVar10;\n  undefined4 localVar11;\n  \n  localVar1 = input4;\n  if ((input1 != 0) && (*(int *)(input1 + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (input2 == &DAT_0800aba4) {\n    input2 = *(undefined4 **)(input1 + 4);\n  }\n  else if (input2 == (undefined4 *)&DAT_0800abc4) {\n    input2 = *(undefined4 **)(input1 + 8);\n  }\n  else if (input2 == (undefined4 *)&DAT_0800ab84) {\n    input2 = *(undefined4 **)(input1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(input2 + 3) << 0x1c)) || (input2[4] == 0)) &&\n     (intVar = FUN_08009a80(input1,input2), intVar != 0)) {\n    return -1;\n  }\n  localVar6 = 0;\n  localVar8 = 0x20;\n  localVar9 = 0x30;\n  byteVar1 = input3;\nLAB_080093be:\n  byteVar2 = byteVar1;\n  if (*byteVar2 != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  byteVar1 = byteVar2 + 1;\n  if (*byteVar2 != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  intVar = (int)byteVar2 - (int)input3;\n  if (intVar != 0) {\n    result = FUN_08009358(input1,input2,input3,intVar);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(input2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return localVar6;\n    }\n    localVar6 = localVar6 + intVar;\n  }\n  if (*byteVar2 == 0) goto LAB_08009568;\n  localVar2 = 0;\n  localVar5 = 0;\n  localVar3 = -1;\n  localVar4 = 0;\n  localVar10 = 0;\n  localVar11 = 0;\n  byteVar1 = byteVar2 + 1;\n  while( true ) {\n    intVar = FUN_08009f2c(\"#-0+ \",*byteVar1);\n    input3 = byteVar1 + 1;\n    if (intVar == 0) break;\n    localVar2 = 1 << (intVar + 0xf7ff54b0U & 0xff) | localVar2;\n    byteVar1 = input3;\n  }\n  if ((int)(localVar2 << 0x1b) < 0) {\n    localVar10 = 0x20;\n  }\n  if ((int)(localVar2 << 0x1c) < 0) {\n    localVar10 = 0x2b;\n  }\n  if (*byteVar1 == 0x2a) {\n    ptrVar = localVar1 + 1;\n    intVar = *localVar1;\n    localVar1 = ptrVar;\n    if (intVar < 0) {\n      localVar5 = -intVar;\n      localVar2 = localVar2 | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    isTrue = false;\n    intVar = localVar5;\n    input3 = byteVar1;\n    while( true ) {\n      if (9 < *input3 - 0x30) break;\n      intVar = intVar * 10 + (*input3 - 0x30);\n      isTrue = true;\n      input3 = input3 + 1;\n    }\n    if (!isTrue) goto LAB_080094a6;\n  }\n  localVar5 = intVar;\nLAB_080094a6:\n  if (*input3 == 0x2e) {\n    if (input3[1] == 0x2a) {\n      input3 = input3 + 2;\n      ptrVar = localVar1 + 1;\n      localVar3 = *localVar1;\n      localVar1 = ptrVar;\n      if (localVar3 < 0) {\n        localVar3 = -1;\n      }\n    }\n    else {\n      isTrue = false;\n      intVar = 0;\n      localVar3 = 0;\n      while( true ) {\n        input3 = input3 + 1;\n        if (9 < *input3 - 0x30) break;\n        intVar = intVar * 10 + (*input3 - 0x30);\n        isTrue = true;\n      }\n      if (isTrue) {\n        localVar3 = intVar;\n      }\n    }\n  }\n  intVar = FUN_08009f2c(&DAT_0800ab56,*input3,3);\n  if (intVar != 0) {\n    input3 = input3 + 1;\n    localVar2 = localVar2 | 0x40 << (intVar + 0xf7ff54aaU & 0xff);\n  }\n  localVar7 = *input3;\n  input3 = input3 + 1;\n  intVar = FUN_08009f2c(\"efgEFG\",localVar7,6);\n  if (intVar == 0) {\n    unaffectedVar = FUN_08009698(input1,&localVar2,input2,0x8009359,&localVar1);\n    if (unaffectedVar == -1) goto LAB_08009568;\n  }\n  else {\n    localVar1 = (int *)(((int)localVar1 + 7U & 0xfffffff8) + 8);\n  }\n  localVar6 = localVar6 + unaffectedVar;\n  byteVar1 = input3;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "reverse_code_0800937c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "piVar2": "ptrVar",
                "bVar3": "isTrue",
                "pbVar4": "byteVar1",
                "pbVar5": "byteVar2",
                "unaff_r9": "unaffectedVar",
                "iVar6": "intVar",
                "local_8c": "localVar1",
                "local_88": "localVar2",
                "local_84": "localVar3",
                "local_80": "localVar4",
                "local_7c": "localVar5",
                "local_74": "localVar6",
                "local_70": "localVar7",
                "local_6f": "localVar8",
                "local_6e": "localVar9",
                "local_45": "localVar10",
                "local_30": "localVar11"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "process_data_080095a8",
            "code": "\nundefined4\nprocessData_080095a8(undefined4 input,uint *data,uint *result,undefined4 param,code *callback)\n\n{\n  int index;\n  int returnValue;\n  uint maxValue;\n  uint newValue;\n  bool hasFlag;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *result = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *result = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *result = *result + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *result); index = index + 1) {\n      returnValue = (*callback)(input,param,(int)data + 0x19,1);\n      if (returnValue == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  newValue = maxValue;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    newValue = maxValue + 2;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  index = (*callback)(input,param,(int)data + 0x43,newValue);\n  if (index != -1) {\n    maxValue = data[3];\n    hasFlag = (*data & 6) != 4;\n    if (hasFlag) {\n      maxValue = 0;\n    }\n    newValue = 0;\n    if (!hasFlag) {\n      maxValue = maxValue - *result;\n    }\n    if (!hasFlag) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (maxValue == newValue) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      newValue = newValue + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "process_data_080095a8",
                "param_1": "input",
                "param_2": "data",
                "param_3": "result",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "returnValue",
                "uVar3": "maxValue",
                "uVar4": "newValue",
                "bVar5": "hasFlag"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "parse_and_convert_08009698",
            "code": "\nuint parse_and_convert_08009698(undefined4 input,uint *data_array,undefined4 param_3,code *conversion_function,uint **param_5)\n\n{\n  byte byte_value;\n  int index;\n  uint *pointer;\n  int loop_variable;\n  char *hex_chars;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint result;\n  uint temp;\n  char *string_ptr;\n  char *string_end;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data_array + 6);\n  string_end = (char *)((int)data_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)data_array + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *data_array;\n          pointer = *param_5;\n          *param_5 = pointer + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            result = (uint)*(ushort *)pointer;\n          }\n          else {\n            result = *pointer;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *data_array = base | 0x20;\n          }\n          if (result == 0) {\n            *data_array = *data_array & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)data_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          result = *data_array;\n          pointer = *param_5;\n          if ((result & 0x80) == 0) {\n            *param_5 = pointer + 1;\n            if ((result & 0x40) == 0) goto LAB_080096e8;\n            result = (uint)(short)*(ushort *)pointer;\n          }\n          else {\n            *param_5 = pointer + 1;\nLAB_080096e8:\n            result = *pointer;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)data_array + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp = data_array[1];\n        data_array[2] = temp;\n        string_ptr = string_end;\n        if ((int)temp < 0) {\n          if (result != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)data_array + 0x42) = *hex_chars;\n          string_ptr = (char *)((int)data_array + 0x42);\n        }\n        else {\n          *data_array = *data_array & 0xfffffffb;\n          if (result == 0) {\n            if (temp != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              temp = result / base;\n              string_ptr = string_ptr + -1;\n              *string_ptr = hex_chars[result - base * temp];\n              result = temp;\n            } while (temp != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*data_array << 0x1f) < 0)) && ((int)data_array[1] <= (int)data_array[4]))\n        {\n          string_ptr[-1] = '0';\n          string_ptr = string_ptr + -1;\n        }\n        data_array[4] = (int)string_end - (int)string_ptr;\n        string_end = string_ptr;\n        goto LAB_080097be;\n      }\n      pointer = *param_5;\n      *param_5 = pointer + 1;\n      *(char *)((int)data_array + 0x42) = (char)*pointer;\nLAB_08009728:\n      string_end = (char *)((int)data_array + 0x42);\n      result = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            result = *data_array;\n            pointer = *param_5;\n            if ((result & 0x80) == 0) {\n              *param_5 = pointer + 1;\n              if ((result & 0x40) == 0) goto LAB_0800975c;\n              result = (uint)*(ushort *)pointer;\n            }\n            else {\n              *param_5 = pointer + 1;\nLAB_0800975c:\n              result = *pointer;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *data_array = *data_array | 0x20;\nLAB_0800970e:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)data_array + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)data_array + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*param_5;\n      *param_5 = (uint *)(ppcVar8 + 1);\n      string_end = *ppcVar8;\n      index = FUN_08009f2c(string_end,0,data_array[1]);\n      if (index != 0) {\n        data_array[1] = index - (int)string_end;\n      }\n      result = data_array[1];\n    }\n    data_array[4] = result;\n    *(undefined *)((int)data_array + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  result = *data_array;\n  ppuVar7 = (uint **)*param_5;\n  base = data_array[5];\n  if ((result & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    pointer = *ppuVar7;\n    if ((result & 0x40) == 0) goto LAB_0800983e;\n    *(short *)pointer = (short)base;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    pointer = *ppuVar7;\nLAB_0800983e:\n    *pointer = base;\n  }\nLAB_08009852:\n  data_array[4] = 0;\nLAB_080097be:\n  index = FUN_080095a8(input,data_array,local_array,param_3,conversion_function);\n  if ((index == -1) || (index = (*conversion_function)(input,param_3,string_end,data_array[4]), index == -1)) {\nLAB_080097d2:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*data_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(data_array[3] - local_array[0]); index = index + 1) {\n        loop_variable = (*conversion_function)(input,param_3,(int)data_array + 0x19,1);\n        if (loop_variable == -1) goto LAB_080097d2;\n      }\n    }\n    result = data_array[3];\n    if ((int)data_array[3] < (int)local_array[0]) {\n      result = local_array[0];\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009698": "parse_and_convert_08009698",
                "param_1": "input",
                "param_2": "data_array",
                "param_4": "conversion_function",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "pointer",
                "iVar4": "loop_variable",
                "pcVar5": "hex_chars",
                "uVar6": "base",
                "uVar9": "result",
                "uVar10": "temp",
                "pcVar11": "string_ptr",
                "pcVar12": "string_end",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "process_function_080098d8",
            "code": "\nvoid processFunction_080098d8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int ptr1;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  ptr1 = DAT_20000090;\n  var1 = arg1;\n  var2 = arg2;\n  var3 = arg3;\n  var4 = arg4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(ptr1,*(undefined4 *)(ptr1 + 8),arg1,&var2,var1,&var2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "process_function_080098d8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "ptr1",
                "uVar2": "var1",
                "uStack_c": "var2",
                "uStack_8": "var3",
                "uStack_4": "var4"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "process_data_08009908",
            "code": "\nint processData_08009908(int inputParameter,uint size)\n\n{\n  undefined4 data;\n  int result;\n  uint randNum;\n  \n  data = DAT_20000090;\n  if (inputParameter != 0) {\n    if (size == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      randNum = FUN_0800a154();\n      result = inputParameter;\n      if ((randNum < size) && (result = FUN_08009270(data,size), result != 0)) {\n        FUN_080091b0(result,inputParameter,size);\n        FUN_080091d8(data,inputParameter);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,size,size,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "process_data_08009908",
                "param_1": "inputParameter",
                "param_2": "size",
                "uVar1": "data",
                "iVar2": "result",
                "uVar3": "randNum"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "check_and_assign_value_08009918",
            "code": "\nvoid checkAndAssignValue_08009918(int *resultPtr,undefined4 inputValue)\n\n{\n  int errorCode;\n  \n  DAT_20000a38 = 0;\n  errorCode = FUN_08008804(inputValue);\n  if ((errorCode == -1) && (DAT_20000a38 != 0)) {\n    *resultPtr = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "check_and_assign_value_08009918",
                "param_1": "resultPtr",
                "param_2": "inputValue",
                "iVar1": "errorCode"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_first_character_08009938",
            "code": "\nchar * findFirstCharacter_08009938(char *inputString,char targetCharacter)\n\n{\n  char *currentCharacter;\n  \n  do {\n    currentCharacter = inputString;\n    if (*currentCharacter == '\\0') {\n      if (targetCharacter != '\\0') {\n        currentCharacter = (char *)0x0;\n      }\n      return currentCharacter;\n    }\n    inputString = currentCharacter + 1;\n  } while (targetCharacter != *currentCharacter);\n  return currentCharacter;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_first_character_08009938",
                "param_1": "inputString",
                "param_2": "targetCharacter",
                "pcVar1": "currentCharacter"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_and_terminate_string_08009954",
            "code": "\nvoid copyAndTerminateString_08009954(char *source,char *destination,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *sourcePtr;\n  \n  do {\n    sourcePtr = source;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *destination;\n    source = sourcePtr + 1;\n    *sourcePtr = currentChar;\n    destination = destination + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; source != sourcePtr + remainingLength; source = source + 1) {\n    *source = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_and_terminate_string_08009954",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "sourcePtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint find_last_occurrence_0800997e(int input_value,int array_size,undefined4 extra_param_1,undefined4 extra_param_2)\n\n{\n  int current_index;\n  int last_occurrence_index;\n  \n  if (array_size != 0) {\n    last_occurrence_index = 0;\n    while (current_index = FUN_08009938(input_value,array_size,extra_param_1,input_value,extra_param_2), current_index != 0) {\n      input_value = current_index + 1;\n      last_occurrence_index = current_index;\n    }\n    return last_occurrence_index;\n  }\n  last_occurrence_index = FUN_08009938();\n  return last_occurrence_index;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "input_value",
                "param_2": "array_size",
                "param_3": "extra_param_1",
                "param_4": "extra_param_2",
                "iVar1": "current_index",
                "iVar2": "last_occurrence_index"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *string1,char *string2)\n\n{\n  char *current_char1;\n  char *current_char2;\n  char *temp_char;\n  \n  if (*string1 == '\\0') {\n    if (*string2 != '\\0') {\n      string1 = (char *)0x0;\n    }\n    return string1;\n  }\n  do {\n    current_char1 = string1;\n    if (*current_char1 == '\\0') {\n      return (char *)0x0;\n    }\n    temp_char = string2 + -1;\n    current_char2 = current_char1 + -1;\n    do {\n      temp_char = temp_char + 1;\n      if (*temp_char == '\\0') {\n        return current_char1;\n      }\n      current_char2 = current_char2 + 1;\n      string1 = current_char1 + 1;\n    } while (*current_char2 == *temp_char);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "string1",
                "param_2": "string2",
                "pcVar1": "current_char1",
                "pcVar2": "current_char2",
                "pcVar3": "temp_char"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "perform_action_08009a80",
            "code": "\nuint performAction_08009a80(undefined4 *result,undefined4 *inputData)\n\n{\n  int dataOffset;\n  uint returnValue;\n  ushort flag;\n  \n  dataOffset = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (inputData == &DAT_0800aba4) {\n    inputData = *(undefined4 **)(dataOffset + 4);\n  }\n  else if (inputData == (undefined4 *)&DAT_0800abc4) {\n    inputData = *(undefined4 **)(dataOffset + 8);\n  }\n  else if (inputData == (undefined4 *)&DAT_0800ab84) {\n    inputData = *(undefined4 **)(dataOffset + 0xc);\n  }\n  flag = *(ushort *)(inputData + 3);\n  returnValue = (uint)flag;\n  if (-1 < (int)(returnValue << 0x1c)) {\n    if (-1 < (int)(returnValue << 0x1b)) {\n      *result = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(returnValue << 0x1d) < 0) {\n      if ((undefined4 *)inputData[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputData[0xd] != inputData + 0x11) {\n          FUN_080091d8(result);\n        }\n        inputData[0xd] = 0;\n      }\n      *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) & 0xffdb;\n      inputData[1] = 0;\n      *inputData = inputData[4];\n    }\n    *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) | 8;\n  }\n  if ((inputData[4] == 0) && ((*(ushort *)(inputData + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(result,inputData);\n  }\n  flag = *(ushort *)(inputData + 3);\n  returnValue = flag & 1;\n  if ((flag & 1) == 0) {\n    if (-1 < (int)((uint)flag << 0x1e)) {\n      returnValue = inputData[5];\n    }\n    inputData[2] = returnValue;\n  }\n  else {\n    inputData[2] = 0;\n    inputData[6] = -inputData[5];\n  }\n  if (inputData[4] == 0) {\n    flag = *(ushort *)(inputData + 3);\n    returnValue = (int)(short)flag & 0x80;\n    if (returnValue != 0) {\nLAB_08009ab0:\n      *(ushort *)(inputData + 3) = flag | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "perform_action_08009a80",
                "param_1": "result",
                "param_2": "inputData",
                "iVar1": "dataOffset",
                "uVar2": "returnValue",
                "uVar3": "flag"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_data_08009b5c",
            "code": "\nvoid process_data_08009b5c(void)\n\n{\n  uint *data_ptr;\n  int count;\n  int *param_arr;\n  int *flag_arr;\n  uint data_value;\n  ushort data_flag;\n  int temp_var;\n  code *callback_fn;\n  int loop_var;\n  uint temp_value;\n  code *jump_table_fn;\n  bool is_flagged;\n  undefined8 func_result;\n  \n  FUN_08009fe8(6);\n  jump_table_fn = (code *)0x8009b6b;\n  func_result = FUN_08008868(1);\n  param_arr = (int *)((ulonglong)func_result >> 0x20);\n  data_ptr = (uint *)func_result;\n  data_flag = *(ushort *)(param_arr + 3);\n  data_value = (uint)data_flag;\n  if ((int)(data_value << 0x1c) < 0) {\n    count = param_arr[4];\n    if (count != 0) {\n      temp_var = data_value << 0x1e;\n      is_flagged = temp_var != 0;\n      if (is_flagged) {\n        temp_var = 0;\n      }\n      loop_var = *param_arr;\n      if (!is_flagged) {\n        temp_var = param_arr[5];\n      }\n      *param_arr = count;\n      param_arr[2] = temp_var;\n      for (loop_var = loop_var - count; 0 < loop_var; loop_var = loop_var - temp_var) {\n        temp_var = (*(code *)param_arr[10])(data_ptr,param_arr[8],count,loop_var);\n        if (temp_var < 1) {\n          data_flag = *(ushort *)(param_arr + 3);\n          goto LAB_08009c62;\n        }\n        count = count + temp_var;\n      }\n    }\n  }\n  else if (((0 < param_arr[1]) || (0 < param_arr[0x10])) &&\n          (callback_fn = (code *)param_arr[0xb], callback_fn != (code *)0x0)) {\n    temp_value = *data_ptr;\n    *data_ptr = 0;\n    if ((data_flag & 0x1000) == 0) {\n      count = (*callback_fn)(data_ptr,param_arr[8],data_value & 0x1000,1);\n      if ((count == -1) && (data_value = *data_ptr, data_value != 0)) {\n        if ((data_value != 0x1d) && (data_value != 0x16)) {\n          *(ushort *)(param_arr + 3) = *(ushort *)(param_arr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table_fn)();\n          return;\n        }\n        *data_ptr = temp_value;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      count = param_arr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(param_arr + 3) << 0x1d) < 0) &&\n       (count = count - param_arr[1], param_arr[0xd] != 0)) {\n      count = count - param_arr[0x10];\n    }\n    count = (*(code *)param_arr[0xb])(data_ptr,param_arr[8],count,0);\n    data_flag = *(ushort *)(param_arr + 3);\n    if ((count == -1) &&\n       ((0x1d < *data_ptr || (-1 < (int)((0x20400001U >> (*data_ptr & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(param_arr + 3) = data_flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_fn)(0xffffffff);\n      return;\n    }\n    param_arr[1] = 0;\n    *param_arr = param_arr[4];\n    if (((int)((uint)data_flag << 0x13) < 0) && ((count != -1 || (*data_ptr == 0)))) {\n      param_arr[0x15] = count;\n    }\n    flag_arr = (int *)param_arr[0xd];\n    *data_ptr = temp_value;\n    if (flag_arr != (int *)0x0) {\n      if (flag_arr != param_arr + 0x11) {\n        FUN_080091d8(data_ptr);\n      }\n      param_arr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_fn)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table_fn)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "puVar1": "data_ptr",
                "iVar2": "count",
                "piVar3": "param_arr",
                "piVar4": "flag_arr",
                "uVar5": "data_value",
                "uVar6": "data_flag",
                "iVar7": "temp_var",
                "pcVar8": "callback_fn",
                "iVar9": "loop_var",
                "uVar10": "temp_value",
                "UNRECOVERED_JUMPTABLE_00": "jump_table_fn",
                "bVar11": "is_flagged",
                "uVar12": "func_result"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "perform_action_08009c7c",
            "code": "\nundefined4 performAction_08009c7c(uint *data,int *params)\n\n{\n  undefined4 result;\n  int value;\n  int *tempPtr;\n  uint tempValue;\n  ushort tempVar;\n  int tempVar2;\n  undefined4 register4;\n  undefined4 register5;\n  code *funcPtr;\n  int loopVar;\n  uint tempVar3;\n  code *jumpTable;\n  bool isTrue;\n  \n  if (params[4] != 0) {\n    if ((data != (uint *)0x0) && (data[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (params == &DAT_0800aba4) {\n      params = (int *)data[1];\n    }\n    else if (params == (int *)&DAT_0800abc4) {\n      params = (int *)data[2];\n    }\n    else if (params == (int *)&DAT_0800ab84) {\n      params = (int *)data[3];\n    }\n    if (*(short *)(params + 3) != 0) {\n      tempVar = *(ushort *)(params + 3);\n      tempValue = (uint)tempVar;\n      if ((int)(tempValue << 0x1c) < 0) {\n        value = params[4];\n        if (value != 0) {\n          tempVar2 = tempValue << 0x1e;\n          isTrue = tempVar2 != 0;\n          if (isTrue) {\n            tempVar2 = 0;\n          }\n          loopVar = *params;\n          if (!isTrue) {\n            tempVar2 = params[5];\n          }\n          *params = value;\n          params[2] = tempVar2;\n          for (loopVar = loopVar - value; 0 < loopVar; loopVar = loopVar - tempVar2) {\n            tempVar2 = (*(code *)params[10])(data,params[8],value,loopVar,register4,register5);\n            if (tempVar2 < 1) {\n              tempVar = *(ushort *)(params + 3);\n              goto LAB_08009c62;\n            }\n            value = value + tempVar2;\n          }\n        }\n      }\n      else if (((0 < params[1]) || (0 < params[0x10])) &&\n              (funcPtr = (code *)params[0xb], funcPtr != (code *)0x0)) {\n        tempVar3 = *data;\n        *data = 0;\n        if ((tempVar & 0x1000) == 0) {\n          value = (*funcPtr)(data,params[8],tempValue & 0x1000,1);\n          if ((value == -1) && (tempValue = *data, tempValue != 0)) {\n            if ((tempValue != 0x1d) && (tempValue != 0x16)) {\n              *(ushort *)(params + 3) = *(ushort *)(params + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jumpTable)();\n              return result;\n            }\n            *data = tempVar3;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          value = params[0x15];\n        }\n        if (((int)((uint)*(ushort *)(params + 3) << 0x1d) < 0) &&\n           (value = value - params[1], params[0xd] != 0)) {\n          value = value - params[0x10];\n        }\n        value = (*(code *)params[0xb])(data,params[8],value,0);\n        tempVar = *(ushort *)(params + 3);\n        if ((value == -1) &&\n           ((0x1d < *data || (-1 < (int)((0x20400001U >> (*data & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(params + 3) = tempVar | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)(0xffffffff);\n          return result;\n        }\n        params[1] = 0;\n        *params = params[4];\n        if (((int)((uint)tempVar << 0x13) < 0) && ((value != -1 || (*data == 0)))) {\n          params[0x15] = value;\n        }\n        tempPtr = (int *)params[0xd];\n        *data = tempVar3;\n        if (tempPtr != (int *)0x0) {\n          if (tempPtr != params + 0x11) {\n            FUN_080091d8(data);\n          }\n          params[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)();\n          return result;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jumpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "perform_action_08009c7c",
                "param_1": "data",
                "param_2": "params",
                "uVar1": "result",
                "iVar2": "value",
                "piVar3": "tempPtr",
                "uVar4": "tempValue",
                "uVar5": "tempVar",
                "iVar6": "tempVar2",
                "unaff_r4": "register4",
                "unaff_r5": "register5",
                "pcVar7": "funcPtr",
                "iVar8": "loopVar",
                "uVar9": "tempVar3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "isTrue"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_structure_08009cdc",
            "code": "\nvoid initializeDataStructure_08009cdc(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[25] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080091c6(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x800a021;\n  dataStructure[10] = 0x800a043;\n  dataStructure[11] = 0x800a07b;\n  dataStructure[12] = dataStructure[13];\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_structure_08009cdc",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "dataStructure[1]",
                "param_1[2]": "dataStructure[2]",
                "param_1[0x19]": "dataStructure[25]",
                "param_1[4]": "dataStructure[4]",
                "param_1[5]": "dataStructure[5]",
                "param_1[6]": "dataStructure[6]",
                "param_1[8]": "dataStructure[8]",
                "param_1[9]": "dataStructure[9]",
                "param_1[10]": "dataStructure[10]",
                "param_1[0xb]": "dataStructure[11]",
                "param_1[0xc]": "dataStructure[12]",
                "&LAB_0800a09e_1": "dataStructure[13]"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 inputData,int size)\n\n{\n  undefined4 *dataStructure;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  dataStructure = (undefined4 *)FUN_08009270(inputData,offset + 0x74);\n  if (dataStructure != (undefined4 *)0x0) {\n    *dataStructure = 0;\n    dataStructure[1] = size;\n    dataStructure[2] = dataStructure + 3;\n    FUN_080091c6(dataStructure + 3,0,offset + 0x68);\n  }\n  return dataStructure;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "inputData",
                "param_2": "size",
                "puVar1": "dataStructure",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *dataArray)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (dataArray[6] == 0) {\n    dataArray[0x12] = 0;\n    dataArray[0x13] = 0;\n    dataArray[0x14] = 0;\n    pointer = &DAT_20000094;\n    dataArray[10] = &functionAddress;\n    if (dataArray == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (dataArray == &DAT_20000094) {\n      dataArray[6] = pointer;\n    }\n    result = FUN_08009db0();\n    dataArray[1] = result;\n    result = FUN_08009db0(dataArray);\n    dataArray[2] = result;\n    result = FUN_08009db0(dataArray);\n    dataArray[3] = result;\n    FUN_08009cdc(dataArray[1],4,0);\n    FUN_08009cdc(dataArray[2],9,1);\n    FUN_08009cdc(dataArray[3],0x12,2);\n    dataArray[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "dataArray",
                "uVar1": "result",
                "puVar2": "pointer",
                "LAB_08009cd0_1": "functionAddress"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_structure_08009db0",
            "code": "\nint * initializeDataStructure_08009db0(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentPointer;\n  int *innerPointer;\n  int **dataStructurePointer;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataStructurePointer = (int **)&DAT_200000dc;\n  do {\n    innerPointer = dataStructurePointer[2];\n    currentPointer = dataStructurePointer[1];\n    while (currentPointer = (int *)((int)currentPointer + -1), -1 < (int)currentPointer) {\n      if (*(short *)(innerPointer + 3) == 0) {\n        *(undefined2 *)((int)innerPointer + 0xe) = 0xffff;\n        innerPointer[0x19] = 0;\n        *(undefined2 *)(innerPointer + 3) = 1;\n        *innerPointer = 0;\n        innerPointer[2] = 0;\n        innerPointer[1] = 0;\n        innerPointer[4] = 0;\n        innerPointer[5] = 0;\n        innerPointer[6] = 0;\n        FUN_080091c6(innerPointer + 0x17,0,8,1,param4);\n        innerPointer[0xd] = 0;\n        innerPointer[0xe] = 0;\n        innerPointer[0x12] = 0;\n        innerPointer[0x13] = 0;\n        return innerPointer;\n      }\n      innerPointer = innerPointer + 0x1a;\n    }\n    if (*dataStructurePointer == (int *)0x0) {\n      currentPointer = (int *)FUN_08009d24(errorCode,4);\n      *dataStructurePointer = currentPointer;\n      if (currentPointer == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataStructurePointer = (int **)*dataStructurePointer;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_structure_08009db0",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentPointer",
                "piVar2": "innerPointer",
                "ppiVar3": "dataStructurePointer"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_memory_permissions_08009e64",
            "code": "\nundefined4 checkMemoryPermissions_08009e64(undefined4 arg1,int arg2,undefined4 *result,uint *flags)\n\n{\n  int status;\n  undefined4 permission;\n  undefined tempBuffer [4];\n  uint tempValue;\n  \n  if ((*(short *)(arg2 + 0xe) < 0) ||\n     (status = FUN_0800a0ec(arg1,(int)*(short *)(arg2 + 0xe),tempBuffer), status < 0)) {\n    *flags = 0;\n    if ((int)((uint)*(ushort *)(arg2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *flags = (uint)((tempValue & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08009ea4:\n  *result = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_memory_permissions_08009e64",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "result",
                "param_4": "flags",
                "iVar1": "status",
                "uVar2": "permission",
                "auStack_4c": "tempBuffer",
                "local_48": "tempValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "update_data_08009eac",
            "code": "\nvoid updateData_08009eac(int dataAddress,int *data)\n\n{\n  ushort result;\n  int status;\n  int localData1;\n  int *localData2;\n  \n  if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1e)) {\n    localData1 = dataAddress;\n    localData2 = data;\n    result = FUN_08009e64(dataAddress,data,&localData1,&localData2);\n    status = FUN_08009270(dataAddress,localData1);\n    if (status != 0) {\n      *(undefined **)(dataAddress + 0x28) = &LAB_08009cd0_1;\n      *data = status;\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x80;\n      data[4] = status;\n      data[5] = localData1;\n      if ((localData2 != (int *)0x0) &&\n         (status = FUN_0800a110(dataAddress,(int)*(short *)((int)data + 0xe)), status != 0)) {\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data + 3) = result | *(ushort *)(data + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 2;\n  }\n  *data = (int)data + 0x47;\n  data[4] = (int)data + 0x47;\n  data[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "update_data_08009eac",
                "param_1": "dataAddress",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "status",
                "local_18": "localData1",
                "local_14": "localData2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "process_param_08009fe8",
            "code": "\nint processParam_08009fe8(uint inputValue)\n\n{\n  int *dataArray;\n  undefined4 result;\n  int dataPointer;\n  code *functionPointer;\n  undefined4 temporaryData1;\n  undefined4 temporaryData2;\n  undefined4 temporaryData3;\n  undefined4 *dataArrayPointer;\n  \n  dataArray = DAT_20000090;\n  dataArrayPointer = &DAT_20000090;\n  if (0x1f < inputValue) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  dataPointer = DAT_20000090[0x11];\n  if ((dataPointer != 0) && (functionPointer = *(code **)(dataPointer + inputValue * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(dataPointer + inputValue * 4) = 0;\n      (*functionPointer)(inputValue);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  dataPointer = FUN_0800886c(result,inputValue,inputValue,0,dataArrayPointer,temporaryData1,temporaryData2,temporaryData3);\n  if ((dataPointer == -1) && (DAT_20000a38 != 0)) {\n    *dataArray = DAT_20000a38;\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "process_param_08009fe8",
                "param_1": "inputValue",
                "piVar1": "dataArray",
                "uVar2": "result",
                "iVar3": "dataPointer",
                "pcVar4": "functionPointer",
                "unaff_r4": "temporaryData1",
                "unaff_r5": "temporaryData2",
                "in_lr": "temporaryData3",
                "puVar5": "dataArrayPointer"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nundefined4 getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_value_0800a020",
            "code": "\nvoid updateValue_0800a020(undefined4 input1,int input2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(input1,(int)*(short *)(input2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(input2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(input2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(input2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "extract_data_0800a042",
            "code": "\nvoid extractData_0800a042(int *output,int input,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 tmp1;\n  undefined4 tmp2;\n  undefined4 tmp3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_0800a130(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(input + 0xe),paramA,paramB,paramB,paramB,tmp1,\n                       tmp2,tmp3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "extract_data_0800a042",
                "param_1": "output",
                "param_2": "input",
                "param_3": "paramA",
                "param_4": "paramB",
                "unaff_r4": "tmp1",
                "unaff_r5": "tmp2",
                "in_lr": "tmp3",
                "iVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_param_0800a07a",
            "code": "\nvoid updateParam_0800a07a(undefined4 inputObj,int paramObj)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isError;\n  \n  result = FUN_0800a130(inputObj,(int)*(short *)(paramObj + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedValue = *(ushort *)(paramObj + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(paramObj + 0x54) = result;\n    updatedValue = *(ushort *)(paramObj + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(paramObj + 0xc) = updatedValue;\n  }\n  if (!isError) {\n    *(ushort *)(paramObj + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_param_0800a07a",
                "param_1": "inputObj",
                "param_2": "paramObj",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "process_function_0800a0ec",
            "code": "\nvoid processFunction_0800a0ec(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008846(input1,input2,input2,0,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "process_function_0800a0ec",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "check_and_update_value_0800a110",
            "code": "\nvoid checkAndUpdateValue_0800a110(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008850(inputValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "check_and_update_value_0800a110",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "assign_value_if_negative_0800a130",
            "code": "\nvoid assignValueIfNegative_0800a130(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(input_1,input_2,input_3,input_3,input_3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "assign_value_if_negative_0800a130",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_offset_0800a154",
            "code": "\nint calculateOffset_0800a154(undefined4 result,int baseAddress)\n\n{\n  int offset;\n  \n  offset = *(int *)(baseAddress + -4) + -4;\n  if (*(int *)(baseAddress + -4) < 0) {\n    offset = offset + *(int *)(baseAddress + offset);\n  }\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_offset_0800a154",
                "param_1": "result",
                "param_2": "baseAddress",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "update_parameter_if_needed_0800a168",
            "code": "\nvoid updateParameterIfNeeded_0800a168(int *outputValue,undefined4 inputVal1,undefined4 inputVal2,undefined4 inputVal3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008858(inputVal1,inputVal2,inputVal3,inputVal3,inputVal3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "update_parameter_if_needed_0800a168",
                "param_1": "outputValue",
                "param_2": "inputVal1",
                "param_3": "inputVal2",
                "param_4": "inputVal3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_flags_0800a18c",
            "code": "\nvoid initializeFlags_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeFlags_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_flags_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 229248,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}