{
    "functions": {
        "I2C_RequestMemoryRead": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080028ae) */\n/* WARNING: Removing unreachable block (ram,0x080028c0) */\n/* WARNING: Removing unreachable block (ram,0x080028c2) */\n/* WARNING: Removing unreachable block (ram,0x080028c4) */\n/* WARNING: Removing unreachable block (ram,0x08002a6c) */\n/* WARNING: Removing unreachable block (ram,0x08002a7e) */\n/* WARNING: Removing unreachable block (ram,0x08002a80) */\n/* WARNING: Removing unreachable block (ram,0x08002a82) */\n\nHAL_StatusTypeDef\nI2C_RequestMemoryRead\n          (I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n          uint32_t Timeout,uint32_t Tickstart)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  int iVar3;\n  uint32_t tmpreg;\n  \n  hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x400;\n  hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x100;\n  do {\n    if ((~hi2c->Instance->SR1 & 1) == 0) {\n      iVar3 = 0;\n      goto LAB_080028d2;\n    }\n  } while ((Timeout == 0xffffffff) ||\n          ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - Tickstart <= Timeout))));\n  hi2c->PreviousState = 0;\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Mode = HAL_I2C_MODE_NONE;\n  hi2c->Lock = HAL_UNLOCKED;\n  iVar3 = 3;\nLAB_080028d2:\n  if (iVar3 == 0) {\n    hi2c->Instance->DR = (byte)DevAddress & 0xfe;\n    HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_08002ad4,Timeout,Tickstart);\n    if (HVar1 == HAL_OK) {\n      HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n      if (HVar1 == HAL_OK) {\n        if (MemAddSize == 1) {\n          hi2c->Instance->DR = (uint)(byte)MemAddress;\n        }\n        else {\n          hi2c->Instance->DR = (uint)(byte)(MemAddress >> 8);\n          HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n          if (HVar1 != HAL_OK) {\n            if (hi2c->ErrorCode == 4) {\n              hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n              return HAL_ERROR;\n            }\n            return HAL_TIMEOUT;\n          }\n          hi2c->Instance->DR = (uint)(byte)MemAddress;\n        }\n        HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n        if (HVar1 == HAL_OK) {\n          hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x100;\n          do {\n            if ((~hi2c->Instance->SR1 & 1) == 0) {\n              iVar3 = 0;\n              goto LAB_08002a90;\n            }\n          } while ((Timeout == 0xffffffff) ||\n                  ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - Tickstart <= Timeout))));\n          hi2c->PreviousState = 0;\n          hi2c->State = HAL_I2C_STATE_READY;\n          hi2c->Mode = HAL_I2C_MODE_NONE;\n          hi2c->Lock = HAL_UNLOCKED;\n          iVar3 = 3;\nLAB_08002a90:\n          if (iVar3 == 0) {\n            hi2c->Instance->DR = (uint)(byte)((byte)DevAddress | 1);\n            HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_08002ad4,Timeout,Tickstart);\n            if (HVar1 == HAL_OK) {\n              HVar1 = HAL_OK;\n            }\n            else if (hi2c->ErrorCode == 4) {\n              HVar1 = HAL_ERROR;\n            }\n            else {\n              HVar1 = HAL_TIMEOUT;\n            }\n          }\n          else {\n            HVar1 = HAL_TIMEOUT;\n          }\n        }\n        else if (hi2c->ErrorCode == 4) {\n          hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n          HVar1 = HAL_ERROR;\n        }\n        else {\n          HVar1 = HAL_TIMEOUT;\n        }\n      }\n      else if (hi2c->ErrorCode == 4) {\n        hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n        HVar1 = HAL_ERROR;\n      }\n      else {\n        HVar1 = HAL_TIMEOUT;\n      }\n    }\n    else if (hi2c->ErrorCode == 4) {\n      HVar1 = HAL_ERROR;\n    }\n    else {\n      HVar1 = HAL_TIMEOUT;\n    }\n  }\n  else {\n    HVar1 = HAL_TIMEOUT;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "HAL_GetTick", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080027f4", 
            "calling": [
                "HAL_I2C_Mem_Read"
            ], 
            "imported": false, 
            "current_name": "I2C_RequestMemoryRead"
        }, 
        "TIM_TI2_ConfigInputStage": {
            "renaming": {}, 
            "code": "\nvoid TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx,uint32_t TIM_ICPolarity,uint32_t TIM_ICFilter)\n\n{\n  uint32_t tmpccer;\n  uint32_t tmpccmr1;\n  \n  TIMx->CCER = TIMx->CCER & 0xffffffef;\n  TIMx->CCMR1 = TIM_ICFilter << 0xc | TIMx->CCMR1 & 0xffff0fff;\n  TIMx->CCER = TIM_ICPolarity << 4 | TIMx->CCER & 0xffffff5f;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004104", 
            "calling": [
                "HAL_TIM_ConfigClockSource"
            ], 
            "imported": false, 
            "current_name": "TIM_TI2_ConfigInputStage"
        }, 
        "frexp": {
            "renaming": {}, 
            "code": "\ndouble frexp(double __x,int *__exponent)\n\n{\n  int iVar1;\n  uint in_r1;\n  uint extraout_r1;\n  int *in_r2;\n  int iVar2;\n  uint uVar3;\n  double in_d0;\n  \n  iVar1 = DAT_08009740;\n  iVar2 = 0;\n  uVar3 = in_r1 & 0x7fffffff;\n  *in_r2 = 0;\n  if (((int)uVar3 <= iVar1) && ((uVar3 | (uint)__exponent) != 0)) {\n    if (uVar3 < 0x100000) {\n      in_d0 = (double)__muldf3(__exponent,in_r1,0,DAT_0800973c);\n      iVar2 = -0x36;\n      uVar3 = extraout_r1 & 0x7fffffff;\n    }\n    *in_r2 = ((int)uVar3 >> 0x14) + -0x3fe + iVar2;\n  }\n  return in_d0;\n}\n\n", 
            "called": [
                "__muldf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080096e0", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "frexp"
        }, 
        "HAL_RCC_GetSysClockFreq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetSysClockFreq(void)\n\n{\n  uint uVar1;\n  uint8_t aPredivFactorTable [2];\n  uint8_t aPLLMULFactorTable [16];\n  uint32_t pllmul;\n  uint32_t prediv;\n  uint32_t tmpreg;\n  uint32_t sysclockfreq;\n  uint32_t pllclk;\n  \n  aPLLMULFactorTable._0_4_ = *(undefined4 *)PTR__etext_080034f0;\n  aPLLMULFactorTable._4_4_ = *(undefined4 *)(PTR__etext_080034f0 + 4);\n  aPLLMULFactorTable._8_4_ = *(undefined4 *)(PTR__etext_080034f0 + 8);\n  aPLLMULFactorTable._12_4_ = *(undefined4 *)(PTR__etext_080034f0 + 0xc);\n  aPredivFactorTable = *(uint8_t (*) [2])PTR_DAT_080034f4;\n  uVar1 = *(uint *)(DAT_080034f8 + 4);\n  if ((uVar1 & 0xc) == 4) {\n    sysclockfreq = DAT_080034fc;\n  }\n  else if ((uVar1 & 0xc) == 8) {\n    if ((uVar1 & 0x10000) == 0) {\n      pllclk = DAT_08003500 * (uint)aPLLMULFactorTable[uVar1 >> 0x12 & 0xf];\n    }\n    else {\n      pllclk = (DAT_080034fc * aPLLMULFactorTable[uVar1 >> 0x12 & 0xf]) /\n               (uint)aPredivFactorTable[*(uint *)(DAT_080034f8 + 4) >> 0x11 & 1];\n    }\n    sysclockfreq = pllclk;\n  }\n  else {\n    sysclockfreq = DAT_080034fc;\n  }\n  return sysclockfreq;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003440", 
            "calling": [
                "HAL_RCC_ClockConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetSysClockFreq"
        }, 
        "NVIC_SetPriority": {
            "renaming": {}, 
            "code": "\nvoid NVIC_SetPriority(IRQn_Type IRQn,uint32_t priority)\n\n{\n  if (IRQn < WWDG_IRQn) {\n    *(char *)(((byte)IRQn & 0xf) + DAT_08001664 + 0x14) = (char)((priority & 0xff) << 4);\n  }\n  else {\n    *(char *)(IRQn + DAT_08001668 + 0x300) = (char)((priority & 0xff) << 4);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001618", 
            "calling": [
                "HAL_NVIC_SetPriority", 
                "SysTick_Config"
            ], 
            "imported": false, 
            "current_name": "NVIC_SetPriority"
        }, 
        "NMI_Handler": {
            "renaming": {}, 
            "code": "\nvoid NMI_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056bc", 
            "calling": [], 
            "imported": false, 
            "current_name": "NMI_Handler"
        }, 
        "HAL_NVIC_SetPriorityGrouping": {
            "renaming": {}, 
            "code": "\nvoid HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)\n\n{\n  NVIC_SetPriorityGrouping(PriorityGroup);\n  return;\n}\n\n", 
            "called": [
                "NVIC_SetPriorityGrouping"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001714", 
            "calling": [
                "HAL_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_NVIC_SetPriorityGrouping"
        }, 
        "__aeabi_cfcmpeq": {
            "renaming": {}, 
            "code": "\nundefined8 __aeabi_cfcmpeq(undefined4 param_1,undefined4 param_2)\n\n{\n  __cmpsf2();\n  return CONCAT44(param_2,param_1);\n}\n\n", 
            "called": [
                "__cmpsf2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000fd0", 
            "calling": [
                "__aeabi_fcmpeq", 
                "__aeabi_cfrcmple", 
                "__aeabi_fcmplt", 
                "__aeabi_fcmple"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfcmpeq"
        }, 
        "NVIC_EncodePriority": {
            "renaming": {}, 
            "code": "\nuint32_t NVIC_EncodePriority(uint32_t PriorityGroup,uint32_t PreemptPriority,uint32_t SubPriority)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint32_t SubPriorityBits;\n  uint32_t PreemptPriorityBits;\n  uint32_t PriorityGroupTmp;\n  \n  uVar1 = PriorityGroup & 7;\n  uVar2 = 7 - uVar1;\n  if (3 < uVar2) {\n    uVar2 = 4;\n  }\n  if (uVar1 + 4 < 7) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = uVar1 - 3;\n  }\n  return SubPriority & ~(-1 << (uVar1 & 0xff)) |\n         (~(-1 << (uVar2 & 0xff)) & PreemptPriority) << (uVar1 & 0xff);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800166c", 
            "calling": [
                "HAL_NVIC_SetPriority"
            ], 
            "imported": false, 
            "current_name": "NVIC_EncodePriority"
        }, 
        "I2C_RequestMemoryWrite": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080026e8) */\n/* WARNING: Removing unreachable block (ram,0x080026fa) */\n/* WARNING: Removing unreachable block (ram,0x080026fc) */\n/* WARNING: Removing unreachable block (ram,0x080026fe) */\n\nHAL_StatusTypeDef\nI2C_RequestMemoryWrite\n          (I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n          uint32_t Timeout,uint32_t Tickstart)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  int iVar3;\n  uint32_t tmpreg;\n  \n  hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x100;\n  do {\n    if ((~hi2c->Instance->SR1 & 1) == 0) {\n      iVar3 = 0;\n      goto LAB_0800270a;\n    }\n  } while ((Timeout == 0xffffffff) ||\n          ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - Tickstart <= Timeout))));\n  hi2c->PreviousState = 0;\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Mode = HAL_I2C_MODE_NONE;\n  hi2c->Lock = HAL_UNLOCKED;\n  iVar3 = 3;\nLAB_0800270a:\n  if (iVar3 == 0) {\n    hi2c->Instance->DR = (byte)DevAddress & 0xfe;\n    HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_080027f0,Timeout,Tickstart);\n    if (HVar1 == HAL_OK) {\n      HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n      if (HVar1 == HAL_OK) {\n        if (MemAddSize == 1) {\n          hi2c->Instance->DR = (uint)(byte)MemAddress;\n        }\n        else {\n          hi2c->Instance->DR = (uint)(byte)(MemAddress >> 8);\n          HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n          if (HVar1 != HAL_OK) {\n            if (hi2c->ErrorCode == 4) {\n              hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n              return HAL_ERROR;\n            }\n            return HAL_TIMEOUT;\n          }\n          hi2c->Instance->DR = (uint)(byte)MemAddress;\n        }\n        HVar1 = HAL_OK;\n      }\n      else if (hi2c->ErrorCode == 4) {\n        hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n        HVar1 = HAL_ERROR;\n      }\n      else {\n        HVar1 = HAL_TIMEOUT;\n      }\n    }\n    else if (hi2c->ErrorCode == 4) {\n      HVar1 = HAL_ERROR;\n    }\n    else {\n      HVar1 = HAL_TIMEOUT;\n    }\n  }\n  else {\n    HVar1 = HAL_TIMEOUT;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "HAL_GetTick", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002640", 
            "calling": [
                "HAL_I2C_Mem_Write"
            ], 
            "imported": false, 
            "current_name": "I2C_RequestMemoryWrite"
        }, 
        "__mcmp": {
            "renaming": {}, 
            "code": "\nint __mcmp(int param_1,int param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  uint *puVar4;\n  \n  iVar3 = *(int *)(param_2 + 0x10);\n  iVar1 = *(int *)(param_1 + 0x10) - iVar3;\n  if (iVar1 == 0) {\n    puVar2 = (uint *)(param_2 + 0x14 + iVar3 * 4);\n    puVar4 = (uint *)(param_1 + 0x14) + iVar3;\n    do {\n      puVar4 = puVar4 + -1;\n      puVar2 = puVar2 + -1;\n      if (*puVar4 != *puVar2) {\n        if (*puVar2 <= *puVar4) {\n          return 1;\n        }\n        return -1;\n      }\n    } while ((uint *)(param_1 + 0x14) < puVar4);\n  }\n  return iVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080094f8", 
            "calling": [
                "quorem", 
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__mcmp"
        }, 
        "HAL_TIMEx_BreakCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004378", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_BreakCallback"
        }, 
        "HAL_TIM_PWM_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003696", 
            "calling": [
                "HAL_TIM_PWM_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_MspInit"
        }, 
        "frame_dummy": {
            "renaming": {}, 
            "code": "\nundefined8 frame_dummy(undefined *param_1,undefined *param_2)\n\n{\n  if (DAT_08000144 != 0) {\n    param_1 = PTR__init_0800014c;\n    param_2 = PTR_object_8660_08000148;\n  }\n  return CONCAT44(param_2,param_1);\n}\n\n", 
            "called": [
                "_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000134", 
            "calling": [
                "__libc_init_array", 
                "__libc_fini_array"
            ], 
            "imported": false, 
            "current_name": "frame_dummy"
        }, 
        "__aeabi_dcmpgt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpgt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdrcmple();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009e8", 
            "calling": [
                "_dtoa_r", 
                "_svfprintf_r", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmpgt"
        }, 
        "HAL_RCC_GetPCLK2Freq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetPCLK2Freq(void)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = HAL_RCC_GetHCLKFreq();\n  return uVar1 >> PTR_APBPrescTable_08003564[*(uint *)(DAT_08003560 + 4) >> 0xb & 7];\n}\n\n", 
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003540", 
            "calling": [
                "UART_SetConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetPCLK2Freq"
        }, 
        "__fixunssfsi": {
            "renaming": {}, 
            "code": "\nuint __fixunssfsi(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 & 0x80000000) != 0) || (param_1 << 1 < 0x7f000000)) {\n    return 0;\n  }\n  uVar1 = 0x9e - ((param_1 << 1) >> 0x18);\n  if (-1 < (int)uVar1) {\n    return (param_1 << 8 | 0x80000000) >> (uVar1 & 0xff);\n  }\n  if ((uVar1 == 0xffffff9f) && ((param_1 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001044", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__fixunssfsi"
        }, 
        "HAL_InitTick": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)\n\n{\n  uint32_t uVar1;\n  HAL_StatusTypeDef HVar2;\n  \n  uVar1 = HAL_SYSTICK_Config((uint32_t)\n                             ((ulonglong)*(uint *)PTR_SystemCoreClock_08001570 /\n                             (1000 / (ulonglong)(byte)*PTR_uwTickFreq_08001574)));\n  if (uVar1 == 0) {\n    if (TickPriority < 0x10) {\n      HAL_NVIC_SetPriority(SysTick_IRQn,TickPriority,0);\n      *(uint32_t *)PTR_uwTickPrio_08001578 = TickPriority;\n      HVar2 = HAL_OK;\n    }\n    else {\n      HVar2 = HAL_ERROR;\n    }\n  }\n  else {\n    HVar2 = HAL_ERROR;\n  }\n  return HVar2;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_Config", 
                "HAL_NVIC_SetPriority"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800151c", 
            "calling": [
                "HAL_Init", 
                "HAL_RCC_ClockConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_InitTick"
        }, 
        "HAL_RCC_GetHCLKFreq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetHCLKFreq(void)\n\n{\n  return *(uint32_t *)PTR_SystemCoreClock_08003514;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003504", 
            "calling": [
                "HAL_RCC_GetPCLK1Freq", 
                "SystemClock_Config", 
                "HAL_RCC_GetPCLK2Freq"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetHCLKFreq"
        }, 
        "startForkserver": {
            "renaming": {}, 
            "code": "\nint startForkserver(int ticks)\n\n{\n  uint32_t uVar1;\n  \n  if (*(int *)PTR_noHyperCall_08004ea0 == 0) {\n    uVar1 = aflCall(1,ticks,0);\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n", 
            "called": [
                "aflCall"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004e74", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "startForkserver"
        }, 
        "__aeabi_f2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_f2d(uint param_1,undefined4 param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar5 = param_1 << 1;\n  bVar9 = uVar5 == 0;\n  uVar1 = (uint)((param_1 & 0x80000000) != 0) << 0x1f;\n  uVar4 = (uint)((int)uVar5 >> 3) >> 1;\n  uVar3 = uVar1 | uVar4;\n  param_1 = param_1 << 0x1d;\n  if (!bVar9) {\n    param_4 = uVar5 & 0xff000000;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(uVar3,param_1) ^ 0x3800000000000000;\n  }\n  if ((uVar5 & 0xffffff) == 0) {\n    return CONCAT44(uVar3,param_1);\n  }\n  if (param_4 == 0xff000000) {\n    return CONCAT44(uVar3,param_1) | 0x8000000000000;\n  }\n  uVar2 = param_1;\n  uVar5 = uVar4;\n  if (uVar4 == 0) {\n    uVar2 = 0;\n    uVar5 = param_1;\n  }\n  iVar6 = count_leading_zeroes(uVar5);\n  if (uVar4 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar7 = iVar6 - 0xb;\n  bVar10 = SBORROW4(uVar7,0x20);\n  uVar4 = iVar6 - 0x2b;\n  bVar9 = (int)uVar4 < 0;\n  bVar8 = uVar4 == 0;\n  if ((int)uVar7 < 0x20) {\n    bVar10 = SCARRY4(uVar4,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar9 = iVar6 < 0;\n    bVar8 = iVar6 == 0;\n    uVar4 = uVar7;\n    if (!bVar8 && bVar9 == bVar10) {\n      uVar2 = uVar5 << (uVar7 & 0xff);\n      uVar5 = uVar5 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    in_r12 = 0x20 - uVar4;\n  }\n  uVar5 = uVar5 << (uVar4 & 0xff);\n  if (bVar8 || bVar9 != bVar10) {\n    uVar5 = uVar5 | uVar2 >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    uVar2 = uVar2 << (uVar4 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar7 < 0x381) {\n    return CONCAT44(uVar5 + (0x380 - uVar7) * 0x100000 | uVar1,uVar2);\n  }\n  uVar4 = ~(0x380 - uVar7);\n  if (0x1e < (int)uVar4) {\n    return CONCAT44(uVar3,uVar5 >> (uVar4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar6 = uVar4 - 0x13;\n  if (iVar6 == 0 || iVar6 < 0 != SCARRY4(uVar4 - 0x1f,0xc)) {\n    uVar4 = uVar4 + 1;\n    return CONCAT44(uVar1 | uVar5 >> (uVar4 & 0xff),\n                    uVar2 >> (uVar4 & 0xff) | uVar5 << (0x20 - uVar4 & 0xff));\n  }\n  return CONCAT44(uVar3,uVar2 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar5 << (0xcU - iVar6 & 0xff)) &\n         0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000418", 
            "calling": [
                "mpu6050_calc_pitch", 
                "HAL_TIM_PeriodElapsedCallback", 
                "mpu6050_calc_acc_pitch_roll"
            ], 
            "imported": false, 
            "current_name": "__aeabi_f2d"
        }, 
        "HAL_NVIC_SetPriority": {
            "renaming": {}, 
            "code": "\nvoid HAL_NVIC_SetPriority(IRQn_Type IRQn,uint32_t PreemptPriority,uint32_t SubPriority)\n\n{\n  uint32_t uVar1;\n  uint32_t prioritygroup;\n  \n  uVar1 = NVIC_GetPriorityGrouping();\n  uVar1 = NVIC_EncodePriority(uVar1,PreemptPriority,SubPriority);\n  NVIC_SetPriority(IRQn,uVar1);\n  return;\n}\n\n", 
            "called": [
                "NVIC_EncodePriority", 
                "NVIC_SetPriority", 
                "NVIC_GetPriorityGrouping"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800172a", 
            "calling": [
                "HAL_InitTick", 
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_NVIC_SetPriority"
        }, 
        "__aeabi_fcmpgt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpgt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfrcmple();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001030", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmpgt"
        }, 
        "__cmpsf2": {
            "renaming": {}, 
            "code": "\nuint __cmpsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f68", 
            "calling": [
                "__aeabi_cfcmpeq"
            ], 
            "imported": false, 
            "current_name": "__cmpsf2"
        }, 
        "USBWakeUp_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid USBWakeUp_IRQHandler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "USBWakeUp_IRQHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005830", 
            "calling": [
                "USBWakeUp_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "USBWakeUp_IRQHandler"
        }, 
        "__aeabi_fsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000bde:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000bde;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000aa4", 
            "calling": [
                "mpu6050_calc_pitch", 
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fsub"
        }, 
        "__pow5mult": {
            "renaming": {}, 
            "code": "\nundefined4 * __pow5mult(int param_1,undefined4 *param_2,uint param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  \n  if ((param_3 & 3) != 0) {\n    param_2 = (undefined4 *)\n              __multadd(param_1,param_2,\n                        *(undefined4 *)(PTR_p05_6092_08009440 + ((param_3 & 3) - 1) * 4),0);\n  }\n  iVar2 = (int)param_3 >> 2;\n  if (iVar2 != 0) {\n    puVar4 = *(undefined4 **)(param_1 + 0x48);\n    if (puVar4 == (undefined4 *)0x0) {\n      puVar4 = (undefined4 *)_Balloc(param_1,1);\n      puVar4[4] = 1;\n      puVar4[5] = 0x271;\n      *(undefined4 **)(param_1 + 0x48) = puVar4;\n      *puVar4 = 0;\n    }\n    puVar3 = param_2;\n    if (iVar2 << 0x1f < 0) goto LAB_080093d2;\nLAB_080093c4:\n    iVar2 = iVar2 >> 1;\n    puVar3 = puVar4;\n    if (iVar2 != 0) {\n      while( true ) {\n        puVar4 = (undefined4 *)*puVar3;\n        if (puVar4 == (undefined4 *)0x0) {\n          puVar4 = (undefined4 *)__multiply(param_1,puVar3,puVar3);\n          *puVar3 = puVar4;\n          *puVar4 = 0;\n        }\n        puVar3 = param_2;\n        if (-1 < iVar2 << 0x1f) break;\nLAB_080093d2:\n        param_2 = (undefined4 *)__multiply(param_1,puVar3,puVar4);\n        if (puVar3 == (undefined4 *)0x0) break;\n        iVar1 = *(int *)(param_1 + 0x4c);\n        iVar2 = iVar2 >> 1;\n        *puVar3 = *(undefined4 *)(iVar1 + puVar3[1] * 4);\n        *(undefined4 **)(iVar1 + puVar3[1] * 4) = puVar3;\n        puVar3 = puVar4;\n        if (iVar2 == 0) {\n          return param_2;\n        }\n      }\n      goto LAB_080093c4;\n    }\n  }\n  return param_2;\n}\n\n", 
            "called": [
                "_Balloc", 
                "__multiply", 
                "__multadd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080093a4", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__pow5mult"
        }, 
        "__aeabi_idiv0": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_idiv0(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080014ec", 
            "calling": [
                "__aeabi_uldivmod"
            ], 
            "imported": false, 
            "current_name": "__aeabi_idiv0"
        }, 
        "HAL_I2C_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001cb8", 
            "calling": [
                "HAL_I2C_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_MspInit"
        }, 
        "__aeabi_fcmpge": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpge(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800101c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmpge"
        }, 
        "HAL_TIM_TriggerCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003c80", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_TriggerCallback"
        }, 
        "__aeabi_fdiv": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fdiv(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e16:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000dcc:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e16;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e38;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000dcc;\n        goto LAB_08000e16;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e38:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000e20", 
            "calling": [
                "mpu6050_calc_acc_pitch_roll", 
                "mpu6050_calibrate"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fdiv"
        }, 
        "HAL_TIM_Base_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080035fa", 
            "calling": [
                "HAL_TIM_Base_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_Base_MspInit"
        }, 
        "TIM2_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid TIM2_IRQHandler(void)\n\n{\n  HAL_TIM_IRQHandler((TIM_HandleTypeDef *)PTR_htim2_08005724);\n  return;\n}\n\n", 
            "called": [
                "HAL_TIM_IRQHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005714", 
            "calling": [], 
            "imported": false, 
            "current_name": "TIM2_IRQHandler"
        }, 
        "HAL_TIM_ConfigClockSource": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim,TIM_ClockConfigTypeDef *sClockSourceConfig)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint uVar2;\n  uint32_t tmpsmcr;\n  \n  if (htim->Lock == HAL_LOCKED) {\n    HVar1 = HAL_BUSY;\n  }\n  else {\n    htim->Lock = HAL_LOCKED;\n    htim->State = HAL_TIM_STATE_BUSY;\n    htim->Instance->SMCR = htim->Instance->SMCR & 0xffff0088;\n    uVar2 = sClockSourceConfig->ClockSource;\n    if (uVar2 == 0x40) {\n      TIM_TI1_ConfigInputStage\n                (htim->Instance,sClockSourceConfig->ClockPolarity,sClockSourceConfig->ClockFilter);\n      TIM_ITRx_SetConfig(htim->Instance,0x40);\n    }\n    else if (uVar2 < 0x41) {\n      if (uVar2 == 0x10) {\n        TIM_ITRx_SetConfig(htim->Instance,0x10);\n      }\n      else if (uVar2 < 0x11) {\n        if (uVar2 == 0) {\n          TIM_ITRx_SetConfig(htim->Instance,0);\n        }\n      }\n      else if (uVar2 == 0x20) {\n        TIM_ITRx_SetConfig(htim->Instance,0x20);\n      }\n      else if (uVar2 == 0x30) {\n        TIM_ITRx_SetConfig(htim->Instance,0x30);\n      }\n    }\n    else if (uVar2 == 0x70) {\n      TIM_ETR_SetConfig(htim->Instance,sClockSourceConfig->ClockPrescaler,\n                        sClockSourceConfig->ClockPolarity,sClockSourceConfig->ClockFilter);\n      htim->Instance->SMCR = htim->Instance->SMCR & 0xffffff88 | 0x77;\n    }\n    else if (uVar2 < 0x71) {\n      if (uVar2 == 0x50) {\n        TIM_TI1_ConfigInputStage\n                  (htim->Instance,sClockSourceConfig->ClockPolarity,sClockSourceConfig->ClockFilter)\n        ;\n        TIM_ITRx_SetConfig(htim->Instance,0x50);\n      }\n      else if (uVar2 == 0x60) {\n        TIM_TI2_ConfigInputStage\n                  (htim->Instance,sClockSourceConfig->ClockPolarity,sClockSourceConfig->ClockFilter)\n        ;\n        TIM_ITRx_SetConfig(htim->Instance,0x60);\n      }\n    }\n    else if (uVar2 == 0x1000) {\n      htim->Instance->SMCR = htim->Instance->SMCR & 0xfffffff8;\n    }\n    else if (uVar2 == 0x2000) {\n      TIM_ETR_SetConfig(htim->Instance,sClockSourceConfig->ClockPrescaler,\n                        sClockSourceConfig->ClockPolarity,sClockSourceConfig->ClockFilter);\n      htim->Instance->SMCR = htim->Instance->SMCR | 0x4000;\n    }\n    htim->State = HAL_TIM_STATE_READY;\n    htim->Lock = HAL_UNLOCKED;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "TIM_TI2_ConfigInputStage", 
                "TIM_ETR_SetConfig", 
                "TIM_TI1_ConfigInputStage", 
                "TIM_ITRx_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003a94", 
            "calling": [
                "MX_TIM1_Init", 
                "MX_TIM2_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_ConfigClockSource"
        }, 
        "HAL_TIM_PWM_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  if (htim == (TIM_HandleTypeDef *)0x0) {\n    HVar1 = HAL_ERROR;\n  }\n  else {\n    if (htim->State == HAL_TIM_STATE_RESET) {\n      htim->Lock = HAL_UNLOCKED;\n      HAL_TIM_PWM_MspInit(htim);\n    }\n    htim->State = HAL_TIM_STATE_BUSY;\n    TIM_Base_SetConfig(htim->Instance,&htim->Init);\n    htim->State = HAL_TIM_STATE_READY;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "TIM_Base_SetConfig", 
                "HAL_TIM_PWM_MspInit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003640", 
            "calling": [
                "MX_TIM1_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_Init"
        }, 
        "__ledf2": {
            "renaming": {}, 
            "code": "\nuint __ledf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080008f4", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ledf2"
        }, 
        "__multadd": {
            "renaming": {}, 
            "code": "\nundefined4 * __multadd(int param_1,undefined4 *param_2,int param_3,uint param_4)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  int iVar3;\n  uint *puVar4;\n  int iVar5;\n  \n  iVar5 = 0;\n  iVar3 = param_2[4];\n  puVar4 = param_2 + 5;\n  do {\n    iVar5 = iVar5 + 1;\n    param_4 = param_3 * (*puVar4 & 0xffff) + param_4;\n    uVar2 = param_3 * (*puVar4 >> 0x10) + (param_4 >> 0x10);\n    *puVar4 = (param_4 & 0xffff) + uVar2 * 0x10000;\n    param_4 = uVar2 >> 0x10;\n    puVar4 = puVar4 + 1;\n  } while (iVar5 < iVar3);\n  puVar1 = param_2;\n  if (param_4 != 0) {\n    if ((int)param_2[2] <= iVar3) {\n      puVar1 = (undefined4 *)_Balloc(param_1,param_2[1] + 1);\n      memcpy(puVar1 + 3,param_2 + 3,(param_2[4] + 2) * 4);\n      iVar5 = *(int *)(param_1 + 0x4c);\n      *param_2 = *(undefined4 *)(iVar5 + param_2[1] * 4);\n      *(undefined4 **)(iVar5 + param_2[1] * 4) = param_2;\n    }\n    puVar1[iVar3 + 5] = param_4;\n    puVar1[4] = iVar3 + 1;\n  }\n  return puVar1;\n}\n\n", 
            "called": [
                "memcpy", 
                "_Balloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009120", 
            "calling": [
                "__pow5mult", 
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__multadd"
        }, 
        "HAL_TIM_PeriodElapsedCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)\n\n{\n  size_t len;\n  undefined4 uVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  float pid_pwm;\n  uint8_t out_pwm;\n  \n  mpu6050_update((Mpu6050 *)PTR_mpu6050_080051e0);\n  mpu6050_calc_pitch((Mpu6050 *)PTR_mpu6050_080051e0,(float *)PTR_pitch_080051e4);\n  flush_strbuf();\n  uVar5 = __aeabi_f2d(*(undefined4 *)PTR_pitch_080051e4);\n  sprintf(PTR_strbuf_080051ec,PTR_s_Pitch___f_080051e8,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  len = strlen(PTR_strbuf_080051ec);\n  uart_print(PTR_strbuf_080051ec,len);\n  uVar1 = __aeabi_fsub(*(undefined4 *)PTR_setpoint_080051f0,*(undefined4 *)PTR_pitch_080051e4);\n  *(undefined4 *)PTR_error_080051f4 = uVar1;\n  uVar1 = __aeabi_fmul(*(undefined4 *)PTR_Kp_080051f8,*(undefined4 *)PTR_error_080051f4);\n  *(undefined4 *)PTR_P_080051fc = uVar1;\n  uVar1 = __aeabi_fmul(*(undefined4 *)PTR_Ki_08005200,*(undefined4 *)PTR_error_080051f4);\n  uVar1 = __addsf3(uVar1,*(undefined4 *)PTR_I_08005204);\n  *(undefined4 *)PTR_I_08005204 = uVar1;\n  uVar1 = __floatsisf(*PTR_maxPwm_08005208);\n  iVar2 = __aeabi_fcmplt(uVar1,*(undefined4 *)PTR_I_08005204);\n  if (iVar2 == 0) {\n    uVar1 = __floatsisf(*PTR_minPwm_0800520c);\n    iVar2 = __aeabi_fcmpgt(uVar1,*(undefined4 *)PTR_I_08005204);\n    if (iVar2 != 0) {\n      uVar1 = __floatunsisf(*PTR_minPwm_0800520c);\n      *(undefined4 *)PTR_I_08005204 = uVar1;\n    }\n  }\n  else {\n    uVar1 = __floatunsisf(*PTR_maxPwm_08005208);\n    *(undefined4 *)PTR_I_08005204 = uVar1;\n  }\n  uVar4 = *(uint *)PTR_Kd_08005210;\n  uVar1 = __aeabi_fsub(*(undefined4 *)PTR_error_080051f4,*(undefined4 *)PTR_lastError_08005214);\n  uVar1 = __aeabi_fmul(uVar4 ^ 0x80000000,uVar1);\n  *(undefined4 *)PTR_D_08005218 = uVar1;\n  uVar1 = __addsf3(*(undefined4 *)PTR_P_080051fc,*(undefined4 *)PTR_I_08005204);\n  uVar1 = __addsf3(uVar1,*(undefined4 *)PTR_D_08005218);\n  uVar3 = __floatsisf(*PTR_maxPwm_08005208);\n  iVar2 = __aeabi_fcmpgt(uVar1,uVar3);\n  if (iVar2 == 0) {\n    uVar3 = __floatsisf(*PTR_minPwm_0800520c);\n    iVar2 = __aeabi_fcmplt(uVar1,uVar3);\n    if (iVar2 == 0) {\n      out_pwm = __fixunssfsi(uVar1);\n    }\n    else {\n      out_pwm = *PTR_minPwm_0800520c;\n    }\n  }\n  else {\n    out_pwm = *PTR_maxPwm_08005208;\n  }\n  *(undefined4 *)PTR_lastError_08005214 = *(undefined4 *)PTR_error_080051f4;\n  iVar2 = __aeabi_fcmpgt(*(undefined4 *)PTR_error_080051f4,0);\n  HAL_GPIO_WritePin(DAT_0800521c,2,iVar2 != 0);\n  iVar2 = __aeabi_fcmpgt(*(undefined4 *)PTR_error_080051f4,0);\n  HAL_GPIO_WritePin(DAT_0800521c,4,iVar2 == 0);\n  iVar2 = __aeabi_fcmpgt(*(undefined4 *)PTR_error_080051f4,0);\n  HAL_GPIO_WritePin(DAT_0800521c,8,iVar2 != 0);\n  iVar2 = __aeabi_fcmpgt(*(undefined4 *)PTR_error_080051f4,0);\n  HAL_GPIO_WritePin(DAT_0800521c,0x10,iVar2 == 0);\n  *(uint *)(*(int *)PTR_htim1_08005220 + 0x34) = (uint)out_pwm;\n  *(uint *)(*(int *)PTR_htim1_08005220 + 0x40) = (uint)out_pwm;\n  return;\n}\n\n", 
            "called": [
                "mpu6050_calc_pitch", 
                "__aeabi_fsub", 
                "__floatsisf", 
                "__aeabi_f2d", 
                "HAL_GPIO_WritePin", 
                "mpu6050_update", 
                "__aeabi_fcmpgt", 
                "__addsf3", 
                "__aeabi_fcmplt", 
                "flush_strbuf", 
                "sprintf", 
                "strlen", 
                "__fixunssfsi", 
                "uart_print", 
                "__floatunsisf", 
                "__aeabi_fmul"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f78", 
            "calling": [
                "HAL_SYSTICK_IRQHandler", 
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PeriodElapsedCallback"
        }, 
        "__ascii_wctomb": {
            "renaming": {}, 
            "code": "\nundefined * __ascii_wctomb(undefined4 *param_1,undefined *param_2,uint param_3)\n\n{\n  if (param_2 != (undefined *)0x0) {\n    if (param_3 < 0x100) {\n      *param_2 = (char)param_3;\n      param_2 = (undefined *)0x1;\n    }\n    else {\n      param_2 = (undefined *)0xffffffff;\n      *param_1 = 0x8a;\n    }\n  }\n  return param_2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009e50", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ascii_wctomb"
        }, 
        "_dtoa_r": {
            "renaming": {}, 
            "code": "\nchar * _dtoa_r(int param_1,undefined4 param_2,uint param_3,uint param_4,uint param_5,uint param_6,\n              int *param_7,uint *param_8,char **param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  int iVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  int iVar13;\n  char *pcVar14;\n  char *pcVar15;\n  undefined4 *puVar16;\n  undefined4 uVar17;\n  char *pcVar18;\n  int iVar19;\n  bool bVar20;\n  undefined8 uVar21;\n  undefined8 uVar22;\n  undefined8 uVar23;\n  uint local_80;\n  uint local_7c;\n  uint local_74;\n  int local_70;\n  uint local_68;\n  uint local_64;\n  int local_60;\n  int local_5c;\n  uint local_58;\n  int local_54;\n  uint local_48;\n  uint uStack_44;\n  uint local_38;\n  uint local_34;\n  int local_30;\n  int local_2c [2];\n  \n  iVar9 = *(int *)(param_1 + 0x40);\n  if (iVar9 != 0) {\n    uVar12 = *(uint *)(param_1 + 0x44);\n    *(uint *)(iVar9 + 4) = uVar12;\n    *(int *)(iVar9 + 8) = 1 << (uVar12 & 0xff);\n    _Bfree(param_1,iVar9);\n    *(undefined4 *)(param_1 + 0x40) = 0;\n  }\n  bVar20 = (int)param_4 < 0;\n  uVar12 = param_4;\n  if (bVar20) {\n    uVar12 = param_4 & 0x7fffffff;\n  }\n  *param_8 = (uint)bVar20;\n  local_7c = param_4;\n  if (bVar20) {\n    local_7c = uVar12;\n  }\n  uVar4 = local_7c;\n  if ((DAT_08007bf8 & ~uVar12) == 0) {\n    *param_7 = 9999;\n    if ((param_3 == 0) && ((uVar12 & 0xfffff) == 0)) {\n      if (param_9 == (char **)0x0) {\n        return PTR_s_Infinity_08007c08;\n      }\n      pcVar15 = PTR_s_Infinity_08007c08 + 8;\n      pcVar18 = PTR_s_Infinity_08007c08;\n    }\n    else {\n      if (param_9 == (char **)0x0) {\n        return PTR_DAT_08007c0c;\n      }\n      pcVar15 = PTR_DAT_08007c0c + 3;\n      pcVar18 = PTR_DAT_08007c0c;\n    }\n    *param_9 = pcVar15;\n    return pcVar18;\n  }\n  uVar21 = __aeabi_dcmpeq(param_3,local_7c,0,0);\n  local_60 = (int)uVar21;\n  if (local_60 != 0) {\n    *param_7 = 1;\n    if (param_9 != (char **)0x0) {\n      pcVar18 = PTR_DAT_08007bfc + -1;\n      *param_9 = PTR_DAT_08007bfc;\n      return pcVar18;\n    }\n    return PTR_DAT_08007c10;\n  }\n  uVar3 = __d2b(param_1,(int)((ulonglong)uVar21 >> 0x20),param_3,local_7c,local_2c,&local_30);\n  iVar9 = local_30;\n  if (uVar12 >> 0x14 == 0) {\n    iVar13 = local_2c[0] + local_30;\n    iVar10 = iVar13 + 0x432;\n    if (iVar10 < 0x21) {\n      uVar12 = param_3 << (0x20U - iVar10 & 0xff);\n    }\n    else {\n      uVar12 = param_3 >> (iVar13 + 0x412U & 0xff) | uVar12 << (0x40U - iVar10 & 0xff);\n    }\n    uVar21 = __floatunsidf(uVar12);\n    iVar13 = iVar13 + -1;\n    local_60 = 1;\n    uVar5 = (int)((ulonglong)uVar21 >> 0x20) + 0xfe100000;\n    uVar12 = (uint)uVar21;\n  }\n  else {\n    iVar13 = (uVar12 >> 0x14) - 0x3ff;\n    uVar5 = local_7c & 0xfffff | 0x3ff00000;\n    uVar12 = param_3;\n  }\n  uVar21 = __subdf3(uVar12,uVar5,0,DAT_08007c00);\n  uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),DAT_08007be0,DAT_08007be4);\n  uVar21 = __aeabi_dadd((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),DAT_08007be8,DAT_08007bec);\n  uVar22 = __aeabi_i2d(iVar13);\n  uVar22 = __muldf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08007bf0,DAT_08007bf4);\n  uVar21 = __aeabi_dadd((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar22,\n                        (int)((ulonglong)uVar22 >> 0x20));\n  uVar8 = (undefined4)((ulonglong)uVar21 >> 0x20);\n  local_74 = __aeabi_d2iz();\n  iVar10 = __aeabi_dcmplt((int)uVar21,uVar8,0,0);\n  if (iVar10 != 0) {\n    uVar22 = __aeabi_i2d(local_74);\n    iVar10 = __aeabi_dcmpeq((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,uVar8);\n    if (iVar10 == 0) {\n      local_74 = local_74 - 1;\n    }\n  }\n  if (local_74 < 0x17) {\n    local_54 = __aeabi_dcmpgt(*(undefined4 *)(PTR___mprec_tens_08007c04 + local_74 * 8),\n                              *(undefined4 *)((int)(PTR___mprec_tens_08007c04 + local_74 * 8) + 4),\n                              param_3,local_7c);\n    if (local_54 != 0) {\n      local_74 = local_74 - 1;\n      local_54 = 0;\n    }\n  }\n  else {\n    local_54 = 1;\n  }\n  iVar10 = (iVar9 - iVar13) + -1;\n  if (iVar10 < 0) {\n    local_70 = 1 - (iVar9 - iVar13);\n    iVar10 = 0;\n  }\n  else {\n    local_70 = 0;\n  }\n  if ((int)local_74 < 0) {\n    local_58 = 0;\n    local_70 = local_70 - local_74;\n    local_5c = -local_74;\n  }\n  else {\n    iVar10 = iVar10 + local_74;\n    local_58 = local_74;\n    local_5c = 0;\n  }\n  if (9 < param_5) {\n    local_38 = 0xffffffff;\n    bVar20 = true;\n    local_68 = 0xffffffff;\n    local_64 = 1;\n    param_5 = 0;\n    param_6 = 0;\n    goto LAB_08007c24;\n  }\n  bVar20 = (int)param_5 < 6;\n  if (!bVar20) {\n    param_5 = param_5 - 4;\n  }\n  switch(param_5) {\n  case 2:\n    local_64 = 0;\n    break;\n  case 3:\n    local_64 = 0;\n    goto LAB_08008300;\n  case 4:\n    local_64 = 1;\n    break;\n  case 5:\n    local_64 = 1;\nLAB_08008300:\n    local_38 = local_74 + param_6;\n    local_68 = local_38 + 1;\n    uVar12 = local_68;\n    if ((int)local_68 < 1) {\n      uVar12 = 1;\n    }\n    goto LAB_08008314;\n  default:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    pcVar18 = (char *)_Balloc(param_1,0);\n    local_38 = 0xffffffff;\n    local_68 = 0xffffffff;\n    param_6 = 0;\n    *(char **)(param_1 + 0x40) = pcVar18;\n    local_64 = 1;\n    goto LAB_08007e36;\n  }\n  if ((int)param_6 < 1) {\n    local_38 = 1;\n    param_6 = 1;\n    local_68 = 1;\nLAB_08007c24:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    uVar5 = local_38;\n  }\n  else {\n    local_38 = param_6;\n    local_68 = param_6;\n    uVar12 = param_6;\nLAB_08008314:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    uVar5 = local_68;\n    if (0x17 < (int)uVar12) {\n      iVar13 = 4;\n      iVar9 = 1;\n      do {\n        iVar19 = iVar9;\n        iVar13 = iVar13 * 2;\n        iVar9 = iVar19 + 1;\n      } while (iVar13 + 0x14U <= uVar12);\n      *(int *)(param_1 + 0x44) = iVar19;\n    }\n  }\n  pcVar18 = (char *)_Balloc(param_1);\n  *(char **)(param_1 + 0x40) = pcVar18;\n  if ((uVar5 < 0xf) && (bVar20)) {\n    if ((int)local_74 < 1) {\n      if (local_74 == 0) {\n        iVar9 = 2;\n        local_80 = param_3;\n      }\n      else {\n        uVar21 = __muldf3(param_3,local_7c,\n                          *(undefined4 *)(PTR___mprec_tens_080086cc + (-local_74 & 0xf) * 8),\n                          *(undefined4 *)\n                           ((int)(PTR___mprec_tens_080086cc + (-local_74 & 0xf) * 8) + 4));\n        local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n        local_80 = (uint)uVar21;\n        iVar13 = (int)-local_74 >> 4;\n        if (iVar13 == 0) {\n          iVar9 = 2;\n        }\n        else {\n          bVar20 = false;\n          iVar9 = 2;\n          puVar16 = (undefined4 *)PTR___mprec_bigtens_080086d0;\n          do {\n            if (iVar13 << 0x1f < 0) {\n              uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),*puVar16,puVar16[1]);\n              bVar20 = true;\n              iVar9 = iVar9 + 1;\n            }\n            iVar13 = iVar13 >> 1;\n            puVar16 = puVar16 + 2;\n          } while (iVar13 != 0);\n          if (bVar20) {\n            local_80 = (uint)uVar21;\n            local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n          }\n        }\n      }\n    }\n    else {\n      uVar12 = (int)local_74 >> 4;\n      uVar21 = *(undefined8 *)(PTR___mprec_tens_08007ec4 + (local_74 & 0xf) * 8);\n      if ((int)(uVar12 << 0x1b) < 0) {\n        uVar22 = __divdf3(param_3,local_7c,*(undefined4 *)(PTR___mprec_bigtens_08007ec8 + 0x20),\n                          *(undefined4 *)(PTR___mprec_bigtens_08007ec8 + 0x24));\n        uStack_44 = (uint)((ulonglong)uVar22 >> 0x20);\n        local_48 = (uint)uVar22;\n        iVar9 = 3;\n        uVar12 = uVar12 & 0xf;\n        puVar16 = (undefined4 *)PTR___mprec_bigtens_08007ec8;\n      }\n      else {\n        iVar9 = 2;\n        uStack_44 = local_7c;\n        puVar16 = (undefined4 *)PTR___mprec_bigtens_08007ec8;\n        local_48 = param_3;\n      }\n      while( true ) {\n        uVar8 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        if (uVar12 == 0) break;\n        if ((int)(uVar12 << 0x1f) < 0) {\n          uVar21 = __muldf3((int)uVar21,uVar8,*puVar16,puVar16[1]);\n          iVar9 = iVar9 + 1;\n        }\n        uVar12 = (int)uVar12 >> 1;\n        puVar16 = puVar16 + 2;\n      }\n      uVar21 = __divdf3(local_48,uStack_44,(int)uVar21,uVar8);\n      local_80 = (uint)uVar21;\n      local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n    }\n    uVar21 = CONCAT44(local_7c,local_80);\n    if ((local_54 != 0) && (iVar13 = __aeabi_dcmplt(local_80,local_7c,0,DAT_08007ecc), iVar13 != 0))\n    {\n      if (local_68 == 0) {\n        uVar21 = __aeabi_i2d(iVar9);\n        uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),local_80,local_7c);\n        uVar21 = __aeabi_dadd((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080086d4);\n        uVar8 = (undefined4)uVar21;\n        iVar9 = (int)((ulonglong)uVar21 >> 0x20) + -0x3400000;\n        goto LAB_0800852e;\n      }\n      if (0 < (int)local_38) {\n        uVar21 = __muldf3(local_80,local_7c,0,DAT_0800880c);\n        uVar22 = __aeabi_i2d(iVar9 + 1);\n        uVar22 = __muldf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,\n                          (int)((ulonglong)uVar21 >> 0x20));\n        uVar22 = __aeabi_dadd((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08008810);\n        uVar8 = (undefined4)uVar22;\n        local_48 = local_38;\n        local_34 = local_74 - 1;\n        iVar9 = (int)((ulonglong)uVar22 >> 0x20) + -0x3400000;\n        goto LAB_08007cfa;\n      }\n      goto LAB_08007e36;\n    }\n    uVar22 = __aeabi_i2d(iVar9);\n    uVar22 = __muldf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),local_80,local_7c);\n    uVar22 = __aeabi_dadd((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08007ed0);\n    uVar8 = (undefined4)uVar22;\n    iVar9 = (int)((ulonglong)uVar22 >> 0x20) + -0x3400000;\n    if (local_68 != 0) {\n      local_34 = local_74;\n      local_48 = local_68;\nLAB_08007cfa:\n      local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n      local_80 = (uint)uVar21;\n      cVar1 = __aeabi_d2iz(local_80,local_7c);\n      cVar1 = cVar1 + '0';\n      uVar11 = *(undefined4 *)(PTR___mprec_tens_08007ec4 + local_48 * 8 + -8);\n      uVar7 = *(undefined4 *)(PTR___mprec_tens_08007ec4 + local_48 * 8 + -4);\n      uVar21 = __aeabi_i2d();\n      uVar21 = __subdf3(local_80,local_7c,(int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n      uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n      pcVar15 = pcVar18 + 1;\n      if (local_64 == 0) {\n        uVar22 = __muldf3(uVar8,iVar9,uVar11,uVar7);\n        uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n        *pcVar18 = cVar1;\n        if (local_48 != 1) {\n          pcVar14 = pcVar15;\n          do {\n            uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080086d8);\n            cVar1 = __aeabi_d2iz();\n            uVar23 = __aeabi_i2d();\n            uVar21 = __subdf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar23,\n                              (int)((ulonglong)uVar23 >> 0x20));\n            pcVar15 = pcVar14 + 1;\n            *pcVar14 = cVar1 + '0';\n            pcVar14 = pcVar15;\n          } while (pcVar15 != pcVar18 + local_48);\n        }\n        uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        uVar23 = __aeabi_dadd((int)uVar22,uVar8,0,DAT_080086dc);\n        iVar9 = __aeabi_dcmplt((int)uVar23,(int)((ulonglong)uVar23 >> 0x20),(int)uVar21,uVar11);\n        if (iVar9 == 0) {\n          uVar22 = __subdf3(0,DAT_08008814,(int)uVar22,uVar8);\n          iVar9 = __aeabi_dcmpgt((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,uVar11);\n          pcVar14 = pcVar15;\n          if (iVar9 == 0) goto LAB_08007e36;\n          do {\n            pcVar15 = pcVar14;\n            pcVar14 = pcVar15 + -1;\n          } while (pcVar15[-1] == '0');\n          goto LAB_08008784;\n        }\n        local_74 = local_34;\n        cVar1 = pcVar15[-1];\n      }\n      else {\n        uVar22 = __divdf3(0,DAT_08007ed4,uVar11,uVar7);\n        uVar22 = __subdf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),uVar8,iVar9);\n        uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n        *pcVar18 = cVar1;\n        iVar9 = __aeabi_dcmpgt((int)uVar22,uVar8,(int)uVar21,uVar17);\n        if (iVar9 != 0) {\nLAB_08008784:\n          local_74 = local_34;\n          goto LAB_08008294;\n        }\n        uVar23 = __subdf3(0,DAT_08007ecc,(int)uVar21,uVar17);\n        iVar9 = __aeabi_dcmpgt((int)uVar22,uVar8,(int)uVar23,(int)((ulonglong)uVar23 >> 0x20));\n        if (iVar9 == 0) {\n          if (local_48 != 1) {\n            pcVar14 = pcVar15;\n            do {\n              uVar22 = __muldf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08007ed8);\n              uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n              uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_08007ed8);\n              cVar1 = __aeabi_d2iz();\n              uVar23 = __aeabi_i2d();\n              uVar21 = __subdf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar23,\n                                (int)((ulonglong)uVar23 >> 0x20));\n              uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n              cVar1 = cVar1 + '0';\n              pcVar15 = pcVar14 + 1;\n              *pcVar14 = cVar1;\n              iVar9 = __aeabi_dcmplt((int)uVar21,uVar11,(int)uVar22,uVar8);\n              if (iVar9 != 0) {\n                local_74 = local_34;\n                goto LAB_08008294;\n              }\n              uVar23 = __subdf3(0,DAT_08007ecc,(int)uVar21,uVar11);\n              iVar9 = __aeabi_dcmplt((int)uVar23,(int)((ulonglong)uVar23 >> 0x20),(int)uVar22,uVar8)\n              ;\n              if (iVar9 != 0) goto LAB_08008798;\n              pcVar14 = pcVar15;\n            } while (pcVar15 != pcVar18 + local_48);\n          }\n          goto LAB_08007e36;\n        }\nLAB_08008798:\n        local_74 = local_34;\n      }\n      goto LAB_08007f7c;\n    }\nLAB_0800852e:\n    uVar21 = __subdf3(local_80,local_7c,0,DAT_080086c8);\n    uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n    uVar12 = __aeabi_dcmpgt((int)uVar21,uVar11,uVar8,iVar9);\n    if (uVar12 == 0) {\n      iVar9 = __aeabi_dcmplt((int)uVar21,uVar11,uVar8,iVar9 + -0x80000000);\n      uVar5 = uVar12;\n      pcVar15 = pcVar18;\n      if (iVar9 == 0) goto LAB_08007e36;\n      goto LAB_080084f0;\n    }\n    local_68 = 0;\n    uVar12 = 0;\nLAB_08008406:\n    *pcVar18 = '1';\n    local_74 = local_74 + 1;\n    pcVar15 = pcVar18 + 1;\n    uVar5 = local_68;\nLAB_08008416:\n    _Bfree(param_1,uVar5);\n    if (uVar12 == 0) goto LAB_08008294;\n  }\n  else {\nLAB_08007e36:\n    pcVar15 = pcVar18;\n    if ((-1 < local_2c[0]) && ((int)local_74 < 0xf)) {\n      uVar8 = *(undefined4 *)(PTR___mprec_tens_08007ec4 + local_74 * 8);\n      uVar11 = *(undefined4 *)((int)(PTR___mprec_tens_08007ec4 + local_74 * 8) + 4);\n      if ((-1 < (int)param_6) || (0 < (int)local_68)) {\n        __divdf3(param_3,uVar4,uVar8,uVar11);\n        bVar2 = __aeabi_d2iz();\n        uVar21 = __aeabi_i2d();\n        uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),uVar8,uVar11);\n        uVar21 = __subdf3(param_3,uVar4,(int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n        *pcVar18 = bVar2 + 0x30;\n        pcVar15 = pcVar18 + 1;\n        if (local_68 != 1) {\n          uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_08007ed8);\n          iVar9 = __aeabi_dcmpeq((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,0);\n          while (iVar9 == 0) {\n            uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n            __divdf3((int)uVar21,uVar17,uVar8,uVar11);\n            bVar2 = __aeabi_d2iz();\n            uVar22 = __aeabi_i2d();\n            uVar22 = __muldf3((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),uVar8,uVar11);\n            uVar21 = __subdf3((int)uVar21,uVar17,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n            pcVar14 = pcVar15 + 1;\n            *pcVar15 = bVar2 + 0x30;\n            pcVar15 = pcVar14;\n            if (local_68 == (int)pcVar14 - (int)pcVar18) goto LAB_08007f3a;\n            uVar21 = __muldf3((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080081f8);\n            iVar9 = __aeabi_dcmpeq((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,0);\n          }\n          goto LAB_08008294;\n        }\nLAB_08007f3a:\n        uVar21 = __aeabi_dadd((int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n        uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        iVar9 = __aeabi_dcmpgt((int)uVar21,uVar17,uVar8,uVar11);\n        if ((iVar9 == 0) &&\n           ((iVar9 = __aeabi_dcmpeq((int)uVar21,uVar17,uVar8,uVar11), iVar9 == 0 ||\n            ((bVar2 & 1) == 0)))) goto LAB_08008294;\n        cVar1 = pcVar15[-1];\nLAB_08007f7c:\n        while (pcVar14 = pcVar15 + -1, cVar1 == '9') {\n          if (pcVar18 == pcVar14) {\n            *pcVar18 = '0';\n            cVar1 = pcVar15[-1];\n            local_74 = local_74 + 1;\n            pcVar14 = pcVar18;\n            break;\n          }\n          cVar1 = pcVar15[-2];\n          pcVar15 = pcVar14;\n        }\n        *pcVar14 = cVar1 + '\\x01';\n        goto LAB_08008294;\n      }\n      if (local_68 == 0) {\n        uVar21 = __muldf3(uVar8,uVar11,0,DAT_080086c8);\n        iVar9 = __aeabi_dcmpge((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),param_3,uVar4);\n        uVar12 = local_68;\n        uVar5 = local_68;\n        if (iVar9 == 0) goto LAB_08008406;\n      }\n      else {\n        uVar12 = 0;\n        uVar5 = 0;\n      }\nLAB_080084f0:\n      local_74 = ~param_6;\n      pcVar18 = pcVar15;\n      goto LAB_08008416;\n    }\n    iVar9 = local_5c;\n    if (local_64 == 0) {\n      local_60 = local_70;\n      uVar12 = local_64;\n    }\n    else {\n      if ((int)param_5 < 2) {\n        if (local_60 == 0) {\n          local_60 = local_70;\n          local_70 = local_70 + (0x36 - local_30);\n          iVar10 = iVar10 + (0x36 - local_30);\n        }\n        else {\n          local_60 = local_70;\n          local_70 = local_70 + local_2c[0] + 0x433;\n          iVar10 = iVar10 + local_2c[0] + 0x433;\n        }\n      }\n      else {\n        iVar13 = local_68 - 1;\n        if (local_5c < iVar13) {\n          local_58 = local_58 + (iVar13 - local_5c);\n          iVar9 = 0;\n          local_5c = iVar13;\n        }\n        else {\n          iVar9 = local_5c - iVar13;\n        }\n        if ((int)local_68 < 0) {\n          local_60 = local_70 - local_68;\n        }\n        else {\n          iVar10 = iVar10 + local_68;\n          local_60 = local_70;\n          local_70 = local_70 + local_68;\n        }\n      }\n      uVar12 = __i2b(param_1,1);\n    }\n    if ((0 < local_60) && (0 < iVar10)) {\n      iVar13 = local_60;\n      if (iVar10 <= local_60) {\n        iVar13 = iVar10;\n      }\n      iVar10 = iVar10 - iVar13;\n      local_70 = local_70 - iVar13;\n      local_60 = local_60 - iVar13;\n    }\n    if (local_5c != 0) {\n      if (local_64 == 0) {\n        uVar3 = __pow5mult(param_1,uVar3,local_5c);\n      }\n      else {\n        uVar8 = uVar3;\n        if (iVar9 != 0) {\n          uVar12 = __pow5mult(param_1,uVar12,iVar9);\n          uVar8 = __multiply(param_1,uVar12,uVar3);\n          _Bfree(param_1,uVar3);\n          uVar3 = uVar8;\n          if (local_5c - iVar9 == 0) goto LAB_08008062;\n        }\n        uVar3 = __pow5mult(param_1,uVar8,local_5c - iVar9);\n      }\n    }\nLAB_08008062:\n    uVar5 = __i2b(param_1,1);\n    if (local_58 == 0) {\n      if (((int)param_5 < 2) && (param_3 == 0)) {\nLAB_0800835a:\n        if ((uVar4 & 0xfffff) == 0) {\n          uVar4 = uVar4 & 0x7ff00000;\n          if (uVar4 != 0) {\n            iVar10 = iVar10 + 1;\n            local_70 = local_70 + 1;\n            uVar4 = 1;\n          }\n        }\n        else {\n          uVar4 = 0;\n        }\n        bVar20 = local_58 != 0;\n        uVar6 = param_3;\n        local_58 = uVar4;\n        if (bVar20) goto LAB_080082d4;\n      }\n      iVar9 = 1;\n    }\n    else {\n      uVar21 = __pow5mult(param_1,uVar5);\n      uVar5 = (uint)uVar21;\n      if (((int)param_5 < 2) && (param_3 == 0)) goto LAB_0800835a;\n      local_58 = 0;\n      uVar6 = (uint)((ulonglong)uVar21 >> 0x20);\nLAB_080082d4:\n      iVar9 = __hi0bits(*(undefined4 *)(uVar5 + *(int *)(uVar5 + 0x10) * 4 + 0x10),uVar6);\n      iVar9 = 0x20 - iVar9;\n    }\n    uVar4 = iVar9 + iVar10 & 0x1f;\n    if (uVar4 == 0) {\n      iVar9 = 0x1c;\nLAB_08008096:\n      iVar10 = iVar10 + iVar9;\n      local_70 = local_70 + iVar9;\n      local_60 = local_60 + iVar9;\n    }\n    else {\n      if (4 < (int)(0x20 - uVar4)) {\n        iVar9 = 0x1c - uVar4;\n        goto LAB_08008096;\n      }\n      if (0x20 - uVar4 != 4) {\n        iVar9 = 0x3c - uVar4;\n        goto LAB_08008096;\n      }\n    }\n    if (0 < local_70) {\n      uVar3 = __lshift(param_1,uVar3,local_70);\n    }\n    if (0 < iVar10) {\n      uVar5 = __lshift(param_1,uVar5,iVar10);\n    }\n    pcVar14 = pcVar18;\n    if ((local_54 != 0) && (iVar9 = __mcmp(uVar3,uVar5), iVar9 < 0)) {\n      local_74 = local_74 - 1;\n      uVar3 = __multadd(param_1,uVar3,10,0);\n      if (local_64 == 0) {\n        if ((0 < (int)local_38) || ((int)param_5 < 3)) {\n          local_68 = local_38;\n          goto LAB_0800820a;\n        }\n      }\n      else {\n        uVar12 = __multadd(param_1,uVar12,10,0);\n        if ((0 < (int)local_38) || ((int)param_5 < 3)) {\n          local_68 = local_38;\n          goto LAB_080080de;\n        }\n      }\n      local_68 = local_38;\nLAB_080084e8:\n      if (local_68 == 0) {\n        local_68 = __multadd(param_1,uVar5,5);\n        iVar9 = __mcmp(uVar3,local_68);\n        uVar5 = local_68;\n        if (0 < iVar9) goto LAB_08008406;\n      }\n      goto LAB_080084f0;\n    }\n    if (((int)local_68 < 1) && (2 < (int)param_5)) goto LAB_080084e8;\n    if (local_64 == 0) {\nLAB_0800820a:\n      while( true ) {\n        iVar19 = quorem(uVar3,uVar5);\n        iVar19 = iVar19 + 0x30;\n        pcVar15 = pcVar14 + 1;\n        *pcVar14 = (char)iVar19;\n        if ((int)local_68 <= (int)pcVar15 - (int)pcVar18) break;\n        uVar3 = __multadd(param_1,uVar3,10,0);\n        pcVar14 = pcVar15;\n      }\n      local_80 = 0;\n    }\n    else {\nLAB_080080de:\n      local_80 = uVar12;\n      if (0 < local_60) {\n        local_80 = __lshift(param_1,uVar12,local_60);\n      }\n      uVar12 = local_80;\n      if (local_58 != 0) {\n        iVar9 = _Balloc(param_1,*(undefined4 *)(local_80 + 4));\n        memcpy((void *)(iVar9 + 0xc),(void *)(local_80 + 0xc),(*(int *)(local_80 + 0x10) + 2) * 4);\n        uVar12 = __lshift(param_1,iVar9,1);\n      }\nLAB_08008108:\n      iVar9 = quorem(uVar3,uVar5);\n      iVar13 = __mcmp(uVar3,local_80);\n      iVar10 = __mdiff(param_1,uVar5,uVar12);\n      iVar19 = iVar9 + 0x30;\n      if (*(int *)(iVar10 + 0xc) == 0) {\n        uVar4 = __mcmp(uVar3);\n        _Bfree(param_1,iVar10);\n        if (((uVar4 != 0) || (param_5 != 0)) || (uVar4 = param_5, (param_3 & 1) != 0))\n        goto LAB_0800815a;\n        if (iVar19 != 0x39) {\n          if (0 < iVar13) {\nLAB_0800874c:\n            iVar19 = iVar9 + 0x31;\n          }\n          goto LAB_080085a4;\n        }\nLAB_08008752:\n        pcVar15 = pcVar14 + 1;\n        cVar1 = '9';\n        *pcVar14 = '9';\n        goto LAB_08008268;\n      }\n      _Bfree(param_1,iVar10);\n      uVar4 = 1;\nLAB_0800815a:\n      if ((iVar13 < 0) || (((iVar13 == 0 && (param_5 == 0)) && ((param_3 & 1) == 0)))) {\n        if (0 < (int)uVar4) {\n          uVar3 = __lshift(param_1,uVar3,1);\n          iVar13 = __mcmp(uVar3,uVar5);\n          if ((0 < iVar13) || ((iVar13 == 0 && (iVar9 << 0x1f < 0)))) {\n            if (iVar19 != 0x39) goto LAB_0800874c;\n            goto LAB_08008752;\n          }\n        }\nLAB_080085a4:\n        pcVar15 = pcVar14 + 1;\n        *pcVar14 = (char)iVar19;\n        goto LAB_08008274;\n      }\n      pcVar15 = pcVar14 + 1;\n      if (0 < (int)uVar4) {\n        if (iVar19 == 0x39) goto LAB_08008752;\n        *pcVar14 = (char)iVar9 + '1';\n        goto LAB_08008274;\n      }\n      *pcVar14 = (char)iVar19;\n      if (pcVar18 + (local_68 - 1) != pcVar14) {\n        uVar3 = __multadd(param_1,uVar3,10,0);\n        pcVar14 = pcVar15;\n        if (local_80 == uVar12) {\n          local_80 = __multadd(param_1,local_80,10,0);\n          uVar12 = local_80;\n        }\n        else {\n          local_80 = __multadd(param_1,local_80,10,0);\n          uVar12 = __multadd(param_1,uVar12,10,0);\n        }\n        goto LAB_08008108;\n      }\n    }\n    uVar3 = __lshift(param_1,uVar3,1);\n    iVar9 = __mcmp(uVar3,uVar5);\n    cVar1 = pcVar15[-1];\n    if ((0 < iVar9) || ((iVar9 == 0 && (iVar19 << 0x1f < 0)))) {\nLAB_08008268:\n      do {\n        pcVar14 = pcVar15 + -1;\n        if (cVar1 != '9') goto code_r0x08008270;\n        if (pcVar18 == pcVar14) {\n          *pcVar18 = '1';\n          local_74 = local_74 + 1;\n          goto LAB_08008274;\n        }\n        cVar1 = pcVar15[-2];\n        pcVar15 = pcVar14;\n      } while( true );\n    }\n    while (cVar1 == '0') {\n      cVar1 = pcVar15[-2];\n      pcVar15 = pcVar15 + -1;\n    }\nLAB_08008274:\n    _Bfree(param_1,uVar5);\n    if (uVar12 == 0) goto LAB_08008294;\n    if ((local_80 != 0) && (local_80 != uVar12)) {\n      _Bfree(param_1);\n    }\n  }\n  _Bfree(param_1,uVar12);\nLAB_08008294:\n  _Bfree(param_1,uVar3);\n  *pcVar15 = '\\0';\n  *param_7 = local_74 + 1;\n  if (param_9 == (char **)0x0) {\n    return pcVar18;\n  }\n  *param_9 = pcVar15;\n  return pcVar18;\ncode_r0x08008270:\n  *pcVar14 = cVar1 + '\\x01';\n  goto LAB_08008274;\n}\n\n", 
            "called": [
                "_Balloc", 
                "memcpy", 
                "__aeabi_dadd", 
                "__mcmp", 
                "__muldf3", 
                "__multiply", 
                "__aeabi_dcmpeq", 
                "__aeabi_dcmpgt", 
                "__pow5mult", 
                "__d2b", 
                "__divdf3", 
                "__lshift", 
                "__i2b", 
                "__subdf3", 
                "__floatunsidf", 
                "__mdiff", 
                "__aeabi_dcmpge", 
                "__aeabi_i2d", 
                "__multadd", 
                "quorem", 
                "__hi0bits", 
                "_Bfree", 
                "__aeabi_dcmplt", 
                "__aeabi_d2iz"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080079e8", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "_dtoa_r"
        }, 
        "HAL_IncTick": {
            "renaming": {}, 
            "code": "\nvoid HAL_IncTick(void)\n\n{\n  *(uint *)PTR_uwTick_0800159c = *(int *)PTR_uwTick_0800159c + (uint)(byte)*PTR_uwTickFreq_08001598;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800157c", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "HAL_IncTick"
        }, 
        "__ltsf2": {
            "renaming": {}, 
            "code": "\nuint __ltsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f60", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ltsf2"
        }, 
        "fabs": {
            "renaming": {}, 
            "code": "\ndouble fabs(double __x)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005d0c", 
            "calling": [
                "__ieee754_atan2", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "fabs"
        }, 
        "__aeabi_cdcmpeq": {
            "renaming": {}, 
            "code": "\nundefined4 __aeabi_cdcmpeq(undefined4 param_1)\n\n{\n  __nedf2();\n  return param_1;\n}\n\n", 
            "called": [
                "__nedf2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000988", 
            "calling": [
                "__aeabi_dcmple", 
                "__aeabi_dcmpeq", 
                "__aeabi_cdrcmple", 
                "__aeabi_dcmplt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cdcmpeq"
        }, 
        "__retarget_lock_acquire_recursive": {
            "renaming": {}, 
            "code": "\nvoid __retarget_lock_acquire_recursive(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08008af0", 
            "calling": [
                "__register_exitproc", 
                "__malloc_lock"
            ], 
            "imported": false, 
            "current_name": "__retarget_lock_acquire_recursive"
        }, 
        "DebugMon_Handler": {
            "renaming": {}, 
            "code": "\nvoid DebugMon_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056ec", 
            "calling": [], 
            "imported": false, 
            "current_name": "DebugMon_Handler"
        }, 
        "HAL_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_MspInit(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002d8a", 
            "calling": [
                "HAL_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_MspInit"
        }, 
        "uart_print": {
            "renaming": {}, 
            "code": "\nvoid uart_print(char *str,uint32_t len)\n\n{\n  HAL_UART_Transmit((UART_HandleTypeDef *)PTR_huart1_08004f5c,(uint8_t *)str,(uint16_t)len,0x32);\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_Transmit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f3c", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "uart_print"
        }, 
        "MX_USART1_UART_Init": {
            "renaming": {}, 
            "code": "\nvoid MX_USART1_UART_Init(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  *(undefined4 *)PTR_huart1_080055e8 = DAT_080055ec;\n  *(undefined4 *)(PTR_huart1_080055e8 + 4) = 0x1c200;\n  *(undefined4 *)(PTR_huart1_080055e8 + 8) = 0;\n  *(undefined4 *)(PTR_huart1_080055e8 + 0xc) = 0;\n  *(undefined4 *)(PTR_huart1_080055e8 + 0x10) = 0;\n  *(undefined4 *)(PTR_huart1_080055e8 + 0x14) = 0xc;\n  *(undefined4 *)(PTR_huart1_080055e8 + 0x18) = 0;\n  *(undefined4 *)(PTR_huart1_080055e8 + 0x1c) = 0;\n  HVar1 = HAL_UART_Init((UART_HandleTypeDef *)PTR_huart1_080055e8);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080055f0,0x1ed);\n  }\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_UART_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005598", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "MX_USART1_UART_Init"
        }, 
        "__aeabi_frsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_frsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_1 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = param_2;\n      if (iVar7 == -1) {\n        uVar4 = uVar2;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        param_2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == param_2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        uVar2 = param_2;\n      }\n      return uVar2;\n    }\n    if (uVar2 != param_2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      param_1 = param_1 << 1;\n      if ((uVar2 & 0x80000000) != 0) {\n        param_1 = param_1 | 0x80000000;\n      }\n      return param_1;\n    }\n    if (uVar4 < 0xfe000000) {\n      return uVar2 + 0x800000;\n    }\n    uVar2 = uVar2 & 0x80000000;\nLAB_08000bde:\n    return uVar2 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return uVar2;\n  }\n  uVar4 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  uVar2 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar6 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar6 != 0);\n    uVar6 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar5 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar5 & 0xff);\n      if ((int)uVar6 < (int)uVar5) {\n        uVar4 = uVar4 >> (-(uVar6 - uVar5) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | uVar2;\n    }\n  }\n  else {\n    uVar6 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar6 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar6 != 0) << 0x1f | uVar3 >> 1;\n      uVar6 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000bde;\n    }\n  }\n  uVar4 = uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | uVar2;\n}\n\n", 
            "called": [
                "__addsf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000a9c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_frsub"
        }, 
        "__aeabi_cdrcmple": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_cdrcmple(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  __aeabi_cdcmpeq(param_3,param_4,param_1,param_2);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000978", 
            "calling": [
                "__aeabi_dcmpgt", 
                "__aeabi_dcmpge"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cdrcmple"
        }, 
        "__unorddf2": {
            "renaming": {}, 
            "code": "\nundefined4 __unorddf2(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if ((((param_2 << 1) >> 0x15 != -1) || ((param_1 | param_2 << 0xc) == 0)) &&\n     (((param_4 << 1) >> 0x15 != -1 || ((param_3 | param_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001170", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__unorddf2"
        }, 
        "HAL_TIM_OC_DelayElapsedCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003c4a", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_OC_DelayElapsedCallback"
        }, 
        "memcpy": {
            "renaming": {}, 
            "code": "\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined *puVar4;\n  undefined4 *puVar5;\n  undefined *puVar6;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  \n  puVar3 = (undefined4 *)__dest;\n  if ((((uint)__src | (uint)__dest) & 3) != 0) {\n    if (__n < 8) {\n      uVar8 = __n - 4;\n      puVar1 = (undefined *)__dest;\n      if (3 < __n) {\n        do {\n          puVar6 = (undefined *)__src;\n          puVar4 = puVar1;\n          bVar9 = uVar8 != 0;\n          uVar8 = uVar8 - 1;\n          *puVar4 = *puVar6;\n          puVar1 = puVar4 + 1;\n          __src = puVar6 + 1;\n        } while (bVar9);\n        puVar4[1] = puVar6[1];\n        puVar4[2] = puVar6[2];\n        puVar4[3] = puVar6[3];\n        return __dest;\n      }\n      goto LAB_08001108;\n    }\n    if ((((uint)__src & 3) != 0) && (((uint)__dest & 3) != 0)) {\n      uVar8 = 4 - ((uint)__dest & 3);\n      __n = __n - uVar8;\n      puVar2 = (undefined4 *)__dest;\n      puVar5 = (undefined4 *)__src;\n                    /* WARNING: Load size is inaccurate */\n      if (((uint)__dest & 1) != 0) {\n        puVar5 = (undefined4 *)((int)__src + 1);\n        puVar2 = (undefined4 *)((int)__dest + 1);\n        *(undefined *)__dest = *__src;\n      }\n      puVar3 = puVar2;\n      __src = puVar5;\n      if ((uVar8 & 2) != 0) {\n        __src = (void *)((int)puVar5 + 2);\n        puVar3 = (undefined4 *)((int)puVar2 + 2);\n        *(undefined2 *)puVar2 = *(undefined2 *)puVar5;\n      }\n    }\n  }\n  while (0x3f < __n) {\n                    /* WARNING: Load size is inaccurate */\n    *puVar3 = *__src;\n    puVar3[1] = *(undefined4 *)((int)__src + 4);\n    puVar3[2] = *(undefined4 *)((int)__src + 8);\n    puVar3[3] = *(undefined4 *)((int)__src + 0xc);\n    puVar3[4] = *(undefined4 *)((int)__src + 0x10);\n    puVar3[5] = *(undefined4 *)((int)__src + 0x14);\n    puVar3[6] = *(undefined4 *)((int)__src + 0x18);\n    puVar3[7] = *(undefined4 *)((int)__src + 0x1c);\n    puVar3[8] = *(undefined4 *)((int)__src + 0x20);\n    puVar3[9] = *(undefined4 *)((int)__src + 0x24);\n    puVar3[10] = *(undefined4 *)((int)__src + 0x28);\n    puVar3[0xb] = *(undefined4 *)((int)__src + 0x2c);\n    puVar3[0xc] = *(undefined4 *)((int)__src + 0x30);\n    puVar3[0xd] = *(undefined4 *)((int)__src + 0x34);\n    puVar3[0xe] = *(undefined4 *)((int)__src + 0x38);\n    puVar3[0xf] = *(undefined4 *)((int)__src + 0x3c);\n    puVar3 = puVar3 + 0x10;\n    __src = (undefined4 *)((int)__src + 0x40);\n    __n = __n - 0x40;\n  }\n  uVar7 = __n - 0x10;\n  if (0xffffffcf < __n - 0x40) {\n    do {\n                    /* WARNING: Load size is inaccurate */\n      *puVar3 = *__src;\n      puVar3[1] = *(undefined4 *)((int)__src + 4);\n      puVar3[2] = *(undefined4 *)((int)__src + 8);\n      puVar3[3] = *(undefined4 *)((int)__src + 0xc);\n      puVar3 = puVar3 + 4;\n      __src = (void *)((int)__src + 0x10);\n      bVar9 = 0xf < uVar7;\n      uVar7 = uVar7 - 0x10;\n    } while (bVar9);\n  }\n  uVar8 = uVar7 + 0xc;\n  puVar5 = puVar3;\n  puVar2 = (undefined4 *)__src;\n  if (0xfffffff3 < uVar7) {\n    do {\n      __src = puVar2 + 1;\n      *puVar5 = *puVar2;\n      bVar9 = 3 < uVar8;\n      uVar8 = uVar8 - 4;\n      puVar3 = puVar5 + 1;\n      puVar5 = puVar5 + 1;\n      puVar2 = (undefined4 *)__src;\n    } while (bVar9);\n  }\nLAB_08001108:\n  if (uVar8 + 4 != 0) {\n    puVar2 = puVar3;\n    puVar5 = (undefined4 *)__src;\n                    /* WARNING: Load size is inaccurate */\n    if ((uVar8 & 1) != 0) {\n      puVar5 = (undefined4 *)((int)__src + 1);\n      puVar2 = (undefined4 *)((int)puVar3 + 1);\n      *(undefined *)puVar3 = *__src;\n    }\n    if ((uVar8 + 4 & 2) != 0) {\n      *(undefined2 *)puVar2 = *(undefined2 *)puVar5;\n    }\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001084", 
            "calling": [
                "__ssprint_r", 
                "__multadd", 
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "memcpy"
        }, 
        "__aeabi_fcmpeq": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpeq(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cfcmpeq();\n  return in_ZR != '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000fe0", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmpeq"
        }, 
        "HAL_TIM_Base_Start_IT": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)\n\n{\n  htim->Instance->DIER = htim->Instance->DIER | 1;\n  htim->Instance->CR1 = htim->Instance->CR1 | 1;\n  return HAL_OK;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800360c", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_Base_Start_IT"
        }, 
        "__libc_fini_array": {
            "renaming": {}, 
            "code": "\nvoid __libc_fini_array(void)\n\n{\n  int iVar1;\n  code **ppcVar2;\n  \n  iVar1 = (int)PTR___fini_array_end_08008844 -\n          (int)PTR___do_global_dtors_aux_fini_array_entry_08008848 >> 2;\n  if (iVar1 != 0) {\n    ppcVar2 = (code **)(PTR___do_global_dtors_aux_fini_array_entry_08008848 +\n                       (iVar1 + 0x3fffffff) * 4);\n    do {\n      iVar1 = iVar1 + -1;\n      (**ppcVar2)();\n      ppcVar2 = ppcVar2 + -1;\n    } while (iVar1 != 0);\n  }\n  _fini();\n  return;\n}\n\n", 
            "called": [
                "frame_dummy", 
                "__do_global_dtors_aux", 
                "_fini"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08008818", 
            "calling": [], 
            "imported": false, 
            "current_name": "__libc_fini_array"
        }, 
        "_init": {
            "renaming": {}, 
            "code": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  return (int)ctx;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009e68", 
            "calling": [
                "frame_dummy", 
                "__do_global_dtors_aux", 
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "_init"
        }, 
        "__floatundidf": {
            "renaming": {}, 
            "code": "\nulonglong __floatundidf(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  iVar7 = 0x432;\n  uVar8 = param_2 >> 0x16;\n  if (uVar8 != 0) {\n    iVar7 = 3;\n    if (param_2 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (param_2 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)param_2 >> 0x1f);\n    uVar8 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | param_2 << (0x20 - uVar4 & 0xff);\n    param_2 = param_2 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < param_2) {\n    if (0x1fffff < param_2) {\n      uVar4 = param_2 & 1;\n      param_2 = param_2 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar8 = (uint)(bVar1 & 1) << 0x1f | uVar8 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return 0x7ff0000000000000;\n      }\n    }\nLAB_08000268:\n    bVar10 = 0x7fffffff < uVar8;\n    if (uVar8 == 0x80000000) {\n      bVar10 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(param_2 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar10),param_1 + bVar10\n                   );\n  }\n  bVar9 = (uVar8 & 0x80000000) != 0;\n  uVar8 = uVar8 << 1;\n  uVar4 = param_1 * 2;\n  bVar10 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar9;\n  param_2 = param_2 * 2 + (uint)(bVar10 || CARRY4(uVar4,(uint)bVar9));\n  iVar7 = iVar7 + -1;\n  if ((param_2 & 0x100000) != 0) goto LAB_08000268;\n  uVar2 = param_1;\n  uVar4 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = count_leading_zeroes(uVar4);\n  if (param_2 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar11 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar10 = (int)uVar3 < 0;\n  bVar9 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar11 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar10 = iVar5 < 0;\n    bVar9 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && bVar10 == bVar11) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar8 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar9 || bVar10 != bVar11) {\n    uVar4 = uVar4 | uVar2 >> (uVar8 & 0xff);\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000,uVar2);\n  }\n  uVar8 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar8) {\n    return (ulonglong)(uVar4 >> (uVar8 - 0x1f & 0xff));\n  }\n  iVar7 = uVar8 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar8 - 0x1f,0xc)) {\n    uVar8 = uVar8 + 1;\n    return CONCAT44(uVar4 >> (uVar8 & 0xff),uVar2 >> (uVar8 & 0xff) | uVar4 << (0x20 - uVar8 & 0xff)\n                   );\n  }\n  return (ulonglong)(uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff));\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800045c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__floatundidf"
        }, 
        "NVIC_GetPriorityGrouping": {
            "renaming": {}, 
            "code": "\nuint32_t NVIC_GetPriorityGrouping(void)\n\n{\n  return *(uint *)(DAT_08001614 + 0xc) >> 8 & 7;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080015fc", 
            "calling": [
                "HAL_NVIC_SetPriority"
            ], 
            "imported": false, 
            "current_name": "NVIC_GetPriorityGrouping"
        }, 
        "HAL_I2C_Mem_Read": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize\n                ,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint uVar1;\n  HAL_StatusTypeDef HVar2;\n  uint32_t Tickstart;\n  uint32_t uVar3;\n  char cVar4;\n  uint uVar5;\n  int iVar6;\n  uint8_t *puVar7;\n  bool bVar8;\n  uint32_t tmpreg_3;\n  uint32_t tmpreg_2;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg;\n  uint32_t tickstart;\n  \n  Tickstart = HAL_GetTick();\n  uVar1 = DAT_080021e0;\n  if (hi2c->State == HAL_I2C_STATE_READY) {\n    do {\n      if ((uVar1 >> 0x10 & 0xff) == 1) {\n        uVar5 = uVar1 & ~hi2c->Instance->SR1 & 0xffff;\n        bVar8 = uVar5 == 0;\n        if (bVar8) {\n          uVar5 = 1;\n        }\n        cVar4 = (char)uVar5;\n        if (!bVar8) {\n          cVar4 = '\\0';\n        }\n      }\n      else {\n        uVar5 = uVar1 & ~hi2c->Instance->SR2 & 0xffff;\n        bVar8 = uVar5 == 0;\n        if (bVar8) {\n          uVar5 = 1;\n        }\n        cVar4 = (char)uVar5;\n        if (!bVar8) {\n          cVar4 = '\\0';\n        }\n      }\n      if (cVar4 != '\\x01') {\n        iVar6 = 0;\n        goto LAB_08002040;\n      }\n      uVar3 = HAL_GetTick();\n    } while (uVar3 - Tickstart < 0x1a);\n    hi2c->PreviousState = 0;\n    hi2c->State = HAL_I2C_STATE_READY;\n    hi2c->Mode = HAL_I2C_MODE_NONE;\n    hi2c->Lock = HAL_UNLOCKED;\n    iVar6 = 3;\nLAB_08002040:\n    if (iVar6 == 0) {\n      if (hi2c->Lock == HAL_LOCKED) {\n        HVar2 = HAL_BUSY;\n      }\n      else {\n        hi2c->Lock = HAL_LOCKED;\n        if ((hi2c->Instance->CR1 & 1) != 1) {\n          hi2c->Instance->CR1 = hi2c->Instance->CR1 | 1;\n        }\n        hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffff7ff;\n        hi2c->State = HAL_I2C_STATE_BUSY_RX;\n        hi2c->Mode = HAL_I2C_MODE_MEM;\n        hi2c->ErrorCode = 0;\n        hi2c->pBuffPtr = pData;\n        hi2c->XferCount = Size;\n        hi2c->XferOptions = DAT_080021e4;\n        hi2c->XferSize = hi2c->XferCount;\n        HVar2 = I2C_RequestMemoryRead(hi2c,DevAddress,MemAddress,MemAddSize,Timeout,Tickstart);\n        if (HVar2 == HAL_OK) {\n          if (hi2c->XferSize == 0) {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n          }\n          else if (hi2c->XferSize == 1) {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffbff;\n            disableIRQinterrupts();\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n            enableIRQinterrupts();\n          }\n          else if (hi2c->XferSize == 2) {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x800;\n            disableIRQinterrupts();\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffbff;\n            enableIRQinterrupts();\n          }\n          else {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x400;\n          }\n          while (uVar1 = DAT_080024bc, hi2c->XferSize != 0) {\n            if (hi2c->XferSize < 4) {\n              if (hi2c->XferSize == 1) {\n                HVar2 = I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n                if (HVar2 != HAL_OK) {\n                  if (hi2c->ErrorCode == 0x20) {\n                    return HAL_TIMEOUT;\n                  }\n                  return HAL_ERROR;\n                }\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n              }\n              else if (hi2c->XferSize == 2) {\n                do {\n                  if ((uVar1 >> 0x10 & 0xff) == 1) {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR1 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR2 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  if (cVar4 != '\\0') {\n                    iVar6 = 0;\n                    goto LAB_080022fa;\n                  }\n                } while ((Timeout == 0xffffffff) ||\n                        ((Timeout != 0 && (uVar3 = HAL_GetTick(), uVar3 - Tickstart <= Timeout))));\n                hi2c->PreviousState = 0;\n                hi2c->State = HAL_I2C_STATE_READY;\n                hi2c->Mode = HAL_I2C_MODE_NONE;\n                hi2c->Lock = HAL_UNLOCKED;\n                iVar6 = 3;\nLAB_080022fa:\n                if (iVar6 != 0) {\n                  return HAL_TIMEOUT;\n                }\n                disableIRQinterrupts();\n                hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n                enableIRQinterrupts();\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n              }\n              else {\n                do {\n                  if ((uVar1 >> 0x10 & 0xff) == 1) {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR1 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR2 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  if (cVar4 != '\\0') {\n                    iVar6 = 0;\n                    goto LAB_08002418;\n                  }\n                } while ((Timeout == 0xffffffff) ||\n                        ((Timeout != 0 && (uVar3 = HAL_GetTick(), uVar3 - Tickstart <= Timeout))));\n                hi2c->PreviousState = 0;\n                hi2c->State = HAL_I2C_STATE_READY;\n                hi2c->Mode = HAL_I2C_MODE_NONE;\n                hi2c->Lock = HAL_UNLOCKED;\n                iVar6 = 3;\nLAB_08002418:\n                if (iVar6 != 0) {\n                  return HAL_TIMEOUT;\n                }\n                hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffbff;\n                disableIRQinterrupts();\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n                uVar1 = DAT_080024bc;\n                do {\n                  if ((uVar1 >> 0x10 & 0xff) == 1) {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR1 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar5 = uVar1 & ~hi2c->Instance->SR2 & 0xffff;\n                    bVar8 = uVar5 == 0;\n                    if (bVar8) {\n                      uVar5 = 1;\n                    }\n                    cVar4 = (char)uVar5;\n                    if (!bVar8) {\n                      cVar4 = '\\0';\n                    }\n                  }\n                  if (cVar4 != '\\0') {\n                    iVar6 = 0;\n                    goto LAB_0800250a;\n                  }\n                } while ((Timeout == 0xffffffff) ||\n                        ((Timeout != 0 && (uVar3 = HAL_GetTick(), uVar3 - Tickstart <= Timeout))));\n                hi2c->PreviousState = 0;\n                hi2c->State = HAL_I2C_STATE_READY;\n                hi2c->Mode = HAL_I2C_MODE_NONE;\n                hi2c->Lock = HAL_UNLOCKED;\n                iVar6 = 3;\nLAB_0800250a:\n                if (iVar6 != 0) {\n                  return HAL_TIMEOUT;\n                }\n                hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n                enableIRQinterrupts();\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n              }\n            }\n            else {\n              HVar2 = I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n              if (HVar2 != HAL_OK) {\n                if (hi2c->ErrorCode == 0x20) {\n                  return HAL_TIMEOUT;\n                }\n                return HAL_ERROR;\n              }\n              uVar3 = hi2c->Instance->DR;\n              puVar7 = hi2c->pBuffPtr;\n              hi2c->pBuffPtr = puVar7 + 1;\n              *puVar7 = (uint8_t)uVar3;\n              hi2c->XferSize = hi2c->XferSize - 1;\n              hi2c->XferCount = hi2c->XferCount - 1;\n              if ((hi2c->Instance->SR1 & 4) == 4) {\n                uVar3 = hi2c->Instance->DR;\n                puVar7 = hi2c->pBuffPtr;\n                hi2c->pBuffPtr = puVar7 + 1;\n                *puVar7 = (uint8_t)uVar3;\n                hi2c->XferSize = hi2c->XferSize - 1;\n                hi2c->XferCount = hi2c->XferCount - 1;\n              }\n            }\n          }\n          hi2c->State = HAL_I2C_STATE_READY;\n          hi2c->Mode = HAL_I2C_MODE_NONE;\n          hi2c->Lock = HAL_UNLOCKED;\n          HVar2 = HAL_OK;\n        }\n        else if (hi2c->ErrorCode == 4) {\n          hi2c->Lock = HAL_UNLOCKED;\n          HVar2 = HAL_ERROR;\n        }\n        else {\n          hi2c->Lock = HAL_UNLOCKED;\n          HVar2 = HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      HVar2 = HAL_BUSY;\n    }\n  }\n  else {\n    HVar2 = HAL_BUSY;\n  }\n  return HVar2;\n}\n\n", 
            "called": [
                "I2C_RequestMemoryRead", 
                "I2C_WaitOnRXNEFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001f6c", 
            "calling": [
                "_i2c_read_reg"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Mem_Read"
        }, 
        "UsageFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid UsageFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056da", 
            "calling": [], 
            "imported": false, 
            "current_name": "UsageFault_Handler"
        }, 
        "__malloc_lock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_lock(void)\n\n{\n  __retarget_lock_acquire_recursive(PTR___lock___malloc_recursive_mutex_080090b0);\n  return;\n}\n\n", 
            "called": [
                "__retarget_lock_acquire_recursive"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080090a8", 
            "calling": [
                "_realloc_r", 
                "_malloc_trim_r", 
                "_malloc_r", 
                "_free_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_lock"
        }, 
        "sprintf": {
            "renaming": {}, 
            "code": "\nint sprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  undefined4 in_r2;\n  undefined4 in_r3;\n  char *local_80 [2];\n  undefined4 local_78;\n  undefined4 uStack_74;\n  char *local_70;\n  undefined4 local_6c;\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  local_6c = 0x7fffffff;\n  local_78 = 0x7fffffff;\n  uStack_74 = DAT_08005e3c;\n  local_80[0] = __s;\n  local_70 = __s;\n  uStack_8 = in_r2;\n  uStack_4 = in_r3;\n  iVar1 = _svfprintf_r(*(undefined4 *)PTR__impure_ptr_08005e38,local_80,__format,&uStack_8);\n  *local_80[0] = '\\0';\n  return iVar1;\n}\n\n", 
            "called": [
                "_svfprintf_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005dfc", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "sprintf"
        }, 
        "__aeabi_dadd": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_dadd(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_0800039c:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_0800039c;\n    }\nLAB_08000268:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000268;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800015c", 
            "calling": [
                "mpu6050_calc_pitch", 
                "__ieee754_atan2", 
                "_dtoa_r", 
                "__aeabi_drsub", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dadd"
        }, 
        "I2C_WaitOnBTFFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Timeout,uint32_t Tickstart)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  \n  while( true ) {\n    if ((hi2c->Instance->SR1 & 4) == 4) {\n      return HAL_OK;\n    }\n    HVar1 = I2C_IsAcknowledgeFailed(hi2c);\n    if (HVar1 != HAL_OK) break;\n    if ((Timeout != 0xffffffff) &&\n       ((Timeout == 0 || (uVar2 = HAL_GetTick(), Timeout < uVar2 - Tickstart)))) {\n      hi2c->ErrorCode = hi2c->ErrorCode | 0x20;\n      hi2c->PreviousState = 0;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_GetTick", 
                "I2C_IsAcknowledgeFailed"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002c2e", 
            "calling": [
                "HAL_I2C_Mem_Write"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnBTFFlagUntilTimeout"
        }, 
        "strlen": {
            "renaming": {}, 
            "code": "\nsize_t strlen(char *__s)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  uint uVar4;\n  \n  puVar2 = (uint *)((uint)__s & 0xfffffffc);\n  iVar1 = -((uint)__s & 3);\n  uVar4 = *puVar2;\n  if (((uint)__s & 3) != 0) {\n    uVar4 = uVar4 | 0xffffffffU >> ((iVar1 + 4U & 0x1f) << 3);\n  }\n  while( true ) {\n    puVar2 = puVar2 + 1;\n    uVar4 = uVar4 + 0xfefefeff & ~uVar4 & 0x80808080;\n    if (uVar4 != 0) break;\n    uVar4 = *puVar2;\n    iVar1 = iVar1 + 4;\n  }\n  iVar3 = count_leading_zeroes(uVar4 & -uVar4);\n  return iVar1 + (0x1fU - iVar3 >> 3);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005e40", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback", 
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "strlen"
        }, 
        "__d2b": {
            "renaming": {}, 
            "code": "\nint __d2b(undefined4 param_1,undefined4 param_2,uint param_3,uint param_4,int *param_5,int *param_6)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined8 uVar7;\n  uint local_20;\n  uint local_1c;\n  \n  iVar1 = _Balloc(param_1,1);\n  uVar6 = (param_4 << 1) >> 0x15;\n  local_1c = param_4 & 0xfffff;\n  if (uVar6 != 0) {\n    local_1c = local_1c | 0x100000;\n  }\n  if (param_3 == 0) {\n    iVar3 = __lo0bits(&local_1c);\n    iVar4 = 1;\n    uVar2 = iVar3 + 0x20;\n    *(undefined4 *)(iVar1 + 0x10) = 1;\n    *(uint *)(iVar1 + 0x14) = local_1c;\n  }\n  else {\n    local_20 = param_3;\n    uVar2 = __lo0bits(&local_20);\n    if (uVar2 == 0) {\n      *(uint *)(iVar1 + 0x14) = local_20;\n    }\n    else {\n      uVar5 = local_1c << (0x20 - uVar2 & 0xff);\n      local_1c = local_1c >> (uVar2 & 0xff);\n      *(uint *)(iVar1 + 0x14) = uVar5 | local_20;\n    }\n    if (local_1c == 0) {\n      iVar4 = 1;\n    }\n    else {\n      iVar4 = 2;\n    }\n    *(uint *)(iVar1 + 0x18) = local_1c;\n    *(int *)(iVar1 + 0x10) = iVar4;\n  }\n  if (uVar6 == 0) {\n    *param_5 = uVar2 - 0x432;\n    uVar7 = __hi0bits(*(undefined4 *)(iVar1 + iVar4 * 4 + 0x10));\n    *param_6 = (int)((ulonglong)uVar7 >> 0x20) * 0x20 - (int)uVar7;\n    return iVar1;\n  }\n  *param_5 = (uVar6 - 0x433) + uVar2;\n  *param_6 = 0x35 - uVar2;\n  return iVar1;\n}\n\n", 
            "called": [
                "_Balloc", 
                "__lo0bits", 
                "__hi0bits"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009630", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__d2b"
        }, 
        "PendSV_Handler": {
            "renaming": {}, 
            "code": "\nvoid PendSV_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056f8", 
            "calling": [], 
            "imported": false, 
            "current_name": "PendSV_Handler"
        }, 
        "quorem": {
            "renaming": {}, 
            "code": "\nuint quorem(int param_1,int param_2)\n\n{\n  uint uVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint uVar10;\n  uint *puVar11;\n  uint *puVar12;\n  \n  iVar4 = *(int *)(param_2 + 0x10);\n  if (*(int *)(param_1 + 0x10) < iVar4) {\n    return 0;\n  }\n  iVar5 = iVar4 + -1;\n  puVar7 = (uint *)(param_2 + 0x14);\n  puVar8 = (uint *)(param_1 + 0x14);\n  uVar6 = puVar8[iVar5] / (puVar7[iVar5] + 1);\n  puVar9 = puVar7 + iVar5;\n  if (uVar6 != 0) {\n    uVar1 = 0;\n    iVar3 = 0;\n    puVar2 = puVar8;\n    puVar11 = puVar7;\n    do {\n      puVar12 = puVar11 + 1;\n      uVar1 = uVar6 * (*puVar11 & 0xffff) + uVar1;\n      uVar10 = uVar6 * (*puVar11 >> 0x10) + (uVar1 >> 0x10);\n      uVar1 = (iVar3 - (uVar1 & 0xffff)) + (*puVar2 & 0xffff);\n      iVar3 = ((*puVar2 >> 0x10) - (uVar10 & 0xffff)) + ((int)uVar1 >> 0x10);\n      *puVar2 = uVar1 & 0xffff | iVar3 * 0x10000;\n      iVar3 = iVar3 >> 0x10;\n      uVar1 = uVar10 >> 0x10;\n      puVar2 = puVar2 + 1;\n      puVar11 = puVar12;\n    } while (puVar12 <= puVar9);\n    if (puVar8[iVar5] == 0) {\n      if ((puVar8 < puVar8 + iVar4 + -2) && (puVar8[iVar4 + -2] == 0)) {\n        puVar2 = puVar8 + iVar4 + -3;\n        do {\n          iVar5 = iVar5 + -1;\n          if (puVar2 <= puVar8) break;\n          uVar1 = *puVar2;\n          puVar2 = puVar2 + -1;\n        } while (uVar1 == 0);\n      }\n      *(int *)(param_1 + 0x10) = iVar5;\n    }\n  }\n  iVar4 = __mcmp();\n  if (-1 < iVar4) {\n    iVar4 = 0;\n    uVar6 = uVar6 + 1;\n    puVar2 = puVar8;\n    do {\n      puVar11 = puVar7 + 1;\n      uVar1 = (iVar4 - (*puVar7 & 0xffff)) + (*puVar2 & 0xffff);\n      iVar4 = ((*puVar2 >> 0x10) - (*puVar7 >> 0x10)) + ((int)uVar1 >> 0x10);\n      *puVar2 = uVar1 & 0xffff | iVar4 * 0x10000;\n      iVar4 = iVar4 >> 0x10;\n      puVar2 = puVar2 + 1;\n      puVar7 = puVar11;\n    } while (puVar11 <= puVar9);\n    if (puVar8[iVar5] == 0) {\n      if ((puVar8 < puVar8 + iVar5 + -1) && (puVar8[iVar5 + -1] == 0)) {\n        puVar7 = puVar8 + iVar5 + -2;\n        do {\n          iVar5 = iVar5 + -1;\n          if (puVar7 <= puVar8) break;\n          uVar1 = *puVar7;\n          puVar7 = puVar7 + -1;\n        } while (uVar1 == 0);\n      }\n      *(int *)(param_1 + 0x10) = iVar5;\n    }\n  }\n  return uVar6;\n}\n\n", 
            "called": [
                "__mcmp"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080078c0", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "quorem"
        }, 
        "_sbrk_r": {
            "renaming": {}, 
            "code": "\nvoid _sbrk_r(int *param_1,int param_2)\n\n{\n  undefined *puVar1;\n  caddr_t pcVar2;\n  \n  puVar1 = PTR_errno_08009764;\n  *(undefined4 *)PTR_errno_08009764 = 0;\n  pcVar2 = _sbrk(param_2);\n  if ((pcVar2 == (caddr_t)0xffffffff) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_sbrk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009744", 
            "calling": [
                "_malloc_trim_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk_r"
        }, 
        "__libc_init_array": {
            "renaming": {}, 
            "code": "\nvoid __libc_init_array(EVP_PKEY_CTX *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  code **ppcVar3;\n  int iVar4;\n  \n  iVar4 = (int)PTR___preinit_array_end_08005d58 - (int)PTR___preinit_array_end_08005d5c >> 2;\n  if (iVar4 != 0) {\n    iVar2 = 0;\n    ppcVar3 = (code **)PTR___preinit_array_end_08005d5c;\n    do {\n      iVar2 = iVar2 + 1;\n      param_1 = (EVP_PKEY_CTX *)(**ppcVar3)();\n      ppcVar3 = ppcVar3 + 1;\n    } while (iVar4 != iVar2);\n  }\n  ppcVar3 = (code **)PTR___preinit_array_end_08005d64;\n  puVar1 = PTR___do_global_dtors_aux_fini_array_entry_08005d60;\n  _init(param_1);\n  iVar4 = (int)puVar1 - (int)ppcVar3 >> 2;\n  if (iVar4 != 0) {\n    iVar2 = 0;\n    do {\n      iVar2 = iVar2 + 1;\n      (**ppcVar3)();\n      ppcVar3 = ppcVar3 + 1;\n    } while (iVar4 != iVar2);\n  }\n  return;\n}\n\n", 
            "called": [
                "frame_dummy", 
                "register_fini", 
                "_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005d20", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "__libc_init_array"
        }, 
        "mpu6050_init": {
            "renaming": {}, 
            "code": "\nvoid mpu6050_init(Mpu6050 *mpu6050)\n\n{\n  undefined local_13;\n  undefined local_12;\n  undefined local_11 [5];\n  \n  local_13 = 0;\n  (**(code **)PTR_I2C_Write_Reg_080049c8)(0xd0,0x6b,&local_13,1);\n  local_12 = 0x10;\n  (**(code **)PTR_I2C_Write_Reg_080049c8)(0xd0,0x1c,&local_12,1);\n  local_11[0] = 8;\n  (**(code **)PTR_I2C_Write_Reg_080049c8)(0xd0,0x1b,local_11,1);\n  mpu6050->accX = 0.0;\n  mpu6050->accY = 0.0;\n  mpu6050->accZ = 0.0;\n  mpu6050->temp = 0.0;\n  mpu6050->gyroX = 0.0;\n  mpu6050->gyroY = 0.0;\n  mpu6050->gyroZ = 0.0;\n  mpu6050->offset_gyroX = 0.0;\n  mpu6050->offset_gyroY = 0.0;\n  mpu6050->offset_acc_pitch = 0.0;\n  mpu6050->offset_acc_roll = 0.0;\n  mpu6050_calibrate(mpu6050);\n  return;\n}\n\n", 
            "called": [
                "mpu6050_calibrate"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800491c", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "mpu6050_init"
        }, 
        "_calloc_r": {
            "renaming": {}, 
            "code": "\nundefined4 * _calloc_r(undefined4 param_1,int param_2,int param_3)\n\n{\n  undefined4 *__s;\n  size_t __n;\n  undefined4 *puVar1;\n  \n  __s = (undefined4 *)_malloc_r(param_1,param_3 * param_2);\n  if (__s == (undefined4 *)0x0) {\n    return (undefined4 *)0x0;\n  }\n  __n = (__s[-1] & 0xfffffffc) - 4;\n  if (__n < 0x25) {\n    puVar1 = __s;\n    if (0x13 < __n) {\n      *__s = 0;\n      __s[1] = 0;\n      if (0x1b < __n) {\n        __s[2] = 0;\n        __s[3] = 0;\n        if (__n == 0x24) {\n          __s[4] = 0;\n          __s[5] = 0;\n          puVar1 = __s + 6;\n        }\n        else {\n          puVar1 = __s + 4;\n        }\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        return __s;\n      }\n      puVar1 = __s + 2;\n    }\n    *puVar1 = 0;\n    puVar1[1] = 0;\n    puVar1[2] = 0;\n    return __s;\n  }\n  memset(__s,0,__n);\n  return __s;\n}\n\n", 
            "called": [
                "_malloc_r", 
                "memset"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009980", 
            "calling": [
                "_Balloc"
            ], 
            "imported": false, 
            "current_name": "_calloc_r"
        }, 
        "HAL_RCC_GetPCLK1Freq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetPCLK1Freq(void)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = HAL_RCC_GetHCLKFreq();\n  return uVar1 >> PTR_APBPrescTable_0800353c[*(uint *)(DAT_08003538 + 4) >> 8 & 7];\n}\n\n", 
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003518", 
            "calling": [
                "UART_SetConfig", 
                "HAL_I2C_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetPCLK1Freq"
        }, 
        "HAL_GetTick": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_GetTick(void)\n\n{\n  return *(uint32_t *)PTR_uwTick_080015b0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080015a0", 
            "calling": [
                "HAL_I2C_Mem_Write", 
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "HAL_UART_Transmit", 
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead", 
                "I2C_WaitOnRXNEFlagUntilTimeout", 
                "HAL_RCC_ClockConfig", 
                "I2C_WaitOnBTFFlagUntilTimeout", 
                "HAL_I2C_Mem_Read", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout", 
                "HAL_RCC_OscConfig", 
                "_get_ms_tick"
            ], 
            "imported": false, 
            "current_name": "HAL_GetTick"
        }, 
        "TIM_CCxChannelCmd": {
            "renaming": {}, 
            "code": "\nvoid TIM_CCxChannelCmd(TIM_TypeDef *TIMx,uint32_t Channel,uint32_t ChannelState)\n\n{\n  uint32_t tmp;\n  \n  TIMx->CCER = TIMx->CCER & ~(1 << (Channel & 0xff));\n  TIMx->CCER = TIMx->CCER | ChannelState << (Channel & 0xff);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080041ea", 
            "calling": [
                "HAL_TIM_PWM_Start"
            ], 
            "imported": false, 
            "current_name": "TIM_CCxChannelCmd"
        }, 
        "BusFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid BusFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056d4", 
            "calling": [], 
            "imported": false, 
            "current_name": "BusFault_Handler"
        }, 
        "__aeabi_fmul": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fmul(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e08;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e08:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000cb8", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fmul"
        }, 
        "__register_exitproc": {
            "renaming": {}, 
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 __register_exitproc(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  \n  puVar1 = PTR___atexit_recursive_mutex_08009974;\n  __retarget_lock_acquire_recursive(*(undefined4 *)PTR___atexit_recursive_mutex_08009974);\n  iVar6 = *(int *)PTR__global_impure_ptr_08009978;\n  iVar5 = *(int *)(iVar6 + 0x148);\n  if (iVar5 == 0) {\n    iVar5 = iVar6 + 0x14c;\n    *(int *)(iVar6 + 0x148) = iVar5;\n  }\n  uVar4 = *(uint *)(iVar5 + 4);\n  if ((int)uVar4 < 0x20) {\n    iVar7 = uVar4 + 1;\n  }\n  else {\n    if (DAT_0800997c == 0) {\n      __retarget_lock_release_recursive(*(undefined4 *)puVar1);\n      return 0xffffffff;\n    }\n    iVar5 = 400;\n    uVar4 = 0;\n    _DAT_00000190 = *(undefined4 *)(iVar6 + 0x148);\n    iVar7 = 1;\n    _DAT_00000194 = 0;\n    *(undefined4 *)(iVar6 + 0x148) = 400;\n    _DAT_00000318 = 0;\n    _DAT_0000031c = 0;\n  }\n  if (param_1 != 0) {\n    iVar6 = iVar5 + uVar4 * 4;\n    *(undefined4 *)(iVar6 + 0x88) = param_3;\n    uVar3 = 1 << (uVar4 & 0xff);\n    *(uint *)(iVar5 + 0x188) = *(uint *)(iVar5 + 0x188) | uVar3;\n    *(undefined4 *)(iVar6 + 0x108) = param_4;\n    if (param_1 == 2) {\n      *(uint *)(iVar5 + 0x18c) = uVar3 | *(uint *)(iVar5 + 0x18c);\n    }\n  }\n  *(int *)(iVar5 + 4) = iVar7;\n  uVar2 = *(undefined4 *)puVar1;\n  *(undefined4 *)(iVar5 + (uVar4 + 2) * 4) = param_2;\n  __retarget_lock_release_recursive(uVar2);\n  return 0;\n}\n\n", 
            "called": [
                "__retarget_lock_acquire_recursive", 
                "__retarget_lock_release_recursive"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080098c0", 
            "calling": [
                "atexit"
            ], 
            "imported": false, 
            "current_name": "__register_exitproc"
        }, 
        "_malloc_trim_r": {
            "renaming": {}, 
            "code": "\nundefined4 _malloc_trim_r(undefined4 param_1,int param_2)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = PTR___malloc_av__080088e0;\n  __malloc_lock();\n  uVar5 = *(uint *)(*(int *)(puVar1 + 8) + 4) & 0xfffffffc;\n  iVar4 = ((0xfef - param_2) + uVar5 & 0xfffff000) - 0x1000;\n  if (0xfff < iVar4) {\n    iVar3 = _sbrk_r(param_1,0);\n    if (iVar3 == *(int *)(puVar1 + 8) + uVar5) {\n      iVar3 = _sbrk_r(param_1,-iVar4);\n      puVar2 = PTR___malloc_current_mallinfo_080088e4;\n      if (iVar3 != -1) {\n        iVar3 = *(int *)PTR___malloc_current_mallinfo_080088e4;\n        *(uint *)(*(int *)(puVar1 + 8) + 4) = uVar5 - iVar4 | 1;\n        *(int *)puVar2 = iVar3 - iVar4;\n        __malloc_unlock(param_1);\n        return 1;\n      }\n      iVar4 = _sbrk_r(param_1,0);\n      puVar2 = PTR___malloc_current_mallinfo_080088e4;\n      uVar5 = iVar4 - *(int *)(puVar1 + 8);\n      if (0xf < (int)uVar5) {\n        iVar3 = *(int *)PTR___malloc_sbrk_base_080088e8;\n        *(uint *)(*(int *)(puVar1 + 8) + 4) = uVar5 | 1;\n        *(int *)puVar2 = iVar4 - iVar3;\n      }\n    }\n  }\n  __malloc_unlock(param_1);\n  return 0;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_sbrk_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800884c", 
            "calling": [
                "_free_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_trim_r"
        }, 
        "aflCall": {
            "renaming": {}, 
            "code": "\nuint32_t aflCall(uint32_t a0,uint32_t a1,int32_t a2)\n\n{\n  software_interrupt(0x3f);\n  return a0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004e6c", 
            "calling": [
                "startForkserver"
            ], 
            "imported": false, 
            "current_name": "aflCall"
        }, 
        "HAL_TIMEx_ConfigBreakDeadTime": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIMEx_ConfigBreakDeadTime\n          (TIM_HandleTypeDef *htim,TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t tmpbdtr;\n  \n  if (htim->Lock == HAL_LOCKED) {\n    HVar1 = HAL_BUSY;\n  }\n  else {\n    htim->Lock = HAL_LOCKED;\n    htim->Instance->BDTR =\n         sBreakDeadTimeConfig->AutomaticOutput |\n         (sBreakDeadTimeConfig->AutomaticOutput |\n         (sBreakDeadTimeConfig->BreakPolarity |\n         (sBreakDeadTimeConfig->BreakState |\n         (sBreakDeadTimeConfig->OffStateRunMode |\n         (sBreakDeadTimeConfig->OffStateIDLEMode |\n         (sBreakDeadTimeConfig->LockLevel | sBreakDeadTimeConfig->DeadTime & 0xfffffcff) &\n         0xfffffbff) & 0xfffff7ff) & 0xffffefff) & 0xffffdfff) & 0xffffbfff) & 0xffff7fff;\n    htim->Lock = HAL_UNLOCKED;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800422e", 
            "calling": [
                "MX_TIM1_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_ConfigBreakDeadTime"
        }, 
        "TIM_OC4_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC4_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t tmpccer;\n  uint32_t tmpccmrx;\n  uint32_t tmpcr2;\n  \n  TIMx->CCER = TIMx->CCER & 0xffffefff;\n  tmpcr2 = TIMx->CR2;\n  uVar1 = OC_Config->OCMode;\n  uVar2 = OC_Config->OCPolarity;\n  if (TIMx == DAT_0800409c) {\n    tmpcr2 = OC_Config->OCIdleState << 6 | tmpcr2 & 0xffffbfff;\n  }\n  TIMx->CR2 = tmpcr2;\n  TIMx->CCMR2 = uVar1 << 8 | TIMx->CCMR2 & 0xffff8cff;\n  TIMx->CCR4 = OC_Config->Pulse;\n  TIMx->CCER = uVar2 << 0xc | TIMx->CCER & 0xffffdfff;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003ff8", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC4_SetConfig"
        }, 
        "HAL_I2C_Mem_Write": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,\n                 uint16_t MemAddSize,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint uVar1;\n  HAL_StatusTypeDef HVar2;\n  uint32_t Tickstart;\n  uint32_t uVar3;\n  char cVar4;\n  uint uVar5;\n  int iVar6;\n  byte *pbVar7;\n  bool bVar8;\n  uint32_t tickstart;\n  \n  Tickstart = HAL_GetTick();\n  uVar1 = DAT_08001f64;\n  if (hi2c->State == HAL_I2C_STATE_READY) {\n    do {\n      if ((uVar1 >> 0x10 & 0xff) == 1) {\n        uVar5 = uVar1 & ~hi2c->Instance->SR1 & 0xffff;\n        bVar8 = uVar5 == 0;\n        if (bVar8) {\n          uVar5 = 1;\n        }\n        cVar4 = (char)uVar5;\n        if (!bVar8) {\n          cVar4 = '\\0';\n        }\n      }\n      else {\n        uVar5 = uVar1 & ~hi2c->Instance->SR2 & 0xffff;\n        bVar8 = uVar5 == 0;\n        if (bVar8) {\n          uVar5 = 1;\n        }\n        cVar4 = (char)uVar5;\n        if (!bVar8) {\n          cVar4 = '\\0';\n        }\n      }\n      if (cVar4 != '\\x01') {\n        iVar6 = 0;\n        goto LAB_08001d9c;\n      }\n      uVar3 = HAL_GetTick();\n    } while (uVar3 - Tickstart < 0x1a);\n    hi2c->PreviousState = 0;\n    hi2c->State = HAL_I2C_STATE_READY;\n    hi2c->Mode = HAL_I2C_MODE_NONE;\n    hi2c->Lock = HAL_UNLOCKED;\n    iVar6 = 3;\nLAB_08001d9c:\n    if (iVar6 == 0) {\n      if (hi2c->Lock == HAL_LOCKED) {\n        HVar2 = HAL_BUSY;\n      }\n      else {\n        hi2c->Lock = HAL_LOCKED;\n        if ((hi2c->Instance->CR1 & 1) != 1) {\n          hi2c->Instance->CR1 = hi2c->Instance->CR1 | 1;\n        }\n        hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffff7ff;\n        hi2c->State = HAL_I2C_STATE_BUSY_TX;\n        hi2c->Mode = HAL_I2C_MODE_MEM;\n        hi2c->ErrorCode = 0;\n        hi2c->pBuffPtr = pData;\n        hi2c->XferCount = Size;\n        hi2c->XferOptions = DAT_08001f68;\n        hi2c->XferSize = hi2c->XferCount;\n        HVar2 = I2C_RequestMemoryWrite(hi2c,DevAddress,MemAddress,MemAddSize,Timeout,Tickstart);\n        if (HVar2 == HAL_OK) {\n          while (hi2c->XferSize != 0) {\n            HVar2 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout,Tickstart);\n            if (HVar2 != HAL_OK) {\n              if (hi2c->ErrorCode == 4) {\n                hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n                return HAL_ERROR;\n              }\n              return HAL_TIMEOUT;\n            }\n            pbVar7 = hi2c->pBuffPtr;\n            hi2c->pBuffPtr = pbVar7 + 1;\n            hi2c->Instance->DR = (uint)*pbVar7;\n            hi2c->XferSize = hi2c->XferSize - 1;\n            hi2c->XferCount = hi2c->XferCount - 1;\n            if (((hi2c->Instance->SR1 & 4) == 4) && (hi2c->XferSize != 0)) {\n              pbVar7 = hi2c->pBuffPtr;\n              hi2c->pBuffPtr = pbVar7 + 1;\n              hi2c->Instance->DR = (uint)*pbVar7;\n              hi2c->XferSize = hi2c->XferSize - 1;\n              hi2c->XferCount = hi2c->XferCount - 1;\n            }\n          }\n          HVar2 = I2C_WaitOnBTFFlagUntilTimeout(hi2c,Timeout,Tickstart);\n          if (HVar2 == HAL_OK) {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n            hi2c->State = HAL_I2C_STATE_READY;\n            hi2c->Mode = HAL_I2C_MODE_NONE;\n            hi2c->Lock = HAL_UNLOCKED;\n            HVar2 = HAL_OK;\n          }\n          else if (hi2c->ErrorCode == 4) {\n            hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n            HVar2 = HAL_ERROR;\n          }\n          else {\n            HVar2 = HAL_TIMEOUT;\n          }\n        }\n        else if (hi2c->ErrorCode == 4) {\n          hi2c->Lock = HAL_UNLOCKED;\n          HVar2 = HAL_ERROR;\n        }\n        else {\n          hi2c->Lock = HAL_UNLOCKED;\n          HVar2 = HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      HVar2 = HAL_BUSY;\n    }\n  }\n  else {\n    HVar2 = HAL_BUSY;\n  }\n  return HVar2;\n}\n\n", 
            "called": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "I2C_RequestMemoryWrite", 
                "I2C_WaitOnBTFFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001ccc", 
            "calling": [
                "_i2c_write_reg"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Mem_Write"
        }, 
        "Reset_Handler": {
            "renaming": {}, 
            "code": "\nvoid Reset_Handler(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; puVar2 = (undefined4 *)PTR_completed_8655_08005828,\n      PTR_uwTickPrio_08005820 + iVar1 < PTR_completed_8655_08005824; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(PTR_uwTickPrio_08005820 + iVar1) =\n         *(undefined4 *)(PTR___fini_array_end_0800581c + iVar1);\n  }\n  for (; puVar2 < PTR__ebss_0800582c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  UNRECOVERED_JUMPTABLE = (code *)0x800581a;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x0800581a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n", 
            "called": [
                "main", 
                "SystemInit", 
                "__libc_init_array"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080057e8", 
            "calling": [], 
            "imported": false, 
            "current_name": "Reset_Handler"
        }, 
        "_localeconv_r": {
            "renaming": {}, 
            "code": "\nundefined * _localeconv_r(void)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = *(undefined **)(*(int *)PTR__impure_ptr_08008ae8 + 0x34);\n  if (*(undefined **)(*(int *)PTR__impure_ptr_08008ae8 + 0x34) == (undefined *)0x0) {\n    puVar1 = PTR___global_locale_08008aec;\n  }\n  return puVar1 + 0xf0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08008ad4", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "_localeconv_r"
        }, 
        "HAL_SYSTICK_CLKSourceConfig": {
            "renaming": {}, 
            "code": "\nvoid HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)\n\n{\n  if (CLKSource == 4) {\n    *DAT_080017b0 = *DAT_080017b0 | 4;\n  }\n  else {\n    *DAT_080017b0 = *DAT_080017b0 & 0xfffffffb;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800177c", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_CLKSourceConfig"
        }, 
        "_Balloc": {
            "renaming": {}, 
            "code": "\nundefined4 * _Balloc(int param_1,uint param_2)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  iVar2 = *(int *)(param_1 + 0x4c);\n  if (iVar2 == 0) {\n    iVar2 = _calloc_r(param_1,4,0x21);\n    *(int *)(param_1 + 0x4c) = iVar2;\n    if (iVar2 == 0) {\n      return (undefined4 *)0x0;\n    }\n  }\n  puVar1 = *(undefined4 **)(iVar2 + param_2 * 4);\n  if (puVar1 == (undefined4 *)0x0) {\n    iVar2 = 1 << (param_2 & 0xff);\n    puVar1 = (undefined4 *)_calloc_r(param_1,1,(iVar2 + 5) * 4);\n    if (puVar1 == (undefined4 *)0x0) {\n      return (undefined4 *)0x0;\n    }\n    puVar1[1] = param_2;\n    puVar1[2] = iVar2;\n  }\n  else {\n    *(undefined4 *)(iVar2 + param_2 * 4) = *puVar1;\n  }\n  puVar1[3] = 0;\n  puVar1[4] = 0;\n  return puVar1;\n}\n\n", 
            "called": [
                "_calloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080090c0", 
            "calling": [
                "__multiply", 
                "__mdiff", 
                "__pow5mult", 
                "__d2b", 
                "__multadd", 
                "__lshift", 
                "_dtoa_r", 
                "__i2b"
            ], 
            "imported": false, 
            "current_name": "_Balloc"
        }, 
        "MX_I2C1_Init": {
            "renaming": {}, 
            "code": "\nvoid MX_I2C1_Init(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  *(undefined4 *)PTR_hi2c1_080053a0 = DAT_080053a4;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 4) = DAT_080053a8;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 8) = 0;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0xc) = 0;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0x10) = 0x4000;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0x14) = 0;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0x18) = 0;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0x1c) = 0;\n  *(undefined4 *)(PTR_hi2c1_080053a0 + 0x20) = 0;\n  HVar1 = HAL_I2C_Init((I2C_HandleTypeDef *)PTR_hi2c1_080053a0);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080053ac,0x17a);\n  }\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_I2C_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005348", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "MX_I2C1_Init"
        }, 
        "__aeabi_d2iz": {
            "renaming": {}, 
            "code": "\nuint __aeabi_d2iz(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  \n  iVar2 = param_2 * 2 + 0x200000;\n  if (param_2 * 2 < 0xffe00000) {\n    if (-1 < iVar2) {\n      return 0;\n    }\n    uVar1 = iVar2 >> 0x15;\n    uVar3 = -uVar1 - 0x3e1;\n    if (uVar1 < 0xfffffc20 && uVar3 != 0) {\n      uVar1 = (param_2 << 0xb | 0x80000000 | param_1 >> 0x15) >> (uVar3 & 0xff);\n      if ((param_2 & 0x80000000) != 0) {\n        uVar1 = -uVar1;\n      }\n      return uVar1;\n    }\n  }\n  else if ((param_1 | param_2 << 0xc) != 0) {\n    return 0;\n  }\n  param_2 = param_2 & 0x80000000;\n  if (param_2 == 0) {\n    param_2 = 0x7fffffff;\n  }\n  return param_2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800119c", 
            "calling": [
                "_dtoa_r", 
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_d2iz"
        }, 
        "_sbrk": {
            "renaming": {}, 
            "code": "\ncaddr_t _sbrk(int incr)\n\n{\n  undefined4 *puVar1;\n  undefined auStack_18 [4];\n  int local_14;\n  char *prev_heap_end;\n  \n  if (*(int *)PTR_heap_end_08005778 == 0) {\n    *(undefined **)PTR_heap_end_08005778 = PTR_end_0800577c;\n  }\n  prev_heap_end = *(char **)PTR_heap_end_08005778;\n  if (auStack_18 < (undefined *)(incr + *(int *)PTR_heap_end_08005778)) {\n    local_14 = incr;\n    puVar1 = (undefined4 *)__errno();\n    *puVar1 = 0xc;\n    prev_heap_end = (caddr_t)0xffffffff;\n  }\n  else {\n    *(int *)PTR_heap_end_08005778 = incr + *(int *)PTR_heap_end_08005778;\n  }\n  return prev_heap_end;\n}\n\n", 
            "called": [
                "__errno"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005728", 
            "calling": [
                "_sbrk_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk"
        }, 
        "HardFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid HardFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056c8", 
            "calling": [], 
            "imported": false, 
            "current_name": "HardFault_Handler"
        }, 
        "__aeabi_dcmpeq": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpeq(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cdcmpeq();\n  return in_ZR != '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000998", 
            "calling": [
                "_dtoa_r", 
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmpeq"
        }, 
        "FUN_080006a4": {
            "renaming": {}, 
            "code": "\nulonglong FUN_080006a4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 = in_r12 & param_4 >> 0x14;\n  if (unaff_r4 != in_r12 && uVar2 != in_r12) {\n    bVar4 = (param_1 | param_2 << 1) == 0;\n    if (!bVar4) {\n      bVar4 = (param_3 | param_4 << 1) == 0;\n    }\n    if (bVar4) {\n      return (ulonglong)((param_2 ^ param_4) & 0x80000000) << 0x20;\n    }\n    if (unaff_r4 == 0) {\n      uVar3 = param_2 & 0x80000000;\n      do {\n        uVar1 = param_1 & 0x80000000;\n        param_1 = param_1 << 1;\n        param_2 = param_2 * 2 + (uint)(uVar1 != 0);\n      } while ((param_2 & 0x100000) == 0);\n      param_2 = param_2 | uVar3;\n      if (uVar2 != 0) {\n        return CONCAT44(param_2,param_1);\n      }\n    }\n    do {\n      uVar2 = param_3 & 0x80000000;\n      param_3 = param_3 << 1;\n      param_4 = param_4 * 2 + (uint)(uVar2 != 0);\n    } while ((param_4 & 0x100000) == 0);\n    return CONCAT44(param_2,param_1);\n  }\n  bVar4 = (param_1 | param_2 << 1) == 0;\n  if (bVar4) {\n    param_2 = param_4;\n    param_1 = param_3;\n  }\n  if (!bVar4) {\n    bVar4 = (param_3 | param_4 << 1) == 0;\n  }\n  uVar3 = param_2;\n  if (((!bVar4) && ((unaff_r4 != in_r12 || ((param_1 | param_2 << 0xc) == 0)))) &&\n     ((uVar2 != in_r12 || (param_1 = param_3, uVar3 = param_4, (param_3 | param_4 << 0xc) == 0)))) {\n    return (ulonglong)((param_2 ^ param_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x080006a4", 
            "calling": [
                "__muldf3"
            ], 
            "imported": false, 
            "current_name": "FUN_080006a4"
        }, 
        "HAL_UART_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_MspInit(UART_HandleTypeDef *huart)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004424", 
            "calling": [
                "HAL_UART_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_MspInit"
        }, 
        "SystemInit": {
            "renaming": {}, 
            "code": "\nvoid SystemInit(void)\n\n{\n  *DAT_080057dc = *DAT_080057dc | 1;\n  DAT_080057dc[1] = DAT_080057e0 & DAT_080057dc[1];\n  *DAT_080057dc = *DAT_080057dc & 0xfef6ffff;\n  *DAT_080057dc = *DAT_080057dc & 0xfffbffff;\n  DAT_080057dc[1] = DAT_080057dc[1] & 0xff80ffff;\n  DAT_080057dc[2] = 0x9f0000;\n  *(undefined4 *)(DAT_080057e4 + 8) = 0x8000000;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005780", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "SystemInit"
        }, 
        "__lo0bits": {
            "renaming": {}, 
            "code": "\nuint __lo0bits(uint *param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *param_1;\n  uVar1 = uVar2 & 7;\n  if (uVar1 == 0) {\n    if ((uVar2 & 0xffff) == 0) {\n      uVar2 = uVar2 >> 0x10;\n      uVar1 = 0x10;\n    }\n    if ((uVar2 & 0xff) == 0) {\n      uVar2 = uVar2 >> 8;\n      uVar1 = uVar1 + 8;\n    }\n    if ((uVar2 & 0xf) == 0) {\n      uVar2 = uVar2 >> 4;\n      uVar1 = uVar1 + 4;\n    }\n    if ((uVar2 & 3) == 0) {\n      uVar2 = uVar2 >> 2;\n      uVar1 = uVar1 + 2;\n    }\n    if (-1 < (int)(uVar2 << 0x1f)) {\n      uVar2 = uVar2 >> 1;\n      if (uVar2 == 0) {\n        return 0x20;\n      }\n      uVar1 = uVar1 + 1;\n    }\n    *param_1 = uVar2;\n    return uVar1;\n  }\n  if (-1 < (int)(uVar2 << 0x1f)) {\n    if ((int)(uVar2 << 0x1e) < 0) {\n      *param_1 = uVar2 >> 1;\n      return 1;\n    }\n    *param_1 = uVar2 >> 2;\n    return 2;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080091e4", 
            "calling": [
                "__d2b"
            ], 
            "imported": false, 
            "current_name": "__lo0bits"
        }, 
        "__addsf3": {
            "renaming": {}, 
            "code": "\nuint __addsf3(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000bde:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000bde;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000aa8", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback", 
                "__aeabi_frsub", 
                "mpu6050_calibrate"
            ], 
            "imported": false, 
            "current_name": "__addsf3"
        }, 
        "UART_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid UART_SetConfig(UART_HandleTypeDef *huart)\n\n{\n  ulonglong uVar1;\n  ulonglong uVar2;\n  ulonglong uVar3;\n  uint32_t uVar4;\n  uint32_t uVar5;\n  uint32_t uVar6;\n  uint32_t uVar7;\n  uint32_t uVar8;\n  uint32_t uVar9;\n  uint32_t uVar10;\n  uint32_t uVar11;\n  uint32_t uVar12;\n  uint32_t tmpreg;\n  \n  huart->Instance->CR2 = (huart->Init).StopBits | huart->Instance->CR2 & 0xffffcfff;\n  huart->Instance->CR1 =\n       huart->Instance->CR1 & 0xffffe9f3 |\n       (huart->Init).Mode | (huart->Init).WordLength | (huart->Init).Parity;\n  huart->Instance->CR3 = (huart->Init).HwFlowCtl | huart->Instance->CR3 & 0xfffffcff;\n  if (huart->Instance == DAT_08004914) {\n    uVar4 = HAL_RCC_GetPCLK2Freq();\n    uVar9 = (huart->Init).BaudRate;\n    uVar1 = (ulonglong)DAT_08004918;\n    uVar5 = HAL_RCC_GetPCLK2Freq();\n    uVar10 = (huart->Init).BaudRate;\n    uVar6 = HAL_RCC_GetPCLK2Freq();\n    uVar11 = (huart->Init).BaudRate;\n    uVar2 = (ulonglong)DAT_08004918;\n    uVar3 = (ulonglong)DAT_08004918;\n    uVar7 = HAL_RCC_GetPCLK2Freq();\n    uVar12 = (huart->Init).BaudRate;\n    uVar8 = HAL_RCC_GetPCLK2Freq();\n    huart->Instance->BRR =\n         ((uint)((ulonglong)DAT_08004918 *\n                 (ulonglong)\n                 (((uVar7 * 0x19) / (uVar12 << 2) +\n                  (uint)((ulonglong)DAT_08004918 *\n                         ((ulonglong)(uVar8 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) >>\n                        0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf) +\n         (uint)(uVar1 * ((ulonglong)(uVar4 * 0x19) / (ulonglong)(uVar9 << 2)) >> 0x25) * 0x10 +\n         ((uint)(uVar3 * (((uVar5 * 0x19) / (uVar10 << 2) +\n                          (uint)(uVar2 * ((ulonglong)(uVar6 * 0x19) / (ulonglong)(uVar11 << 2)) >>\n                                0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf0);\n  }\n  else {\n    uVar4 = HAL_RCC_GetPCLK1Freq();\n    uVar9 = (huart->Init).BaudRate;\n    uVar1 = (ulonglong)DAT_08004918;\n    uVar5 = HAL_RCC_GetPCLK1Freq();\n    uVar10 = (huart->Init).BaudRate;\n    uVar6 = HAL_RCC_GetPCLK1Freq();\n    uVar11 = (huart->Init).BaudRate;\n    uVar2 = (ulonglong)DAT_08004918;\n    uVar3 = (ulonglong)DAT_08004918;\n    uVar7 = HAL_RCC_GetPCLK1Freq();\n    uVar12 = (huart->Init).BaudRate;\n    uVar8 = HAL_RCC_GetPCLK1Freq();\n    huart->Instance->BRR =\n         ((uint)((ulonglong)DAT_08004918 *\n                 (ulonglong)\n                 (((uVar7 * 0x19) / (uVar12 << 2) +\n                  (uint)((ulonglong)DAT_08004918 *\n                         ((ulonglong)(uVar8 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) >>\n                        0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf) +\n         (uint)(uVar1 * ((ulonglong)(uVar4 * 0x19) / (ulonglong)(uVar9 << 2)) >> 0x25) * 0x10 +\n         ((uint)(uVar3 * (((uVar5 * 0x19) / (uVar10 << 2) +\n                          (uint)(uVar2 * ((ulonglong)(uVar6 * 0x19) / (ulonglong)(uVar11 << 2)) >>\n                                0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf0);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_RCC_GetPCLK1Freq", 
                "HAL_RCC_GetPCLK2Freq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080046ec", 
            "calling": [
                "HAL_UART_Init"
            ], 
            "imported": false, 
            "current_name": "UART_SetConfig"
        }, 
        "__aeabi_dcmpge": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpge(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cdrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009d4", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmpge"
        }, 
        "mpu6050_calibrate": {
            "renaming": {}, 
            "code": "\nvoid mpu6050_calibrate(Mpu6050 *mpu6050)\n\n{\n  undefined4 uVar1;\n  float fVar2;\n  float acc_roll;\n  float acc_pitch;\n  uint32_t now;\n  int num_samples;\n  int i;\n  float offset_accRoll;\n  float offset_accPitch;\n  float offset_gyroY;\n  float offset_gyroX;\n  \n  num_samples = 1;\n  offset_gyroX = 0.0;\n  offset_gyroY = 0.0;\n  offset_accPitch = 0.0;\n  offset_accRoll = 0.0;\n  now = (**(code **)PTR_Get_ms_tick_08004adc)();\n  i = 0;\n  while( true ) {\n    if (num_samples <= i) break;\n    acc_pitch = 0.0;\n    acc_roll = 0.0;\n    mpu6050_update(mpu6050);\n    mpu6050_calc_acc_pitch_roll(mpu6050,&acc_pitch,&acc_roll);\n    offset_accPitch = (float)__addsf3(offset_accPitch,acc_pitch);\n    offset_accRoll = (float)__addsf3(offset_accRoll,acc_roll);\n    offset_gyroX = (float)__addsf3(offset_gyroX,mpu6050->gyroX);\n    offset_gyroY = (float)__addsf3(offset_gyroY,mpu6050->gyroY);\n    now = (**(code **)PTR_Get_ms_tick_08004adc)();\n    i = i + 1;\n  }\n  uVar1 = __floatsisf(num_samples);\n  fVar2 = (float)__aeabi_fdiv(offset_gyroX,uVar1);\n  mpu6050->offset_gyroX = fVar2;\n  uVar1 = __floatsisf(num_samples);\n  fVar2 = (float)__aeabi_fdiv(offset_gyroY,uVar1);\n  mpu6050->offset_gyroY = fVar2;\n  uVar1 = __floatsisf(num_samples);\n  fVar2 = (float)__aeabi_fdiv(offset_accPitch,uVar1);\n  mpu6050->offset_acc_pitch = fVar2;\n  uVar1 = __floatsisf(num_samples);\n  fVar2 = (float)__aeabi_fdiv(offset_accRoll,uVar1);\n  mpu6050->offset_acc_roll = fVar2;\n  return;\n}\n\n", 
            "called": [
                "mpu6050_calc_acc_pitch_roll", 
                "__floatsisf", 
                "mpu6050_update", 
                "__addsf3", 
                "__aeabi_fdiv"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080049cc", 
            "calling": [
                "mpu6050_init"
            ], 
            "imported": false, 
            "current_name": "mpu6050_calibrate"
        }, 
        "HAL_RCC_ClockConfig": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef *RCC_ClkInitStruct,uint32_t FLatency)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  HAL_StatusTypeDef HVar3;\n  uint32_t tickstart;\n  \n  if (((*DAT_08003430 & 7) < FLatency) &&\n     (*DAT_08003430 = FLatency | *DAT_08003430 & 0xfffffff8, FLatency != (*DAT_08003430 & 7))) {\n    HVar3 = HAL_ERROR;\n  }\n  else {\n    if ((RCC_ClkInitStruct->ClockType & 2) != 0) {\n      DAT_08003434[1] = RCC_ClkInitStruct->AHBCLKDivider | DAT_08003434[1] & 0xffffff0f;\n    }\n    if ((RCC_ClkInitStruct->ClockType & 1) == 0) {\nLAB_08003394:\n      if ((FLatency < (*DAT_08003430 & 7)) &&\n         (*DAT_08003430 = FLatency | *DAT_08003430 & 0xfffffff8, FLatency != (*DAT_08003430 & 7))) {\n        HVar3 = HAL_ERROR;\n      }\n      else {\n        if ((RCC_ClkInitStruct->ClockType & 4) != 0) {\n          DAT_08003434[1] = RCC_ClkInitStruct->APB1CLKDivider | DAT_08003434[1] & 0xfffff8ff;\n        }\n        if ((RCC_ClkInitStruct->ClockType & 8) != 0) {\n          DAT_08003434[1] = RCC_ClkInitStruct->APB2CLKDivider << 3 | DAT_08003434[1] & 0xffffc7ff;\n        }\n        uVar1 = HAL_RCC_GetSysClockFreq();\n        *(uint32_t *)PTR_SystemCoreClock_0800343c =\n             uVar1 >> PTR_AHBPrescTable_08003438[DAT_08003434[1] >> 4 & 0xf];\n        HAL_InitTick(0xf);\n        HVar3 = HAL_OK;\n      }\n    }\n    else {\n      if (RCC_ClkInitStruct->SYSCLKSource == 1) {\n        if ((*DAT_08003434 & 0x20000) == 0) {\n          return HAL_ERROR;\n        }\n      }\n      else if ((RCC_ClkInitStruct->SYSCLKSource != 2) && ((*DAT_08003434 & 2) == 0)) {\n        return HAL_ERROR;\n      }\n      DAT_08003434[1] = RCC_ClkInitStruct->SYSCLKSource | DAT_08003434[1] & 0xfffffffc;\n      uVar1 = HAL_GetTick();\n      if (RCC_ClkInitStruct->SYSCLKSource == 1) {\n        do {\n          if ((DAT_08003434[1] & 0xc) == 4) goto LAB_08003394;\n          uVar2 = HAL_GetTick();\n        } while (uVar2 - uVar1 < 0x1389);\n        HVar3 = HAL_TIMEOUT;\n      }\n      else if (RCC_ClkInitStruct->SYSCLKSource == 2) {\n        do {\n          if ((DAT_08003434[1] & 0xc) == 8) goto LAB_08003394;\n          uVar2 = HAL_GetTick();\n        } while (uVar2 - uVar1 < 0x1389);\n        HVar3 = HAL_TIMEOUT;\n      }\n      else {\n        do {\n          if ((DAT_08003434[1] & 0xc) == 0) goto LAB_08003394;\n          uVar2 = HAL_GetTick();\n        } while (uVar2 - uVar1 < 0x1389);\n        HVar3 = HAL_TIMEOUT;\n      }\n    }\n  }\n  return HVar3;\n}\n\n", 
            "called": [
                "HAL_RCC_GetSysClockFreq", 
                "HAL_GetTick", 
                "HAL_InitTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003260", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_ClockConfig"
        }, 
        "__malloc_unlock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_unlock(void)\n\n{\n  __retarget_lock_release_recursive(PTR___lock___malloc_recursive_mutex_080090bc);\n  return;\n}\n\n", 
            "called": [
                "__retarget_lock_release_recursive"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080090b4", 
            "calling": [
                "_realloc_r", 
                "_malloc_trim_r", 
                "_malloc_r", 
                "_free_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_unlock"
        }, 
        "register_fini": {
            "renaming": {}, 
            "code": "\nvoid register_fini(void)\n\n{\n  if (DAT_080078ac != 0) {\n    atexit(DAT_080078b0);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "atexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080078a0", 
            "calling": [
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "register_fini"
        }, 
        "__divdf3": {
            "renaming": {}, 
            "code": "\nulonglong __divdf3(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_0800088a();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_0800083a;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_0800083a:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n", 
            "called": [
                "FUN_0800088a"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800071c", 
            "calling": [
                "mpu6050_calc_pitch", 
                "mpu6050_calc_acc_pitch_roll", 
                "__ieee754_atan2", 
                "_dtoa_r", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "__divdf3"
        }, 
        "HAL_TIM_PWM_PulseFinishedCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003c6e", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_PulseFinishedCallback"
        }, 
        "TIM_OC2_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC2_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t tmpccmrx;\n  uint32_t tmpcr2;\n  uint32_t tmpccer;\n  \n  TIMx->CCER = TIMx->CCER & 0xffffffef;\n  tmpcr2 = TIMx->CR2;\n  uVar1 = OC_Config->OCMode;\n  uVar2 = OC_Config->OCPolarity << 4 | TIMx->CCER & 0xffffffdf;\n  if (TIMx == DAT_08003f14) {\n    uVar2 = (OC_Config->OCNPolarity << 4 | uVar2 & 0xffffff7f) & 0xffffffbf;\n    tmpcr2 = OC_Config->OCNIdleState << 2 | OC_Config->OCIdleState << 2 | tmpcr2 & 0xfffff3ff;\n  }\n  TIMx->CR2 = tmpcr2;\n  TIMx->CCMR1 = uVar1 << 8 | TIMx->CCMR1 & 0xffff8cff;\n  TIMx->CCR2 = OC_Config->Pulse;\n  TIMx->CCER = uVar2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003e38", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC2_SetConfig"
        }, 
        "_i2c_read_reg": {
            "renaming": {}, 
            "code": "\nvoid _i2c_read_reg(uint8_t addr,uint8_t reg,uint8_t *data,uint16_t len)\n\n{\n  HAL_I2C_Mem_Read((I2C_HandleTypeDef *)PTR_hi2c1_08004f28,(ushort)addr,(ushort)reg,1,data,len,\n                   *(uint32_t *)PTR_I2C_TIMEOUT_08004f24);\n  return;\n}\n\n", 
            "called": [
                "HAL_I2C_Mem_Read"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ee8", 
            "calling": [], 
            "imported": false, 
            "current_name": "_i2c_read_reg"
        }, 
        "__floatunsidf": {
            "renaming": {}, 
            "code": "\nulonglong __floatunsidf(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint in_r12;\n  bool bVar5;\n  bool bVar6;\n  bool bVar7;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar1 = 0;\n  iVar3 = count_leading_zeroes(param_1);\n  uVar4 = iVar3 + 0x15;\n  bVar7 = SBORROW4(uVar4,0x20);\n  uVar2 = iVar3 - 0xb;\n  bVar5 = (int)uVar2 < 0;\n  bVar6 = uVar2 == 0;\n  if ((int)uVar4 < 0x20) {\n    bVar7 = SCARRY4(uVar2,0xc);\n    iVar3 = iVar3 + 1;\n    bVar5 = iVar3 < 0;\n    bVar6 = iVar3 == 0;\n    uVar2 = uVar4;\n    if (!bVar6 && bVar5 == bVar7) {\n      uVar1 = param_1 << (uVar4 & 0xff);\n      param_1 = param_1 >> (0xcU - iVar3 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar6 || bVar5 != bVar7) {\n    in_r12 = 0x20 - uVar2;\n  }\n  param_1 = param_1 << (uVar2 & 0xff);\n  if (bVar6 || bVar5 != bVar7) {\n    param_1 = param_1 | 0U >> (in_r12 & 0xff);\n  }\n  if (bVar6 || bVar5 != bVar7) {\n    uVar1 = 0 << (uVar2 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar4 < 0x433) {\n    return CONCAT44(param_1 + (0x432 - uVar4) * 0x100000,uVar1);\n  }\n  uVar2 = ~(0x432 - uVar4);\n  if (0x1e < (int)uVar2) {\n    return (ulonglong)(param_1 >> (uVar2 - 0x1f & 0xff));\n  }\n  iVar3 = uVar2 - 0x13;\n  if (iVar3 == 0 || iVar3 < 0 != SCARRY4(uVar2 - 0x1f,0xc)) {\n    uVar2 = uVar2 + 1;\n    return CONCAT44(param_1 >> (uVar2 & 0xff),\n                    uVar1 >> (uVar2 & 0xff) | param_1 << (0x20 - uVar2 & 0xff));\n  }\n  return (ulonglong)(uVar1 >> (0x20 - (0xcU - iVar3) & 0xff) | param_1 << (0xcU - iVar3 & 0xff));\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080003d4", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__floatunsidf"
        }, 
        "__retarget_lock_release_recursive": {
            "renaming": {}, 
            "code": "\nvoid __retarget_lock_release_recursive(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08008af4", 
            "calling": [
                "__register_exitproc", 
                "__malloc_unlock"
            ], 
            "imported": false, 
            "current_name": "__retarget_lock_release_recursive"
        }, 
        "__gedf2": {
            "renaming": {}, 
            "code": "\nuint __gedf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 0xffffffff;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080008ec", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gedf2"
        }, 
        "mpu6050_calc_pitch": {
            "renaming": {}, 
            "code": "\nvoid mpu6050_calc_pitch(Mpu6050 *mpu6050,float *pitch)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  float acc_pitch;\n  float gyro_x;\n  \n  uVar1 = __aeabi_fsub(mpu6050->gyroX,mpu6050->offset_gyroX);\n  uVar2 = __aeabi_f2d(*(undefined4 *)PTR_total_pitch_08004d60);\n  uVar3 = __aeabi_f2d(uVar1);\n  uVar3 = __muldf3((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),DAT_08004d40,DAT_08004d44);\n  uVar2 = __aeabi_dadd((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),(int)uVar3,\n                       (int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = __truncdfsf2((int)uVar2,(int)((ulonglong)uVar2 >> 0x20));\n  *(undefined4 *)PTR_total_pitch_08004d60 = uVar1;\n  uVar2 = __aeabi_f2d(mpu6050->accY);\n  uVar2 = __divdf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),0,DAT_08004d64);\n  uVar3 = __aeabi_f2d(mpu6050->accZ);\n  uVar3 = __divdf3((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),0,DAT_08004d64);\n  uVar2 = atan2((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),(int)uVar3,\n                (int)((ulonglong)uVar3 >> 0x20));\n  uVar2 = __muldf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),0,DAT_08004d68);\n  uVar2 = __divdf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),DAT_08004d48,DAT_08004d4c);\n  uVar3 = __aeabi_f2d(mpu6050->offset_acc_pitch);\n  uVar2 = __subdf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),(int)uVar3,\n                   (int)((ulonglong)uVar3 >> 0x20));\n  uVar2 = __aeabi_dadd((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),0,DAT_08004d6c);\n  uVar1 = __truncdfsf2((int)uVar2,(int)((ulonglong)uVar2 >> 0x20));\n  if (*PTR_first_run_08004d70 == '\\0') {\n    uVar2 = __aeabi_f2d(*(undefined4 *)PTR_total_pitch_08004d60);\n    uVar2 = __muldf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),DAT_08004d50,DAT_08004d54);\n    uVar3 = __aeabi_f2d(uVar1);\n    uVar3 = __muldf3((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),DAT_08004d58,DAT_08004d5c);\n    uVar2 = __aeabi_dadd((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),(int)uVar3,\n                         (int)((ulonglong)uVar3 >> 0x20));\n    uVar1 = __truncdfsf2((int)uVar2,(int)((ulonglong)uVar2 >> 0x20));\n    *(undefined4 *)PTR_total_pitch_08004d60 = uVar1;\n  }\n  else {\n    *(undefined4 *)PTR_total_pitch_08004d60 = uVar1;\n    *PTR_first_run_08004d70 = 0;\n  }\n  *pitch = *(float *)PTR_total_pitch_08004d60;\n  return;\n}\n\n", 
            "called": [
                "__aeabi_dadd", 
                "__muldf3", 
                "__aeabi_fsub", 
                "__aeabi_f2d", 
                "__divdf3", 
                "__truncdfsf2", 
                "__subdf3", 
                "atan2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004bd8", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "mpu6050_calc_pitch"
        }, 
        "atan2": {
            "renaming": {}, 
            "code": "\nvoid atan2(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  int iVar1;\n  undefined4 unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  \n  uVar3 = param_4 & 0x7fffffff;\n  if ((DAT_080059e8 < (uVar3 | (-param_3 | param_3) >> 0x1f)) ||\n     (uVar4 = param_2 & 0x7fffffff, DAT_080059e8 < (uVar4 | (-param_1 | param_1) >> 0x1f))) {\n    __aeabi_dadd(param_3,param_4,param_1,param_2);\n  }\n  else {\n    if ((param_4 + 0xc0100000 | param_3) == 0) {\n      atan(param_5);\n      return;\n    }\n    uVar2 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n    if (((((uVar4 | param_1) != 0) && ((uVar3 | param_3) != 0)) && (uVar3 != DAT_080059e8)) &&\n       (uVar4 != DAT_080059e8)) {\n      iVar1 = (int)(uVar4 - uVar3) >> 0x14;\n      if ((iVar1 < 0x3d) && ((-1 < (int)param_4 || (iVar1 + 0x3c < 0 == SCARRY4(iVar1,0x3c))))) {\n        __divdf3(param_1,param_2);\n        fabs((double)CONCAT44(unaff_r4,param_4));\n        atan((double)CONCAT44(unaff_r4,param_4));\n      }\n      if (uVar2 != 1) {\n        if (uVar2 == 2) {\n          uVar5 = __subdf3();\n          __subdf3(DAT_080059b0,DAT_080059b4,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        }\n        else if (uVar2 != 0) {\n          uVar5 = __subdf3();\n          __subdf3((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_080059b0,DAT_080059b4);\n        }\n      }\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "__ieee754_atan2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005834", 
            "calling": [
                "mpu6050_calc_pitch", 
                "mpu6050_calc_acc_pitch_roll"
            ], 
            "imported": false, 
            "current_name": "atan2"
        }, 
        "HAL_SYSTICK_Config": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = SysTick_Config(TicksNumb);\n  return uVar1;\n}\n\n", 
            "called": [
                "SysTick_Config"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001762", 
            "calling": [
                "HAL_InitTick", 
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_Config"
        }, 
        "SysTick_Config": {
            "renaming": {}, 
            "code": "\nuint32_t SysTick_Config(uint32_t ticks)\n\n{\n  bool bVar1;\n  \n  bVar1 = ticks - 1 < 0x1000000;\n  if (bVar1) {\n    DAT_08001710[1] = ticks - 1;\n    NVIC_SetPriority(SysTick_IRQn,0xf);\n    DAT_08001710[2] = 0;\n    *DAT_08001710 = 7;\n  }\n  return (uint)!bVar1;\n}\n\n", 
            "called": [
                "NVIC_SetPriority"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080016d0", 
            "calling": [
                "HAL_SYSTICK_Config"
            ], 
            "imported": false, 
            "current_name": "SysTick_Config"
        }, 
        "_Error_Handler": {
            "renaming": {}, 
            "code": "\nvoid _Error_Handler(char *file,int line)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005674", 
            "calling": [
                "MX_I2C1_Init", 
                "MX_USART1_UART_Init", 
                "MX_TIM1_Init", 
                "SystemClock_Config", 
                "MX_TIM2_Init"
            ], 
            "imported": false, 
            "current_name": "_Error_Handler"
        }, 
        "I2C_WaitOnTXEFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Timeout,uint32_t Tickstart)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  \n  while( true ) {\n    if ((hi2c->Instance->SR1 & 0x80) == 0x80) {\n      return HAL_OK;\n    }\n    HVar1 = I2C_IsAcknowledgeFailed(hi2c);\n    if (HVar1 != HAL_OK) break;\n    if ((Timeout != 0xffffffff) &&\n       ((Timeout == 0 || (uVar2 = HAL_GetTick(), Timeout < uVar2 - Tickstart)))) {\n      hi2c->ErrorCode = hi2c->ErrorCode | 0x20;\n      hi2c->PreviousState = 0;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_GetTick", 
                "I2C_IsAcknowledgeFailed"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002bb4", 
            "calling": [
                "HAL_I2C_Mem_Write", 
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnTXEFlagUntilTimeout"
        }, 
        "HAL_TIM_IC_CaptureCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003c5c", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_IC_CaptureCallback"
        }, 
        "SysTick_Handler": {
            "renaming": {}, 
            "code": "\nvoid SysTick_Handler(void)\n\n{\n  HAL_IncTick();\n  HAL_SYSTICK_IRQHandler();\n  return;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_IRQHandler", 
                "HAL_IncTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005704", 
            "calling": [], 
            "imported": false, 
            "current_name": "SysTick_Handler"
        }, 
        "__muldf3": {
            "renaming": {}, 
            "code": "\nulonglong __muldf3(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006a4();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n", 
            "called": [
                "FUN_080006a4"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080004c8", 
            "calling": [
                "mpu6050_calc_pitch", 
                "mpu6050_calc_acc_pitch_roll", 
                "_dtoa_r", 
                "_svfprintf_r", 
                "frexp", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "__muldf3"
        }, 
        "TIM_OC1_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC1_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint uVar1;\n  uint32_t uVar2;\n  uint32_t tmpccmrx;\n  uint32_t tmpcr2;\n  uint32_t tmpccer;\n  \n  TIMx->CCER = TIMx->CCER & 0xfffffffe;\n  tmpcr2 = TIMx->CR2;\n  uVar1 = OC_Config->OCMode;\n  uVar2 = OC_Config->OCPolarity | TIMx->CCER & 0xfffffffd;\n  if (TIMx == DAT_08003e34) {\n    uVar2 = (OC_Config->OCNPolarity | uVar2 & 0xfffffff7) & 0xfffffffb;\n    tmpcr2 = OC_Config->OCNIdleState | OC_Config->OCIdleState | tmpcr2 & 0xfffffcff;\n  }\n  TIMx->CR2 = tmpcr2;\n  TIMx->CCMR1 = uVar1 | TIMx->CCMR1 & 0xffffff8c;\n  TIMx->CCR1 = OC_Config->Pulse;\n  TIMx->CCER = uVar2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003d60", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC1_SetConfig"
        }, 
        "__nedf2": {
            "renaming": {}, 
            "code": "\nuint __nedf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080008fc", 
            "calling": [
                "__aeabi_cdcmpeq"
            ], 
            "imported": false, 
            "current_name": "__nedf2"
        }, 
        "__truncdfsf2": {
            "renaming": {}, 
            "code": "\nuint __truncdfsf2(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  bool bVar5;\n  \n  uVar2 = param_2 * 2;\n  bVar5 = uVar2 < 0x70000000;\n  uVar3 = uVar2 + 0x90000000;\n  uVar1 = uVar3;\n  if (!bVar5) {\n    in_r12 = uVar2 + 0x8fe00000;\n    uVar1 = in_r12;\n  }\n  bVar4 = uVar1 == 0;\n  if (!bVar5 && uVar3 >= 0x200000) {\n    bVar4 = in_r12 == 0x1fc00000;\n  }\n  if (((bVar5 || uVar3 < 0x200000) || 0x1fc00000 < in_r12) || bVar4) {\n    if ((param_2 & 0x40000000) != 0) {\n      if (((int)uVar2 >> 0x15 == -1) && ((param_1 | param_2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return param_2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(uVar2 + 0x92e00000) < 0 != SCARRY4(uVar3,0x2e00000)) {\n      return param_2 & 0x80000000;\n    }\n    uVar2 = 0x18 - (uVar2 + 0x92e00000 >> 0x15);\n    uVar1 = param_1 >> (uVar2 & 0xff);\n    if (param_1 << (0x20 - uVar2 & 0xff) != 0) {\n      uVar1 = uVar1 | 1;\n    }\n    uVar3 = param_2 & 0x1fffff | 0x100000;\n    param_1 = uVar1 | uVar3 << (0x20 - uVar2 & 0xff);\n    uVar3 = (uVar3 >> (uVar2 & 0xff)) << 1;\n  }\n  uVar1 = (param_2 & 0x80000000 | param_1 >> 0x1d) + uVar3 * 4 + (uint)(0x7fffffff < param_1 * 8);\n  if (param_1 * 8 == 0x80000000) {\n    uVar1 = uVar1 & 0xfffffffe;\n  }\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009fc", 
            "calling": [
                "mpu6050_calc_pitch", 
                "mpu6050_calc_acc_pitch_roll"
            ], 
            "imported": false, 
            "current_name": "__truncdfsf2"
        }, 
        "RCC_Delay": {
            "renaming": {}, 
            "code": "\nvoid RCC_Delay(uint32_t mdelay)\n\n{\n  bool bVar1;\n  uint32_t Delay;\n  \n  Delay = mdelay * (uint)((ulonglong)DAT_080035a0 * (ulonglong)*(uint *)PTR_SystemCoreClock_0800359c\n                         >> 0x29);\n  do {\n    bVar1 = Delay != 0;\n    Delay = Delay - 1;\n  } while (bVar1);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003568", 
            "calling": [
                "HAL_RCC_OscConfig"
            ], 
            "imported": false, 
            "current_name": "RCC_Delay"
        }, 
        "__udivmoddi4": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080014b2) */\n\nundefined8 __udivmoddi4(uint param_1,uint param_2,uint param_3,uint param_4,uint *param_5)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  ulonglong uVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  undefined8 uVar15;\n  \n  if (param_4 == 0) {\n    if (param_2 < param_3) {\n      uVar6 = count_leading_zeroes(param_3);\n      if (uVar6 != 0) {\n        param_3 = param_3 << (uVar6 & 0xff);\n        param_2 = param_1 >> (0x20 - uVar6 & 0xff) | param_2 << (uVar6 & 0xff);\n        param_1 = param_1 << (uVar6 & 0xff);\n      }\n      uVar12 = param_3 >> 0x10;\n      uVar8 = param_2 / uVar12;\n      uVar11 = uVar8 * (param_3 & 0xffff);\n      uVar7 = param_1 >> 0x10 | (param_2 - uVar12 * uVar8) * 0x10000;\n      uVar4 = uVar8;\n      if (uVar7 <= uVar11 && uVar11 - uVar7 != 0) {\n        bVar14 = CARRY4(param_3,uVar7);\n        uVar7 = param_3 + uVar7;\n        uVar4 = uVar8 - 1;\n        if ((bVar14 == false) && (uVar7 <= uVar11 && uVar11 - uVar7 != 0)) {\n          uVar4 = uVar8 - 2;\n          uVar7 = uVar7 + param_3;\n        }\n      }\n      uVar2 = (uVar7 - uVar11) / uVar12;\n      uVar5 = uVar2 * (param_3 & 0xffff);\n      uVar8 = param_1 & 0xffff | ((uVar7 - uVar11) - uVar12 * uVar2) * 0x10000;\n      uVar7 = uVar2;\n      if (uVar8 <= uVar5 && uVar5 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar7 = uVar2 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar5 && uVar5 - uVar8 != 0)) {\n          uVar7 = uVar2 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      puVar3 = (uint *)(uVar7 | uVar4 << 0x10);\n      puVar9 = (uint *)0x0;\n      uVar8 = uVar8 - uVar5;\n    }\n    else {\n      if (param_3 == 0) {\n                    /* WARNING: Could not recover jumptable at 0x08001302. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        UNRECOVERED_JUMPTABLE = (code *)software_udf(0xff,0x8001302);\n        uVar15 = (*UNRECOVERED_JUMPTABLE)();\n        return uVar15;\n      }\n      uVar6 = count_leading_zeroes(param_3);\n      if (uVar6 == 0) {\n        puVar9 = (uint *)0x1;\n        param_2 = param_2 - param_3;\n        uVar12 = param_3 >> 0x10;\n        uVar2 = param_3 & 0xffff;\n      }\n      else {\n        param_3 = param_3 << (uVar6 & 0xff);\n        uVar4 = param_2 >> (0x20 - uVar6 & 0xff);\n        uVar12 = param_3 >> 0x10;\n        uVar11 = uVar4 / uVar12;\n        uVar2 = param_3 & 0xffff;\n        uVar5 = uVar11 * uVar2;\n        uVar8 = param_1 >> (0x20 - uVar6 & 0xff) | param_2 << (uVar6 & 0xff);\n        uVar7 = uVar8 >> 0x10 | (uVar4 - uVar12 * uVar11) * 0x10000;\n        param_1 = param_1 << (uVar6 & 0xff);\n        uVar4 = uVar11;\n        if (uVar7 <= uVar5 && uVar5 - uVar7 != 0) {\n          bVar14 = CARRY4(param_3,uVar7);\n          uVar7 = param_3 + uVar7;\n          uVar4 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar5 && uVar5 - uVar7 != 0)) {\n            uVar4 = uVar11 - 2;\n            uVar7 = uVar7 + param_3;\n          }\n        }\n        uVar11 = (uVar7 - uVar5) / uVar12;\n        uVar13 = uVar11 * uVar2;\n        param_2 = uVar8 & 0xffff | ((uVar7 - uVar5) - uVar12 * uVar11) * 0x10000;\n        uVar7 = uVar11;\n        if (param_2 <= uVar13 && uVar13 - param_2 != 0) {\n          bVar14 = CARRY4(param_3,param_2);\n          param_2 = param_3 + param_2;\n          uVar7 = uVar11 - 1;\n          if ((bVar14 == false) && (param_2 <= uVar13 && uVar13 - param_2 != 0)) {\n            uVar7 = uVar11 - 2;\n            param_2 = param_2 + param_3;\n          }\n        }\n        param_2 = param_2 - uVar13;\n        puVar9 = (uint *)(uVar7 | uVar4 << 0x10);\n      }\n      uVar11 = param_2 / uVar12;\n      uVar7 = uVar2 * uVar11;\n      uVar8 = param_1 >> 0x10 | (param_2 - uVar12 * uVar11) * 0x10000;\n      uVar4 = uVar11;\n      if (uVar8 <= uVar7 && uVar7 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar4 = uVar11 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar7 && uVar7 - uVar8 != 0)) {\n          uVar4 = uVar11 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      uVar11 = (uVar8 - uVar7) / uVar12;\n      uVar2 = uVar2 * uVar11;\n      uVar8 = param_1 & 0xffff | ((uVar8 - uVar7) - uVar12 * uVar11) * 0x10000;\n      uVar7 = uVar11;\n      if (uVar8 <= uVar2 && uVar2 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar7 = uVar11 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar2 && uVar2 - uVar8 != 0)) {\n          uVar7 = uVar11 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      uVar8 = uVar8 - uVar2;\n      puVar3 = (uint *)(uVar7 | uVar4 << 0x10);\n    }\n    if (param_5 != (uint *)0x0) {\n      *param_5 = uVar8 >> (uVar6 & 0xff);\n      param_5[1] = 0;\n    }\n  }\n  else {\n    puVar9 = param_5;\n    if (param_2 < param_4) {\n      puVar3 = param_5;\n      if (param_5 != (uint *)0x0) {\n        *param_5 = param_1;\n        param_5[1] = param_2;\n        return 0;\n      }\n    }\n    else {\n      puVar10 = (uint *)count_leading_zeroes(param_4);\n      if (puVar10 == (uint *)0x0) {\n        if ((param_4 < param_2) || (puVar3 = puVar10, param_3 <= param_1)) {\n          bVar14 = param_1 < param_3;\n          param_1 = param_1 - param_3;\n          param_2 = (param_2 - param_4) - (uint)bVar14;\n          puVar3 = (uint *)0x1;\n        }\n        puVar9 = puVar10;\n        if (param_5 != (uint *)0x0) {\n          *param_5 = param_1;\n          param_5[1] = param_2;\n        }\n      }\n      else {\n        uVar8 = 0x20 - (int)puVar10;\n        uVar2 = param_3 >> (uVar8 & 0xff) | param_4 << ((uint)puVar10 & 0xff);\n        uVar6 = param_2 >> (uVar8 & 0xff);\n        uVar5 = uVar2 >> 0x10;\n        uVar11 = uVar6 / uVar5;\n        uVar12 = uVar11 * (uVar2 & 0xffff);\n        uVar4 = param_2 << ((uint)puVar10 & 0xff) | param_1 >> (uVar8 & 0xff);\n        uVar7 = uVar4 >> 0x10 | (uVar6 - uVar5 * uVar11) * 0x10000;\n        param_3 = param_3 << ((uint)puVar10 & 0xff);\n        param_1 = param_1 << ((uint)puVar10 & 0xff);\n        uVar6 = uVar11;\n        if (uVar7 <= uVar12 && uVar12 - uVar7 != 0) {\n          bVar14 = CARRY4(uVar2,uVar7);\n          uVar7 = uVar2 + uVar7;\n          uVar6 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar12 && uVar12 - uVar7 != 0)) {\n            uVar6 = uVar11 - 2;\n            uVar7 = uVar7 + uVar2;\n          }\n        }\n        uVar11 = (uVar7 - uVar12) / uVar5;\n        uVar13 = uVar11 * (uVar2 & 0xffff);\n        uVar7 = uVar4 & 0xffff | ((uVar7 - uVar12) - uVar5 * uVar11) * 0x10000;\n        uVar4 = uVar11;\n        if (uVar7 <= uVar13 && uVar13 - uVar7 != 0) {\n          bVar14 = CARRY4(uVar2,uVar7);\n          uVar7 = uVar2 + uVar7;\n          uVar4 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar13 && uVar13 - uVar7 != 0)) {\n            uVar4 = uVar11 - 2;\n            uVar7 = uVar7 + uVar2;\n          }\n        }\n        puVar3 = (uint *)(uVar4 | uVar6 << 0x10);\n        uVar1 = ZEXT48(puVar3) * (ulonglong)param_3;\n        if (CONCAT44(uVar7 - uVar13,param_1) < uVar1) {\n          puVar3 = (uint *)((int)puVar3 + -1);\n          uVar1 = uVar1 - CONCAT44(uVar2,param_3);\n        }\n        if (param_5 != (uint *)0x0) {\n          uVar6 = ((uVar7 - uVar13) - (int)(uVar1 >> 0x20)) - (uint)(param_1 < (uint)uVar1);\n          *param_5 = uVar6 << (uVar8 & 0xff) | param_1 - (uint)uVar1 >> ((uint)puVar10 & 0xff);\n          param_5[1] = uVar6 >> ((uint)puVar10 & 0xff);\n          puVar9 = (uint *)0x0;\n        }\n      }\n    }\n  }\n  return CONCAT44(puVar9,puVar3);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800121c", 
            "calling": [
                "__aeabi_uldivmod"
            ], 
            "imported": false, 
            "current_name": "__udivmoddi4"
        }, 
        "_Bfree": {
            "renaming": {}, 
            "code": "\nvoid _Bfree(int param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  \n  if (param_2 != (undefined4 *)0x0) {\n    iVar1 = *(int *)(param_1 + 0x4c);\n    *param_2 = *(undefined4 *)(iVar1 + param_2[1] * 4);\n    *(undefined4 **)(iVar1 + param_2[1] * 4) = param_2;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800910c", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "_Bfree"
        }, 
        "HAL_UART_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  if (huart == (UART_HandleTypeDef *)0x0) {\n    HVar1 = HAL_ERROR;\n  }\n  else {\n    if (huart->gState == HAL_UART_STATE_RESET) {\n      huart->Lock = HAL_UNLOCKED;\n      HAL_UART_MspInit(huart);\n    }\n    huart->gState = HAL_UART_STATE_BUSY;\n    huart->Instance->CR1 = huart->Instance->CR1 & 0xffffdfff;\n    UART_SetConfig(huart);\n    huart->Instance->CR2 = huart->Instance->CR2 & 0xffffb7ff;\n    huart->Instance->CR3 = huart->Instance->CR3 & 0xffffffd5;\n    huart->Instance->CR1 = huart->Instance->CR1 | 0x2000;\n    huart->ErrorCode = 0;\n    huart->gState = HAL_UART_STATE_READY;\n    huart->RxState = HAL_UART_STATE_READY;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "HAL_UART_MspInit", 
                "UART_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800438a", 
            "calling": [
                "MX_USART1_UART_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_Init"
        }, 
        "TIM_Base_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_Base_SetConfig(TIM_TypeDef *TIMx,TIM_Base_InitTypeDef *Structure)\n\n{\n  uint32_t tmpcr1;\n  \n  tmpcr1 = TIMx->CR1;\n  if ((((TIMx == DAT_08003d54) || (TIMx == (TIM_TypeDef *)0x40000000)) || (TIMx == DAT_08003d58)) ||\n     (TIMx == DAT_08003d5c)) {\n    tmpcr1 = Structure->CounterMode | tmpcr1 & 0xffffff8f;\n  }\n  if (((TIMx == DAT_08003d54) || (TIMx == (TIM_TypeDef *)0x40000000)) ||\n     ((TIMx == DAT_08003d58 || (TIMx == DAT_08003d5c)))) {\n    tmpcr1 = Structure->ClockDivision | tmpcr1 & 0xfffffcff;\n  }\n  TIMx->CR1 = Structure->AutoReloadPreload | tmpcr1 & 0xffffff7f;\n  TIMx->ARR = Structure->Period;\n  TIMx->PSC = Structure->Prescaler;\n  if (TIMx == DAT_08003d54) {\n    TIMx->RCR = Structure->RepetitionCounter;\n  }\n  TIMx->EGR = 1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003c94", 
            "calling": [
                "HAL_TIM_PWM_Init", 
                "HAL_TIM_Base_Init"
            ], 
            "imported": false, 
            "current_name": "TIM_Base_SetConfig"
        }, 
        "__aeabi_l2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_l2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar5 = param_2 & 0x80000000;\n  if ((int)uVar5 < 0) {\n    bVar8 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -param_2 - (uint)bVar8;\n  }\n  uVar2 = param_1;\n  uVar1 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar1 = param_1;\n  }\n  uVar5 = uVar5 | 0x5b000000;\n  if (param_2 == 0) {\n    uVar5 = uVar5 + 0xf0000000;\n  }\n  iVar3 = count_leading_zeroes(uVar1);\n  uVar4 = iVar3 - 8;\n  iVar6 = (uVar5 - 0x800000) + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar1 << (iVar3 + 0x18U & 0xff);\n    uVar5 = iVar6 + ((uVar1 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar2 | uVar4 << 1) == 0) {\n      uVar5 = uVar5 & ~(uVar4 >> 0x1f);\n    }\n    return uVar5;\n  }\n  uVar7 = uVar2 << (uVar4 & 0xff);\n  uVar5 = iVar6 + (uVar1 << (uVar4 & 0xff)) +\n          (uVar2 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar7);\n  if (uVar7 == 0x80000000) {\n    uVar5 = uVar5 & 0xfffffffe;\n  }\n  return uVar5;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c3c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_l2f"
        }, 
        "__subdf3": {
            "renaming": {}, 
            "code": "\nulonglong __subdf3(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_0800039c:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_0800039c;\n    }\nLAB_08000268:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000268;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000158", 
            "calling": [
                "mpu6050_calc_pitch", 
                "__ieee754_atan2", 
                "_dtoa_r", 
                "_svfprintf_r", 
                "atan"
            ], 
            "imported": false, 
            "current_name": "__subdf3"
        }, 
        "HAL_TIMEx_MasterConfigSynchronization": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIMEx_MasterConfigSynchronization\n          (TIM_HandleTypeDef *htim,TIM_MasterConfigTypeDef *sMasterConfig)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  if (htim->Lock == HAL_LOCKED) {\n    HVar1 = HAL_BUSY;\n  }\n  else {\n    htim->Lock = HAL_LOCKED;\n    htim->State = HAL_TIM_STATE_BUSY;\n    htim->Instance->CR2 = htim->Instance->CR2 & 0xffffff8f;\n    htim->Instance->CR2 = sMasterConfig->MasterOutputTrigger | htim->Instance->CR2;\n    htim->Instance->SMCR = htim->Instance->SMCR & 0xffffff7f;\n    htim->Instance->SMCR = sMasterConfig->MasterSlaveMode | htim->Instance->SMCR;\n    htim->State = HAL_TIM_STATE_READY;\n    htim->Lock = HAL_UNLOCKED;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080042de", 
            "calling": [
                "MX_TIM1_Init", 
                "MX_TIM2_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_MasterConfigSynchronization"
        }, 
        "__aeabi_l2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_l2d(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  bool bVar12;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  uVar8 = param_2 & 0x80000000;\n  uVar3 = param_2;\n  if ((int)uVar8 < 0) {\n    bVar11 = param_1 != 0;\n    param_1 = -param_1;\n    uVar3 = -param_2 - (uint)bVar11;\n  }\n  iVar7 = 0x432;\n  uVar9 = uVar3 >> 0x16;\n  if (uVar9 != 0) {\n    iVar7 = 3;\n    if (uVar3 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (uVar3 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)uVar3 >> 0x1f);\n    uVar9 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | uVar3 << (0x20 - uVar4 & 0xff);\n    uVar3 = uVar3 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < uVar3) {\n    if (0x1fffff < uVar3) {\n      uVar4 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar9 = (uint)(bVar1 & 1) << 0x1f | uVar9 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return (ulonglong)(uVar8 | 0x7ff00000) << 0x20;\n      }\n    }\nLAB_08000268:\n    bVar11 = 0x7fffffff < uVar9;\n    if (uVar9 == 0x80000000) {\n      bVar11 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(uVar3 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar11) | uVar8,\n                    param_1 + bVar11);\n  }\n  bVar10 = (uVar9 & 0x80000000) != 0;\n  uVar9 = uVar9 << 1;\n  uVar4 = param_1 * 2;\n  bVar11 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar10;\n  uVar3 = uVar3 * 2 + (uint)(bVar11 || CARRY4(uVar4,(uint)bVar10));\n  iVar7 = iVar7 + -1;\n  if ((uVar3 & 0x100000) != 0) goto LAB_08000268;\n  uVar2 = param_1;\n  uVar4 = uVar3;\n  if (uVar3 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = count_leading_zeroes(uVar4);\n  if (uVar3 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar12 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar11 = (int)uVar3 < 0;\n  bVar10 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar12 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar11 = iVar5 < 0;\n    bVar10 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar10 && bVar11 == bVar12) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar9 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar10 || bVar11 != bVar12) {\n    uVar4 = uVar4 | uVar2 >> (uVar9 & 0xff);\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000 | uVar8,uVar2);\n  }\n  uVar3 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_2,uVar4 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar7 = uVar3 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar8 | uVar4 >> (uVar3 & 0xff),\n                    uVar2 >> (uVar3 & 0xff) | uVar4 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_2,uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800046c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_l2d"
        }, 
        "MX_TIM1_Init": {
            "renaming": {}, 
            "code": "\nvoid MX_TIM1_Init(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;\n  TIM_OC_InitTypeDef sConfigOC;\n  TIM_MasterConfigTypeDef sMasterConfig;\n  TIM_ClockConfigTypeDef sClockSourceConfig;\n  \n  *(undefined4 *)PTR_htim1_080054f4 = DAT_080054f8;\n  *(undefined4 *)(PTR_htim1_080054f4 + 4) = 0x708;\n  *(undefined4 *)(PTR_htim1_080054f4 + 8) = 0;\n  *(undefined4 *)(PTR_htim1_080054f4 + 0xc) = 100;\n  *(undefined4 *)(PTR_htim1_080054f4 + 0x10) = 0;\n  *(undefined4 *)(PTR_htim1_080054f4 + 0x14) = 0;\n  *(undefined4 *)(PTR_htim1_080054f4 + 0x18) = 0;\n  HVar1 = HAL_TIM_Base_Init((TIM_HandleTypeDef *)PTR_htim1_080054f4);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,399);\n  }\n  sClockSourceConfig.ClockSource = 0x1000;\n  HVar1 = HAL_TIM_ConfigClockSource((TIM_HandleTypeDef *)PTR_htim1_080054f4,&sClockSourceConfig);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x194);\n  }\n  HVar1 = HAL_TIM_PWM_Init((TIM_HandleTypeDef *)PTR_htim1_080054f4);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x198);\n  }\n  sMasterConfig.MasterOutputTrigger = 0;\n  sMasterConfig.MasterSlaveMode = 0;\n  HVar1 = HAL_TIMEx_MasterConfigSynchronization\n                    ((TIM_HandleTypeDef *)PTR_htim1_080054f4,&sMasterConfig);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x19f);\n  }\n  sConfigOC.OCMode = 0x60;\n  sConfigOC.Pulse = 0;\n  sConfigOC.OCPolarity = 0;\n  sConfigOC.OCNPolarity = 0;\n  sConfigOC.OCFastMode = 0;\n  sConfigOC.OCIdleState = 0;\n  sConfigOC.OCNIdleState = 0;\n  HVar1 = HAL_TIM_PWM_ConfigChannel((TIM_HandleTypeDef *)PTR_htim1_080054f4,&sConfigOC,0);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x1ab);\n  }\n  HVar1 = HAL_TIM_PWM_ConfigChannel((TIM_HandleTypeDef *)PTR_htim1_080054f4,&sConfigOC,0xc);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x1b0);\n  }\n  sBreakDeadTimeConfig.OffStateRunMode = 0;\n  sBreakDeadTimeConfig.OffStateIDLEMode = 0;\n  sBreakDeadTimeConfig.LockLevel = 0;\n  sBreakDeadTimeConfig.DeadTime = 0;\n  sBreakDeadTimeConfig.BreakState = 0;\n  sBreakDeadTimeConfig.BreakPolarity = 0x2000;\n  sBreakDeadTimeConfig.AutomaticOutput = 0;\n  HVar1 = HAL_TIMEx_ConfigBreakDeadTime\n                    ((TIM_HandleTypeDef *)PTR_htim1_080054f4,&sBreakDeadTimeConfig);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_080054fc,0x1bc);\n  }\n  HAL_TIM_MspPostInit((TIM_HandleTypeDef *)PTR_htim1_080054f4);\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_TIM_MspPostInit", 
                "HAL_TIMEx_MasterConfigSynchronization", 
                "HAL_TIM_PWM_ConfigChannel", 
                "HAL_TIM_PWM_Init", 
                "HAL_TIM_ConfigClockSource", 
                "HAL_TIMEx_ConfigBreakDeadTime", 
                "HAL_TIM_Base_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080053b0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "MX_TIM1_Init"
        }, 
        "__errno": {
            "renaming": {}, 
            "code": "\nundefined4 __errno(void)\n\n{\n  return *(undefined4 *)PTR__impure_ptr_08005d1c;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005d14", 
            "calling": [
                "_sbrk"
            ], 
            "imported": false, 
            "current_name": "__errno"
        }, 
        "__aeabi_drsub": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_drsub(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar4 = param_2 ^ 0x80000000;\n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((uVar4 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = uVar4;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((uVar4 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        uVar4 = param_4;\n      }\n      return CONCAT44(uVar4,param_1);\n    }\n    if (uVar4 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(uVar4,uVar4) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(uVar4 + 0x100000,param_1);\n    }\n    uVar4 = uVar4 & 0x80000000;\nLAB_0800039c:\n    return (ulonglong)(uVar4 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar12 = uVar4;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar12 = param_4;\n    param_3 = param_1;\n    param_4 = uVar4;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar12,uVar8);\n  }\n  uVar9 = uVar12 & 0xfffff | 0x100000;\n  if ((uVar12 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar4 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar4 = uVar4 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar5 = uVar4 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar5;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar4 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar11 = uVar4 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar4 = (int)uVar4 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar4;\n    uVar9 = uVar9 + ((int)uVar4 >> 0x1f) + (uint)CARRY4(uVar8,uVar4);\n  }\n  uVar4 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_0800039c;\n    }\nLAB_08000268:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | uVar4,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000268;\n  uVar3 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar3 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar3 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar3 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar3 = uVar3 << (uVar10 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | uVar4,uVar3);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar3 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(uVar4 | uVar7 >> (uVar10 & 0xff),\n                    uVar3 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [
                "__aeabi_dadd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000150", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_drsub"
        }, 
        "mpu6050_calc_acc_pitch_roll": {
            "renaming": {}, 
            "code": "\nvoid mpu6050_calc_acc_pitch_roll(Mpu6050 *mpu6050,float *pitch,float *roll)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  float fVar4;\n  float fVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  float acc_roll;\n  float acc_pitch;\n  float acc_z;\n  float acc_y;\n  float acc_x;\n  \n  uVar1 = __aeabi_fdiv(mpu6050->accX,0x45800000);\n  uVar2 = __aeabi_fdiv(mpu6050->accY,0x45800000);\n  uVar3 = __aeabi_fdiv(mpu6050->accZ,0x45800000);\n  uVar6 = __aeabi_f2d(uVar2);\n  uVar7 = __aeabi_f2d(uVar3);\n  uVar6 = atan2((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                (int)((ulonglong)uVar7 >> 0x20));\n  uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0,DAT_08004e68);\n  uVar6 = __divdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_08004e60,DAT_08004e64);\n  fVar4 = (float)__truncdfsf2((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n  uVar6 = __aeabi_f2d(uVar1);\n  uVar7 = __aeabi_f2d(uVar3);\n  uVar6 = atan2((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                (int)((ulonglong)uVar7 >> 0x20));\n  uVar6 = __muldf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0,DAT_08004e68);\n  uVar6 = __divdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_08004e60,DAT_08004e64);\n  fVar5 = (float)__truncdfsf2((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n  *pitch = fVar4;\n  *roll = fVar5;\n  return;\n}\n\n", 
            "called": [
                "__muldf3", 
                "__aeabi_f2d", 
                "__truncdfsf2", 
                "__divdf3", 
                "atan2", 
                "__aeabi_fdiv"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004d78", 
            "calling": [
                "mpu6050_calibrate"
            ], 
            "imported": false, 
            "current_name": "mpu6050_calc_acc_pitch_roll"
        }, 
        "HAL_I2C_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)\n\n{\n  uint32_t uVar1;\n  char cVar2;\n  HAL_StatusTypeDef HVar3;\n  uint32_t uVar4;\n  uint uVar5;\n  bool bVar6;\n  uint32_t pclk1;\n  uint32_t freqrange;\n  \n  if (hi2c == (I2C_HandleTypeDef *)0x0) {\n    HVar3 = HAL_ERROR;\n  }\n  else {\n    if (hi2c->State == HAL_I2C_STATE_RESET) {\n      hi2c->Lock = HAL_UNLOCKED;\n      HAL_I2C_MspInit(hi2c);\n    }\n    hi2c->State = HAL_I2C_STATE_BUSY;\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffffe;\n    uVar1 = HAL_RCC_GetPCLK1Freq();\n    if (DAT_08001ca4 < (hi2c->Init).ClockSpeed) {\n      uVar4 = uVar1;\n      if (uVar1 <= DAT_08001cac) {\n        uVar4 = 1;\n      }\n      cVar2 = (char)uVar4;\n      if (DAT_08001cac < uVar1) {\n        cVar2 = '\\0';\n      }\n    }\n    else {\n      uVar4 = uVar1;\n      if (uVar1 <= DAT_08001ca8) {\n        uVar4 = 1;\n      }\n      cVar2 = (char)uVar4;\n      if (DAT_08001ca8 < uVar1) {\n        cVar2 = '\\0';\n      }\n    }\n    if (cVar2 == '\\0') {\n      uVar5 = (uint)((ulonglong)DAT_08001cb0 * (ulonglong)uVar1 >> 0x32);\n      hi2c->Instance->CR2 = uVar5;\n      if (DAT_08001ca4 < (hi2c->Init).ClockSpeed) {\n        uVar5 = (uint)((ulonglong)DAT_08001cb4 * (ulonglong)(uVar5 * 300) >> 0x26);\n      }\n      hi2c->Instance->TRISE = uVar5 + 1;\n      if (DAT_08001ca4 < (hi2c->Init).ClockSpeed) {\n        if ((hi2c->Init).DutyCycle == 0) {\n          uVar5 = (uVar1 - 1) / ((hi2c->Init).ClockSpeed * 3) + 1 & 0xfff;\n          bVar6 = uVar5 == 0;\n          if (bVar6) {\n            uVar5 = 1;\n          }\n          cVar2 = (char)uVar5;\n          if (!bVar6) {\n            cVar2 = '\\0';\n          }\n        }\n        else {\n          uVar5 = (uVar1 - 1) / ((hi2c->Init).ClockSpeed * 0x19) + 1 & 0xfff;\n          bVar6 = uVar5 == 0;\n          if (bVar6) {\n            uVar5 = 1;\n          }\n          cVar2 = (char)uVar5;\n          if (!bVar6) {\n            cVar2 = '\\0';\n          }\n        }\n        if (cVar2 == '\\0') {\n          if ((hi2c->Init).DutyCycle == 0) {\n            uVar1 = (uVar1 - 1) / ((hi2c->Init).ClockSpeed * 3) + 1 & 0xfff | 0x8000;\n          }\n          else {\n            uVar1 = (uVar1 - 1) / ((hi2c->Init).ClockSpeed * 0x19) + 1 & 0xfff | 0xc000;\n          }\n        }\n        else {\n          uVar1 = 1;\n        }\n      }\n      else {\n        uVar1 = (uVar1 - 1) / ((hi2c->Init).ClockSpeed << 1) + 1 & 0xfff;\n        if (uVar1 < 4) {\n          uVar1 = 4;\n        }\n      }\n      hi2c->Instance->CCR = uVar1;\n      hi2c->Instance->CR1 = (hi2c->Init).NoStretchMode | (hi2c->Init).GeneralCallMode;\n      hi2c->Instance->OAR1 = (hi2c->Init).OwnAddress1 | (hi2c->Init).AddressingMode;\n      hi2c->Instance->OAR2 = (hi2c->Init).OwnAddress2 | (hi2c->Init).DualAddressMode;\n      hi2c->Instance->CR1 = hi2c->Instance->CR1 | 1;\n      hi2c->ErrorCode = 0;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->PreviousState = 0;\n      hi2c->Mode = HAL_I2C_MODE_NONE;\n      HVar3 = HAL_OK;\n    }\n    else {\n      HVar3 = HAL_ERROR;\n    }\n  }\n  return HVar3;\n}\n\n", 
            "called": [
                "HAL_RCC_GetPCLK1Freq", 
                "HAL_I2C_MspInit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001ab0", 
            "calling": [
                "MX_I2C1_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Init"
        }, 
        "__floatunsisf": {
            "renaming": {}, 
            "code": "\nuint __floatunsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar3 = uVar2 * -0x800000 + 0x4a800000;\n  if (7 < iVar1) {\n    uVar4 = 0 << (uVar2 & 0xff);\n    uVar2 = iVar3 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar4);\n    if (uVar4 == 0x80000000) {\n      uVar2 = uVar2 & 0xfffffffe;\n    }\n    return uVar2;\n  }\n  uVar4 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar2 = iVar3 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n  if ((uVar4 & 0x7fffffff) == 0) {\n    uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c08", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__floatunsisf"
        }, 
        "TIM_ETR_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_ETR_SetConfig(TIM_TypeDef *TIMx,uint32_t TIM_ExtTRGPrescaler,uint32_t TIM_ExtTRGPolarity,\n                      uint32_t ExtTRGFilter)\n\n{\n  uint32_t tmpsmcr;\n  \n  TIMx->SMCR = TIM_ExtTRGPrescaler | ExtTRGFilter << 8 | TIM_ExtTRGPolarity |\n               TIMx->SMCR & 0xffff00ff;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080041a8", 
            "calling": [
                "HAL_TIM_ConfigClockSource"
            ], 
            "imported": false, 
            "current_name": "TIM_ETR_SetConfig"
        }, 
        "TIM_OC3_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC3_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint uVar1;\n  uint32_t uVar2;\n  uint32_t tmpccmrx;\n  uint32_t tmpcr2;\n  uint32_t tmpccer;\n  \n  TIMx->CCER = TIMx->CCER & 0xfffffeff;\n  tmpcr2 = TIMx->CR2;\n  uVar1 = OC_Config->OCMode;\n  uVar2 = OC_Config->OCPolarity << 8 | TIMx->CCER & 0xfffffdff;\n  if (TIMx == DAT_08003ff4) {\n    uVar2 = (OC_Config->OCNPolarity << 8 | uVar2 & 0xfffff7ff) & 0xfffffbff;\n    tmpcr2 = OC_Config->OCNIdleState << 4 | OC_Config->OCIdleState << 4 | tmpcr2 & 0xffffcfff;\n  }\n  TIMx->CR2 = tmpcr2;\n  TIMx->CCMR2 = uVar1 | TIMx->CCMR2 & 0xffffff8c;\n  TIMx->CCR3 = OC_Config->Pulse;\n  TIMx->CCER = uVar2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003f18", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC3_SetConfig"
        }, 
        "__ssprint_r": {
            "renaming": {}, 
            "code": "\nundefined4 __ssprint_r(undefined4 *param_1,void **param_2,int *param_3)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  int iVar3;\n  void *pvVar4;\n  void *pvVar5;\n  void **ppvVar6;\n  void **ppvVar7;\n  void *__src;\n  size_t __n;\n  \n  if (param_3[2] != 0) {\n    pvVar1 = *param_2;\n    pvVar4 = param_2[2];\n    ppvVar7 = (void **)*param_3;\n    do {\n      do {\n        ppvVar6 = ppvVar7 + 2;\n        __src = *ppvVar7;\n        pvVar5 = ppvVar7[1];\n        ppvVar7 = ppvVar6;\n      } while (pvVar5 == (void *)0x0);\n      pvVar2 = pvVar5;\n      if ((pvVar4 <= pvVar5) && (pvVar2 = pvVar4, (*(ushort *)(param_2 + 3) & 0x480) != 0)) {\n        __n = (int)pvVar1 - (int)param_2[4];\n        pvVar4 = (void *)(((int)param_2[5] * 3) / 2);\n        pvVar1 = (void *)((int)pvVar5 + __n + 1);\n        if (pvVar4 < pvVar1) {\n          pvVar4 = pvVar1;\n        }\n        if ((int)((uint)*(ushort *)(param_2 + 3) << 0x15) < 0) {\n          pvVar2 = (void *)_malloc_r(param_1,pvVar4);\n          if (pvVar2 == (void *)0x0) {\nLAB_08009896:\n            *param_1 = 0xc;\n            *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n            param_3[1] = 0;\n            param_3[2] = 0;\n            return 0xffffffff;\n          }\n          memcpy(pvVar2,param_2[4],__n);\n          *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xfb7f | 0x80;\n        }\n        else {\n          pvVar2 = (void *)_realloc_r(param_1);\n          if (pvVar2 == (void *)0x0) {\n            _free_r(param_1,param_2[4]);\n            goto LAB_08009896;\n          }\n        }\n        pvVar1 = (void *)((int)pvVar2 + __n);\n        param_2[5] = pvVar4;\n        param_2[4] = pvVar2;\n        *param_2 = pvVar1;\n        param_2[2] = (void *)((int)pvVar4 - __n);\n        pvVar2 = pvVar5;\n      }\n      memmove(pvVar1,__src,(size_t)pvVar2);\n      iVar3 = param_3[2];\n      pvVar4 = (void *)((int)param_2[2] - (int)pvVar2);\n      pvVar1 = (void *)((int)*param_2 + (int)pvVar2);\n      param_2[2] = pvVar4;\n      *param_2 = pvVar1;\n      param_3[2] = iVar3 - (int)pvVar5;\n    } while (iVar3 - (int)pvVar5 != 0);\n  }\n  param_3[1] = 0;\n  return 0;\n}\n\n", 
            "called": [
                "memcpy", 
                "_realloc_r", 
                "memmove", 
                "_malloc_r", 
                "_free_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080097cc", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__ssprint_r"
        }, 
        "I2C_IsAcknowledgeFailed": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)\n\n{\n  bool bVar1;\n  \n  bVar1 = (hi2c->Instance->SR1 & 0x400) == 0x400;\n  if (bVar1) {\n    hi2c->Instance->SR1 = 0xfffffbff;\n    hi2c->ErrorCode = 4;\n    hi2c->PreviousState = 0;\n    hi2c->State = HAL_I2C_STATE_READY;\n    hi2c->Lock = HAL_UNLOCKED;\n  }\n  return bVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002d3c", 
            "calling": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "I2C_WaitOnBTFFlagUntilTimeout"
            ], 
            "imported": false, 
            "current_name": "I2C_IsAcknowledgeFailed"
        }, 
        "flush_strbuf": {
            "renaming": {}, 
            "code": "\nvoid flush_strbuf(void)\n\n{\n  memset(PTR_strbuf_08004f74,0,0x40);\n  return;\n}\n\n", 
            "called": [
                "memset"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f60", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "flush_strbuf"
        }, 
        "MemManage_Handler": {
            "renaming": {}, 
            "code": "\nvoid MemManage_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056ce", 
            "calling": [], 
            "imported": false, 
            "current_name": "MemManage_Handler"
        }, 
        "_i2c_write_reg": {
            "renaming": {}, 
            "code": "\nvoid _i2c_write_reg(uint8_t addr,uint8_t reg,uint8_t *data,uint16_t len)\n\n{\n  HAL_I2C_Mem_Write((I2C_HandleTypeDef *)PTR_hi2c1_08004ee4,(ushort)addr,(ushort)reg,1,data,len,\n                    *(uint32_t *)PTR_I2C_TIMEOUT_08004ee0);\n  return;\n}\n\n", 
            "called": [
                "HAL_I2C_Mem_Write"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ea4", 
            "calling": [], 
            "imported": false, 
            "current_name": "_i2c_write_reg"
        }, 
        "__aeabi_uldivmod": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_uldivmod(int param_1,int param_2,int param_3,int param_4)\n\n{\n  if ((param_4 == 0) && (param_3 == 0)) {\n    if (param_2 != 0 || param_1 != 0) {\n      param_2 = -1;\n      param_1 = -1;\n    }\n    __aeabi_idiv0(param_1,param_2);\n    return;\n  }\n  __udivmoddi4();\n  return;\n}\n\n", 
            "called": [
                "__aeabi_idiv0", 
                "__udivmoddi4"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080011ec", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_uldivmod"
        }, 
        "MX_GPIO_Init": {
            "renaming": {}, 
            "code": "\nvoid MX_GPIO_Init(void)\n\n{\n  uint32_t tmpreg_2;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  *(uint *)(DAT_0800566c + 0x18) = *(uint *)(DAT_0800566c + 0x18) | 0x20;\n  *(uint *)(DAT_0800566c + 0x18) = *(uint *)(DAT_0800566c + 0x18) | 4;\n  *(uint *)(DAT_0800566c + 0x18) = *(uint *)(DAT_0800566c + 0x18) | 8;\n  HAL_GPIO_WritePin(DAT_08005670,0x1e,GPIO_PIN_RESET);\n  GPIO_InitStruct.Pin = 0x1e;\n  GPIO_InitStruct.Mode = 1;\n  GPIO_InitStruct.Speed = 2;\n  HAL_GPIO_Init(DAT_08005670,&GPIO_InitStruct);\n  return;\n}\n\n", 
            "called": [
                "HAL_GPIO_WritePin", 
                "HAL_GPIO_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080055f4", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "MX_GPIO_Init"
        }, 
        "__aeabi_ul2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_ul2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar1 = param_1;\n  uVar2 = param_2;\n  if (param_2 == 0) {\n    uVar1 = 0;\n    uVar2 = param_1;\n  }\n  iVar5 = 0x5b000000;\n  if (param_2 == 0) {\n    iVar5 = 0x4b000000;\n  }\n  iVar3 = count_leading_zeroes(uVar2);\n  uVar4 = iVar3 - 8;\n  iVar5 = iVar5 + -0x800000 + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar2 << (iVar3 + 0x18U & 0xff);\n    uVar2 = iVar5 + ((uVar2 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar1 | uVar4 << 1) == 0) {\n      uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n    }\n    return uVar2;\n  }\n  uVar6 = uVar1 << (uVar4 & 0xff);\n  uVar2 = iVar5 + (uVar2 << (uVar4 & 0xff)) +\n          (uVar1 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar6);\n  if (uVar6 == 0x80000000) {\n    uVar2 = uVar2 & 0xfffffffe;\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c2c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_ul2f"
        }, 
        "memchr": {
            "renaming": {}, 
            "code": "\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  uVar5 = __c & 0xff;\n  puVar4 = (uint *)__s;\n  if (((uint)__s & 3) == 0) {\nLAB_0800904a:\n    __s = (void *)__n;\n    if ((uint *)0x3 < __n) {\n      uVar1 = (__c & 0xffU) << 8 | uVar5;\n      puVar3 = puVar4;\n      do {\n        uVar2 = *puVar3 ^ (uVar1 | uVar1 << 0x10);\n        puVar4 = puVar3 + 1;\n        if ((uVar2 + 0xfefefeff & ~uVar2 & 0x80808080) != 0) goto LAB_08009050;\n        __n = __n + -4;\n        __s = (void *)__n;\n        puVar3 = puVar4;\n      } while ((uint *)0x3 < __n);\n    }\n    puVar3 = puVar4;\n    __n = (size_t)__s;\n    if ((uint *)__s != (uint *)0x0) {\nLAB_08009050:\n      __s = puVar3;\n                    /* WARNING: Load size is inaccurate */\n      if (*__s != uVar5) {\n        puVar4 = (uint *)(__n + (int)__s);\n        do {\n          __s = (void *)((int)__s + 1);\n          if (puVar4 == (uint *)__s) goto LAB_0800906c;\n                    /* WARNING: Load size is inaccurate */\n        } while (*__s != uVar5);\n      }\n    }\n  }\n  else {\n    puVar3 = (uint *)(__n - 1);\n    if (__n == 0) {\nLAB_0800906c:\n      __s = (uint *)0x0;\n    }\n    else {\n                    /* WARNING: Load size is inaccurate */\n      if (*__s != uVar5) {\n        puVar4 = (uint *)((int)__s + 1);\n        do {\n          __s = puVar4;\n          puVar4 = (uint *)__s;\n          __n = (size_t)puVar3;\n          if (((uint)__s & 3) == 0) goto LAB_0800904a;\n          bVar6 = puVar3 == (uint *)0x0;\n          puVar3 = (uint *)((int)puVar3 + -1);\n          if (bVar6) goto LAB_0800906c;\n                    /* WARNING: Load size is inaccurate */\n          puVar4 = (uint *)((int)__s + 1);\n        } while (*__s != uVar5);\n      }\n    }\n  }\n  return __s;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800901c", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "memchr"
        }, 
        "I2C_WaitOnMasterAddressFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_WaitOnMasterAddressFlagUntilTimeout\n          (I2C_HandleTypeDef *hi2c,uint32_t Flag,uint32_t Timeout,uint32_t Tickstart)\n\n{\n  uint32_t uVar1;\n  char cVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  do {\n    if ((Flag >> 0x10 & 0xff) == 1) {\n      uVar3 = Flag & ~hi2c->Instance->SR1 & 0xffff;\n      bVar4 = uVar3 != 0;\n      if (bVar4) {\n        uVar3 = 1;\n      }\n      cVar2 = (char)uVar3;\n      if (!bVar4) {\n        cVar2 = '\\0';\n      }\n    }\n    else {\n      uVar3 = Flag & ~hi2c->Instance->SR2 & 0xffff;\n      bVar4 = uVar3 != 0;\n      if (bVar4) {\n        uVar3 = 1;\n      }\n      cVar2 = (char)uVar3;\n      if (!bVar4) {\n        cVar2 = '\\0';\n      }\n    }\n    if (cVar2 == '\\0') {\n      return HAL_OK;\n    }\n    if ((hi2c->Instance->SR1 & 0x400) == 0x400) {\n      hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n      hi2c->Instance->SR1 = 0xfffffbff;\n      hi2c->ErrorCode = 4;\n      hi2c->PreviousState = 0;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_ERROR;\n    }\n  } while ((Timeout == 0xffffffff) ||\n          ((Timeout != 0 && (uVar1 = HAL_GetTick(), uVar1 - Tickstart <= Timeout))));\n  hi2c->PreviousState = 0;\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Lock = HAL_UNLOCKED;\n  return HAL_TIMEOUT;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ad8", 
            "calling": [
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnMasterAddressFlagUntilTimeout"
        }, 
        "__aeabi_dcmple": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmple(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009c0", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmple"
        }, 
        "HAL_TIM_MspPostInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim)\n\n{\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  if (htim->Instance == DAT_080056b4) {\n    GPIO_InitStruct.Pin = 0x900;\n    GPIO_InitStruct.Mode = 2;\n    GPIO_InitStruct.Speed = 2;\n    HAL_GPIO_Init(DAT_080056b8,&GPIO_InitStruct);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_GPIO_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005680", 
            "calling": [
                "MX_TIM1_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_MspPostInit"
        }, 
        "__aeabi_cfrcmple": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_cfrcmple(undefined4 param_1,undefined4 param_2)\n\n{\n  __aeabi_cfcmpeq(param_2,param_1);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000fc8", 
            "calling": [
                "__aeabi_fcmpgt", 
                "__aeabi_fcmpge"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfrcmple"
        }, 
        "HAL_UART_Transmit": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_UART_Transmit(UART_HandleTypeDef *huart,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  HAL_StatusTypeDef HVar3;\n  int iVar4;\n  ushort *local_58;\n  uint16_t *tmp;\n  uint32_t tickstart;\n  \n  if (huart->gState == HAL_UART_STATE_READY) {\n    if ((pData == (uint8_t *)0x0) || (Size == 0)) {\n      HVar3 = HAL_ERROR;\n    }\n    else if (huart->Lock == HAL_LOCKED) {\n      HVar3 = HAL_BUSY;\n    }\n    else {\n      huart->Lock = HAL_LOCKED;\n      huart->ErrorCode = 0;\n      huart->gState = HAL_UART_STATE_BUSY_TX;\n      uVar1 = HAL_GetTick();\n      huart->TxXferSize = Size;\n      huart->TxXferCount = Size;\n      local_58 = (ushort *)pData;\n      while (huart->TxXferCount != 0) {\n        huart->TxXferCount = huart->TxXferCount - 1;\n        if ((huart->Init).WordLength == 0x1000) {\n          do {\n            if ((huart->Instance->SR & 0x80) == 0x80) {\n              iVar4 = 0;\n              goto LAB_0800454c;\n            }\n          } while ((Timeout == 0xffffffff) ||\n                  ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout))));\n          huart->Instance->CR1 = huart->Instance->CR1 & 0xfffffe5f;\n          huart->Instance->CR3 = huart->Instance->CR3 & 0xfffffffe;\n          huart->gState = HAL_UART_STATE_READY;\n          huart->RxState = HAL_UART_STATE_READY;\n          huart->Lock = HAL_UNLOCKED;\n          iVar4 = 3;\nLAB_0800454c:\n          if (iVar4 != 0) {\n            return HAL_TIMEOUT;\n          }\n          huart->Instance->DR = *local_58 & 0x1ff;\n          if ((huart->Init).Parity == 0) {\n            local_58 = local_58 + 1;\n          }\n          else {\n            local_58 = (ushort *)((int)local_58 + 1);\n          }\n        }\n        else {\n          do {\n            if ((huart->Instance->SR & 0x80) == 0x80) {\n              iVar4 = 0;\n              goto LAB_08004614;\n            }\n          } while ((Timeout == 0xffffffff) ||\n                  ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout))));\n          huart->Instance->CR1 = huart->Instance->CR1 & 0xfffffe5f;\n          huart->Instance->CR3 = huart->Instance->CR3 & 0xfffffffe;\n          huart->gState = HAL_UART_STATE_READY;\n          huart->RxState = HAL_UART_STATE_READY;\n          huart->Lock = HAL_UNLOCKED;\n          iVar4 = 3;\nLAB_08004614:\n          if (iVar4 != 0) {\n            return HAL_TIMEOUT;\n          }\n          huart->Instance->DR = (uint)*(byte *)local_58;\n          local_58 = (ushort *)((int)local_58 + 1);\n        }\n      }\n      do {\n        if ((huart->Instance->SR & 0x40) == 0x40) {\n          iVar4 = 0;\n          goto LAB_080046c6;\n        }\n      } while ((Timeout == 0xffffffff) ||\n              ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout))));\n      huart->Instance->CR1 = huart->Instance->CR1 & 0xfffffe5f;\n      huart->Instance->CR3 = huart->Instance->CR3 & 0xfffffffe;\n      huart->gState = HAL_UART_STATE_READY;\n      huart->RxState = HAL_UART_STATE_READY;\n      huart->Lock = HAL_UNLOCKED;\n      iVar4 = 3;\nLAB_080046c6:\n      if (iVar4 == 0) {\n        huart->gState = HAL_UART_STATE_READY;\n        huart->Lock = HAL_UNLOCKED;\n        HVar3 = HAL_OK;\n      }\n      else {\n        HVar3 = HAL_TIMEOUT;\n      }\n    }\n  }\n  else {\n    HVar3 = HAL_BUSY;\n  }\n  return HVar3;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004436", 
            "calling": [
                "uart_print"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_Transmit"
        }, 
        "NVIC_SetPriorityGrouping": {
            "renaming": {}, 
            "code": "\nvoid NVIC_SetPriorityGrouping(uint32_t PriorityGroup)\n\n{\n  uint32_t reg_value;\n  uint32_t PriorityGroupTmp;\n  \n  *(uint *)(DAT_080015f8 + 0xc) =\n       *(uint *)(DAT_080015f8 + 0xc) & 0xf8ff | (PriorityGroup & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080015b4", 
            "calling": [
                "HAL_NVIC_SetPriorityGrouping"
            ], 
            "imported": false, 
            "current_name": "NVIC_SetPriorityGrouping"
        }, 
        "__hi0bits": {
            "renaming": {}, 
            "code": "\nint __hi0bits(uint param_1)\n\n{\n  int iVar1;\n  \n  if ((param_1 & 0xffff0000) == 0) {\n    param_1 = param_1 << 0x10;\n    iVar1 = 0x10;\n  }\n  else {\n    iVar1 = 0;\n  }\n  if ((param_1 & 0xff000000) == 0) {\n    param_1 = param_1 << 8;\n    iVar1 = iVar1 + 8;\n  }\n  if ((param_1 & 0xf0000000) == 0) {\n    param_1 = param_1 << 4;\n    iVar1 = iVar1 + 4;\n  }\n  if ((param_1 & 0xc0000000) == 0) {\n    param_1 = param_1 << 2;\n    iVar1 = iVar1 + 2;\n  }\n  if (-1 < (int)param_1) {\n    if ((int)(param_1 << 1) < 0) {\n      return iVar1 + 1;\n    }\n    iVar1 = 0x20;\n  }\n  return iVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080091a4", 
            "calling": [
                "__d2b", 
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__hi0bits"
        }, 
        "main": {
            "renaming": {}, 
            "code": "\nint main(void)\n\n{\n  HAL_Init();\n  SystemClock_Config();\n  MX_GPIO_Init();\n  MX_I2C1_Init();\n  MX_USART1_UART_Init();\n  MX_TIM2_Init();\n  MX_TIM1_Init();\n  *(undefined4 *)PTR_I2C_Write_Reg_0800527c = DAT_08005280;\n  *(undefined4 *)PTR_I2C_Read_Reg_08005284 = DAT_08005288;\n  *(undefined4 *)PTR_Get_ms_tick_0800528c = DAT_08005290;\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)PTR_htim1_08005294,0);\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)PTR_htim1_08005294,0xc);\n  mpu6050_init((Mpu6050 *)PTR_mpu6050_08005298);\n  HAL_TIM_Base_Start_IT((TIM_HandleTypeDef *)PTR_htim2_0800529c);\n  startForkserver(0);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "HAL_TIM_PWM_Start", 
                "MX_I2C1_Init", 
                "HAL_Init", 
                "MX_USART1_UART_Init", 
                "MX_TIM1_Init", 
                "HAL_TIM_Base_Start_IT", 
                "MX_GPIO_Init", 
                "startForkserver", 
                "SystemClock_Config", 
                "MX_TIM2_Init", 
                "mpu6050_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005224", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "main"
        }, 
        "_free_r": {
            "renaming": {}, 
            "code": "\nvoid _free_r(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  undefined *puVar9;\n  uint uVar10;\n  int iVar11;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  __malloc_lock();\n  puVar8 = PTR___malloc_av__08008ac4;\n  uVar10 = *(uint *)(param_2 + -4);\n  iVar2 = param_2 + -8;\n  uVar5 = uVar10 & 0xfffffffe;\n  puVar3 = (uint *)(iVar2 + uVar5);\n  uVar6 = puVar3[1] & 0xfffffffc;\n  if (*(uint **)(PTR___malloc_av__08008ac4 + 8) == puVar3) {\n    uVar5 = uVar5 + uVar6;\n    if ((uVar10 & 1) == 0) {\n      iVar2 = iVar2 - *(int *)(param_2 + -8);\n      iVar11 = *(int *)(iVar2 + 8);\n      iVar1 = *(int *)(iVar2 + 0xc);\n      uVar5 = uVar5 + *(int *)(param_2 + -8);\n      *(int *)(iVar11 + 0xc) = iVar1;\n      *(int *)(iVar1 + 8) = iVar11;\n    }\n    uVar6 = *(uint *)PTR___malloc_trim_threshold_08008acc;\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(int *)(puVar8 + 8) = iVar2;\n    if (uVar6 <= uVar5) {\n      _malloc_trim_r(param_1,*(undefined4 *)PTR___malloc_top_pad_08008ad0);\n    }\nLAB_080089f0:\n    __malloc_unlock(param_1);\n    return;\n  }\n  puVar3[1] = uVar6;\n  if ((uVar10 & 1) == 0) {\n    iVar2 = iVar2 - *(int *)(param_2 + -8);\n    puVar9 = *(undefined **)(iVar2 + 8);\n    uVar5 = uVar5 + *(int *)(param_2 + -8);\n    uVar10 = *(uint *)((int)puVar3 + uVar6 + 4) & 1;\n    if (puVar9 == puVar8 + 8) {\n      if (uVar10 == 0) {\n        uVar10 = puVar3[2];\n        uVar4 = puVar3[3];\n        uVar5 = uVar5 + uVar6;\n        *(uint *)(uVar10 + 0xc) = uVar4;\n        *(uint *)(uVar4 + 8) = uVar10;\n        *(uint *)(iVar2 + 4) = uVar5 | 1;\n        *(uint *)(iVar2 + uVar5) = uVar5;\n      }\n      else {\n        *(uint *)(iVar2 + 4) = uVar5 | 1;\n        *puVar3 = uVar5;\n      }\n      goto LAB_080089f0;\n    }\n    iVar11 = *(int *)(iVar2 + 0xc);\n    *(int *)(puVar9 + 0xc) = iVar11;\n    *(undefined **)(iVar11 + 8) = puVar9;\n  }\n  else {\n    uVar10 = *(uint *)((int)puVar3 + uVar6 + 4) & 1;\n  }\n  if (uVar10 == 0) {\n    puVar9 = (undefined *)puVar3[2];\n    uVar5 = uVar5 + uVar6;\n    if (puVar9 == PTR_PTR___malloc_av__08008ac8) {\n      *(int *)(puVar8 + 0x10) = iVar2;\n      *(int *)(puVar8 + 0x14) = iVar2;\n      *(undefined **)(iVar2 + 8) = puVar9;\n      *(undefined **)(iVar2 + 0xc) = puVar9;\n      *(uint *)(iVar2 + 4) = uVar5 | 1;\n      *(uint *)(iVar2 + uVar5) = uVar5;\n      goto LAB_080089f0;\n    }\n    uVar6 = puVar3[3];\n    *(uint *)(puVar9 + 0xc) = uVar6;\n    *(undefined **)(uVar6 + 8) = puVar9;\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(uint *)(iVar2 + uVar5) = uVar5;\n  }\n  else {\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(uint *)(iVar2 + uVar5) = uVar5;\n  }\n  if (uVar5 < 0x200) {\n    iVar11 = (uVar5 >> 3) + 1;\n    uVar5 = 1 << ((int)(uVar5 >> 3) >> 2 & 0xffU) | *(uint *)(puVar8 + 4);\n    iVar1 = *(int *)(puVar8 + iVar11 * 8);\n    *(int *)(iVar2 + 8) = iVar1;\n    *(undefined **)(iVar2 + 0xc) = puVar8 + iVar11 * 8 + -8;\n    *(uint *)(puVar8 + 4) = uVar5;\n    *(int *)(puVar8 + iVar11 * 8) = iVar2;\n    *(int *)(iVar1 + 0xc) = iVar2;\n    __malloc_unlock(param_1,iVar2,uVar5,param_4);\n    return;\n  }\n  uVar6 = uVar5 >> 9;\n  if (uVar6 < 5) {\n    iVar11 = ((uVar5 >> 6) + 0x39) * 8;\n    iVar1 = (uVar5 >> 6) + 0x38;\n  }\n  else if (uVar6 < 0x15) {\n    iVar11 = (uVar6 + 0x5c) * 8;\n    iVar1 = uVar6 + 0x5b;\n  }\n  else if (uVar6 < 0x55) {\n    iVar11 = ((uVar5 >> 0xc) + 0x6f) * 8;\n    iVar1 = (uVar5 >> 0xc) + 0x6e;\n  }\n  else if (uVar6 < 0x155) {\n    iVar11 = ((uVar5 >> 0xf) + 0x78) * 8;\n    iVar1 = (uVar5 >> 0xf) + 0x77;\n  }\n  else if (uVar6 < 0x555) {\n    iVar11 = ((uVar5 >> 0x12) + 0x7d) * 8;\n    iVar1 = (uVar5 >> 0x12) + 0x7c;\n  }\n  else {\n    iVar11 = 0x3f8;\n    iVar1 = 0x7e;\n  }\n  puVar9 = *(undefined **)(puVar8 + iVar11);\n  puVar7 = puVar8 + iVar11 + -8;\n  if (puVar7 == puVar9) {\n    puVar9 = (undefined *)(1 << (iVar1 >> 2 & 0xffU) | *(uint *)(puVar8 + 4));\n    *(undefined **)(puVar8 + 4) = puVar9;\n    puVar8 = puVar7;\n  }\n  else {\n    do {\n      puVar8 = puVar9;\n      if ((*(uint *)(puVar9 + 4) & 0xfffffffc) <= uVar5) break;\n      puVar9 = *(undefined **)(puVar9 + 8);\n      puVar8 = puVar7;\n    } while (puVar7 != puVar9);\n    puVar7 = *(undefined **)(puVar8 + 0xc);\n  }\n  *(undefined **)(iVar2 + 8) = puVar8;\n  *(undefined **)(iVar2 + 0xc) = puVar7;\n  *(int *)(puVar7 + 8) = iVar2;\n  *(int *)(puVar8 + 0xc) = iVar2;\n  __malloc_unlock(param_1,iVar2,puVar9,param_4);\n  return;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "_malloc_trim_r", 
                "__malloc_unlock"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080088ec", 
            "calling": [
                "__ssprint_r", 
                "_realloc_r", 
                "_svfprintf_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "_free_r"
        }, 
        "TIM_TI1_ConfigInputStage": {
            "renaming": {}, 
            "code": "\nvoid TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx,uint32_t TIM_ICPolarity,uint32_t TIM_ICFilter)\n\n{\n  uint uVar1;\n  uint32_t tmpccer;\n  uint32_t tmpccmr1;\n  \n  uVar1 = TIMx->CCER;\n  TIMx->CCER = TIMx->CCER & 0xfffffffe;\n  TIMx->CCMR1 = TIM_ICFilter << 4 | TIMx->CCMR1 & 0xffffff0f;\n  TIMx->CCER = TIM_ICPolarity | uVar1 & 0xfffffff5;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080040a0", 
            "calling": [
                "HAL_TIM_ConfigClockSource"
            ], 
            "imported": false, 
            "current_name": "TIM_TI1_ConfigInputStage"
        }, 
        "__ieee754_atan2": {
            "renaming": {}, 
            "code": "\nvoid __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  int iVar1;\n  undefined4 unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  \n  uVar3 = param_4 & 0x7fffffff;\n  if ((DAT_080059e8 < (uVar3 | (-param_3 | param_3) >> 0x1f)) ||\n     (uVar4 = param_2 & 0x7fffffff, DAT_080059e8 < (uVar4 | (-param_1 | param_1) >> 0x1f))) {\n    __aeabi_dadd(param_3,param_4,param_1,param_2);\n  }\n  else {\n    if ((param_4 + 0xc0100000 | param_3) == 0) {\n      atan(param_5);\n      return;\n    }\n    uVar2 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n    if (((((uVar4 | param_1) != 0) && ((uVar3 | param_3) != 0)) && (uVar3 != DAT_080059e8)) &&\n       (uVar4 != DAT_080059e8)) {\n      iVar1 = (int)(uVar4 - uVar3) >> 0x14;\n      if ((iVar1 < 0x3d) && ((-1 < (int)param_4 || (iVar1 + 0x3c < 0 == SCARRY4(iVar1,0x3c))))) {\n        __divdf3(param_1,param_2);\n        fabs((double)CONCAT44(unaff_r4,param_4));\n        atan((double)CONCAT44(unaff_r4,param_4));\n      }\n      if (uVar2 != 1) {\n        if (uVar2 == 2) {\n          uVar5 = __subdf3();\n          __subdf3(DAT_080059b0,DAT_080059b4,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        }\n        else if (uVar2 != 0) {\n          uVar5 = __subdf3();\n          __subdf3((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_080059b0,DAT_080059b4);\n        }\n      }\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "__aeabi_dadd", 
                "__divdf3", 
                "__subdf3", 
                "fabs", 
                "atan"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005838", 
            "calling": [
                "atan2"
            ], 
            "imported": false, 
            "current_name": "__ieee754_atan2"
        }, 
        "atan": {
            "renaming": {}, 
            "code": "\ndouble atan(double __x)\n\n{\n  int in_r0;\n  undefined4 uVar1;\n  undefined4 uVar2;\n  uint in_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1;\n  undefined4 in_r3;\n  undefined4 unaff_r4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  int iVar8;\n  double in_d0;\n  double dVar9;\n  double extraout_d0;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  \n  uVar10 = CONCAT44(in_r1,in_r0);\n  uVar7 = in_r1 & 0x7fffffff;\n  if (DAT_08005cd8 < (int)uVar7) {\n    if ((uVar7 == DAT_08005cdc || (int)uVar7 < (int)DAT_08005cdc) &&\n       ((uVar7 != DAT_08005cdc || (in_r0 == 0)))) {\n      return in_d0;\n    }\n    dVar9 = (double)__aeabi_dadd();\n  }\n  else {\n    if (DAT_08005cec < (int)uVar7) {\n      fabs((double)CONCAT44(unaff_r4,in_r3));\n      if (DAT_08005cfc < (int)uVar7) {\n        if (DAT_08005d00 < (int)uVar7) {\n          uVar10 = __divdf3(0,DAT_08005d08,in_r0,extraout_r1);\n          iVar8 = 3;\n        }\n        else {\n          uVar10 = __subdf3();\n          uVar11 = __muldf3(in_r0,extraout_r1,0,DAT_08005d04);\n          uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005cf8);\n          uVar10 = __divdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n          iVar8 = 2;\n        }\n      }\n      else if (DAT_08005cfc + -0xd0000 < (int)uVar7) {\n        uVar10 = __subdf3();\n        uVar11 = __aeabi_dadd(in_r0,extraout_r1,0,DAT_08005cf8);\n        uVar10 = __divdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n        iVar8 = 1;\n      }\n      else {\n        uVar10 = __aeabi_dadd();\n        uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005cf8);\n        uVar11 = __aeabi_dadd(in_r0,extraout_r1,0,0x40000000);\n        uVar10 = __divdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n        iVar8 = 0;\n      }\n    }\n    else {\n      if ((int)uVar7 <= DAT_08005cec + -0x1bc0000) {\n        uVar11 = __aeabi_dadd(in_r0,in_r1,DAT_08005cd0,DAT_08005cd4);\n        iVar8 = __aeabi_dcmpgt((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005cf8);\n        if (iVar8 != 0) {\n          return extraout_d0;\n        }\n      }\n      iVar8 = -1;\n    }\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar5 = (undefined4)uVar10;\n    uVar10 = __muldf3(uVar5,uVar6,uVar5,uVar6);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    uVar10 = __muldf3(uVar1,uVar3,uVar1,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = __muldf3(uVar2,uVar4,DAT_08005c78,DAT_08005c7c);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005c80,DAT_08005c84);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar4);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005c88,DAT_08005c8c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar4);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005c90,DAT_08005c94);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar4);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005c98,DAT_08005c9c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar4);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005ca0,DAT_08005ca4);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar1,uVar3);\n    uVar11 = __muldf3(uVar2,uVar4,DAT_08005ca8,DAT_08005cac);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005cb0,DAT_08005cb4);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005cb8,DAT_08005cbc);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005cc0,DAT_08005cc4);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005cc8,DAT_08005ccc);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar5,uVar6);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar8 == -1) {\n      dVar9 = (double)__subdf3(uVar5,uVar6,(int)uVar10,uVar1);\n      return dVar9;\n    }\n    uVar10 = __subdf3((int)uVar10,uVar1,*(undefined4 *)(PTR_atanlo_08005cf0 + iVar8 * 8),\n                      *(undefined4 *)((int)(PTR_atanlo_08005cf0 + iVar8 * 8) + 4));\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar5,uVar6);\n    dVar9 = (double)__subdf3(*(undefined4 *)(PTR_atanhi_08005cf4 + iVar8 * 8),\n                             *(undefined4 *)((int)(PTR_atanhi_08005cf4 + iVar8 * 8) + 4),(int)uVar10\n                             ,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)in_r1 < 0) {\n      return dVar9;\n    }\n  }\n  return dVar9;\n}\n\n", 
            "called": [
                "__aeabi_dadd", 
                "__muldf3", 
                "__aeabi_dcmpgt", 
                "__divdf3", 
                "__subdf3", 
                "fabs"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080059f0", 
            "calling": [
                "__ieee754_atan2"
            ], 
            "imported": false, 
            "current_name": "atan"
        }, 
        "__aeabi_i2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_i2d(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint in_r12;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar6 = param_1 & 0x80000000;\n  uVar2 = param_1;\n  if ((int)uVar6 < 0) {\n    uVar2 = -param_1;\n  }\n  uVar1 = 0;\n  iVar4 = count_leading_zeroes(uVar2);\n  uVar5 = iVar4 + 0x15;\n  bVar9 = SBORROW4(uVar5,0x20);\n  uVar3 = iVar4 - 0xb;\n  bVar7 = (int)uVar3 < 0;\n  bVar8 = uVar3 == 0;\n  if ((int)uVar5 < 0x20) {\n    bVar9 = SCARRY4(uVar3,0xc);\n    iVar4 = iVar4 + 1;\n    bVar7 = iVar4 < 0;\n    bVar8 = iVar4 == 0;\n    uVar3 = uVar5;\n    if (!bVar8 && bVar7 == bVar9) {\n      uVar1 = uVar2 << (uVar5 & 0xff);\n      uVar2 = uVar2 >> (0xcU - iVar4 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    in_r12 = 0x20 - uVar3;\n  }\n  uVar2 = uVar2 << (uVar3 & 0xff);\n  if (bVar8 || bVar7 != bVar9) {\n    uVar2 = uVar2 | 0U >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    uVar1 = 0 << (uVar3 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar5 < 0x433) {\n    return CONCAT44(uVar2 + (0x432 - uVar5) * 0x100000 | uVar6,uVar1);\n  }\n  uVar3 = ~(0x432 - uVar5);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_1,uVar2 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar4 = uVar3 - 0x13;\n  if (iVar4 == 0 || iVar4 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar6 | uVar2 >> (uVar3 & 0xff),\n                    uVar1 >> (uVar3 & 0xff) | uVar2 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_1,uVar1 >> (0x20 - (0xcU - iVar4) & 0xff) | uVar2 << (0xcU - iVar4 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080003f4", 
            "calling": [
                "_dtoa_r", 
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_i2d"
        }, 
        "HAL_GPIO_Init": {
            "renaming": {}, 
            "code": "\nvoid HAL_GPIO_Init(GPIO_TypeDef *GPIOx,GPIO_InitTypeDef *GPIO_Init)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  GPIO_TypeDef *pGVar6;\n  int iVar7;\n  uint32_t tmpreg;\n  uint32_t *configregister;\n  uint32_t registeroffset;\n  uint32_t temp;\n  uint32_t iocurrent;\n  uint32_t ioposition;\n  uint32_t config;\n  uint32_t position;\n  \n  config = 0;\n  position = 0;\n  do {\n    if (0xf < position) {\n      return;\n    }\n    uVar3 = 1 << (position & 0xff);\n    uVar4 = GPIO_Init->Pin & uVar3;\n    if (uVar4 == uVar3) {\n      uVar5 = GPIO_Init->Mode;\n      if (uVar5 == 0x12) {\n        config = GPIO_Init->Speed + 0xc;\n      }\n      else if (uVar5 < 0x13) {\n        if (uVar5 == 2) {\n          config = GPIO_Init->Speed + 8;\n        }\n        else if (uVar5 < 3) {\n          if (uVar5 == 0) goto LAB_08001882;\n          if (uVar5 == 1) {\n            config = GPIO_Init->Speed;\n          }\n        }\n        else if (uVar5 == 3) {\n          config = 0;\n        }\n        else if (uVar5 == 0x11) {\n          config = GPIO_Init->Speed + 4;\n        }\n      }\n      else if (((uVar5 == DAT_08001a4c) ||\n               (((uVar1 = DAT_08001a54, uVar2 = DAT_08001a50, DAT_08001a4c < uVar5 &&\n                 (uVar1 = DAT_08001a60, uVar2 = DAT_08001a5c, uVar5 == DAT_08001a58)) ||\n                (uVar5 == uVar2)))) || (uVar5 == uVar1)) {\nLAB_08001882:\n        if (GPIO_Init->Pull == 0) {\n          config = 4;\n        }\n        else if (GPIO_Init->Pull == 1) {\n          config = 8;\n          GPIOx->BSRR = uVar3;\n        }\n        else {\n          config = 8;\n          GPIOx->BRR = uVar3;\n        }\n      }\n      if (uVar4 < 0x100) {\n        uVar3 = position << 2;\n        pGVar6 = GPIOx;\n      }\n      else {\n        pGVar6 = (GPIO_TypeDef *)&GPIOx->CRH;\n        uVar3 = (position - 8) * 4;\n      }\n      pGVar6->CRL = pGVar6->CRL & ~(0xf << (uVar3 & 0xff)) | config << (uVar3 & 0xff);\n      if ((GPIO_Init->Mode & 0x10000000) != 0) {\n        *(uint *)(DAT_08001a64 + 0x18) = *(uint *)(DAT_08001a64 + 0x18) | 1;\n        if (GPIOx == DAT_08001a6c) {\n          iVar7 = 0;\n        }\n        else if (GPIOx == DAT_08001a70) {\n          iVar7 = 1;\n        }\n        else if (GPIOx == DAT_08001a74) {\n          iVar7 = 2;\n        }\n        else if (GPIOx == DAT_08001a78) {\n          iVar7 = 3;\n        }\n        else {\n          iVar7 = 4;\n        }\n        *(uint *)(DAT_08001a68 + ((position >> 2) + 2) * 4) =\n             iVar7 << ((position & 3) << 2) |\n             ~(0xf << ((position & 3) << 2)) & *(uint *)(DAT_08001a68 + ((position >> 2) + 2) * 4);\n        if ((GPIO_Init->Mode & 0x10000) == 0) {\n          *DAT_08001a7c = ~uVar4 & *DAT_08001a7c;\n        }\n        else {\n          *DAT_08001a7c = uVar4 | *DAT_08001a7c;\n        }\n        if ((GPIO_Init->Mode & 0x20000) == 0) {\n          DAT_08001a7c[1] = ~uVar4 & DAT_08001a7c[1];\n        }\n        else {\n          DAT_08001a7c[1] = uVar4 | DAT_08001a7c[1];\n        }\n        if ((GPIO_Init->Mode & 0x100000) == 0) {\n          DAT_08001a7c[2] = ~uVar4 & DAT_08001a7c[2];\n        }\n        else {\n          DAT_08001a7c[2] = uVar4 | DAT_08001a7c[2];\n        }\n        if ((GPIO_Init->Mode & 0x200000) == 0) {\n          DAT_08001a7c[3] = ~uVar4 & DAT_08001a7c[3];\n        }\n        else {\n          DAT_08001a7c[3] = uVar4 | DAT_08001a7c[3];\n        }\n      }\n    }\n    position = position + 1;\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080017c4", 
            "calling": [
                "HAL_TIM_MspPostInit", 
                "MX_GPIO_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_GPIO_Init"
        }, 
        "FUN_0800088a": {
            "renaming": {}, 
            "code": "\nulonglong FUN_0800088a(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 = in_r12 & param_4 >> 0x14;\n  uVar3 = param_2;\n  if (unaff_r4 != in_r12 || uVar2 != in_r12) {\n    if (unaff_r4 == in_r12) {\n      if (((param_1 | param_2 << 0xc) == 0) && (param_1 = param_3, uVar3 = param_4, uVar2 != in_r12)\n         ) {\nLAB_080006fc:\n        return (ulonglong)((param_2 ^ param_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (uVar2 == in_r12) {\n      param_1 = param_3;\n      uVar3 = param_4;\n      if ((param_3 | param_4 << 0xc) == 0) {\nLAB_080006c0:\n        return (ulonglong)((param_2 ^ param_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      bVar4 = (param_1 | param_2 << 1) == 0;\n      if (!bVar4) {\n        bVar4 = (param_3 | param_4 << 1) == 0;\n      }\n      if (!bVar4) {\n        if (unaff_r4 == 0) {\n          uVar3 = param_2 & 0x80000000;\n          do {\n            uVar1 = param_1 & 0x80000000;\n            param_1 = param_1 << 1;\n            param_2 = param_2 * 2 + (uint)(uVar1 != 0);\n          } while ((param_2 & 0x100000) == 0);\n          param_2 = param_2 | uVar3;\n          if (uVar2 != 0) {\n            return CONCAT44(param_2,param_1);\n          }\n        }\n        do {\n          uVar3 = param_3 & 0x80000000;\n          param_3 = param_3 << 1;\n          param_4 = param_4 * 2 + (uint)(uVar3 != 0);\n        } while ((param_4 & 0x100000) == 0);\n        return CONCAT44(param_2,param_1);\n      }\n      if ((param_1 | param_2 << 1) != 0) goto LAB_080006fc;\n      if ((param_3 | param_4 << 1) != 0) goto LAB_080006c0;\n    }\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x0800088a", 
            "calling": [
                "__divdf3"
            ], 
            "imported": false, 
            "current_name": "FUN_0800088a"
        }, 
        "__multiply": {
            "renaming": {}, 
            "code": "\nvoid __multiply(undefined4 param_1,int param_2,int param_3)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  int iVar9;\n  int iVar10;\n  uint uVar11;\n  int iVar12;\n  int iVar13;\n  uint *puVar14;\n  uint *puVar15;\n  uint *puVar16;\n  uint *puVar17;\n  uint *puVar18;\n  \n  iVar12 = *(int *)(param_2 + 0x10);\n  iVar9 = *(int *)(param_3 + 0x10);\n  iVar10 = iVar9;\n  iVar13 = param_2;\n  if (iVar12 < iVar9) {\n    iVar10 = iVar12;\n    iVar12 = iVar9;\n    iVar13 = param_3;\n    param_3 = param_2;\n  }\n  iVar9 = iVar12 + iVar10;\n  iVar3 = *(int *)(iVar13 + 4);\n  if (*(int *)(iVar13 + 8) < iVar9) {\n    iVar3 = iVar3 + 1;\n  }\n  iVar3 = _Balloc(param_1,iVar3);\n  puVar18 = (uint *)(iVar3 + 0x14);\n  puVar17 = puVar18 + iVar9;\n  for (puVar5 = puVar18; puVar5 < puVar17; puVar5 = puVar5 + 1) {\n    *puVar5 = 0;\n  }\n  uVar6 = param_3 + 0x14;\n  uVar11 = uVar6 + iVar10 * 4;\n  puVar5 = (uint *)(iVar13 + 0x14);\n  if (uVar6 < uVar11) {\n    puVar7 = (uint *)(uVar6 + ((uVar11 - param_3) - 0x15 & 0xfffffffc));\n    puVar16 = (uint *)(param_3 + 0x10);\n    do {\n      while( true ) {\n        puVar16 = puVar16 + 1;\n        uVar6 = *puVar16 & 0xffff;\n        if (uVar6 != 0) break;\n        uVar6 = *puVar16 >> 0x10;\n        if (uVar6 == 0) goto LAB_080092d2;\nLAB_0800932c:\n        uVar8 = *puVar18;\n        uVar4 = 0;\n        puVar1 = puVar5;\n        puVar14 = puVar18;\n        uVar11 = uVar8;\n        do {\n          puVar15 = puVar14;\n          uVar4 = uVar4 + uVar6 * *(ushort *)puVar1 + (uVar11 >> 0x10);\n          *puVar15 = uVar8 & 0xffff | uVar4 * 0x10000;\n          puVar2 = puVar1 + 1;\n          uVar11 = puVar15[1];\n          uVar8 = uVar6 * (*puVar1 >> 0x10) + (uVar11 & 0xffff) + (uVar4 >> 0x10);\n          uVar4 = uVar8 >> 0x10;\n          puVar1 = puVar2;\n          puVar14 = puVar15 + 1;\n        } while (puVar2 < puVar5 + iVar12);\n        puVar15[1] = uVar8;\n        puVar18 = puVar18 + 1;\n        if (puVar7 == puVar16) goto LAB_0800937a;\n      }\n      uVar11 = 0;\n      puVar1 = puVar18;\n      puVar14 = puVar5;\n      do {\n        puVar2 = puVar1;\n        puVar15 = puVar14 + 1;\n        uVar8 = uVar6 * (*puVar14 & 0xffff) + (*puVar2 & 0xffff) + uVar11;\n        uVar4 = uVar6 * (*puVar14 >> 0x10) + (*puVar2 >> 0x10) + (uVar8 >> 0x10);\n        uVar11 = uVar4 >> 0x10;\n        *puVar2 = uVar8 & 0xffff | uVar4 * 0x10000;\n        puVar1 = puVar2 + 1;\n        puVar14 = puVar15;\n      } while (puVar15 < puVar5 + iVar12);\n      puVar2[1] = uVar11;\n      uVar6 = *puVar16 >> 0x10;\n      if (uVar6 != 0) goto LAB_0800932c;\nLAB_080092d2:\n      puVar18 = puVar18 + 1;\n    } while (puVar7 != puVar16);\n  }\nLAB_0800937a:\n  if (0 < iVar9) {\n    uVar6 = puVar17[-1];\n    puVar17 = puVar17 + -1;\n    while ((uVar6 == 0 && (iVar9 = iVar9 + -1, iVar9 != 0))) {\n      puVar17 = puVar17 + -1;\n      uVar6 = *puVar17;\n    }\n  }\n  *(int *)(iVar3 + 0x10) = iVar9;\n  return;\n}\n\n", 
            "called": [
                "_Balloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009258", 
            "calling": [
                "__pow5mult", 
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__multiply"
        }, 
        "I2C_WaitOnRXNEFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Timeout,uint32_t Tickstart)\n\n{\n  uint32_t uVar1;\n  \n  while( true ) {\n    if ((hi2c->Instance->SR1 & 0x40) == 0x40) {\n      return HAL_OK;\n    }\n    if ((hi2c->Instance->SR1 & 0x10) == 0x10) break;\n    if ((Timeout == 0) || (uVar1 = HAL_GetTick(), Timeout < uVar1 - Tickstart)) {\n      hi2c->ErrorCode = hi2c->ErrorCode | 0x20;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  hi2c->Instance->SR1 = 0xffffffef;\n  hi2c->ErrorCode = 0;\n  hi2c->PreviousState = 0;\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Lock = HAL_UNLOCKED;\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ca8", 
            "calling": [
                "HAL_I2C_Mem_Read"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnRXNEFlagUntilTimeout"
        }, 
        "__aeabi_fcmplt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmplt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfcmpeq();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000ff4", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmplt"
        }, 
        "__gesf2": {
            "renaming": {}, 
            "code": "\nuint __gesf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 0xffffffff;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f58", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gesf2"
        }, 
        "HAL_TIM_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)\n\n{\n  if (((htim->Instance->SR & 2) == 2) && ((htim->Instance->DIER & 2) == 2)) {\n    htim->Instance->SR = 0xfffffffd;\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;\n    if ((htim->Instance->CCMR1 & 3) == 0) {\n      HAL_TIM_OC_DelayElapsedCallback(htim);\n      HAL_TIM_PWM_PulseFinishedCallback(htim);\n    }\n    else {\n      HAL_TIM_IC_CaptureCallback(htim);\n    }\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;\n  }\n  if (((htim->Instance->SR & 4) == 4) && ((htim->Instance->DIER & 4) == 4)) {\n    htim->Instance->SR = 0xfffffffb;\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;\n    if ((htim->Instance->CCMR1 & 0x300) == 0) {\n      HAL_TIM_OC_DelayElapsedCallback(htim);\n      HAL_TIM_PWM_PulseFinishedCallback(htim);\n    }\n    else {\n      HAL_TIM_IC_CaptureCallback(htim);\n    }\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;\n  }\n  if (((htim->Instance->SR & 8) == 8) && ((htim->Instance->DIER & 8) == 8)) {\n    htim->Instance->SR = 0xfffffff7;\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;\n    if ((htim->Instance->CCMR2 & 3) == 0) {\n      HAL_TIM_OC_DelayElapsedCallback(htim);\n      HAL_TIM_PWM_PulseFinishedCallback(htim);\n    }\n    else {\n      HAL_TIM_IC_CaptureCallback(htim);\n    }\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;\n  }\n  if (((htim->Instance->SR & 0x10) == 0x10) && ((htim->Instance->DIER & 0x10) == 0x10)) {\n    htim->Instance->SR = 0xffffffef;\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;\n    if ((htim->Instance->CCMR2 & 0x300) == 0) {\n      HAL_TIM_OC_DelayElapsedCallback(htim);\n      HAL_TIM_PWM_PulseFinishedCallback(htim);\n    }\n    else {\n      HAL_TIM_IC_CaptureCallback(htim);\n    }\n    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;\n  }\n  if (((htim->Instance->SR & 1) == 1) && ((htim->Instance->DIER & 1) == 1)) {\n    htim->Instance->SR = 0xfffffffe;\n    HAL_TIM_PeriodElapsedCallback(htim);\n  }\n  if (((htim->Instance->SR & 0x80) == 0x80) && ((htim->Instance->DIER & 0x80) == 0x80)) {\n    htim->Instance->SR = 0xffffff7f;\n    HAL_TIMEx_BreakCallback(htim);\n  }\n  if (((htim->Instance->SR & 0x40) == 0x40) && ((htim->Instance->DIER & 0x40) == 0x40)) {\n    htim->Instance->SR = 0xffffffbf;\n    HAL_TIM_TriggerCallback(htim);\n  }\n  if (((htim->Instance->SR & 0x20) == 0x20) && ((htim->Instance->DIER & 0x20) == 0x20)) {\n    htim->Instance->SR = 0xffffffdf;\n    HAL_TIMEx_CommutationCallback(htim);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_TIM_PWM_PulseFinishedCallback", 
                "HAL_TIMEx_BreakCallback", 
                "HAL_TIM_PeriodElapsedCallback", 
                "HAL_TIMEx_CommutationCallback", 
                "HAL_TIM_OC_DelayElapsedCallback", 
                "HAL_TIM_TriggerCallback", 
                "HAL_TIM_IC_CaptureCallback"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080036f8", 
            "calling": [
                "TIM2_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_IRQHandler"
        }, 
        "__lshift": {
            "renaming": {}, 
            "code": "\nvoid __lshift(int param_1,undefined4 *param_2,uint param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int iVar6;\n  uint *puVar7;\n  uint *puVar8;\n  uint *puVar10;\n  uint *puVar11;\n  int iVar12;\n  int iVar13;\n  uint uVar14;\n  uint *puVar9;\n  \n  iVar5 = param_2[4];\n  iVar12 = (int)param_3 >> 5;\n  iVar13 = iVar12 + iVar5 + 1;\n  iVar3 = param_2[1];\n  iVar2 = param_2[2];\n  if ((int)param_2[2] < iVar13) {\n    do {\n      iVar6 = iVar2 * 2;\n      iVar1 = iVar2 * -2;\n      iVar3 = iVar3 + 1;\n      iVar2 = iVar6;\n    } while (iVar13 != iVar6 && iVar13 + iVar1 < 0 == SBORROW4(iVar13,iVar6));\n  }\n  iVar2 = _Balloc(param_1,iVar3);\n  puVar7 = (uint *)(iVar2 + 0x14);\n  if (0 < iVar12) {\n    puVar11 = puVar7 + iVar12;\n    puVar8 = puVar7;\n    do {\n      puVar9 = puVar8 + 1;\n      *puVar8 = 0;\n      puVar7 = puVar11;\n      puVar8 = puVar9;\n    } while (puVar9 != puVar11);\n  }\n  iVar3 = param_2[4];\n  puVar8 = param_2 + 5;\n  param_3 = param_3 & 0x1f;\n  if (param_3 == 0) {\n    puVar7 = puVar7 + -1;\n    puVar11 = puVar8;\n    do {\n      puVar9 = puVar11 + 1;\n      puVar7 = puVar7 + 1;\n      *puVar7 = *puVar11;\n      puVar11 = puVar9;\n    } while (puVar9 < puVar8 + iVar3);\n  }\n  else {\n    uVar14 = 0;\n    puVar11 = puVar8;\n    do {\n      puVar9 = puVar7;\n      *puVar9 = *puVar11 << param_3 | uVar14;\n      puVar10 = puVar11 + 1;\n      uVar14 = *puVar11 >> (0x20 - param_3 & 0xff);\n      puVar7 = puVar9 + 1;\n      puVar11 = puVar10;\n    } while (puVar10 < puVar8 + iVar3);\n    puVar9[1] = uVar14;\n    if (uVar14 != 0) {\n      iVar13 = iVar12 + iVar5 + 2;\n    }\n  }\n  iVar5 = *(int *)(param_1 + 0x4c);\n  iVar3 = param_2[1];\n  uVar4 = *(undefined4 *)(iVar5 + iVar3 * 4);\n  *(int *)(iVar2 + 0x10) = iVar13 + -1;\n  *param_2 = uVar4;\n  *(undefined4 **)(iVar5 + iVar3 * 4) = param_2;\n  return;\n}\n\n", 
            "called": [
                "_Balloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009444", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__lshift"
        }, 
        "__aeabi_fcmple": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmple(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001008", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmple"
        }, 
        "__mdiff": {
            "renaming": {}, 
            "code": "\nvoid __mdiff(undefined4 param_1,uint *param_2,uint *param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint *puVar6;\n  uint *puVar7;\n  uint *puVar9;\n  uint *puVar10;\n  uint *puVar11;\n  int iVar12;\n  uint *puVar13;\n  uint uVar14;\n  uint *puVar8;\n  \n  puVar2 = (uint *)param_3[4];\n  iVar5 = param_2[4] - (int)puVar2;\n  puVar11 = param_2 + 5;\n  puVar13 = param_3 + 5;\n  puVar7 = puVar11;\n  puVar9 = param_2;\n  if (iVar5 == 0) {\n    puVar6 = puVar11 + (int)puVar2;\n    puVar2 = puVar13 + (int)puVar2;\n    while( true ) {\n      puVar6 = puVar6 + -1;\n      puVar2 = puVar2 + -1;\n      if (*puVar6 != *puVar2) break;\n      if (puVar6 <= puVar11) {\n        iVar5 = _Balloc(param_1,0,puVar6,puVar2,param_4);\n        *(undefined4 *)(iVar5 + 0x10) = 1;\n        *(undefined4 *)(iVar5 + 0x14) = 0;\n        return;\n      }\n    }\n    if (*puVar2 <= *puVar6) goto LAB_08009578;\n  }\n  else if (-1 < iVar5) {\n    iVar5 = 0;\n    puVar6 = param_3;\n    goto LAB_08009578;\n  }\n  iVar5 = 1;\n  puVar6 = puVar11;\n  puVar2 = param_2;\n  puVar7 = puVar13;\n  puVar9 = param_3;\n  param_3 = param_2;\n  puVar13 = puVar11;\nLAB_08009578:\n  iVar1 = _Balloc(param_1,puVar9[1],puVar6,puVar2,param_4);\n  iVar12 = 0;\n  uVar14 = puVar9[4];\n  uVar3 = param_3[4];\n  *(int *)(iVar1 + 0xc) = iVar5;\n  puVar11 = puVar7 + uVar14;\n  puVar2 = (uint *)(iVar1 + 0x14);\n  puVar9 = puVar13;\n  do {\n    puVar8 = puVar7 + 1;\n    puVar10 = puVar9 + 1;\n    uVar4 = ((*puVar7 & 0xffff) + iVar12) - (*puVar9 & 0xffff);\n    iVar12 = ((*puVar7 >> 0x10) - (*puVar9 >> 0x10)) + ((int)uVar4 >> 0x10);\n    uVar4 = uVar4 & 0xffff | iVar12 * 0x10000;\n    puVar6 = puVar2 + 1;\n    *puVar2 = uVar4;\n    iVar12 = iVar12 >> 0x10;\n    puVar2 = puVar6;\n    puVar7 = puVar8;\n    puVar9 = puVar10;\n  } while (puVar10 < puVar13 + uVar3);\n  puVar2 = puVar8;\n  puVar7 = puVar6;\n  if (puVar8 < puVar11) {\n    do {\n      puVar9 = puVar2 + 1;\n      uVar3 = (*puVar2 & 0xffff) + iVar12;\n      iVar12 = ((int)uVar3 >> 0x10) + (*puVar2 >> 0x10);\n      uVar4 = uVar3 & 0xffff | iVar12 * 0x10000;\n      *puVar7 = uVar4;\n      iVar12 = iVar12 >> 0x10;\n      puVar2 = puVar9;\n      puVar7 = puVar7 + 1;\n    } while (puVar9 < puVar11);\n    puVar6 = (uint *)((int)puVar6 + ((int)puVar11 + ~(uint)puVar8 & 0xfffffffc) + 4);\n  }\n  puVar6 = puVar6 + -1;\n  while (uVar4 == 0) {\n    puVar6 = puVar6 + -1;\n    uVar14 = uVar14 - 1;\n    uVar4 = *puVar6;\n  }\n  *(uint *)(iVar1 + 0x10) = uVar14;\n  return;\n}\n\n", 
            "called": [
                "_Balloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009530", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__mdiff"
        }, 
        "HAL_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_Init(void)\n\n{\n  *DAT_08001518 = *DAT_08001518 | 0x10;\n  HAL_NVIC_SetPriorityGrouping(3);\n  HAL_InitTick(0xf);\n  HAL_MspInit();\n  return HAL_OK;\n}\n\n", 
            "called": [
                "HAL_MspInit", 
                "HAL_InitTick", 
                "HAL_NVIC_SetPriorityGrouping"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080014f0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "HAL_Init"
        }, 
        "HAL_SYSTICK_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid HAL_SYSTICK_IRQHandler(void)\n\n{\n  HAL_TIM_PeriodElapsedCallback((TIM_HandleTypeDef *)0x0);\n  return;\n}\n\n", 
            "called": [
                "HAL_TIM_PeriodElapsedCallback"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080017b4", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_IRQHandler"
        }, 
        "HAL_RCC_OscConfig": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef *RCC_OscInitStruct)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  HAL_StatusTypeDef HVar3;\n  bool bVar4;\n  uint32_t tmpreg;\n  uint32_t tickstart;\n  FlagStatus pwrclkchanged;\n  \n  if ((RCC_OscInitStruct->OscillatorType & 1) != 0) {\n    if (((DAT_08002ffc[1] & 0xc) == 4) ||\n       (((DAT_08002ffc[1] & 0xc) == 8 && ((DAT_08002ffc[1] & 0x10000) == 0x10000)))) {\n      if (((*DAT_08002ffc & 0x20000) != 0) && (RCC_OscInitStruct->HSEState == 0)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      if (RCC_OscInitStruct->HSEState == 0x10000) {\n        *DAT_08002ffc = *DAT_08002ffc | 0x10000;\n      }\n      else if (RCC_OscInitStruct->HSEState == 0) {\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffeffff;\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffbffff;\n      }\n      else if (RCC_OscInitStruct->HSEState == 0x50000) {\n        *DAT_08002ffc = *DAT_08002ffc | 0x40000;\n        *DAT_08002ffc = *DAT_08002ffc | 0x10000;\n      }\n      else {\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffeffff;\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffbffff;\n      }\n      if (RCC_OscInitStruct->HSEState == 0) {\n        uVar1 = HAL_GetTick();\n        while ((*DAT_08002ffc & 0x20000) != 0) {\n          uVar2 = HAL_GetTick();\n          if (100 < uVar2 - uVar1) {\n            return HAL_TIMEOUT;\n          }\n        }\n      }\n      else {\n        uVar1 = HAL_GetTick();\n        while ((*DAT_08002ffc & 0x20000) == 0) {\n          uVar2 = HAL_GetTick();\n          if (100 < uVar2 - uVar1) {\n            return HAL_TIMEOUT;\n          }\n        }\n      }\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 2) != 0) {\n    if (((DAT_08002ffc[1] & 0xc) == 0) ||\n       (((DAT_08002ffc[1] & 0xc) == 8 && ((DAT_08002ffc[1] & 0x10000) == 0)))) {\n      if (((*DAT_08002ffc & 2) != 0) && (RCC_OscInitStruct->HSIState != 1)) {\n        return HAL_ERROR;\n      }\n      *DAT_08002ffc = RCC_OscInitStruct->HSICalibrationValue << 3 | *DAT_08002ffc & 0xffffff07;\n    }\n    else if (RCC_OscInitStruct->HSIState == 0) {\n      *DAT_08003000 = 0;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08002ffc & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (2 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      *DAT_08003000 = 1;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08002ffc & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (2 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n      *DAT_08002ffc = RCC_OscInitStruct->HSICalibrationValue << 3 | *DAT_08002ffc & 0xffffff07;\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 8) != 0) {\n    if (RCC_OscInitStruct->LSIState == 0) {\n      *DAT_08003004 = 0;\n      uVar1 = HAL_GetTick();\n      while ((DAT_08003254[9] & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (2 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      *DAT_08003004 = 1;\n      uVar1 = HAL_GetTick();\n      while ((DAT_08002ffc[9] & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (2 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n      RCC_Delay(1);\n    }\n  }\n  if ((RCC_OscInitStruct->OscillatorType & 4) != 0) {\n    bVar4 = (DAT_08003254[7] & 0x10000000) == 0;\n    if (bVar4) {\n      DAT_08003254[7] = DAT_08003254[7] | 0x10000000;\n    }\n    if ((*DAT_08003258 & 0x100) == 0) {\n      *DAT_08003258 = *DAT_08003258 | 0x100;\n      uVar1 = HAL_GetTick();\n      while ((*DAT_08003258 & 0x100) == 0) {\n        uVar2 = HAL_GetTick();\n        if (100 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    if (RCC_OscInitStruct->LSEState == 1) {\n      DAT_08003254[8] = DAT_08003254[8] | 1;\n    }\n    else if (RCC_OscInitStruct->LSEState == 0) {\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffe;\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffb;\n    }\n    else if (RCC_OscInitStruct->LSEState == 5) {\n      DAT_08003254[8] = DAT_08003254[8] | 4;\n      DAT_08003254[8] = DAT_08003254[8] | 1;\n    }\n    else {\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffe;\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffb;\n    }\n    if (RCC_OscInitStruct->LSEState == 0) {\n      uVar1 = HAL_GetTick();\n      while ((DAT_08003254[8] & 2) != 0) {\n        uVar2 = HAL_GetTick();\n        if (5000 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      uVar1 = HAL_GetTick();\n      while ((DAT_08003254[8] & 2) == 0) {\n        uVar2 = HAL_GetTick();\n        if (5000 < uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    if (bVar4) {\n      DAT_08003254[7] = DAT_08003254[7] & 0xefffffff;\n    }\n  }\n  if ((RCC_OscInitStruct->PLL).PLLState == 0) {\nLAB_0800324a:\n    HVar3 = HAL_OK;\n  }\n  else if ((DAT_08003254[1] & 0xc) == 8) {\n    HVar3 = HAL_ERROR;\n  }\n  else if ((RCC_OscInitStruct->PLL).PLLState == 2) {\n    *DAT_0800325c = 0;\n    uVar1 = HAL_GetTick();\n    do {\n      if ((*DAT_08003254 & 0x2000000) == 0) {\n        if ((RCC_OscInitStruct->PLL).PLLSource == 0x10000) {\n          DAT_08003254[1] = RCC_OscInitStruct->HSEPredivValue | DAT_08003254[1] & 0xfffdffff;\n        }\n        DAT_08003254[1] =\n             (RCC_OscInitStruct->PLL).PLLMUL | (RCC_OscInitStruct->PLL).PLLSource |\n             DAT_08003254[1] & 0xffc2ffff;\n        *DAT_0800325c = 1;\n        uVar1 = HAL_GetTick();\n        while ((*DAT_08003254 & 0x2000000) == 0) {\n          uVar2 = HAL_GetTick();\n          if (2 < uVar2 - uVar1) {\n            return HAL_TIMEOUT;\n          }\n        }\n        goto LAB_0800324a;\n      }\n      uVar2 = HAL_GetTick();\n    } while (uVar2 - uVar1 < 3);\n    HVar3 = HAL_TIMEOUT;\n  }\n  else {\n    *DAT_0800325c = 0;\n    uVar1 = HAL_GetTick();\n    do {\n      if ((*DAT_08003254 & 0x2000000) == 0) goto LAB_0800324a;\n      uVar2 = HAL_GetTick();\n    } while (uVar2 - uVar1 < 3);\n    HVar3 = HAL_TIMEOUT;\n  }\n  return HVar3;\n}\n\n", 
            "called": [
                "RCC_Delay", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002d98", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_OscConfig"
        }, 
        "memset": {
            "renaming": {}, 
            "code": "\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  puVar2 = (uint *)__s;\n  if (((uint)__s & 3) != 0) {\n    uVar4 = __n - 1;\n    puVar1 = (uint *)__s;\n    if (__n == 0) {\n      return __s;\n    }\n    while( true ) {\n      puVar2 = (uint *)((int)puVar1 + 1);\n      *(char *)puVar1 = (char)__c;\n      __n = uVar4;\n      if (((uint)puVar2 & 3) == 0) break;\n      bVar6 = uVar4 == 0;\n      uVar4 = uVar4 - 1;\n      puVar1 = puVar2;\n      if (bVar6) {\n        return __s;\n      }\n    }\n  }\n  if (3 < __n) {\n    uVar5 = __c & 0xffU | (__c & 0xffU) << 8;\n    uVar5 = uVar5 | uVar5 << 0x10;\n    uVar4 = __n;\n    puVar1 = puVar2;\n    if (0xf < __n) {\n      uVar4 = __n - 0x10;\n      puVar1 = puVar2 + 4;\n      do {\n        puVar1[-4] = uVar5;\n        puVar1[-3] = uVar5;\n        puVar1[-2] = uVar5;\n        puVar1[-1] = uVar5;\n        puVar1 = puVar1 + 4;\n      } while (puVar1 != (uint *)((int)puVar2 + (uVar4 & 0xfffffff0) + 0x20));\n      __n = __n & 0xf;\n      puVar2 = puVar2 + ((uVar4 >> 4) + 1) * 4;\n      uVar4 = __n;\n      puVar1 = puVar2;\n      if (__n < 4) goto LAB_08005de4;\n    }\n    do {\n      __n = __n - 4;\n      *puVar2 = uVar5;\n      puVar2 = puVar2 + 1;\n    } while (3 < __n);\n    puVar2 = (uint *)((int)puVar1 + (uVar4 - 4 & 0xfffffffc) + 4);\n    __n = uVar4 & 3;\n  }\nLAB_08005de4:\n  if (__n != 0) {\n    puVar1 = puVar2;\n    do {\n      puVar3 = (uint *)((int)puVar1 + 1);\n      *(char *)puVar1 = (char)__c;\n      puVar1 = puVar3;\n    } while ((uint *)(__n + (int)puVar2) != puVar3);\n  }\n  return __s;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005d68", 
            "calling": [
                "_calloc_r", 
                "flush_strbuf"
            ], 
            "imported": false, 
            "current_name": "memset"
        }, 
        "__aeabi_dcmplt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmplt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdcmpeq();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009ac", 
            "calling": [
                "_dtoa_r", 
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmplt"
        }, 
        "HAL_TIMEx_CommutationCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIMEx_CommutationCallback(TIM_HandleTypeDef *htim)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004366", 
            "calling": [
                "HAL_TIM_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_CommutationCallback"
        }, 
        "memmove": {
            "renaming": {}, 
            "code": "\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  undefined4 *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  void *pvVar4;\n  undefined *puVar5;\n  int iVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  undefined4 *puVar10;\n  \n  if ((__src < __dest) && (puVar2 = (undefined *)((int)__src + __n), __dest < puVar2)) {\n    puVar5 = (undefined *)((int)__dest + __n);\n    if (__n != 0) {\n      do {\n        puVar2 = puVar2 + -1;\n        puVar5 = puVar5 + -1;\n        *puVar5 = *puVar2;\n      } while ((undefined *)__src != puVar2);\n    }\n  }\n  else {\n    uVar9 = __n;\n    pvVar4 = __dest;\n    if (0xf < __n) {\n      if ((((uint)__dest | (uint)__src) & 3) != 0) goto LAB_08009abc;\n      iVar3 = (int)__src + 0x10;\n      iVar8 = (int)__dest + 0x10;\n      do {\n        iVar6 = iVar3 + 0x10;\n        *(undefined4 *)(iVar8 + -0x10) = *(undefined4 *)(iVar3 + -0x10);\n        *(undefined4 *)(iVar8 + -0xc) = *(undefined4 *)(iVar3 + -0xc);\n        *(undefined4 *)(iVar8 + -8) = *(undefined4 *)(iVar3 + -8);\n        *(undefined4 *)(iVar8 + -4) = *(undefined4 *)(iVar3 + -4);\n        iVar3 = iVar6;\n        iVar8 = iVar8 + 0x10;\n      } while (iVar6 != (int)__src + (__n - 0x10 & 0xfffffff0) + 0x20);\n      uVar9 = __n & 0xf;\n      iVar3 = ((__n - 0x10 >> 4) + 1) * 0x10;\n      __src = (void *)((int)__src + iVar3);\n      pvVar4 = (void *)(iVar3 + (int)__dest);\n      if (3 < uVar9) {\n        puVar10 = (undefined4 *)((int)pvVar4 + -4);\n        uVar7 = uVar9;\n        puVar1 = (undefined4 *)__src;\n        do {\n          uVar7 = uVar7 - 4;\n          puVar10 = puVar10 + 1;\n          *puVar10 = *puVar1;\n          puVar1 = puVar1 + 1;\n        } while (3 < uVar7);\n        iVar3 = (uVar9 - 4 & 0xfffffffc) + 4;\n        __src = (void *)((int)__src + iVar3);\n        uVar9 = __n & 3;\n        pvVar4 = (void *)((int)pvVar4 + iVar3);\n      }\n    }\n    __n = uVar9;\n    if (uVar9 != 0) {\nLAB_08009abc:\n      puVar2 = (undefined *)((int)pvVar4 + -1);\n      puVar10 = (undefined4 *)__src;\n      do {\n        puVar1 = (undefined4 *)((int)puVar10 + 1);\n        puVar2 = puVar2 + 1;\n        *puVar2 = *(undefined *)puVar10;\n        puVar10 = puVar1;\n      } while (puVar1 != (undefined4 *)(__n + (int)__src));\n      return __dest;\n    }\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009a18", 
            "calling": [
                "__ssprint_r", 
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "memmove"
        }, 
        "mpu6050_update": {
            "renaming": {}, 
            "code": "\nvoid mpu6050_update(Mpu6050 *mpu6050)\n\n{\n  float fVar1;\n  uint8_t raw [14];\n  int16_t gz;\n  int16_t gy;\n  int16_t gx;\n  int16_t t;\n  int16_t az;\n  int16_t ay;\n  int16_t ax;\n  \n  (**(code **)PTR_I2C_Read_Reg_08004bd4)(0xd0,0x3b,raw,0xe);\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[0],raw[1]));\n  mpu6050->accX = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[2],raw[3]));\n  mpu6050->accY = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[4],raw[5]));\n  mpu6050->accZ = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[6],raw[7]));\n  mpu6050->temp = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[8],raw[9]));\n  mpu6050->gyroX = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[10],raw[11]));\n  mpu6050->gyroY = fVar1;\n  fVar1 = (float)__floatsisf((int)CONCAT11(raw[12],raw[13]));\n  mpu6050->gyroZ = fVar1;\n  return;\n}\n\n", 
            "called": [
                "__floatsisf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ae0", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback", 
                "mpu6050_calibrate"
            ], 
            "imported": false, 
            "current_name": "mpu6050_update"
        }, 
        "atexit": {
            "renaming": {}, 
            "code": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __register_exitproc(0,__func,0);\n  return iVar1;\n}\n\n", 
            "called": [
                "__register_exitproc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080078b4", 
            "calling": [
                "register_fini"
            ], 
            "imported": false, 
            "current_name": "atexit"
        }, 
        "_malloc_r": {
            "renaming": {}, 
            "code": "\nint * _malloc_r(undefined4 *param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint *puVar6;\n  int iVar7;\n  undefined *puVar8;\n  uint uVar9;\n  uint uVar10;\n  undefined4 *puVar11;\n  undefined *puVar12;\n  undefined *puVar13;\n  uint uVar14;\n  uint uVar15;\n  int iVar16;\n  undefined4 *puVar17;\n  undefined4 *puVar18;\n  \n  uVar14 = param_2 + 0xb;\n  if (uVar14 < 0x17) {\n    if (0x10 < param_2) goto LAB_08008c7a;\n    __malloc_lock();\n    uVar15 = 0x10;\n    iVar7 = 0x18;\n    uVar14 = 2;\nLAB_08008b18:\n    puVar8 = PTR___malloc_av__08008e4c + iVar7;\n    puVar12 = *(undefined **)(puVar8 + 4);\n    if ((puVar12 != puVar8 + -8) || (puVar12 = *(undefined **)(puVar8 + 0xc), puVar8 != puVar12)) {\n      iVar7 = *(int *)(puVar12 + 0xc);\n      puVar8 = puVar12 + (*(uint *)(puVar12 + 4) & 0xfffffffc);\n      uVar14 = *(uint *)(puVar8 + 4);\nLAB_08008b34:\n      iVar16 = *(int *)(puVar12 + 8);\n      *(int *)(iVar16 + 0xc) = iVar7;\n      *(int *)(iVar7 + 8) = iVar16;\n      *(uint *)(puVar8 + 4) = uVar14 | 1;\n      __malloc_unlock(param_1);\n      return (int *)(puVar12 + 8);\n    }\n    uVar14 = uVar14 + 2;\n  }\n  else {\n    uVar15 = uVar14 & 0xfffffff8;\n    if (((int)uVar15 < 0) || (uVar15 < param_2)) {\nLAB_08008c7a:\n      *param_1 = 0xc;\n      return (int *)0x0;\n    }\n    __malloc_lock();\n    if (uVar15 < 0x1f8) {\n      uVar14 = uVar14 >> 3;\n      iVar7 = uVar15 + 8;\n      goto LAB_08008b18;\n    }\n    uVar4 = uVar14 >> 9;\n    if (uVar4 == 0) {\n      iVar7 = 0x200;\n      uVar9 = 0x40;\n      uVar4 = 0x3f;\n    }\n    else if (uVar4 < 5) {\n      uVar9 = (uVar14 >> 6) + 0x39;\n      uVar4 = (uVar14 >> 6) + 0x38;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x15) {\n      uVar9 = uVar4 + 0x5c;\n      uVar4 = uVar4 + 0x5b;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x55) {\n      uVar9 = (uVar14 >> 0xc) + 0x6f;\n      uVar4 = (uVar14 >> 0xc) + 0x6e;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x155) {\n      uVar9 = (uVar14 >> 0xf) + 0x78;\n      uVar4 = (uVar14 >> 0xf) + 0x77;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x555) {\n      uVar9 = (uVar14 >> 0x12) + 0x7d;\n      uVar4 = (uVar14 >> 0x12) + 0x7c;\n      iVar7 = uVar9 * 8;\n    }\n    else {\n      iVar7 = 0x3f8;\n      uVar9 = 0x7f;\n      uVar4 = 0x7e;\n    }\n    for (puVar12 = *(undefined **)(PTR___malloc_av__08008e4c + iVar7 + 4); uVar14 = uVar9,\n        PTR___malloc_av__08008e4c + iVar7 + -8 != puVar12; puVar12 = *(undefined **)(puVar12 + 0xc))\n    {\n      iVar16 = (*(uint *)(puVar12 + 4) & 0xfffffffc) - uVar15;\n      uVar14 = uVar4;\n      if (0xf < iVar16) break;\n      if (-1 < iVar16) {\n        puVar8 = puVar12 + (*(uint *)(puVar12 + 4) & 0xfffffffc);\n        uVar14 = *(uint *)(puVar8 + 4);\n        iVar7 = *(int *)(puVar12 + 0xc);\n        goto LAB_08008b34;\n      }\n    }\n  }\n  puVar8 = PTR_PTR___malloc_av__08008e60;\n  puVar12 = PTR___malloc_av__08008e4c;\n  puVar13 = *(undefined **)(PTR___malloc_av__08008e4c + 0x10);\n  if (puVar13 == PTR_PTR___malloc_av__08008e60) {\n    uVar4 = *(uint *)(PTR___malloc_av__08008e4c + 4);\n    uVar9 = 1 << ((int)uVar14 >> 2 & 0xffU);\n    if (uVar9 <= uVar4) goto LAB_08008c06;\n  }\n  else {\n    uVar9 = *(uint *)(puVar13 + 4);\n    uVar10 = uVar9 & 0xfffffffc;\n    uVar4 = uVar10 - uVar15;\n    if (0xf < (int)uVar4) {\n      puVar3 = puVar13 + uVar15;\n      *(uint *)(puVar13 + 4) = uVar15 | 1;\n      *(undefined **)(puVar12 + 0x10) = puVar3;\n      *(undefined **)(puVar12 + 0x14) = puVar3;\n      *(undefined **)(puVar3 + 8) = puVar8;\n      *(undefined **)(puVar3 + 0xc) = puVar8;\n      *(uint *)(puVar3 + 4) = uVar4 | 1;\n      *(uint *)(puVar13 + uVar10) = uVar4;\n      __malloc_unlock(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    *(undefined **)(PTR___malloc_av__08008e4c + 0x10) = PTR_PTR___malloc_av__08008e60;\n    *(undefined **)(puVar12 + 0x14) = puVar8;\n    if (-1 < (int)uVar4) {\n      *(uint *)(puVar13 + uVar10 + 4) = *(uint *)(puVar13 + uVar10 + 4) | 1;\n      __malloc_unlock(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    if (uVar10 < 0x200) {\n      iVar7 = (uVar9 >> 3) + 1;\n      iVar16 = *(int *)(puVar12 + iVar7 * 8);\n      uVar4 = 1 << ((int)(uVar9 >> 3) >> 2 & 0xffU) | *(uint *)(puVar12 + 4);\n      *(int *)(puVar13 + 8) = iVar16;\n      *(undefined **)(puVar13 + 0xc) = puVar12 + iVar7 * 8 + -8;\n      *(uint *)(puVar12 + 4) = uVar4;\n      *(undefined **)(puVar12 + iVar7 * 8) = puVar13;\n      *(undefined **)(iVar16 + 0xc) = puVar13;\n    }\n    else {\n      uVar4 = uVar9 >> 9;\n      if (uVar4 < 5) {\n        iVar7 = ((uVar9 >> 6) + 0x39) * 8;\n        iVar16 = (uVar9 >> 6) + 0x38;\n      }\n      else if (uVar4 < 0x15) {\n        iVar7 = (uVar4 + 0x5c) * 8;\n        iVar16 = uVar4 + 0x5b;\n      }\n      else if (uVar4 < 0x55) {\n        iVar7 = ((uVar9 >> 0xc) + 0x6f) * 8;\n        iVar16 = (uVar9 >> 0xc) + 0x6e;\n      }\n      else if (uVar4 < 0x155) {\n        iVar7 = ((uVar9 >> 0xf) + 0x78) * 8;\n        iVar16 = (uVar9 >> 0xf) + 0x77;\n      }\n      else if (uVar4 < 0x555) {\n        iVar7 = ((uVar9 >> 0x12) + 0x7d) * 8;\n        iVar16 = (uVar9 >> 0x12) + 0x7c;\n      }\n      else {\n        iVar7 = 0x3f8;\n        iVar16 = 0x7e;\n      }\n      puVar3 = *(undefined **)(puVar12 + iVar7);\n      puVar1 = puVar12 + iVar7 + -8;\n      if (puVar1 == puVar3) {\n        uVar4 = 1 << (iVar16 >> 2 & 0xffU) | *(uint *)(puVar12 + 4);\n        *(uint *)(puVar12 + 4) = uVar4;\n      }\n      else {\n        do {\n          if ((*(uint *)(puVar3 + 4) & 0xfffffffc) <= uVar10) break;\n          puVar3 = *(undefined **)(puVar3 + 8);\n        } while (puVar1 != puVar3);\n        puVar1 = *(undefined **)(puVar3 + 0xc);\n        uVar4 = *(uint *)(puVar12 + 4);\n      }\n      *(undefined **)(puVar13 + 8) = puVar3;\n      *(undefined **)(puVar13 + 0xc) = puVar1;\n      *(undefined **)(puVar1 + 8) = puVar13;\n      *(undefined **)(puVar3 + 0xc) = puVar13;\n    }\n    uVar9 = 1 << ((int)uVar14 >> 2 & 0xffU);\n    if (uVar9 <= uVar4) {\nLAB_08008c06:\n      if ((uVar9 & uVar4) == 0) {\n        uVar14 = uVar14 & 0xfffffffc;\n        do {\n          uVar9 = uVar9 << 1;\n          uVar14 = uVar14 + 4;\n        } while ((uVar9 & uVar4) == 0);\n      }\n      do {\n        puVar17 = (undefined4 *)(puVar12 + uVar14 * 8);\n        uVar4 = uVar14;\n        puVar18 = puVar17;\n        do {\n          for (puVar11 = (undefined4 *)puVar18[3]; puVar18 != puVar11;\n              puVar11 = (undefined4 *)puVar11[3]) {\n            uVar10 = puVar11[1] & 0xfffffffc;\n            uVar5 = uVar10 - uVar15;\n            if (0xf < (int)uVar5) {\n              iVar16 = puVar11[2];\n              iVar7 = puVar11[3];\n              puVar13 = (undefined *)(uVar15 + (int)puVar11);\n              puVar11[1] = uVar15 | 1;\n              *(int *)(iVar16 + 0xc) = iVar7;\n              *(int *)(iVar7 + 8) = iVar16;\n              *(undefined **)(puVar12 + 0x10) = puVar13;\n              *(undefined **)(puVar12 + 0x14) = puVar13;\n              *(undefined **)(puVar13 + 8) = puVar8;\n              *(undefined **)(puVar13 + 0xc) = puVar8;\n              *(uint *)(puVar13 + 4) = uVar5 | 1;\n              *(uint *)((int)puVar11 + uVar10) = uVar5;\n              __malloc_unlock(param_1);\n              return puVar11 + 2;\n            }\n            if (-1 < (int)uVar5) {\n              iVar7 = puVar11[3];\n              iVar16 = puVar11[2];\n              *(uint *)((int)puVar11 + uVar10 + 4) = *(uint *)((int)puVar11 + uVar10 + 4) | 1;\n              *(int *)(iVar16 + 0xc) = iVar7;\n              *(int *)(iVar7 + 8) = iVar16;\n              __malloc_unlock(param_1);\n              return puVar11 + 2;\n            }\n          }\n          uVar4 = uVar4 + 1;\n          puVar18 = puVar18 + 2;\n        } while ((uVar4 & 3) != 0);\n        do {\n          uVar10 = uVar14 & 3;\n          puVar18 = puVar17 + -2;\n          uVar14 = uVar14 - 1;\n          if (uVar10 == 0) {\n            uVar10 = *(uint *)(puVar12 + 4) & ~uVar9;\n            *(uint *)(puVar12 + 4) = uVar10;\n            goto LAB_08008f24;\n          }\n          puVar17 = (undefined4 *)*puVar17;\n        } while (puVar17 == puVar18);\n        uVar10 = *(uint *)(puVar12 + 4);\nLAB_08008f24:\n        uVar9 = uVar9 * 2;\n        if ((uVar10 <= uVar9 && uVar9 - uVar10 != 0) || (uVar14 = uVar4, uVar9 == 0)) break;\n        for (; (uVar9 & uVar10) == 0; uVar9 = uVar9 << 1) {\n          uVar14 = uVar14 + 4;\n        }\n      } while( true );\n    }\n  }\n  puVar8 = PTR___malloc_sbrk_base_08008e64;\n  puVar13 = *(undefined **)(puVar12 + 8);\n  uVar14 = *(uint *)(puVar13 + 4) & 0xfffffffc;\n  if ((uVar15 <= uVar14) && (uVar4 = uVar14 - uVar15, 0xf < (int)uVar4)) goto LAB_08008dac;\n  if (*(int *)PTR___malloc_sbrk_base_08008e64 == -1) {\n    uVar4 = uVar15 + *(int *)PTR___malloc_top_pad_08008e50 + 0x10;\n  }\n  else {\n    uVar4 = uVar15 + *(int *)PTR___malloc_top_pad_08008e50 + 0x100f & 0xfffff000;\n  }\n  puVar1 = (undefined *)_sbrk_r(param_1,uVar4);\n  puVar6 = (uint *)PTR___malloc_current_mallinfo_08009018;\n  puVar3 = PTR___malloc_current_mallinfo_08008e54;\n  if (puVar1 == (undefined *)0xffffffff) {\nLAB_08008ed8:\n    puVar13 = *(undefined **)(puVar12 + 8);\n    uVar14 = *(uint *)(puVar13 + 4);\n  }\n  else {\n    puVar2 = puVar13 + uVar14;\n    if (puVar2 < puVar1 || puVar2 == puVar1) {\n      uVar9 = *(int *)PTR___malloc_current_mallinfo_08008e54 + uVar4;\n      *(uint *)PTR___malloc_current_mallinfo_08008e54 = uVar9;\n      puVar6 = (uint *)puVar3;\n      if ((puVar2 != puVar1) || (((uint)puVar2 & 0xfff) != 0)) goto LAB_08008d02;\n      *(uint *)(*(int *)(puVar12 + 8) + 4) = uVar14 + uVar4 | 1;\n    }\n    else {\n      if (puVar13 != puVar12) goto LAB_08008ed8;\n      uVar9 = *(int *)PTR___malloc_current_mallinfo_08009018 + uVar4;\n      *(uint *)PTR___malloc_current_mallinfo_08009018 = uVar9;\nLAB_08008d02:\n      if (*(int *)puVar8 == -1) {\n        *(undefined **)puVar8 = puVar1;\n      }\n      else {\n        *puVar6 = (uint)(puVar1 + (uVar9 - (int)puVar2));\n      }\n      uVar9 = (uint)puVar1 & 7;\n      if (uVar9 == 0) {\n        iVar7 = 0x1000;\n      }\n      else {\n        puVar1 = puVar1 + (8 - uVar9);\n        iVar7 = 0x1008 - uVar9;\n      }\n      iVar7 = iVar7 - ((uint)(puVar1 + uVar4) & 0xfff);\n      iVar16 = _sbrk_r(param_1,iVar7);\n      if (iVar16 == -1) {\n        uVar4 = 1;\n        iVar7 = 0;\n      }\n      else {\n        uVar4 = (iVar16 - (int)puVar1) + iVar7 | 1;\n      }\n      uVar9 = *puVar6 + iVar7;\n      *(undefined **)(puVar12 + 8) = puVar1;\n      *puVar6 = uVar9;\n      *(uint *)(puVar1 + 4) = uVar4;\n      if (puVar13 != puVar12) {\n        if (uVar14 < 0x10) {\n          *(undefined4 *)(puVar1 + 4) = 1;\n          goto LAB_08008eee;\n        }\n        uVar14 = uVar14 - 0xc & 0xfffffff8;\n        *(uint *)(puVar13 + 4) = *(uint *)(puVar13 + 4) & 1 | uVar14;\n        *(undefined4 *)(puVar13 + uVar14 + 4) = 5;\n        *(undefined4 *)(puVar13 + uVar14 + 8) = 5;\n        if (0xf < uVar14) {\n          _free_r(param_1,puVar13 + 8);\n          uVar9 = *puVar6;\n        }\n      }\n    }\n    puVar8 = PTR___malloc_max_total_mem_08008e5c;\n    puVar13 = *(undefined **)(puVar12 + 8);\n    uVar4 = *(uint *)PTR___malloc_max_total_mem_08008e5c;\n    if (*(uint *)PTR___malloc_max_sbrked_mem_08008e58 < uVar9) {\n      *(uint *)PTR___malloc_max_sbrked_mem_08008e58 = uVar9;\n    }\n    uVar14 = *(uint *)(puVar13 + 4);\n    if (uVar4 < uVar9) {\n      *(uint *)puVar8 = uVar9;\n    }\n  }\n  uVar4 = (uVar14 & 0xfffffffc) - uVar15;\n  if ((uVar15 <= (uVar14 & 0xfffffffc)) && (0xf < (int)uVar4)) {\nLAB_08008dac:\n    *(uint *)(puVar13 + 4) = uVar15 | 1;\n    *(undefined **)(puVar12 + 8) = puVar13 + uVar15;\n    *(uint *)(puVar13 + uVar15 + 4) = uVar4 | 1;\n    __malloc_unlock(param_1);\n    return (int *)(puVar13 + 8);\n  }\nLAB_08008eee:\n  __malloc_unlock(param_1);\n  return (int *)0x0;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_sbrk_r", 
                "_free_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08008af8", 
            "calling": [
                "__ssprint_r", 
                "_realloc_r", 
                "_svfprintf_r", 
                "_calloc_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_r"
        }, 
        "HAL_GPIO_WritePin": {
            "renaming": {}, 
            "code": "\nvoid HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx,uint16_t GPIO_Pin,GPIO_PinState PinState)\n\n{\n  if (PinState == GPIO_PIN_RESET) {\n    GPIOx->BSRR = (uint)GPIO_Pin << 0x10;\n  }\n  else {\n    GPIOx->BSRR = (uint)GPIO_Pin;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001a80", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback", 
                "MX_GPIO_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_GPIO_WritePin"
        }, 
        "__i2b": {
            "renaming": {}, 
            "code": "\nvoid __i2b(undefined4 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = _Balloc(param_1,1);\n  *(undefined4 *)(iVar1 + 0x10) = 1;\n  *(undefined4 *)(iVar1 + 0x14) = param_2;\n  return;\n}\n\n", 
            "called": [
                "_Balloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009244", 
            "calling": [
                "_dtoa_r"
            ], 
            "imported": false, 
            "current_name": "__i2b"
        }, 
        "HAL_TIM_PWM_ConfigChannel": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,TIM_OC_InitTypeDef *sConfig,uint32_t Channel)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  if (htim->Lock == HAL_LOCKED) {\n    HVar1 = HAL_BUSY;\n  }\n  else {\n    htim->Lock = HAL_LOCKED;\n    htim->State = HAL_TIM_STATE_BUSY;\n    switch(Channel) {\n    case 0:\n      TIM_OC1_SetConfig(htim->Instance,sConfig);\n      htim->Instance->CCMR1 = htim->Instance->CCMR1 | 8;\n      htim->Instance->CCMR1 = htim->Instance->CCMR1 & 0xfffffffb;\n      htim->Instance->CCMR1 = sConfig->OCFastMode | htim->Instance->CCMR1;\n      break;\n    case 4:\n      TIM_OC2_SetConfig(htim->Instance,sConfig);\n      htim->Instance->CCMR1 = htim->Instance->CCMR1 | 0x800;\n      htim->Instance->CCMR1 = htim->Instance->CCMR1 & 0xfffffbff;\n      htim->Instance->CCMR1 = sConfig->OCFastMode << 8 | htim->Instance->CCMR1;\n      break;\n    case 8:\n      TIM_OC3_SetConfig(htim->Instance,sConfig);\n      htim->Instance->CCMR2 = htim->Instance->CCMR2 | 8;\n      htim->Instance->CCMR2 = htim->Instance->CCMR2 & 0xfffffffb;\n      htim->Instance->CCMR2 = sConfig->OCFastMode | htim->Instance->CCMR2;\n      break;\n    case 0xc:\n      TIM_OC4_SetConfig(htim->Instance,sConfig);\n      htim->Instance->CCMR2 = htim->Instance->CCMR2 | 0x800;\n      htim->Instance->CCMR2 = htim->Instance->CCMR2 & 0xfffffbff;\n      htim->Instance->CCMR2 = sConfig->OCFastMode << 8 | htim->Instance->CCMR2;\n    }\n    htim->State = HAL_TIM_STATE_READY;\n    htim->Lock = HAL_UNLOCKED;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "TIM_OC2_SetConfig", 
                "TIM_OC3_SetConfig", 
                "TIM_OC1_SetConfig", 
                "TIM_OC4_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003908", 
            "calling": [
                "MX_TIM1_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_ConfigChannel"
        }, 
        "_get_ms_tick": {
            "renaming": {}, 
            "code": "\nuint32_t _get_ms_tick(void)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = HAL_GetTick();\n  return uVar1;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f2c", 
            "calling": [], 
            "imported": false, 
            "current_name": "_get_ms_tick"
        }, 
        "SVC_Handler": {
            "renaming": {}, 
            "code": "\nvoid SVC_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080056e0", 
            "calling": [], 
            "imported": false, 
            "current_name": "SVC_Handler"
        }, 
        "MX_TIM2_Init": {
            "renaming": {}, 
            "code": "\nvoid MX_TIM2_Init(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  TIM_MasterConfigTypeDef sMasterConfig;\n  TIM_ClockConfigTypeDef sClockSourceConfig;\n  \n  *(undefined4 *)PTR_htim2_08005590 = 0x40000000;\n  *(undefined4 *)(PTR_htim2_08005590 + 4) = 36000;\n  *(undefined4 *)(PTR_htim2_08005590 + 8) = 0;\n  *(undefined4 *)(PTR_htim2_08005590 + 0xc) = 0x14;\n  *(undefined4 *)(PTR_htim2_08005590 + 0x10) = 0;\n  *(undefined4 *)(PTR_htim2_08005590 + 0x18) = 0;\n  HVar1 = HAL_TIM_Base_Init((TIM_HandleTypeDef *)PTR_htim2_08005590);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_08005594,0x1d0);\n  }\n  sClockSourceConfig.ClockSource = 0x1000;\n  HVar1 = HAL_TIM_ConfigClockSource((TIM_HandleTypeDef *)PTR_htim2_08005590,&sClockSourceConfig);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_08005594,0x1d5);\n  }\n  sMasterConfig.MasterOutputTrigger = 0x20;\n  sMasterConfig.MasterSlaveMode = 0;\n  HVar1 = HAL_TIMEx_MasterConfigSynchronization\n                    ((TIM_HandleTypeDef *)PTR_htim2_08005590,&sMasterConfig);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_08005594,0x1dc);\n  }\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_TIMEx_MasterConfigSynchronization", 
                "HAL_TIM_ConfigClockSource", 
                "HAL_TIM_Base_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005500", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "MX_TIM2_Init"
        }, 
        "HAL_TIM_Base_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  if (htim == (TIM_HandleTypeDef *)0x0) {\n    HVar1 = HAL_ERROR;\n  }\n  else {\n    if (htim->State == HAL_TIM_STATE_RESET) {\n      htim->Lock = HAL_UNLOCKED;\n      HAL_TIM_Base_MspInit(htim);\n    }\n    htim->State = HAL_TIM_STATE_BUSY;\n    TIM_Base_SetConfig(htim->Instance,&htim->Init);\n    htim->State = HAL_TIM_STATE_READY;\n    HVar1 = HAL_OK;\n  }\n  return HVar1;\n}\n\n", 
            "called": [
                "TIM_Base_SetConfig", 
                "HAL_TIM_Base_MspInit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080035a4", 
            "calling": [
                "MX_TIM1_Init", 
                "MX_TIM2_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_Base_Init"
        }, 
        "_realloc_r": {
            "renaming": {}, 
            "code": "\nint * _realloc_r(undefined4 *param_1,int *param_2,uint param_3)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int iVar3;\n  int *piVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  size_t sVar8;\n  int *piVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  int iVar13;\n  \n  if (param_2 == (int *)0x0) {\n    piVar4 = (int *)_malloc_r(param_1,param_3);\n    return piVar4;\n  }\n  __malloc_lock();\n  puVar1 = PTR___malloc_av__08009e38;\n  uVar7 = param_2[-1];\n  uVar11 = uVar7 & 0xfffffffc;\n  piVar4 = param_2 + -2;\n  if (param_3 + 0xb < 0x17) {\n    uVar10 = 0x10;\n  }\n  else {\n    uVar10 = param_3 + 0xb & 0xfffffff8;\n    if ((int)uVar10 < 0) goto LAB_08009b8e;\n  }\n  if (uVar10 < param_3) {\nLAB_08009b8e:\n    *param_1 = 0xc;\n    return (int *)0x0;\n  }\n  iVar13 = (int)piVar4 + uVar11;\n  uVar12 = uVar11;\n  if ((int)uVar11 < (int)uVar10) {\n    if (*(int *)(PTR___malloc_av__08009e38 + 8) == iVar13) {\n      iVar13 = (*(uint *)(*(int *)(PTR___malloc_av__08009e38 + 8) + 4) & 0xfffffffc) + uVar11;\n      if ((int)(uVar10 + 0x10) <= iVar13) {\n        *(uint *)(PTR___malloc_av__08009e38 + 8) = (int)piVar4 + uVar10;\n        *(uint *)((int)piVar4 + uVar10 + 4) = iVar13 - uVar10 | 1;\n        param_2[-1] = uVar10 | param_2[-1] & 1U;\n        __malloc_unlock(param_1);\n        return param_2;\n      }\n      if (-1 < (int)(uVar7 << 0x1f)) {\n        piVar2 = (int *)((int)piVar4 - param_2[-2]);\n        uVar7 = piVar2[1] & 0xfffffffc;\n        if ((int)(uVar10 + 0x10) <= (int)(iVar13 + uVar7)) {\n          iVar6 = piVar2[3];\n          piVar4 = piVar2 + 2;\n          iVar3 = *piVar4;\n          sVar8 = uVar11 - 4;\n          *(int *)(iVar3 + 0xc) = iVar6;\n          *(int *)(iVar6 + 8) = iVar3;\n          if (sVar8 < 0x25) {\n            iVar3 = *param_2;\n            piVar9 = piVar4;\n            if (0x13 < sVar8) {\n              piVar2[2] = iVar3;\n              piVar2[3] = param_2[1];\n              iVar3 = param_2[2];\n              if (sVar8 < 0x1c) {\n                param_2 = param_2 + 2;\n                piVar9 = piVar2 + 4;\n              }\n              else {\n                piVar2[4] = iVar3;\n                piVar2[5] = param_2[3];\n                iVar3 = param_2[4];\n                if (sVar8 == 0x24) {\n                  piVar2[6] = iVar3;\n                  piVar2[7] = param_2[5];\n                  iVar3 = param_2[6];\n                  param_2 = param_2 + 6;\n                  piVar9 = piVar2 + 8;\n                }\n                else {\n                  param_2 = param_2 + 4;\n                  piVar9 = piVar2 + 6;\n                }\n              }\n            }\n            *piVar9 = iVar3;\n            piVar9[1] = param_2[1];\n            piVar9[2] = param_2[2];\n          }\n          else {\n            memmove(piVar4,param_2,sVar8);\n          }\n          *(uint *)(puVar1 + 8) = (int)piVar2 + uVar10;\n          *(uint *)((int)piVar2 + uVar10 + 4) = (iVar13 + uVar7) - uVar10 | 1;\n          piVar2[1] = uVar10 | piVar2[1] & 1U;\n          __malloc_unlock(param_1);\n          return piVar4;\n        }\nLAB_08009bb0:\n        uVar12 = uVar11 + uVar7;\n        if ((int)uVar10 <= (int)uVar12) {\n          iVar6 = piVar2[3];\n          piVar9 = piVar2 + 2;\n          iVar3 = *piVar9;\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar13 = (int)piVar2 + uVar12;\n          *(int *)(iVar6 + 8) = iVar3;\n          piVar4 = piVar2;\n          if (uVar11 - 4 < 0x25) goto LAB_08009bd0;\nLAB_08009d4c:\n          memmove(piVar9,param_2,uVar11 - 4);\n          param_2 = piVar9;\n          goto LAB_08009c00;\n        }\n      }\n    }\n    else {\n      if (-1 < *(int *)((*(uint *)(iVar13 + 4) & 0xfffffffe) + iVar13 + 4) << 0x1f) {\n        uVar5 = *(uint *)(iVar13 + 4) & 0xfffffffc;\n        uVar12 = uVar11 + uVar5;\n        if ((int)uVar12 < (int)uVar10) {\n          if ((int)(uVar7 << 0x1f) < 0) goto LAB_08009b36;\n          piVar2 = (int *)((int)piVar4 - param_2[-2]);\n          uVar7 = piVar2[1] & 0xfffffffc;\n          uVar12 = uVar5 + uVar7 + uVar11;\n          if ((int)uVar12 < (int)uVar10) goto LAB_08009bb0;\n          iVar3 = *(int *)(iVar13 + 8);\n          iVar13 = *(int *)(iVar13 + 0xc);\n          *(int *)(iVar3 + 0xc) = iVar13;\n          *(int *)(iVar13 + 8) = iVar3;\n          piVar9 = piVar2 + 2;\n          iVar3 = *piVar9;\n          iVar6 = piVar2[3];\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar13 = (int)piVar2 + uVar12;\n          *(int *)(iVar6 + 8) = iVar3;\n          piVar4 = piVar2;\n          if (0x24 < uVar11 - 4) goto LAB_08009d4c;\nLAB_08009bd0:\n          uVar11 = uVar11 - 4;\n          iVar3 = *param_2;\n          piVar2 = piVar9;\n          if (0x13 < uVar11) {\n            piVar4[2] = iVar3;\n            piVar4[3] = param_2[1];\n            iVar3 = param_2[2];\n            if (uVar11 < 0x1c) {\n              param_2 = param_2 + 2;\n              piVar2 = piVar4 + 4;\n            }\n            else {\n              piVar4[4] = iVar3;\n              piVar4[5] = param_2[3];\n              iVar3 = param_2[4];\n              if (uVar11 == 0x24) {\n                piVar4[6] = iVar3;\n                piVar4[7] = param_2[5];\n                iVar3 = param_2[6];\n                param_2 = param_2 + 6;\n                piVar2 = piVar4 + 8;\n              }\n              else {\n                param_2 = param_2 + 4;\n                piVar2 = piVar4 + 6;\n              }\n            }\n          }\n          *piVar2 = iVar3;\n          piVar2[1] = param_2[1];\n          piVar2[2] = param_2[2];\n          param_2 = piVar9;\n        }\n        else {\n          iVar3 = *(int *)(iVar13 + 8);\n          iVar6 = *(int *)(iVar13 + 0xc);\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar13 = (int)piVar4 + uVar12;\n          *(int *)(iVar6 + 8) = iVar3;\n        }\n        goto LAB_08009c00;\n      }\n      if (-1 < (int)(uVar7 << 0x1f)) {\n        piVar2 = (int *)((int)piVar4 - param_2[-2]);\n        uVar7 = piVar2[1] & 0xfffffffc;\n        goto LAB_08009bb0;\n      }\n    }\nLAB_08009b36:\n    piVar2 = (int *)_malloc_r(param_1,param_3);\n    if (piVar2 != (int *)0x0) {\n      if ((int *)((param_2[-1] & 0xfffffffeU) + (int)piVar4) == piVar2 + -2) {\n        uVar12 = uVar11 + (piVar2[-1] & 0xfffffffcU);\n        iVar13 = (int)piVar4 + uVar12;\n        goto LAB_08009c00;\n      }\n      sVar8 = uVar11 - 4;\n      if (sVar8 < 0x25) {\n        iVar13 = *param_2;\n        piVar4 = param_2;\n        piVar9 = piVar2;\n        if (0x13 < sVar8) {\n          *piVar2 = iVar13;\n          piVar2[1] = param_2[1];\n          if (sVar8 < 0x1c) {\n            iVar13 = param_2[2];\n            piVar4 = param_2 + 2;\n            piVar9 = piVar2 + 2;\n          }\n          else {\n            piVar2[2] = param_2[2];\n            piVar2[3] = param_2[3];\n            if (sVar8 == 0x24) {\n              piVar2[4] = param_2[4];\n              piVar2[5] = param_2[5];\n              iVar13 = param_2[6];\n              piVar4 = param_2 + 6;\n              piVar9 = piVar2 + 6;\n            }\n            else {\n              iVar13 = param_2[4];\n              piVar4 = param_2 + 4;\n              piVar9 = piVar2 + 4;\n            }\n          }\n        }\n        *piVar9 = iVar13;\n        piVar9[1] = piVar4[1];\n        piVar9[2] = piVar4[2];\n      }\n      else {\n        memmove(piVar2,param_2,sVar8);\n      }\n      _free_r(param_1,param_2);\n    }\n    __malloc_unlock(param_1);\n    param_2 = piVar2;\n  }\n  else {\nLAB_08009c00:\n    if (uVar12 - uVar10 < 0x10) {\n      piVar4[1] = piVar4[1] & 1U | uVar12;\n      *(uint *)(iVar13 + 4) = *(uint *)(iVar13 + 4) | 1;\n    }\n    else {\n      piVar4[1] = piVar4[1] & 1U | uVar10;\n      *(uint *)((int)piVar4 + uVar10 + 4) = uVar12 - uVar10 | 1;\n      *(uint *)(iVar13 + 4) = *(uint *)(iVar13 + 4) | 1;\n      _free_r(param_1,(int)piVar4 + uVar10 + 8);\n    }\n    __malloc_unlock(param_1);\n  }\n  return param_2;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "memmove", 
                "_malloc_r", 
                "__malloc_unlock", 
                "_free_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009adc", 
            "calling": [
                "__ssprint_r"
            ], 
            "imported": false, 
            "current_name": "_realloc_r"
        }, 
        "HAL_TIM_PWM_Start": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim,uint32_t Channel)\n\n{\n  TIM_CCxChannelCmd(htim->Instance,Channel,1);\n  if (htim->Instance == DAT_080036f4) {\n    htim->Instance->BDTR = htim->Instance->BDTR | 0x8000;\n  }\n  htim->Instance->CR1 = htim->Instance->CR1 | 1;\n  return HAL_OK;\n}\n\n", 
            "called": [
                "TIM_CCxChannelCmd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080036a8", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_Start"
        }, 
        "TIM_ITRx_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_ITRx_SetConfig(TIM_TypeDef *TIMx,uint16_t InputTriggerSource)\n\n{\n  uint32_t tmpsmcr;\n  \n  TIMx->SMCR = TIMx->SMCR & 0xffffff8f | (uint)(InputTriggerSource | 7);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800416a", 
            "calling": [
                "HAL_TIM_ConfigClockSource"
            ], 
            "imported": false, 
            "current_name": "TIM_ITRx_SetConfig"
        }, 
        "SystemClock_Config": {
            "renaming": {}, 
            "code": "\nvoid SystemClock_Config(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  RCC_ClkInitTypeDef RCC_ClkInitStruct;\n  RCC_OscInitTypeDef RCC_OscInitStruct;\n  \n  RCC_OscInitStruct.OscillatorType = 1;\n  RCC_OscInitStruct.HSEState = 0x10000;\n  RCC_OscInitStruct.HSEPredivValue = 0;\n  RCC_OscInitStruct.HSIState = 1;\n  RCC_OscInitStruct.PLL.PLLState = 2;\n  RCC_OscInitStruct.PLL.PLLSource = 0x10000;\n  RCC_OscInitStruct.PLL.PLLMUL = 0x1c0000;\n  HVar1 = HAL_RCC_OscConfig(&RCC_OscInitStruct);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_08005340,0x151);\n  }\n  RCC_ClkInitStruct.ClockType = 0xf;\n  RCC_ClkInitStruct.SYSCLKSource = 2;\n  RCC_ClkInitStruct.AHBCLKDivider = 0x80;\n  RCC_ClkInitStruct.APB1CLKDivider = 0;\n  RCC_ClkInitStruct.APB2CLKDivider = 0;\n  HVar1 = HAL_RCC_ClockConfig(&RCC_ClkInitStruct,2);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____src_main_c_08005340,0x15e);\n  }\n  uVar2 = HAL_RCC_GetHCLKFreq();\n  HAL_SYSTICK_Config((uint)((ulonglong)DAT_08005344 * (ulonglong)uVar2 >> 0x26));\n  HAL_SYSTICK_CLKSourceConfig(4);\n  HAL_NVIC_SetPriority(SysTick_IRQn,0,0);\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_SYSTICK_Config", 
                "HAL_SYSTICK_CLKSourceConfig", 
                "HAL_RCC_GetHCLKFreq", 
                "HAL_RCC_ClockConfig", 
                "HAL_RCC_OscConfig", 
                "HAL_NVIC_SetPriority"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080052a0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "SystemClock_Config"
        }, 
        "__floatsisf": {
            "renaming": {}, 
            "code": "\nuint __floatsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  \n  uVar3 = param_1 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    param_1 = -param_1;\n  }\n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar4 = ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 < iVar1) {\n    uVar5 = 0 << (uVar2 & 0xff);\n    uVar3 = iVar4 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar5);\n    if (uVar5 == 0x80000000) {\n      uVar3 = uVar3 & 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar3 = iVar4 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar2 >> 0x1f));\n  if ((uVar2 & 0x7fffffff) == 0) {\n    uVar3 = uVar3 & ~(uVar2 >> 0x1f);\n  }\n  return uVar3;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c10", 
            "calling": [
                "HAL_TIM_PeriodElapsedCallback", 
                "mpu6050_update", 
                "mpu6050_calibrate"
            ], 
            "imported": false, 
            "current_name": "__floatsisf"
        }, 
        "_svfprintf_r": {
            "renaming": {}, 
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte * _svfprintf_r(undefined4 *param_1,int *param_2,int *param_3,int **param_4)\n\n{\n  byte bVar1;\n  undefined *puVar2;\n  int **ppiVar3;\n  int *piVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  byte *pbVar9;\n  char cVar10;\n  byte bVar11;\n  int *piVar12;\n  int **ppiVar13;\n  undefined uVar14;\n  ushort uVar15;\n  int *__s;\n  int **ppiVar16;\n  byte **ppbVar17;\n  int *piVar18;\n  int *piVar19;\n  int **ppiVar20;\n  char *pcVar21;\n  uint uVar22;\n  byte *pbVar23;\n  int *piVar24;\n  uint uVar25;\n  uint uVar26;\n  int *piVar27;\n  int *piVar28;\n  byte *pbVar29;\n  bool bVar30;\n  longlong lVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  undefined4 in_stack_fffffe78;\n  int *in_stack_fffffe7c;\n  int *local_168;\n  byte *local_164;\n  int *local_15c;\n  int *local_158;\n  int **local_154;\n  int *local_150;\n  int *local_148;\n  int *local_144;\n  uint local_140;\n  int *local_13c;\n  int *local_138;\n  int *local_134;\n  int *local_130;\n  int *local_12c;\n  int *local_128;\n  undefined *local_11c;\n  int *local_110;\n  int *local_10c;\n  byte *local_108;\n  int *local_104;\n  byte local_f5;\n  undefined2 local_f4;\n  int *local_f0 [2];\n  undefined4 local_e8;\n  int *local_e0;\n  byte abStack_dc [4];\n  int **local_d8;\n  int local_d4;\n  byte *local_d0;\n  int *local_cc [16];\n  undefined local_8c;\n  byte bStack_2a;\n  undefined local_29;\n  int iStack_28;\n  \n  ppiVar3 = (int **)_localeconv_r();\n  __s = *ppiVar3;\n  piVar4 = (int *)strlen((char *)__s);\n  if (((int)((uint)*(ushort *)(param_2 + 3) << 0x18) < 0) && (param_2[4] == 0)) {\n    iVar5 = _malloc_r(param_1,0x40);\n    *param_2 = iVar5;\n    param_2[4] = iVar5;\n    if (iVar5 == 0) {\n      *param_1 = 0xc;\n      return (byte *)0xffffffff;\n    }\n    param_2[5] = 0x40;\n  }\n  local_128 = (int *)0x0;\n  local_138 = (int *)0x0;\n  local_12c = (int *)0x0;\n  local_d4 = 0;\n  local_d0 = (byte *)0x0;\n  local_11c = (undefined *)0x0;\n  local_10c = (int *)0x0;\n  local_108 = (byte *)0x0;\n  local_104 = (int *)0x0;\n  local_110 = (int *)0x0;\n  local_164 = (byte *)0x0;\n  ppiVar3 = local_cc;\n  bVar1 = *(byte *)param_3;\n  local_d8 = ppiVar3;\n  local_154 = param_4;\njoined_r0x08005ef2:\n  if (bVar1 != 0) {\n    piVar28 = param_3;\n    if (bVar1 != 0x25) {\n      do {\n        piVar28 = (int *)((int)piVar28 + 1);\n        if (*(byte *)piVar28 == 0) break;\n      } while (*(byte *)piVar28 != 0x25);\n      piVar27 = (int *)((int)piVar28 - (int)param_3);\n      if (piVar27 != (int *)0x0) {\n        local_d4 = local_d4 + 1;\n        local_d0 = (byte *)((int)local_d0 + (int)piVar27);\n        *ppiVar3 = param_3;\n        *(int **)((int)ppiVar3 + 4) = piVar27;\n        if (local_d4 < 8) {\n          ppiVar3 = (int **)((int)ppiVar3 + 8);\n        }\n        else {\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800604a;\n          ppiVar3 = local_cc;\n        }\n        local_164 = (byte *)((int)local_164 + (int)piVar27);\n      }\n      if (*(byte *)piVar28 == 0) goto LAB_08006216;\n    }\n    piVar27 = (int *)0xffffffff;\n    uVar26 = 0;\n    uVar25 = (uint)*(byte *)((int)piVar28 + 1);\n    local_15c = (int *)0x0;\n    local_f5 = 0;\n    piVar28 = (int *)((int)piVar28 + 1);\nLAB_08005f4a:\n    piVar28 = (int *)((int)piVar28 + 1);\nLAB_08005f4e:\n    local_158 = piVar27;\n    local_168 = piVar27;\n    switch(uVar25) {\n    case 0x20:\n      goto switchD_08005f58_caseD_20;\n    default:\n      if (uVar25 == 0) goto LAB_08006216;\n      piVar18 = (int *)0x0;\n      local_168 = (int *)0x1;\n      local_f5 = 0;\n      local_148 = (int *)0x0;\n      local_13c = (int *)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      local_158 = (int *)0x1;\n      param_3 = (int *)&local_8c;\n      local_144 = piVar18;\n      local_8c = (char)uVar25;\n      goto LAB_08006298;\n    case 0x23:\n      uVar26 = uVar26 | 1;\n      uVar25 = (uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case 0x27:\n      iVar5 = _localeconv_r(param_1);\n      local_110 = *(int **)(iVar5 + 4);\n      local_104 = (int *)strlen((char *)local_110);\n      iVar5 = _localeconv_r(param_1);\n      local_108 = *(byte **)(iVar5 + 8);\n      if (local_104 == (int *)0x0) goto switchD_08005f58_caseD_74;\n      uVar25 = (uint)*(byte *)piVar28;\n      if ((local_108 != (byte *)0x0) && (*local_108 != 0)) {\n        uVar26 = uVar26 | 0x400;\n      }\n      goto LAB_08005f4a;\n    case 0x2a:\n      uVar25 = (uint)*(byte *)piVar28;\n      local_15c = *local_154;\n      local_154 = local_154 + 1;\n      if ((int)local_15c < 0) {\n        local_15c = (int *)-(int)local_15c;\n        goto LAB_08006602;\n      }\n      goto LAB_08005f4a;\n    case 0x2b:\n      local_f5 = 0x2b;\n      uVar25 = (uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case 0x2d:\n      uVar25 = (uint)*(byte *)piVar28;\nLAB_08006602:\n      uVar26 = uVar26 | 4;\n      goto LAB_08005f4a;\n    case 0x2e:\n      uVar25 = (uint)*(byte *)piVar28;\n      if (uVar25 == 0x2a) {\n        uVar25 = (uint)*(byte *)((int)piVar28 + 1);\n        piVar27 = (int *)((uint)*local_154 | (int)*local_154 >> 0x1f);\n        local_154 = local_154 + 1;\n        piVar28 = (int *)((int)piVar28 + 1);\n        goto LAB_08005f4a;\n      }\n      piVar27 = (int *)0x0;\n      piVar28 = (int *)((int)piVar28 + 1);\n      while (uVar25 - 0x30 < 10) {\n        piVar27 = (int *)((uVar25 - 0x30) + (int)piVar27 * 10);\n        uVar25 = (uint)*(byte *)piVar28;\n        piVar28 = (int *)((int)piVar28 + 1);\n      }\n      goto LAB_08005f4e;\n    case 0x30:\n      uVar26 = uVar26 | 0x80;\n      uVar25 = (uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n      goto switchD_08005f58_caseD_31;\n    case 0x41:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x61:\n    case 0x65:\n    case 0x66:\n    case 0x67:\n      local_154 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      local_128 = *local_154;\n      local_12c = local_154[1];\n      local_154 = local_154 + 2;\n      iVar5 = __unorddf2(local_128,(uint)local_12c & 0x7fffffff,0xffffffff,DAT_08006724);\n      if ((iVar5 == 0) &&\n         (iVar5 = __aeabi_dcmple(local_128,(uint)local_12c & 0x7fffffff,0xffffffff,DAT_08006724),\n         iVar5 == 0)) {\n        iVar5 = __aeabi_dcmplt(local_128,local_12c,0,0);\n        param_3 = (int *)PTR_DAT_08006728;\n        piVar27 = (int *)PTR_DAT_0800672c;\n        if (iVar5 == 0) {\n          piVar18 = (int *)(uint)local_f5;\n        }\n        else {\n          piVar18 = (int *)0x2d;\n          local_f5 = 0x2d;\n        }\nLAB_08006524:\n        local_148 = (int *)0x0;\n        local_168 = (int *)0x3;\n        if (uVar25 < 0x48) {\n          param_3 = piVar27;\n        }\n        local_134 = (int *)0x0;\n        local_130 = (int *)0x0;\n        local_158 = (int *)0x3;\n        local_13c = (int *)0x0;\n        local_140 = uVar26 & 0xffffff7f;\n        local_144 = (int *)0x0;\n        goto LAB_08006538;\n      }\n      local_148 = (int *)__unorddf2(local_128,local_12c,local_128,local_12c);\n      if (local_148 != (int *)0x0) {\n        param_3 = (int *)PTR_DAT_08007898;\n        piVar27 = (int *)PTR_DAT_0800789c;\n        if ((int)local_12c < 0) {\n          piVar18 = (int *)0x2d;\n          local_f5 = 0x2d;\n        }\n        else {\n          piVar18 = (int *)(uint)local_f5;\n        }\n        goto LAB_08006524;\n      }\n      piVar18 = local_12c;\n      piVar24 = piVar27;\n      if (uVar25 == 0x61) {\n        uVar14 = 0x78;\nLAB_08007224:\n        local_f4 = CONCAT11(uVar14,0x30);\n        if ((int)piVar27 < 100) {\n          local_140 = uVar26 | 0x102;\n          local_148 = (int *)0x0;\n          param_3 = (int *)&local_8c;\n          uVar26 = uVar26 | 2;\n        }\n        else {\n          param_3 = (int *)_malloc_r(param_1,(byte *)((int)piVar27 + 1));\n          if (param_3 == (int *)0x0) {\n            uVar15 = *(ushort *)(param_2 + 3) | 0x40;\n            *(ushort *)(param_2 + 3) = uVar15;\n            goto LAB_0800604e;\n          }\n          local_140 = uVar26 | 0x102;\n          uVar26 = uVar26 | 2;\n          local_148 = param_3;\n        }\nLAB_0800724a:\n        piVar27 = piVar24;\n        if ((int)local_12c < 0) {\nLAB_08007414:\n          local_144 = (int *)0x2d;\n          piVar18 = local_12c + -0x20000000;\n          piVar24 = piVar27;\n        }\n        else {\n          local_144 = (int *)0x0;\n        }\n        if (uVar25 == 0x61) {\n          frexp((double)CONCAT44(in_stack_fffffe7c,in_stack_fffffe78),local_128);\n          uVar32 = __muldf3();\n          iVar5 = __aeabi_dcmpeq((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,0);\n          if (iVar5 != 0) {\n            local_f0[0] = (int *)0x1;\n          }\n          local_158 = (int *)PTR_s_0123456789abcdef_08007888;\n          local_138 = param_3;\n          piVar27 = piVar24;\n          goto LAB_080072ba;\n        }\n        if (uVar25 == 0x41) {\n          frexp((double)CONCAT44(in_stack_fffffe7c,in_stack_fffffe78),local_128);\n          uVar32 = __muldf3();\n          iVar5 = __aeabi_dcmpeq((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,0);\n          if (iVar5 == 0) {\n            local_158 = (int *)PTR_s_0123456789ABCDEF_0800739c;\n            local_138 = param_3;\n            piVar27 = piVar24;\n          }\n          else {\n            local_f0[0] = (int *)0x1;\n            local_158 = (int *)PTR_s_0123456789ABCDEF_08007894;\n            local_138 = param_3;\n            piVar27 = piVar24;\n          }\n          goto LAB_080072ba;\n        }\n      }\n      else {\n        if (uVar25 == 0x41) {\n          uVar14 = 0x58;\n          goto LAB_08007224;\n        }\n        local_140 = uVar26 | 0x100;\n        if (piVar27 == (int *)0xffffffff) {\n          piVar24 = (int *)0x6;\n          goto LAB_0800724a;\n        }\n        if ((uVar25 & 0xffffffdf) == 0x47) {\n          if (piVar27 == (int *)0x0) {\n            piVar24 = (int *)0x1;\n            local_148 = piVar27;\n          }\n          goto LAB_0800724a;\n        }\n        local_144 = local_148;\n        if ((int)local_12c < 0) goto LAB_08007414;\n      }\n      local_168 = (int *)(uVar25 & 0xffffffdf);\n      in_stack_fffffe7c = piVar24;\n      local_150 = piVar24;\n      if (uVar25 == 0x66) {\n        in_stack_fffffe78 = 3;\n        param_3 = (int *)_dtoa_r(param_1,local_f0,local_128,piVar18);\n        piVar27 = (int *)((int)param_3 + (int)piVar24);\nLAB_0800764c:\n        if ((*(byte *)param_3 == 0x30) &&\n           (iVar5 = __aeabi_dcmpeq(local_128,piVar18,0,0), iVar5 == 0)) {\n          local_f0[0] = (int *)(1 - (int)local_150);\n        }\n        piVar27 = (int *)((int)piVar27 + (int)local_f0[0]);\n      }\n      else if (uVar25 == 0x46) {\n        in_stack_fffffe78 = 3;\n        param_3 = (int *)_dtoa_r(param_1,local_f0,local_128,piVar18);\nLAB_08007760:\n        piVar27 = (int *)((int)param_3 + (int)local_150);\n        if (uVar25 == 0x46) goto LAB_0800764c;\n      }\n      else {\n        if (local_168 == (int *)0x45) {\n          local_150 = (int *)((int)piVar24 + 1);\n        }\n        in_stack_fffffe78 = 2;\n        in_stack_fffffe7c = local_150;\n        param_3 = (int *)_dtoa_r(param_1,local_f0,local_128,piVar18);\n        local_138 = local_e0;\n        if (uVar25 == 0x67) {\n          if ((uVar26 & 1) == 0) goto LAB_08006ca6;\n        }\n        else if (uVar25 == 0x47) {\n          if ((uVar26 & 1) != 0) goto LAB_08007760;\n          goto LAB_08006ca6;\n        }\n        piVar27 = (int *)((int)local_150 + (int)param_3);\n      }\n      iVar5 = __aeabi_dcmpeq(local_128,piVar18,0,0);\n      local_138 = piVar27;\n      if (iVar5 == 0) {\n        for (; local_138 = local_e0, local_e0 < piVar27; local_e0 = (int *)((int)local_e0 + 1)) {\n          *(byte *)local_e0 = 0x30;\n        }\n      }\nLAB_08006ca6:\n      local_138 = (int *)((int)local_138 - (int)param_3);\n      goto LAB_08006cb0;\n    case 0x43:\n    case 99:\n      piVar18 = (int *)0x0;\n      piVar27 = *local_154;\n      local_f5 = 0;\n      local_148 = (int *)0x0;\n      local_144 = (int *)0x0;\n      local_13c = (int *)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      local_154 = local_154 + 1;\n      local_168 = (int *)0x1;\n      local_158 = (int *)0x1;\n      local_8c = SUB41(piVar27,0);\n      param_3 = (int *)&local_8c;\n      goto LAB_08006298;\n    case 0x44:\n      uVar26 = uVar26 | 0x10;\n      if ((int)(uVar26 << 0x1a) < 0) goto LAB_080060ec;\nLAB_080065a8:\n      ppiVar16 = local_154 + 1;\n      if ((int)(uVar26 << 0x1b) < 0) {\nLAB_08006bcc:\n        piVar18 = *local_154;\n        piVar24 = (int *)((int)piVar18 >> 0x1f);\n        local_154 = ppiVar16;\n      }\n      else if ((int)(uVar26 << 0x19) < 0) {\n        piVar18 = (int *)(int)*(short *)local_154;\n        piVar24 = (int *)((int)piVar18 >> 0x1f);\n        local_154 = ppiVar16;\n      }\n      else {\n        if (-1 < (int)(uVar26 << 0x16)) goto LAB_08006bcc;\n        piVar18 = (int *)(int)*(char *)local_154;\n        piVar24 = (int *)((int)piVar18 >> 0x1f);\n        local_154 = ppiVar16;\n      }\n      goto LAB_08006102;\n    case 0x4c:\n      uVar26 = uVar26 | 8;\n      uVar25 = (uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case 0x4f:\n      uVar26 = uVar26 | 0x10;\n    case 0x6f:\n      if ((uVar26 & 0x20) == 0) {\n        ppiVar16 = local_154 + 1;\n        if ((uVar26 & 0x10) == 0) {\n          if ((uVar26 & 0x40) == 0) {\n            if ((uVar26 & 0x200) == 0) goto LAB_08006be2;\n            piVar18 = (int *)(uint)*(byte *)local_154;\n            piVar24 = (int *)0x0;\n            local_154 = ppiVar16;\n          }\n          else {\n            piVar18 = (int *)(uint)*(ushort *)local_154;\n            piVar24 = (int *)0x0;\n            local_154 = ppiVar16;\n          }\n        }\n        else {\nLAB_08006be2:\n          piVar18 = *local_154;\n          piVar24 = (int *)0x0;\n          local_154 = ppiVar16;\n        }\n      }\n      else {\n        ppiVar16 = (int **)((int)local_154 + 7U & 0xfffffff8);\n        piVar18 = *ppiVar16;\n        piVar24 = ppiVar16[1];\n        local_154 = ppiVar16 + 2;\n      }\n      iVar5 = 0;\n      uVar26 = uVar26 & 0xfffffbff;\n      break;\n    case 0x53:\n    case 0x73:\n      local_f5 = 0;\n      local_144 = *local_154;\n      local_154 = local_154 + 1;\n      local_140 = uVar26;\n      if (local_144 == (int *)0x0) {\n        piVar18 = local_144;\n        param_3 = (int *)PTR_s__null__08007084;\n        local_148 = local_144;\n        local_13c = local_144;\n        local_134 = local_144;\n        local_130 = local_144;\n        if ((int *)0x5 < piVar27) {\n          local_158 = (int *)0x6;\n          local_168 = local_158;\n        }\n        goto LAB_08006538;\n      }\n      param_3 = local_144;\n      if (piVar27 == (int *)0xffffffff) {\n        local_158 = (int *)strlen((char *)local_144);\n      }\n      else {\n        local_148 = (int *)memchr(local_144,0,(size_t)piVar27);\n        if (local_148 == (int *)0x0) {\n          piVar18 = (int *)(uint)local_f5;\n          local_144 = local_148;\n          local_13c = local_148;\n          local_134 = local_148;\n          local_130 = local_148;\n          goto LAB_08006538;\n        }\n        local_158 = (int *)((int)local_148 - (int)local_144);\n      }\n      local_148 = (int *)0x0;\n      local_13c = (int *)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      piVar18 = (int *)(uint)local_f5;\n      local_144 = (int *)0x0;\n      local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      goto LAB_08006538;\n    case 0x55:\n      uVar26 = uVar26 | 0x10;\n      if ((int)(uVar26 << 0x1a) < 0) goto LAB_0800618a;\nLAB_080066c0:\n      ppiVar16 = local_154 + 1;\n      if ((int)(uVar26 << 0x1b) < 0) {\nLAB_08006bf2:\n        piVar18 = *local_154;\n        piVar24 = (int *)0x0;\n        iVar5 = 1;\n        local_154 = ppiVar16;\n      }\n      else if ((int)(uVar26 << 0x19) < 0) {\n        piVar18 = (int *)(uint)*(ushort *)local_154;\n        piVar24 = (int *)0x0;\n        iVar5 = 1;\n        local_154 = ppiVar16;\n      }\n      else {\n        if (-1 < (int)(uVar26 << 0x16)) goto LAB_08006bf2;\n        piVar18 = (int *)(uint)*(byte *)local_154;\n        piVar24 = (int *)0x0;\n        iVar5 = 1;\n        local_154 = ppiVar16;\n      }\n      break;\n    case 0x58:\n      local_11c = PTR_s_0123456789ABCDEF_08006730;\n      if ((uVar26 & 0x20) != 0) goto LAB_080061ac;\nLAB_08006696:\n      ppiVar16 = local_154 + 1;\n      if ((uVar26 & 0x10) == 0) {\n        if ((uVar26 & 0x40) == 0) {\n          if ((uVar26 & 0x200) == 0) goto LAB_08006bbc;\n          piVar18 = (int *)(uint)*(byte *)local_154;\n          piVar24 = (int *)0x0;\n          local_154 = ppiVar16;\n        }\n        else {\n          piVar18 = (int *)(uint)*(ushort *)local_154;\n          piVar24 = (int *)0x0;\n          local_154 = ppiVar16;\n        }\n      }\n      else {\nLAB_08006bbc:\n        piVar18 = *local_154;\n        piVar24 = (int *)0x0;\n        local_154 = ppiVar16;\n      }\n      goto LAB_080061be;\n    case 100:\n    case 0x69:\n      if (-1 < (int)(uVar26 << 0x1a)) goto LAB_080065a8;\nLAB_080060ec:\n      ppiVar16 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar18 = *ppiVar16;\n      piVar24 = ppiVar16[1];\n      local_154 = ppiVar16 + 2;\nLAB_08006102:\n      if ((int)piVar24 < 0) {\n        bVar30 = piVar18 != (int *)0x0;\n        piVar18 = (int *)-(int)piVar18;\n        piVar24 = (int *)(-(int)piVar24 - (uint)bVar30);\n        local_f5 = 0x2d;\n      }\n      if (piVar27 != (int *)0xffffffff) {\n        iVar5 = 1;\n        iVar6 = 1;\n        local_140 = uVar26 & 0xffffff7f;\n        if (((uint)piVar18 | (uint)piVar24) == 0) goto LAB_080060a4;\n        goto LAB_08006130;\n      }\n      local_140 = uVar26;\n      if (piVar24 != (int *)0x0 || (int *)0x9 < piVar18) goto LAB_08006f16;\n      goto LAB_0800698a;\n    case 0x68:\n      uVar25 = (uint)*(byte *)piVar28;\n      if (uVar25 == 0x68) {\n        uVar25 = (uint)*(byte *)((int)piVar28 + 1);\n        uVar26 = uVar26 | 0x200;\n        piVar28 = (int *)((int)piVar28 + 1);\n      }\n      else {\n        uVar26 = uVar26 | 0x40;\n      }\n      goto LAB_08005f4a;\n    case 0x6a:\n    case 0x71:\n      uVar26 = uVar26 | 0x20;\n    case 0x74:\n    case 0x7a:\nswitchD_08005f58_caseD_74:\n      uVar25 = (uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case 0x6c:\n      goto switchD_08005f58_caseD_6c;\n    case 0x6e:\n      ppiVar16 = local_154 + 1;\n      ppbVar17 = (byte **)*local_154;\n      local_154 = ppiVar16;\n      if ((uVar26 & 0x20) != 0) {\n        *ppbVar17 = local_164;\n        ppbVar17[1] = (byte *)((int)local_164 >> 0x1f);\n        goto LAB_0800620e;\n      }\n      if ((uVar26 & 0x10) == 0) {\n        if ((uVar26 & 0x40) != 0) {\n          *(short *)ppbVar17 = (short)local_164;\n          goto LAB_0800620e;\n        }\n        if ((uVar26 & 0x200) != 0) {\n          *(char *)ppbVar17 = (char)local_164;\n          goto LAB_0800620e;\n        }\n      }\n      *ppbVar17 = local_164;\n      goto LAB_0800620e;\n    case 0x70:\n      local_f4 = 0x7830;\n      local_11c = PTR_s_0123456789abcdef_08006434;\n      piVar18 = *local_154;\n      uVar26 = uVar26 | 2;\n      piVar24 = (int *)0x0;\n      iVar5 = 2;\n      uVar25 = 0x78;\n      local_154 = local_154 + 1;\n      break;\n    case 0x75:\n      if (-1 < (int)(uVar26 << 0x1a)) goto LAB_080066c0;\nLAB_0800618a:\n      ppiVar16 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar18 = *ppiVar16;\n      piVar24 = ppiVar16[1];\n      iVar5 = 1;\n      local_154 = ppiVar16 + 2;\n      break;\n    case 0x78:\n      local_11c = PTR_s_0123456789abcdef_08006434;\n      if ((uVar26 & 0x20) == 0) goto LAB_08006696;\nLAB_080061ac:\n      ppiVar16 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar18 = *ppiVar16;\n      piVar24 = ppiVar16[1];\n      local_154 = ppiVar16 + 2;\nLAB_080061be:\n      if (((uVar26 & 1) != 0) && (((uint)piVar18 | (uint)piVar24) != 0)) {\n        uVar26 = uVar26 | 2;\n        local_f4 = CONCAT11((char)uVar25,0x30);\n      }\n      iVar5 = 2;\n      uVar26 = uVar26 & 0xfffffbff;\n    }\n    local_f5 = 0;\n    if (piVar27 == (int *)0xffffffff) {\n      local_140 = uVar26;\n      if (iVar5 != 1) goto LAB_08006136;\nLAB_08006980:\n      local_140 = uVar26;\n      if (piVar24 == (int *)0x0 && piVar18 < (int *)0xa) goto LAB_0800698a;\nLAB_08006f16:\n      lVar31 = CONCAT44(piVar24,piVar18);\n      local_138 = (int *)0x0;\n      param_3 = (int *)(&bStack_2a + 2);\n      do {\n        iVar5 = (int)((ulonglong)lVar31 >> 0x20);\n        uVar26 = (uint)lVar31;\n        cVar10 = '\\n';\n        __aeabi_uldivmod(uVar26,iVar5,10,0);\n        *(byte *)((int)param_3 + -1) = cVar10 + 0x30;\n        local_138 = (int *)((int)local_138 + 1);\n        param_3 = (int *)((int)param_3 + -1);\n        if (((((local_140 & 0x400) != 0) && (local_138 == (int *)(uint)*local_108)) &&\n            (local_138 != (int *)0xff)) && (iVar5 != 0 || 9 < uVar26)) {\n          param_3 = (int *)((int)param_3 - (int)local_104);\n          strncpy((char *)param_3,(char *)local_110,(size_t)local_104);\n          local_138 = (int *)(uint)local_108[1];\n          if (local_138 != (int *)0x0) {\n            local_108 = local_108 + 1;\n            local_138 = (int *)0x0;\n          }\n        }\n        lVar31 = __aeabi_uldivmod(uVar26,iVar5,10,0);\n      } while (lVar31 != 0);\n      local_158 = (int *)((int)(&bStack_2a + 2) - (int)param_3);\n    }\n    else {\n      local_140 = uVar26 & 0xffffff7f;\n      iVar6 = iVar5;\n      if (((uint)piVar18 | (uint)piVar24) == 0) {\nLAB_080060a4:\n        if (piVar27 == (int *)0x0) {\n          if (iVar5 == 0) {\n            local_158 = (int *)(uVar26 & 1);\n            if (local_158 == (int *)0x0) {\n              param_3 = (int *)(&bStack_2a + 2);\n            }\n            else {\n              param_3 = (int *)(&bStack_2a + 1);\n              local_29 = '0';\n            }\n          }\n          else {\n            param_3 = (int *)(&bStack_2a + 2);\n          }\n        }\n        else {\n          if (iVar5 != 1) goto LAB_08006136;\nLAB_0800698a:\n          local_29 = (char)piVar18 + '0';\n          param_3 = (int *)(&bStack_2a + 1);\n          local_158 = (int *)0x1;\n        }\n      }\n      else {\nLAB_08006130:\n        iVar5 = iVar6;\n        uVar26 = local_140;\n        if (iVar6 == 1) goto LAB_08006980;\nLAB_08006136:\n        if (iVar5 == 2) {\n          param_3 = (int *)(&bStack_2a + 2);\n          do {\n            piVar19 = (int *)((uint)piVar18 >> 4 | (int)piVar24 << 0x1c);\n            piVar24 = (int *)((uint)piVar24 >> 4);\n            param_3 = (int *)((int)param_3 + -1);\n            *(undefined *)param_3 = local_11c[(uint)piVar18 & 0xf];\n            piVar18 = piVar19;\n          } while (((uint)piVar19 | (uint)piVar24) != 0);\n        }\n        else {\n          param_3 = (int *)(&bStack_2a + 2);\n          do {\n            piVar19 = param_3;\n            piVar12 = (int *)((uint)piVar18 >> 3 | (int)piVar24 << 0x1d);\n            piVar24 = (int *)((uint)piVar24 >> 3);\n            iVar5 = ((uint)piVar18 & 7) + 0x30;\n            *(byte *)((int)piVar19 + -1) = (byte)iVar5;\n            param_3 = (int *)((int)piVar19 + -1);\n            piVar18 = piVar12;\n          } while (((uint)piVar12 | (uint)piVar24) != 0);\n          if (((local_140 & 1) != 0) && (iVar5 != 0x30)) {\n            param_3 = (int *)((int)piVar19 + -2);\n            local_158 = (int *)(&bStack_2a + (2 - (int)param_3));\n            *(byte *)((int)piVar19 + -2) = 0x30;\n            goto LAB_0800675a;\n          }\n        }\n        local_158 = (int *)(&bStack_2a + (2 - (int)param_3));\n      }\n    }\nLAB_0800675a:\n    local_148 = (int *)0x0;\n    local_13c = (int *)0x0;\n    local_134 = (int *)0x0;\n    local_130 = (int *)0x0;\n    piVar18 = (int *)(uint)local_f5;\n    local_144 = piVar27;\n    local_168 = local_158;\n    if ((int)local_158 < (int)piVar27) {\n      local_168 = piVar27;\n    }\n    goto LAB_08006538;\n  }\nLAB_08006216:\n  if (local_d0 == (byte *)0x0) {\nLAB_0800604a:\n    uVar15 = *(ushort *)(param_2 + 3);\n  }\n  else {\n    __ssprint_r(param_1,param_2,&local_d8);\n    uVar15 = *(ushort *)(param_2 + 3);\n  }\nLAB_0800604e:\n  if ((uVar15 & 0x40) != 0) {\n    local_164 = (byte *)0xffffffff;\n  }\n  return local_164;\nswitchD_08005f58_caseD_6c:\n  uVar25 = (uint)*(byte *)piVar28;\n  if (uVar25 == 0x6c) {\n    uVar25 = (uint)*(byte *)((int)piVar28 + 1);\n    uVar26 = uVar26 | 0x20;\n    piVar28 = (int *)((int)piVar28 + 1);\n  }\n  else {\n    uVar26 = uVar26 | 0x10;\n  }\n  goto LAB_08005f4a;\n  while (iVar6 = __aeabi_dcmpeq(uVar7,uVar8,0,0), iVar6 == 0) {\nLAB_080072ba:\n    piVar18 = piVar27;\n    piVar19 = local_138;\n    piVar27 = (int *)((int)piVar18 + -1);\n    uVar32 = __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_080073a0);\n    iVar5 = __aeabi_d2iz();\n    uVar33 = __aeabi_i2d();\n    uVar32 = __subdf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),(int)uVar33,\n                      (int)((ulonglong)uVar33 >> 0x20));\n    uVar8 = (undefined4)((ulonglong)uVar32 >> 0x20);\n    uVar7 = (undefined4)uVar32;\n    local_138 = (int *)((int)piVar19 + 1);\n    *(byte *)piVar19 = *(byte *)((int)local_158 + iVar5);\n    if (piVar27 == (int *)0xffffffff) break;\n  }\n  iVar6 = __aeabi_dcmpgt(uVar7,uVar8,0,DAT_080073a4);\n  if ((iVar6 == 0) &&\n     ((iVar6 = __aeabi_dcmpeq(uVar7,uVar8,0,DAT_080073a4), iVar6 == 0 || (-1 < iVar5 << 0x1f)))) {\n    if (-1 < (int)piVar27) {\n      piVar18 = (int *)((int)piVar18 + (int)local_138);\n      piVar27 = local_138;\n      do {\n        local_138 = (int *)((int)piVar27 + 1);\n        *(byte *)piVar27 = 0x30;\n        piVar27 = local_138;\n      } while (piVar18 != local_138);\n    }\n  }\n  else {\n    bVar1 = *(byte *)((int)local_158 + 0xf);\n    bVar11 = *(byte *)piVar19;\n    piVar27 = local_138;\n    local_e0 = piVar19;\n    while (bVar1 == bVar11) {\n      *(byte *)((int)piVar27 + -1) = 0x30;\n      bVar11 = *(byte *)((int)local_e0 + -1);\n      piVar27 = local_e0;\n      local_e0 = (int *)((int)local_e0 + -1);\n    }\n    if (bVar11 == 0x39) {\n      bVar11 = *(byte *)((int)local_158 + 10);\n    }\n    else {\n      bVar11 = bVar11 + 1;\n    }\n    *(byte *)((int)piVar27 + -1) = bVar11;\n  }\n  local_138 = (int *)((int)local_138 - (int)param_3);\nLAB_08006cb0:\n  local_168 = (int *)(uVar25 & 0xffffffdf);\n  local_134 = local_f0[0];\n  if (local_168 == (int *)0x47) {\n    if (((int)((int)local_f0[0] + 3) < 0 == SCARRY4((int)local_f0[0],3)) &&\n       ((int)local_f0[0] <= (int)piVar24)) {\n      if ((int)local_f0[0] < (int)local_138) {\n        local_158 = (int *)((int)local_138 + (int)piVar4);\n        if (0 < (int)local_f0[0]) {\n          uVar25 = 0x67;\n          goto LAB_080074f8;\n        }\n        local_158 = (int *)((int)local_158 + (1 - (int)local_f0[0]));\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n        uVar25 = 0x67;\n      }\n      else {\n        if ((int)(uVar26 << 0x1f) < 0) {\n          local_158 = (int *)((int)local_f0[0] + (int)piVar4);\n        }\n        else {\n          local_158 = local_f0[0];\n        }\n        if (-1 < (int)(uVar26 << 0x15)) {\n          uVar25 = 0x67;\n          goto LAB_0800754a;\n        }\n        if (0 < (int)local_f0[0]) {\n          uVar25 = 0x67;\n          goto LAB_080074fc;\n        }\n        uVar25 = 0x67;\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      }\n      goto LAB_080073d6;\n    }\n    uVar25 = uVar25 - 2;\n    local_168 = (int *)(uVar25 & 0xffffffdf);\nLAB_08006cc4:\n    local_e8._0_1_ = (char)uVar25;\n    if (local_168 == (int *)0x41) {\n      local_e8._0_1_ = (char)local_e8 + '\\x0f';\n    }\n    piVar27 = (int *)((int)local_f0[0] + -1);\n    if ((int)piVar27 < 0) {\n      local_e8._1_1_ = 0x2d;\n      local_f0[0] = (int *)(1 - (int)local_f0[0]);\n    }\n    else {\n      local_e8._1_1_ = 0x2b;\n      local_f0[0] = piVar27;\n    }\n    if ((int)local_f0[0] < 10) {\n      if (local_168 == (int *)0x41) {\n        pcVar21 = (char *)((int)&local_e8 + 2);\n      }\n      else {\n        local_e8._2_1_ = 0x30;\n        pcVar21 = (char *)((int)&local_e8 + 3);\n      }\n      *pcVar21 = (char)local_f0[0] + '0';\n      pcVar21 = pcVar21 + 1;\n    }\n    else {\n      pbVar29 = abStack_dc + 3;\n      pbVar23 = pbVar29;\n      do {\n        pbVar9 = pbVar23;\n        piVar18 = (int *)((ulonglong)DAT_08007890 * ZEXT48(local_f0[0]) >> 0x23);\n        pbVar9[-1] = (char)local_f0[0] + (char)piVar18 * -10 + 0x30;\n        pbVar23 = pbVar9 + -1;\n        local_f0[0] = piVar18;\n      } while ((int *)0x9 < piVar18);\n      uVar22 = (uint)(piVar18 + 0xc) & 0xff;\n      pbVar9[-2] = (byte)uVar22;\n      if (pbVar9 + -2 < pbVar29) {\n        pbVar9 = pbVar23;\n        pcVar21 = (char *)((int)&local_e8 + 2);\n        while( true ) {\n          *pcVar21 = (char)uVar22;\n          if (pbVar29 == pbVar9) break;\n          uVar22 = (uint)*pbVar9;\n          pbVar9 = pbVar9 + 1;\n          pcVar21 = pcVar21 + 1;\n        }\n        pcVar21 = (char *)(((int)&stack0xfffffe78 * 2 - (int)pbVar23) + 0x152);\n      }\n      else {\n        pcVar21 = (char *)((int)&local_e8 + 2);\n      }\n    }\n    local_10c = (int *)(pcVar21 + -(int)&local_e8);\n    local_158 = (int *)((int)local_10c + (int)local_138);\n    if ((1 < (int)local_138) || ((int)(uVar26 << 0x1f) < 0)) {\n      local_158 = (int *)((int)local_158 + (int)piVar4);\n    }\n    local_13c = (int *)0x0;\n    local_134 = (int *)0x0;\n    local_130 = (int *)0x0;\n    local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n    local_140 = uVar26 & 0xfffffbff | 0x100;\n    local_f0[0] = piVar27;\n  }\n  else {\n    if (local_168 != (int *)0x46) goto LAB_08006cc4;\n    if ((int)local_f0[0] < 1) {\n      if ((piVar24 == (int *)0x0) && (-1 < (int)(uVar26 << 0x1f))) {\n        uVar25 = 0x66;\n        local_168 = (int *)0x1;\n        local_158 = (int *)0x1;\n      }\n      else {\n        uVar25 = 0x66;\n        local_158 = (int *)((byte *)((int)piVar4 + 1) + (int)piVar24);\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      }\nLAB_080073d6:\n      local_13c = (int *)0x0;\n      local_130 = (int *)0x0;\n    }\n    else {\n      if ((piVar24 == (int *)0x0) && (-1 < (int)(uVar26 << 0x1f))) {\n        uVar25 = 0x66;\n        local_158 = local_f0[0];\n      }\n      else {\n        uVar25 = 0x66;\n        local_158 = (int *)((byte *)((int)local_f0[0] + (int)piVar4) + (int)piVar24);\n      }\nLAB_080074f8:\n      if (-1 < (int)(uVar26 << 0x15)) {\nLAB_0800754a:\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n        goto LAB_080073d6;\n      }\nLAB_080074fc:\n      local_13c = (int *)0x0;\n      local_130 = (int *)0x0;\n      uVar26 = (uint)*local_108;\n      while (uVar26 != 0xff) {\n        while( true ) {\n          if ((int)local_134 <= (int)uVar26) goto LAB_08007524;\n          uVar22 = (uint)local_108[1];\n          local_134 = (int *)((int)local_134 - uVar26);\n          if (uVar22 == 0) break;\n          local_108 = local_108 + 1;\n          local_130 = (int *)((int)local_130 + 1);\n          uVar26 = uVar22;\n          if (uVar22 == 0xff) goto LAB_08007524;\n        }\n        local_13c = (int *)((int)local_13c + 1);\n      }\nLAB_08007524:\n      local_158 = (int *)((int)local_104 * (int)((int)local_130 + (int)local_13c) + (int)local_158);\n      local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n    }\n  }\n  if (local_144 == (int *)0x0) {\n    piVar18 = (int *)(uint)local_f5;\nLAB_08006538:\n    uVar26 = local_140;\n    if (piVar18 != (int *)0x0) goto LAB_0800653e;\n  }\n  else {\n    piVar18 = (int *)0x2d;\n    local_144 = (int *)0x0;\n    local_f5 = 0x2d;\nLAB_0800653e:\n    local_168 = (int *)((int)local_168 + 1);\n    uVar26 = local_140;\n  }\nLAB_08006298:\n  if ((uVar26 & 2) != 0) {\n    local_168 = (int *)((int)local_168 + 2);\n  }\n  if (((uVar26 & 0x84) == 0) &&\n     (piVar27 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar27)) {\n    if (0x10 < (int)piVar27) {\n      do {\n        piVar18 = piVar27;\n        local_d4 = local_d4 + 1;\n        local_d0 = local_d0 + 0x10;\n        *ppiVar3 = (int *)PTR_blanks_7315_08006438;\n        ppiVar3[1] = (int *)0x10;\n        if (local_d4 < 8) {\n          ppiVar3 = ppiVar3 + 2;\n        }\n        else {\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          ppiVar3 = local_cc;\n        }\n        piVar27 = piVar18 + -4;\n      } while (0x10 < (int)piVar27);\n      piVar27 = piVar18 + -4;\n    }\n    local_d4 = local_d4 + 1;\n    local_d0 = local_d0 + (int)piVar27;\n    *ppiVar3 = (int *)PTR_blanks_7315_08006438;\n    ppiVar3[1] = piVar27;\n    if (local_d4 < 8) {\n      piVar18 = (int *)(uint)local_f5;\n      ppiVar3 = ppiVar3 + 2;\n    }\n    else {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n      piVar18 = (int *)(uint)local_f5;\n    }\n  }\n  if (piVar18 != (int *)0x0) {\n    local_d0 = local_d0 + 1;\n    local_d4 = local_d4 + 1;\n    *ppiVar3 = (int *)&local_f5;\n    ppiVar3[1] = (int *)0x1;\n    if (local_d4 < 8) {\n      ppiVar3 = ppiVar3 + 2;\n    }\n    else {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n    }\n  }\n  if ((uVar26 & 2) != 0) {\n    local_d0 = local_d0 + 2;\n    local_d4 = local_d4 + 1;\n    *ppiVar3 = (int *)&local_f4;\n    ppiVar3[1] = (int *)0x2;\n    if (local_d4 < 8) {\n      ppiVar3 = ppiVar3 + 2;\n    }\n    else {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n    }\n  }\n  puVar2 = PTR_zeroes_7316_08006a54;\n  if (((uVar26 & 0x84) == 0x80) &&\n     (piVar27 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar27)) {\n    if (0x10 < (int)piVar27) {\n      do {\n        while( true ) {\n          piVar18 = piVar27;\n          local_d4 = local_d4 + 1;\n          local_d0 = local_d0 + 0x10;\n          *ppiVar3 = (int *)puVar2;\n          ppiVar3[1] = (int *)0x10;\n          if (local_d4 < 8) break;\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          ppiVar3 = local_cc;\n          piVar27 = piVar18 + -4;\n          if ((int)(piVar18 + -4) < 0x11) goto LAB_08006882;\n        }\n        ppiVar3 = ppiVar3 + 2;\n        piVar27 = piVar18 + -4;\n      } while (0x10 < (int)(piVar18 + -4));\nLAB_08006882:\n      piVar27 = piVar18 + -4;\n    }\n    local_d4 = local_d4 + 1;\n    local_d0 = local_d0 + (int)piVar27;\n    *ppiVar3 = (int *)puVar2;\n    ppiVar3[1] = piVar27;\n    if (local_d4 < 8) {\n      ppiVar3 = ppiVar3 + 2;\n    }\n    else {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n    }\n  }\n  puVar2 = PTR_zeroes_7316_0800643c;\n  local_144 = (int *)((int)local_144 - (int)local_158);\n  if (0 < (int)local_144) {\n    piVar27 = (int *)PTR_zeroes_7316_08007088;\n    if (0x10 < (int)local_144) {\n      do {\n        while( true ) {\n          piVar27 = local_144;\n          local_d4 = local_d4 + 1;\n          local_d0 = local_d0 + 0x10;\n          *ppiVar3 = (int *)puVar2;\n          ppiVar3[1] = (int *)0x10;\n          if (local_d4 < 8) break;\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          ppiVar3 = local_cc;\n          local_144 = piVar27 + -4;\n          if ((int)(piVar27 + -4) < 0x11) goto LAB_080063d2;\n        }\n        ppiVar3 = ppiVar3 + 2;\n        local_144 = piVar27 + -4;\n      } while (0x10 < (int)(piVar27 + -4));\nLAB_080063d2:\n      local_144 = piVar27 + -4;\n      piVar27 = (int *)puVar2;\n    }\n    local_d4 = local_d4 + 1;\n    local_d0 = local_d0 + (int)local_144;\n    *ppiVar3 = piVar27;\n    ppiVar3[1] = local_144;\n    if (local_d4 < 8) {\n      ppiVar3 = ppiVar3 + 2;\n    }\n    else {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n    }\n  }\n  pbVar23 = local_d0;\n  if ((uVar26 & 0x100) == 0) {\n    local_d4 = local_d4 + 1;\n    local_d0 = local_d0 + (int)local_158;\n    *ppiVar3 = param_3;\n    ppiVar3[1] = local_158;\n    if (local_d4 < 8) {\nLAB_0800640e:\n      ppiVar3 = ppiVar3 + 2;\n      pbVar23 = local_d0;\n    }\n    else {\nLAB_08006a20:\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n      pbVar23 = local_d0;\n    }\n  }\n  else if ((int)uVar25 < 0x66) {\n    local_158 = (int *)(local_d0 + 1);\n    iVar5 = local_d4 + 1;\n    ppiVar16 = ppiVar3 + 2;\n    local_d0 = (byte *)local_158;\n    if (((int)local_138 < 2) && ((uVar26 & 1) == 0)) {\n      *ppiVar3 = param_3;\n      ppiVar3[1] = (int *)0x1;\n      if (iVar5 < 8) {\n        local_150 = (int *)(local_d4 + 2);\n        ppiVar3 = ppiVar3 + 4;\n      }\n      else {\n        local_d4 = iVar5;\n        iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n        if (iVar5 != 0) goto LAB_0800603e;\n        local_150 = (int *)(local_d4 + 1);\n        ppiVar16 = local_cc;\n        local_158 = (int *)local_d0;\n        ppiVar3 = local_cc + 2;\n      }\n    }\n    else {\n      *ppiVar3 = param_3;\n      ppiVar3[1] = (int *)0x1;\n      local_d4 = iVar5;\n      if (7 < iVar5) {\n        iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n        if (iVar5 != 0) goto LAB_0800603e;\n        ppiVar16 = local_cc;\n        local_158 = (int *)local_d0;\n      }\n      local_d4 = local_d4 + 1;\n      local_d0 = (byte *)((int)local_158 + (int)piVar4);\n      *ppiVar16 = __s;\n      ppiVar16[1] = piVar4;\n      if (local_d4 < 8) {\n        ppiVar20 = ppiVar16 + 2;\n      }\n      else {\n        iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n        if (iVar5 != 0) goto LAB_0800603e;\n        ppiVar20 = local_cc;\n      }\n      local_158 = (int *)local_d0;\n      iVar5 = local_d4;\n      local_150 = (int *)(local_d4 + 1);\n      piVar27 = (int *)((int)local_138 + -1);\n      ppiVar13 = ppiVar20 + 2;\n      iVar6 = __aeabi_dcmpeq(local_128,local_12c,0,0);\n      puVar2 = PTR_zeroes_7316_08006d94;\n      local_d4 = (int)local_150;\n      if (iVar6 == 0) {\n        local_158 = (int *)((int)local_158 + (int)piVar27);\n        *ppiVar20 = (int *)((int)param_3 + 1);\n        ppiVar20[1] = piVar27;\n        local_d0 = (byte *)local_158;\n        if ((int)local_150 < 8) {\n          local_150 = (int *)(iVar5 + 2);\n          ppiVar16 = ppiVar13;\n          ppiVar3 = ppiVar20 + 4;\n        }\n        else {\nLAB_08006d9c:\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          local_150 = (int *)(local_d4 + 1);\n          local_158 = (int *)local_d0;\n          ppiVar16 = local_cc;\n          ppiVar3 = local_cc + 2;\n        }\n      }\n      else {\n        ppiVar16 = ppiVar20;\n        ppiVar3 = ppiVar13;\n        if (0 < (int)piVar27) {\n          piVar18 = (int *)PTR_zeroes_7316_0800788c;\n          if (0x10 < (int)piVar27) {\n            while( true ) {\n              local_d0 = (byte *)((int)local_158 + 0x10);\n              *ppiVar20 = (int *)puVar2;\n              ppiVar20[1] = (int *)0x10;\n              if (local_d4 < 8) {\n                ppiVar20 = ppiVar20 + 2;\n              }\n              else {\n                iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n                if (iVar5 != 0) goto LAB_0800603e;\n                ppiVar20 = local_cc;\n              }\n              piVar27 = piVar27 + -4;\n              local_158 = (int *)local_d0;\n              if ((int)piVar27 < 0x11) break;\n              local_d4 = local_d4 + 1;\n            }\n            local_150 = (int *)(local_d4 + 1);\n            ppiVar13 = ppiVar20 + 2;\n            piVar18 = (int *)puVar2;\n          }\n          *ppiVar20 = piVar18;\n          ppiVar20[1] = piVar27;\n          local_158 = (int *)((int)local_158 + (int)piVar27);\n          local_d4 = (int)local_150;\n          local_d0 = (byte *)local_158;\n          if (7 < (int)local_150) goto LAB_08006d9c;\n          local_150 = (int *)((int)local_150 + 1);\n          ppiVar3 = ppiVar13 + 2;\n          ppiVar16 = ppiVar13;\n        }\n      }\n    }\n    ppiVar16[1] = local_10c;\n    local_d0 = (byte *)((int)local_158 + (int)local_10c);\n    local_d4 = (int)local_150;\n    *ppiVar16 = &local_e8;\n    pbVar23 = local_d0;\n    if (7 < (int)local_150) {\n      iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n      if (iVar5 != 0) goto LAB_0800603e;\n      ppiVar3 = local_cc;\n      pbVar23 = local_d0;\n    }\n  }\n  else {\n    iVar5 = __aeabi_dcmpeq(local_128,local_12c,0,0);\n    if (iVar5 == 0) {\n      if ((int)local_f0[0] < 1) {\n        local_d4 = local_d4 + 1;\n        local_d0 = pbVar23 + 1;\n        *ppiVar3 = (int *)PTR_DAT_08006d98;\n        ppiVar3[1] = (int *)0x1;\n        if (local_d4 < 8) {\n          ppiVar3 = ppiVar3 + 2;\n        }\n        else {\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          ppiVar3 = local_cc;\n        }\n        if (((local_f0[0] != (int *)0x0) || (local_138 != (int *)0x0)) ||\n           (pbVar23 = local_d0, (uVar26 & 1) != 0)) {\n          local_d4 = local_d4 + 1;\n          local_d0 = local_d0 + (int)piVar4;\n          *ppiVar3 = __s;\n          ppiVar3[1] = piVar4;\n          if (local_d4 < 8) {\n            ppiVar3 = ppiVar3 + 2;\n          }\n          else {\n            iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n            if (iVar5 != 0) goto LAB_0800603e;\n            ppiVar3 = local_cc;\n          }\n          puVar2 = PTR_zeroes_7316_0800788c;\n          if ((int)local_f0[0] < 0) {\n            piVar27 = (int *)-(int)local_f0[0];\n            if ((int)(local_f0[0] + 4) < 0 != SCARRY4((int)local_f0[0],0x10)) {\n              do {\n                local_d4 = local_d4 + 1;\n                local_d0 = local_d0 + 0x10;\n                *ppiVar3 = (int *)puVar2;\n                ppiVar3[1] = (int *)0x10;\n                if (local_d4 < 8) {\n                  ppiVar3 = ppiVar3 + 2;\n                }\n                else {\n                  iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n                  if (iVar5 != 0) goto LAB_0800603e;\n                  ppiVar3 = local_cc;\n                }\n                piVar27 = piVar27 + -4;\n              } while (0x10 < (int)piVar27);\n            }\n            local_d4 = local_d4 + 1;\n            local_d0 = local_d0 + (int)piVar27;\n            *ppiVar3 = (int *)puVar2;\n            ppiVar3[1] = piVar27;\n            if (local_d4 < 8) {\n              ppiVar3 = ppiVar3 + 2;\n            }\n            else {\n              iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n              if (iVar5 != 0) goto LAB_0800603e;\n              ppiVar3 = local_cc;\n            }\n          }\n          local_d0 = local_d0 + (int)local_138;\n          *ppiVar3 = param_3;\n          ppiVar3[1] = local_138;\n          goto joined_r0x08006a1c;\n        }\n      }\n      else {\n        piVar27 = local_134;\n        if ((int)local_138 <= (int)local_134) {\n          piVar27 = local_138;\n        }\n        if (0 < (int)piVar27) {\n          local_d0 = pbVar23 + (int)piVar27;\n          local_d4 = local_d4 + 1;\n          *ppiVar3 = param_3;\n          ppiVar3[1] = piVar27;\n          if (local_d4 < 8) {\n            ppiVar3 = ppiVar3 + 2;\n            pbVar23 = local_d0;\n          }\n          else {\n            iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n            if (iVar5 != 0) goto LAB_0800603e;\n            ppiVar3 = local_cc;\n            pbVar23 = local_d0;\n          }\n        }\n        puVar2 = PTR_zeroes_7316_08006d94;\n        piVar18 = local_134;\n        if (-1 < (int)piVar27) {\n          piVar18 = (int *)((int)local_134 - (int)piVar27);\n        }\n        piVar27 = (int *)PTR_zeroes_7316_0800788c;\n        if (0 < (int)piVar18) {\n          for (; 0x10 < (int)piVar18; piVar18 = piVar18 + -4) {\n            local_d4 = local_d4 + 1;\n            local_d0 = pbVar23 + 0x10;\n            *ppiVar3 = (int *)puVar2;\n            ppiVar3[1] = (int *)0x10;\n            if (local_d4 < 8) {\n              ppiVar3 = ppiVar3 + 2;\n            }\n            else {\n              iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n              if (iVar5 != 0) goto LAB_0800603e;\n              ppiVar3 = local_cc;\n            }\n            pbVar23 = local_d0;\n            piVar27 = (int *)puVar2;\n          }\n          local_d4 = local_d4 + 1;\n          pbVar23 = pbVar23 + (int)piVar18;\n          *ppiVar3 = piVar27;\n          ppiVar3[1] = piVar18;\n          local_d0 = pbVar23;\n          if (local_d4 < 8) {\n            ppiVar3 = ppiVar3 + 2;\n          }\n          else {\n            iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n            if (iVar5 != 0) goto LAB_0800603e;\n            ppiVar3 = local_cc;\n            pbVar23 = local_d0;\n          }\n        }\n        puVar2 = PTR_zeroes_7316_08007398;\n        local_134 = (int *)((int)local_134 + (int)param_3);\n        if ((uVar26 & 0x400) != 0) {\n          if (local_130 == (int *)0x0) goto LAB_08007176;\nLAB_080070ba:\n          if (local_13c != (int *)0x0) goto LAB_0800717e;\n          local_108 = local_108 + -1;\n          local_130 = (int *)((int)local_130 + -1);\n          do {\n            local_d4 = local_d4 + 1;\n            local_d0 = pbVar23 + (int)local_104;\n            *ppiVar3 = local_110;\n            ppiVar3[1] = local_104;\n            if (local_d4 < 8) {\n              ppiVar3 = ppiVar3 + 2;\n            }\n            else {\n              iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n              if (iVar5 != 0) goto LAB_0800603e;\n              ppiVar3 = local_cc;\n            }\n            piVar18 = (int *)(uint)*local_108;\n            piVar27 = (int *)((byte *)((int)param_3 + (int)local_138) + -(int)local_134);\n            if ((int)piVar18 <= (int)((byte *)((int)param_3 + (int)local_138) + -(int)local_134)) {\n              piVar27 = piVar18;\n            }\n            if (0 < (int)piVar27) {\n              local_d0 = local_d0 + (int)piVar27;\n              local_d4 = local_d4 + 1;\n              *ppiVar3 = local_134;\n              ppiVar3[1] = piVar27;\n              if (local_d4 < 8) {\n                piVar18 = (int *)(uint)*local_108;\n                ppiVar3 = ppiVar3 + 2;\n              }\n              else {\n                iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n                if (iVar5 != 0) goto LAB_0800603e;\n                ppiVar3 = local_cc;\n                piVar18 = (int *)(uint)*local_108;\n              }\n            }\n            piVar24 = piVar18;\n            if (-1 < (int)piVar27) {\n              piVar24 = (int *)((int)piVar18 - (int)piVar27);\n            }\n            if (0 < (int)piVar24) {\n              for (; 0x10 < (int)piVar24; piVar24 = piVar24 + -4) {\n                while( true ) {\n                  local_d4 = local_d4 + 1;\n                  local_d0 = local_d0 + 0x10;\n                  *ppiVar3 = (int *)puVar2;\n                  ppiVar3[1] = (int *)0x10;\n                  if (local_d4 < 8) break;\n                  iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n                  if (iVar5 != 0) goto LAB_0800603e;\n                  piVar24 = piVar24 + -4;\n                  ppiVar3 = local_cc;\n                  if ((int)piVar24 < 0x11) goto LAB_08007156;\n                }\n                ppiVar3 = ppiVar3 + 2;\n              }\nLAB_08007156:\n              local_d4 = local_d4 + 1;\n              local_d0 = local_d0 + (int)piVar24;\n              *ppiVar3 = (int *)puVar2;\n              ppiVar3[1] = piVar24;\n              if (local_d4 < 8) {\n                piVar18 = (int *)(uint)*local_108;\n                ppiVar3 = ppiVar3 + 2;\n              }\n              else {\n                iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n                if (iVar5 != 0) goto LAB_0800603e;\n                piVar18 = (int *)(uint)*local_108;\n                ppiVar3 = local_cc;\n              }\n            }\n            local_134 = (int *)((int)local_134 + (int)piVar18);\n            pbVar23 = local_d0;\n            if (local_130 != (int *)0x0) goto LAB_080070ba;\nLAB_08007176:\n            if (local_13c == (int *)0x0) {\n              if ((int *)((int)param_3 + (int)local_138) <= local_134) {\n                local_134 = (int *)((int)param_3 + (int)local_138);\n              }\n              break;\n            }\nLAB_0800717e:\n            local_13c = (int *)((int)local_13c + -1);\n          } while( true );\n        }\n        if (((int)local_f0[0] < (int)local_138) || ((uVar26 & 1) != 0)) {\n          local_d4 = local_d4 + 1;\n          local_d0 = pbVar23 + (int)piVar4;\n          *ppiVar3 = __s;\n          ppiVar3[1] = piVar4;\n          if (local_d4 < 8) {\n            ppiVar3 = ppiVar3 + 2;\n            pbVar23 = local_d0;\n          }\n          else {\n            iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n            if (iVar5 != 0) goto LAB_0800603e;\n            ppiVar3 = local_cc;\n            pbVar23 = local_d0;\n          }\n        }\n        piVar27 = (int *)((int)local_138 - (int)local_f0[0]);\n        piVar18 = (int *)((byte *)((int)param_3 + (int)local_138) + -(int)local_134);\n        if ((int)piVar27 <= (int)((byte *)((int)param_3 + (int)local_138) + -(int)local_134)) {\n          piVar18 = piVar27;\n        }\n        if (0 < (int)piVar18) {\n          local_d0 = pbVar23 + (int)piVar18;\n          local_d4 = local_d4 + 1;\n          *ppiVar3 = local_134;\n          ppiVar3[1] = piVar18;\n          if (local_d4 < 8) {\n            ppiVar3 = ppiVar3 + 2;\n            pbVar23 = local_d0;\n          }\n          else {\n            iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n            if (iVar5 != 0) goto LAB_0800603e;\n            ppiVar3 = local_cc;\n            piVar27 = (int *)((int)local_138 - (int)local_f0[0]);\n            pbVar23 = local_d0;\n          }\n        }\n        puVar2 = PTR_zeroes_7316_08007088;\n        if (-1 < (int)piVar18) {\n          piVar27 = (int *)((int)piVar27 - (int)piVar18);\n        }\n        piVar18 = (int *)PTR_zeroes_7316_0800788c;\n        if (0 < (int)piVar27) {\n          for (; 0x10 < (int)piVar27; piVar27 = piVar27 + -4) {\n            local_d4 = local_d4 + 1;\n            local_d0 = pbVar23 + 0x10;\n            *ppiVar3 = (int *)puVar2;\n            ppiVar3[1] = (int *)0x10;\n            if (local_d4 < 8) {\n              ppiVar3 = ppiVar3 + 2;\n            }\n            else {\n              iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n              if (iVar5 != 0) goto LAB_0800603e;\n              ppiVar3 = local_cc;\n            }\n            pbVar23 = local_d0;\n            piVar18 = (int *)puVar2;\n          }\n          goto LAB_08007014;\n        }\n      }\n    }\n    else {\n      local_d4 = local_d4 + 1;\n      local_d0 = pbVar23 + 1;\n      *ppiVar3 = (int *)PTR_DAT_08006a50;\n      ppiVar3[1] = (int *)0x1;\n      if (local_d4 < 8) {\n        ppiVar3 = ppiVar3 + 2;\n      }\n      else {\n        iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n        if (iVar5 != 0) goto LAB_0800603e;\n        ppiVar3 = local_cc;\n      }\n      if (((int)local_f0[0] < (int)local_138) || (pbVar23 = local_d0, (uVar26 & 1) != 0)) {\n        local_d4 = local_d4 + 1;\n        local_d0 = local_d0 + (int)piVar4;\n        *ppiVar3 = __s;\n        ppiVar3[1] = piVar4;\n        if (local_d4 < 8) {\n          ppiVar3 = ppiVar3 + 2;\n        }\n        else {\n          iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n          if (iVar5 != 0) goto LAB_0800603e;\n          ppiVar3 = local_cc;\n        }\n        puVar2 = PTR_zeroes_7316_08006a54;\n        piVar27 = (int *)((int)local_138 + -1);\n        pbVar23 = local_d0;\n        piVar18 = (int *)PTR_zeroes_7316_0800788c;\n        if (0 < (int)piVar27) {\n          for (; 0x10 < (int)piVar27; piVar27 = piVar27 + -4) {\n            local_d4 = local_d4 + 1;\n            local_d0 = pbVar23 + 0x10;\n            *ppiVar3 = (int *)puVar2;\n            ppiVar3[1] = (int *)0x10;\n            if (local_d4 < 8) {\n              ppiVar3 = ppiVar3 + 2;\n            }\n            else {\n              iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n              if (iVar5 != 0) goto LAB_0800603e;\n              ppiVar3 = local_cc;\n            }\n            piVar18 = (int *)puVar2;\n            pbVar23 = local_d0;\n          }\nLAB_08007014:\n          local_d0 = pbVar23 + (int)piVar27;\n          *ppiVar3 = piVar18;\n          ppiVar3[1] = piVar27;\njoined_r0x08006a1c:\n          local_d4 = local_d4 + 1;\n          if (7 < local_d4) goto LAB_08006a20;\n          goto LAB_0800640e;\n        }\n      }\n    }\n  }\n  if (((uVar26 & 4) != 0) && (piVar27 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar27))\n  {\n    for (; local_d0 = pbVar23, 0x10 < (int)piVar27; piVar27 = piVar27 + -4) {\n      while( true ) {\n        local_d4 = local_d4 + 1;\n        local_d0 = local_d0 + 0x10;\n        *ppiVar3 = (int *)PTR_blanks_7315_08006720;\n        ppiVar3[1] = (int *)0x10;\n        if (local_d4 < 8) break;\n        iVar5 = __ssprint_r(param_1,param_2,&local_d8);\n        if (iVar5 != 0) goto LAB_0800603e;\n        piVar27 = piVar27 + -4;\n        ppiVar3 = local_cc;\n        if ((int)piVar27 < 0x11) goto LAB_0800647a;\n      }\n      ppiVar3 = ppiVar3 + 2;\n      pbVar23 = local_d0;\n    }\nLAB_0800647a:\n    local_d4 = local_d4 + 1;\n    local_d0 = local_d0 + (int)piVar27;\n    *ppiVar3 = (int *)PTR_blanks_7315_08006720;\n    ppiVar3[1] = piVar27;\n    pbVar23 = local_d0;\n    if ((7 < local_d4) &&\n       (iVar5 = __ssprint_r(param_1,param_2,&local_d8), pbVar23 = local_d0, iVar5 != 0))\n    goto LAB_0800603e;\n  }\n  if ((int)local_15c < (int)local_168) {\n    local_15c = local_168;\n  }\n  local_164 = local_164 + (int)local_15c;\n  if ((pbVar23 == (byte *)0x0) || (iVar5 = __ssprint_r(param_1,param_2,&local_d8), iVar5 == 0)) {\n    local_d4 = 0;\n    if (local_148 != (int *)0x0) {\n      _free_r(param_1,local_148);\n    }\n    ppiVar3 = local_cc;\nLAB_0800620e:\n    bVar1 = *(byte *)piVar28;\n    param_3 = piVar28;\n    goto joined_r0x08005ef2;\n  }\nLAB_0800603e:\n  if (local_148 != (int *)0x0) {\n    _free_r(param_1,local_148);\n  }\n  goto LAB_0800604a;\nswitchD_08005f58_caseD_31:\n  local_15c = (int *)0x0;\n  uVar22 = uVar25 - 0x30;\n  piVar18 = piVar28;\n  do {\n    piVar28 = (int *)((int)piVar18 + 1);\n    uVar25 = (uint)*(byte *)piVar18;\n    local_15c = (int *)(uVar22 + (int)local_15c * 10);\n    uVar22 = uVar25 - 0x30;\n    piVar18 = piVar28;\n  } while (uVar22 < 10);\n  goto LAB_08005f4e;\nswitchD_08005f58_caseD_20:\n  uVar25 = (uint)*(byte *)piVar28;\n  if (local_f5 == 0) {\n    local_f5 = 0x20;\n  }\n  goto LAB_08005f4a;\n}\n\n", 
            "called": [
                "memchr", 
                "__ssprint_r", 
                "__muldf3", 
                "__aeabi_dcmple", 
                "__aeabi_dcmpeq", 
                "__aeabi_dcmpgt", 
                "_localeconv_r", 
                "_dtoa_r", 
                "__subdf3", 
                "_malloc_r", 
                "__unorddf2", 
                "_free_r", 
                "strlen", 
                "__aeabi_i2d", 
                "__aeabi_uldivmod", 
                "frexp", 
                "strncpy", 
                "__aeabi_dcmplt", 
                "__aeabi_d2iz"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005e9c", 
            "calling": [
                "sprintf"
            ], 
            "imported": false, 
            "current_name": "_svfprintf_r"
        }, 
        "__ascii_mbtowc": {
            "renaming": {}, 
            "code": "\nuint __ascii_mbtowc(undefined4 param_1,uint *param_2,byte *param_3,int param_4)\n\n{\n  uint uVar1;\n  uint uStack_4;\n  \n  if (param_2 == (uint *)0x0) {\n    param_2 = &uStack_4;\n  }\n  if (param_3 == (byte *)0x0) {\n    return 0;\n  }\n  if (param_4 == 0) {\n    uVar1 = 0xfffffffe;\n  }\n  else {\n    *param_2 = (uint)*param_3;\n    uVar1 = (uint)*param_3;\n    if (uVar1 != 0) {\n      uVar1 = 1;\n    }\n  }\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080099ec", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ascii_mbtowc"
        }, 
        "__do_global_dtors_aux": {
            "renaming": {}, 
            "code": "\nundefined * __do_global_dtors_aux(undefined *param_1)\n\n{\n  if (*PTR_completed_8655_08000128 == '\\0') {\n    if (DAT_0800012c != 0) {\n      param_1 = PTR__init_08000130;\n    }\n    *PTR_completed_8655_08000128 = 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [
                "_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000110", 
            "calling": [
                "__libc_fini_array"
            ], 
            "imported": false, 
            "current_name": "__do_global_dtors_aux"
        }, 
        "strncpy": {
            "renaming": {}, 
            "code": "\nchar * strncpy(char *__dest,char *__src,size_t __n)\n\n{\n  char cVar1;\n  uint *puVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  \n  puVar3 = (uint *)__dest;\n  if (((((uint)__dest | (uint)__src) & 3) == 0) && (puVar2 = (uint *)__src, 3 < __n)) {\n    do {\n      __src = (char *)(puVar2 + 1);\n      uVar5 = *puVar2;\n      if ((uVar5 + 0xfefefeff & ~uVar5 & 0x80808080) != 0) goto LAB_0800979c;\n      __n = __n - 4;\n      puVar2 = puVar3 + 1;\n      *puVar3 = uVar5;\n      puVar3 = puVar2;\n      puVar2 = (uint *)__src;\n    } while (3 < __n);\n  }\n  puVar2 = (uint *)__src;\n  if (__n != 0) {\nLAB_0800979c:\n    cVar1 = *(char *)puVar2;\n    *(char *)puVar3 = cVar1;\n    while( true ) {\n      puVar3 = (uint *)((int)puVar3 + 1);\n      __n = __n - 1;\n      if (cVar1 == '\\0') break;\n      if (__n == 0) {\n        return __dest;\n      }\n      puVar2 = (uint *)((int)puVar2 + 1);\n      cVar1 = *(char *)puVar2;\n      *(char *)puVar3 = cVar1;\n    }\n    if (__n != 0) {\n      puVar2 = puVar3;\n      do {\n        puVar4 = (uint *)((int)puVar2 + 1);\n        *(char *)puVar2 = '\\0';\n        puVar2 = puVar4;\n      } while (puVar4 != (uint *)(__n + (int)puVar3));\n    }\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009768", 
            "calling": [
                "_svfprintf_r"
            ], 
            "imported": false, 
            "current_name": "strncpy"
        }, 
        "_fini": {
            "renaming": {}, 
            "code": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08009e74", 
            "calling": [
                "__libc_fini_array"
            ], 
            "imported": false, 
            "current_name": "_fini"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}