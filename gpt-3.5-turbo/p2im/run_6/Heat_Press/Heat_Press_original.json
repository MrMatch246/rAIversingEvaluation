{
    "functions": {
        "tickReset": {
            "renaming": {}, 
            "code": "\nvoid tickReset(void)\n\n{\n  int iVar1;\n  \n  if ((*(int *)PTR_ticks_000813a0 != -1) &&\n     (iVar1 = *(int *)PTR_ticks_000813a0 + -1, *(int *)PTR_ticks_000813a0 = iVar1, iVar1 == 0)) {\n    (*DAT_000813a4)();\n  }\n  return;\n}\n\n", 
            "called": [
                "banzai"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081388", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "tickReset"
        }, 
        "_read": {
            "renaming": {}, 
            "code": "\nint _read(int file_UNUSED,char *ptr_UNUSED,int len_UNUSED)\n\n{\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811c6", 
            "calling": [
                "_read_r"
            ], 
            "imported": false, 
            "current_name": "_read"
        }, 
        "iprintf": {
            "renaming": {}, 
            "code": "\nvoid iprintf(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uStack_c;\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  uStack_c = param_2;\n  uStack_8 = param_3;\n  uStack_4 = param_4;\n  _vfiprintf_r(*(int *)PTR__impure_ptr_00081df0,\n               *(undefined4 *)(*(int *)PTR__impure_ptr_00081df0 + 8),param_1,&uStack_c);\n  return;\n}\n\n", 
            "called": [
                "_vfiprintf_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081dcc", 
            "calling": [
                "_exit"
            ], 
            "imported": false, 
            "current_name": "iprintf"
        }, 
        "analogOutputInit": {
            "renaming": {}, 
            "code": "\nvoid analogOutputInit(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008120e", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "analogOutputInit"
        }, 
        "String": {
            "renaming": {}, 
            "code": "\nString * __thiscall String::String(String *this,char *cstr)\n\n{\n  size_t length;\n  \n  this->buffer = (char *)0x0;\n  this->capacity = 0;\n  this->len = 0;\n  if (cstr != (char *)0x0) {\n    length = strlen(cstr);\n    copy(this,cstr,length);\n  }\n  return this;\n}\n\n", 
            "called": [
                "strlen", 
                "copy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081682", 
            "calling": [
                "_GLOBAL__sub_I__ZN6ModbusC2Ev"
            ], 
            "imported": false, 
            "current_name": "String"
        }, 
        "__aeabi_cfcmpeq": {
            "renaming": {}, 
            "code": "\nundefined8 __aeabi_cfcmpeq(undefined4 param_1,undefined4 param_2)\n\n{\n  __cmpsf2();\n  return CONCAT44(param_2,param_1);\n}\n\n", 
            "called": [
                "__cmpsf2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081c5c", 
            "calling": [
                "__aeabi_fcmpeq", 
                "__aeabi_fcmple", 
                "__aeabi_cfrcmple", 
                "__aeabi_fcmplt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfcmpeq"
        }, 
        "strcpy": {
            "renaming": {}, 
            "code": "\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char cVar1;\n  ushort uVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint *puVar8;\n  char *pcVar9;\n  bool bVar10;\n  \n  pcVar9 = __dest;\n  if ((((uint)__dest ^ (uint)__src) & 3) != 0) {\n    do {\n      cVar1 = *__src;\n      *pcVar9 = cVar1;\n      __src = __src + 1;\n      pcVar9 = pcVar9 + 1;\n    } while (cVar1 != '\\0');\n    return __dest;\n  }\n  puVar8 = (uint *)__dest;\n  if (((uint)__src & 3) != 0) {\n    puVar4 = (uint *)__src;\n    if (((uint)__src & 1) != 0) {\n      puVar4 = (uint *)(__src + 1);\n      cVar1 = *__src;\n      puVar8 = (uint *)(__dest + 1);\n      *__dest = cVar1;\n      if (cVar1 == '\\0') {\n        return __dest;\n      }\n    }\n    __src = (char *)puVar4;\n    if (((uint)puVar4 & 2) != 0) {\n      __src = (char *)((int)puVar4 + 2);\n      uVar2 = *(ushort *)puVar4;\n      bVar10 = (uVar2 & 0xff) == 0;\n      if (bVar10) {\n        *(char *)puVar8 = (char)uVar2;\n      }\n      else {\n        *(ushort *)puVar8 = uVar2;\n        bVar10 = (uVar2 & 0xff00) == 0;\n        puVar8 = (uint *)((int)puVar8 + 2);\n      }\n      if (bVar10) {\n        return __dest;\n      }\n    }\n  }\n  uVar5 = *(uint *)__src;\n  puVar4 = (uint *)((int)__src + 4);\n  puVar7 = puVar8;\n  if (((uint)__src & 4) != 0) {\n    if ((uVar5 + 0xfefefeff & ~uVar5 & 0x80808080) != 0) goto LAB_000829f8;\n    puVar7 = puVar8 + 1;\n    *puVar8 = uVar5;\n    puVar4 = (uint *)((int)__src + 8);\n    uVar5 = *(uint *)((int)__src + 4);\n  }\n  while( true ) {\n    puVar3 = puVar4 + 1;\n    uVar6 = *puVar4;\n    puVar8 = puVar7;\n    if ((uVar5 + 0xfefefeff & ~uVar5 & 0x80808080) != 0) break;\n    puVar8 = puVar7 + 1;\n    *puVar7 = uVar5;\n    uVar5 = uVar6;\n    if ((uVar6 + 0xfefefeff & ~uVar6 & 0x80808080) != 0) break;\n    puVar4 = puVar4 + 2;\n    uVar5 = *puVar3;\n    puVar7 = puVar7 + 2;\n    *puVar8 = uVar6;\n  }\nLAB_000829f8:\n  do {\n    *(char *)puVar8 = (char)uVar5;\n    uVar6 = uVar5 & 0xff;\n    uVar5 = uVar5 >> 8 | uVar5 << 0x18;\n    puVar8 = (uint *)((int)puVar8 + 1);\n  } while (uVar6 != 0);\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082994", 
            "calling": [
                "copy"
            ], 
            "imported": false, 
            "current_name": "strcpy"
        }, 
        "serialEvent": {
            "renaming": {}, 
            "code": "\nvoid serialEvent(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080aa8", 
            "calling": [
                "serialEventRun"
            ], 
            "imported": false, 
            "current_name": "serialEvent"
        }, 
        "__false": {
            "renaming": {}, 
            "code": "\nint __false(void)\n\n{\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081184", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "__false"
        }, 
        "pmc_disable_periph_clk": {
            "renaming": {}, 
            "code": "\nundefined4 pmc_disable_periph_clk(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 < 0x2d) {\n    if (param_1 < 0x20) {\n      uVar1 = 1 << (param_1 & 0xff);\n      uVar2 = *(uint *)(DAT_00080e98 + 0x18) & uVar1;\n      if (uVar2 == uVar1) {\n        *(uint *)(DAT_00080e98 + 0x14) = uVar2;\n      }\n    }\n    else {\n      uVar1 = 1 << (param_1 - 0x20 & 0xff);\n      uVar2 = *(uint *)(DAT_00080e98 + 0x108) & uVar1;\n      if (uVar2 == uVar1) {\n        *(uint *)(DAT_00080e98 + 0x104) = uVar2;\n      }\n    }\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080e5c", 
            "calling": [
                "end", 
                "pinMode"
            ], 
            "imported": false, 
            "current_name": "pmc_disable_periph_clk"
        }, 
        "USART1_Handler": {
            "renaming": {}, 
            "code": "\nvoid USART1_Handler(void)\n\n{\n  UARTClass::IrqHandler((UARTClass *)PTR_Serial2_00080ad4);\n  return;\n}\n\n", 
            "called": [
                "IrqHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080acc", 
            "calling": [], 
            "imported": false, 
            "current_name": "USART1_Handler"
        }, 
        "PIOC_Handler": {
            "renaming": {}, 
            "code": "\nvoid PIOC_Handler(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(DAT_00081124 + 0x4c);\n  while( true ) {\n    uVar1 = count_leading_zeroes(uVar2);\n    if (0x1f < (uVar1 & 0xff)) break;\n    uVar1 = 0x1f - (uVar1 & 0xff) & 0xff;\n    if (*(code **)(PTR_callbacksPioC_00081128 + uVar1 * 4) != (code *)0x0) {\n      (**(code **)(PTR_callbacksPioC_00081128 + uVar1 * 4))();\n    }\n    uVar2 = uVar2 & ~(1 << uVar1);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000810f4", 
            "calling": [], 
            "imported": false, 
            "current_name": "PIOC_Handler"
        }, 
        "frame_dummy": {
            "renaming": {}, 
            "code": "\nvoid frame_dummy(undefined4 param_1,undefined *param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  if (DAT_00080134 != 0) {\n    param_2 = PTR_object_7862_0008013c;\n  }\n  if ((*(int *)PTR__etext_00080140 != 0) && (DAT_00080144 != (code *)0x0)) {\n    (*DAT_00080144)(PTR__etext_00080140,param_2,param_3,DAT_00080144,param_4);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080118", 
            "calling": [
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "frame_dummy"
        }, 
        "adc_configure_trigger": {
            "renaming": {}, 
            "code": "\nvoid adc_configure_trigger(int param_1,uint param_2,uint param_3)\n\n{\n  *(uint *)(param_1 + 4) = param_2 | *(uint *)(param_1 + 4) | (param_3 & 1) << 7;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081034", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "adc_configure_trigger"
        }, 
        "write": {
            "renaming": {}, 
            "code": "\n/* WARNING: Heritage AFTER dead removal. Example location: r0 : 0x000816f6 */\n/* WARNING: Restarted to delay deadcode elimination for space: register */\n/* WARNING: Exceeded maximum restarts with more pending */\n\nsize_t __thiscall Print::write(Print *this,uint8_t *buffer,size_t size)\n\n{\n  Print *pPVar1;\n  size_t sVar2;\n  \n  sVar2 = 0;\n  pPVar1 = this;\n  while ((sVar2 != size &&\n         (pPVar1 = (Print *)(**this->_vptr_Print)(pPVar1,(uint)buffer[sVar2]),\n         pPVar1 != (Print *)0x0))) {\n    sVar2 = sVar2 + 1;\n  }\n  return sVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000816e0", 
            "calling": [], 
            "imported": false, 
            "current_name": "write"
        }, 
        "store_char": {
            "renaming": {}, 
            "code": "\nvoid __thiscall RingBuffer::store_char(RingBuffer *this,uint8_t c)\n\n{\n  uint uVar1;\n  \n  uVar1 = this->_iHead + 1U & 0x7f;\n  if (uVar1 != this->_iTail) {\n    this->_aucBuffer[this->_iHead] = c;\n    this->_iHead = uVar1;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000813c2", 
            "calling": [
                "IrqHandler"
            ], 
            "imported": false, 
            "current_name": "store_char"
        }, 
        "_vfiprintf_r": {
            "renaming": {}, 
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nbyte * _vfiprintf_r(int param_1,int param_2,byte *******param_3,int **param_4)\n\n{\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  char cVar4;\n  bool bVar5;\n  undefined *puVar6;\n  int iVar7;\n  byte *pbVar8;\n  byte ********ppppppppbVar9;\n  int *piVar10;\n  int iVar11;\n  byte **ppbVar12;\n  char cVar13;\n  byte *******pppppppbVar14;\n  uint uVar15;\n  int **ppiVar16;\n  uint uVar17;\n  uint uVar18;\n  byte *******pppppppbVar19;\n  byte *******pppppppbVar20;\n  byte ********ppppppppbVar21;\n  byte *******pppppppbVar22;\n  int *piVar23;\n  byte *******pppppppbVar24;\n  byte *******pppppppbVar25;\n  uint uVar26;\n  int *piVar27;\n  undefined4 uVar28;\n  byte ********__s;\n  bool bVar29;\n  longlong lVar30;\n  byte *******local_dc;\n  byte *******local_d4;\n  int **local_c8;\n  byte *local_c4;\n  undefined *local_c0;\n  char local_a1;\n  undefined local_a0;\n  undefined local_9f;\n  byte ********local_9c;\n  byte *******local_98;\n  byte *******local_94;\n  undefined local_90;\n  char cStack_6a;\n  undefined local_69;\n  undefined local_68 [4];\n  byte *******local_64 [16];\n  \n  if ((param_1 != 0) && (*(int *)(param_1 + 0x38) == 0)) {\n    __sinit();\n  }\n  uVar17 = (uint)*(ushort *)(param_2 + 0xc);\n  if (-1 < (int)((uint)*(ushort *)(param_2 + 0xc) << 0x12)) {\n    uVar17 = uVar17 | 0x2000;\n    *(short *)(param_2 + 0xc) = (short)uVar17;\n    *(uint *)(param_2 + 100) = *(uint *)(param_2 + 100) & 0xffffdfff;\n  }\n  if (((int)(uVar17 << 0x1c) < 0) && (*(int *)(param_2 + 0x10) != 0)) {\n    if ((uVar17 & 0x1a) != 10) goto LAB_00082b8a;\n  }\n  else {\n    iVar11 = __swsetup_r(param_1,param_2);\n    if (iVar11 != 0) {\n      return (byte *)0xffffffff;\n    }\n    if ((*(ushort *)(param_2 + 0xc) & 0x1a) != 10) goto LAB_00082b8a;\n  }\n  if (-1 < *(short *)(param_2 + 0xe)) {\n    pbVar8 = (byte *)__sbprintf(param_1,param_2,param_3,param_4);\n    return pbVar8;\n  }\nLAB_00082b8a:\n  local_c0 = (undefined *)0x0;\n  local_94 = (byte *******)0x0;\n  local_98 = (byte *******)0x0;\n  local_c4 = (byte *)0x0;\n  ppppppppbVar9 = (byte ********)local_68;\n  local_c8 = param_4;\n  local_9c = (byte ********)local_68;\nLAB_00082b9e:\n  pppppppbVar14 = param_3;\n  if ((*(byte *)param_3 != 0) && (*(byte *)param_3 != 0x25)) {\n    do {\n      pppppppbVar14 = (byte *******)((int)pppppppbVar14 + 1);\n      if (*(byte *)pppppppbVar14 == 0) break;\n    } while (*(byte *)pppppppbVar14 != 0x25);\n    pppppppbVar25 = (byte *******)((int)pppppppbVar14 - (int)param_3);\n    if (pppppppbVar25 != (byte *******)0x0) {\n      local_98 = (byte *******)((int)local_98 + 1);\n      local_94 = (byte *******)((int)local_94 + (int)pppppppbVar25);\n      *ppppppppbVar9 = param_3;\n      ppppppppbVar9[1] = pppppppbVar25;\n      if ((int)local_98 < 8) {\n        ppppppppbVar9 = ppppppppbVar9 + 2;\n      }\n      else {\n        if (local_94 == (byte *******)0x0) {\n          local_c4 = local_c4 + (int)pppppppbVar25;\n          ppppppppbVar9 = (byte ********)local_68;\n          local_98 = local_94;\n          goto LAB_00082bee;\n        }\n        iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n        ppppppppbVar9 = (byte ********)local_68;\n        if (iVar11 != 0) goto LAB_000833de;\n      }\n      local_c4 = local_c4 + (int)pppppppbVar25;\n    }\n  }\nLAB_00082bee:\n  if (*(byte *)pppppppbVar14 != 0) {\n    local_a1 = '\\0';\n    uVar18 = (uint)*(byte *)((int)pppppppbVar14 + 1);\n    uVar17 = 0;\n    bVar5 = false;\n    bVar2 = false;\n    bVar1 = false;\n    bVar3 = false;\n    bVar29 = false;\n    pppppppbVar25 = (byte *******)0x0;\n    local_d4 = (byte *******)0xffffffff;\n    param_3 = (byte *******)((int)pppppppbVar14 + 1);\nLAB_00082c12:\n    param_3 = (byte *******)((int)param_3 + 1);\nLAB_00082c16:\n    switch(uVar18) {\n    case 0x20:\n      goto switchD_00082c20_caseD_20;\n    default:\n      if (uVar18 != 0) {\n        local_dc = (byte *******)0x1;\n        local_d4 = (byte *******)0x1;\n        __s = (byte ********)&local_90;\n        local_90 = (char)uVar18;\n        goto LAB_00083012;\n      }\n      goto LAB_000833d0;\n    case 0x23:\n      bVar3 = true;\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2a:\n      pppppppbVar25 = (byte *******)*local_c8;\n      local_c8 = local_c8 + 1;\n      if ((int)pppppppbVar25 < 0) {\n        pppppppbVar25 = (byte *******)-(int)pppppppbVar25;\n        goto switchD_00082c20_caseD_2d;\n      }\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2b:\n      uVar18 = (uint)*(byte *)param_3;\n      local_a1 = '+';\n      goto LAB_00082c12;\n    case 0x2d:\nswitchD_00082c20_caseD_2d:\n      uVar17 = uVar17 | 4;\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x2e:\n      uVar18 = (uint)*(byte *)param_3;\n      pppppppbVar14 = (byte *******)((int)param_3 + 1);\n      if (uVar18 == 0x2a) {\n        uVar18 = (uint)*(byte *)((int)param_3 + 1);\n        local_d4 = (byte *******)*local_c8;\n        local_c8 = local_c8 + 1;\n        param_3 = pppppppbVar14;\n        if ((int)local_d4 < 0) {\n          local_d4 = (byte *******)0xffffffff;\n        }\n        goto LAB_00082c12;\n      }\n      uVar15 = uVar18 - 0x30;\n      if (uVar15 < 10) {\n        uVar26 = 0;\n        do {\n          param_3 = (byte *******)((int)pppppppbVar14 + 1);\n          uVar18 = (uint)*(byte *)pppppppbVar14;\n          uVar26 = uVar15 + uVar26 * 10;\n          uVar15 = uVar18 - 0x30;\n          pppppppbVar14 = param_3;\n        } while (uVar15 < 10);\n        local_d4 = (byte *******)(uVar26 | (int)uVar26 >> 0x1f);\n      }\n      else {\n        local_d4 = (byte *******)0x0;\n        param_3 = pppppppbVar14;\n      }\n      goto LAB_00082c16;\n    case 0x30:\n      uVar17 = uVar17 | 0x80;\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n      goto switchD_00082c20_caseD_31;\n    case 0x44:\n      bVar2 = true;\n      if (bVar1 == false) goto LAB_00083028;\nLAB_00082e98:\n      local_c8 = (int **)((int)local_c8 + 7U & 0xfffffff8);\n      piVar23 = *local_c8;\n      piVar27 = local_c8[1];\n      local_c8 = local_c8 + 2;\n      goto LAB_00082eac;\n    case 0x4f:\n      bVar2 = true;\n      if (bVar1 != false) goto LAB_00082d42;\nLAB_00082f2a:\n      iVar11 = (uint)bVar2 << 4;\n      iVar7 = (uint)bVar1 << 5;\n      if ((bVar2 == 0) && (iVar7 = (uint)bVar29 << 6, bVar29 != 0)) {\n        piVar23 = (int *)(uint)*(ushort *)local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)0x0;\n      }\n      else {\n        iVar11 = iVar7;\n        piVar23 = *local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)0x0;\n      }\n      break;\n    case 0x55:\n      bVar2 = true;\n      if (bVar1 != false) goto LAB_00082e62;\nLAB_00082f7c:\n      if ((bVar2) || (bVar29 == false)) {\n        iVar11 = 1;\n        piVar23 = *local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)0x0;\n      }\n      else {\n        piVar27 = (int *)0x0;\n        piVar23 = (int *)(uint)*(ushort *)local_c8;\n        local_c8 = local_c8 + 1;\n        iVar11 = 1;\n      }\n      break;\n    case 0x58:\n      local_c0 = PTR_s_0123456789ABCDEF_000830ec;\n      if (bVar1 == false) goto LAB_00083196;\nLAB_00082fb6:\n      ppiVar16 = (int **)((int)local_c8 + 7U & 0xfffffff8);\n      local_c8 = ppiVar16 + 2;\n      piVar23 = *ppiVar16;\n      piVar27 = ppiVar16[1];\n      goto LAB_00082fca;\n    case 99:\n      piVar23 = *local_c8;\n      local_c8 = local_c8 + 1;\n      local_dc = (byte *******)0x1;\n      local_90 = SUB41(piVar23,0);\n      local_d4 = (byte *******)0x1;\n      __s = (byte ********)&local_90;\n      goto LAB_00083012;\n    case 100:\n    case 0x69:\n      if (bVar1 != false) goto LAB_00082e98;\nLAB_00083028:\n      if ((bVar2 == false) && (bVar29 != false)) {\n        piVar23 = (int *)(int)*(short *)local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)((int)piVar23 >> 0x1f);\n      }\n      else {\n        piVar23 = *local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)((int)piVar23 >> 0x1f);\n      }\nLAB_00082eac:\n      if ((int)piVar27 < 0) {\n        bVar29 = piVar23 != (int *)0x0;\n        piVar23 = (int *)-(int)piVar23;\n        piVar27 = (int *)(-(int)piVar27 - (uint)bVar29);\n        local_a1 = '-';\n        cVar4 = '-';\n        iVar11 = 1;\n        goto LAB_00082d6a;\n      }\n      if (-1 < (int)local_d4) {\n        uVar17 = uVar17 & 0xffffff7f;\n      }\n      bVar5 = false;\n      uVar18 = (uint)piVar23 | (uint)piVar27;\n      iVar11 = 1;\n      cVar4 = local_a1;\n      goto joined_r0x00082d78;\n    case 0x68:\n      bVar29 = true;\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x6c:\n      uVar18 = (uint)*(byte *)param_3;\n      if (uVar18 == 0x6c) {\n        bVar1 = true;\n        uVar18 = (uint)*(byte *)((int)param_3 + 1);\n        param_3 = (byte *******)((int)param_3 + 1);\n      }\n      else {\n        bVar2 = true;\n      }\n      goto LAB_00082c12;\n    case 0x6e:\n      if (bVar1 == false) {\n        if (bVar2 == false) {\n          if (bVar29) {\n            piVar23 = *local_c8;\n            local_c8 = local_c8 + 1;\n            *(short *)piVar23 = (short)local_c4;\n          }\n          else {\n            ppbVar12 = (byte **)*local_c8;\n            local_c8 = local_c8 + 1;\n            *ppbVar12 = local_c4;\n          }\n        }\n        else {\n          ppbVar12 = (byte **)*local_c8;\n          local_c8 = local_c8 + 1;\n          *ppbVar12 = local_c4;\n        }\n      }\n      else {\n        ppbVar12 = (byte **)*local_c8;\n        local_c8 = local_c8 + 1;\n        *ppbVar12 = local_c4;\n        ppbVar12[1] = (byte *)((int)local_c4 >> 0x1f);\n      }\n      goto LAB_00082b9e;\n    case 0x6f:\n      if (bVar1 == false) goto LAB_00082f2a;\nLAB_00082d42:\n      ppiVar16 = (int **)((int)local_c8 + 7U & 0xfffffff8);\n      local_c8 = ppiVar16 + 2;\n      piVar23 = *ppiVar16;\n      piVar27 = ppiVar16[1];\n      iVar11 = 0;\n      break;\n    case 0x70:\n      local_c0 = PTR_s_0123456789abcdef_000833c4;\n      piVar23 = *local_c8;\n      local_c8 = local_c8 + 1;\n      local_9f = 0x78;\n      bVar5 = true;\n      piVar27 = (int *)0x0;\n      local_a0 = 0x30;\n      iVar11 = 2;\n      break;\n    case 0x71:\n      bVar1 = true;\n      uVar18 = (uint)*(byte *)param_3;\n      goto LAB_00082c12;\n    case 0x73:\n      __s = (byte ********)*local_c8;\n      local_a1 = '\\0';\n      local_c8 = local_c8 + 1;\n      if (__s != (byte ********)0x0) {\n        if ((int)local_d4 < 0) {\n          local_d4 = (byte *******)strlen((char *)__s);\n          pppppppbVar14 = (byte *******)0x0;\n          cVar4 = local_a1;\n        }\n        else {\n          pppppppbVar14 = (byte *******)memchr(__s,0,(size_t)local_d4);\n          cVar4 = local_a1;\n          if (pppppppbVar14 != (byte *******)0x0) {\n            pppppppbVar20 = (byte *******)((int)pppppppbVar14 - (int)__s);\n            if ((int)local_d4 <= (int)(byte *******)((int)pppppppbVar14 - (int)__s)) {\n              pppppppbVar20 = local_d4;\n            }\n            pppppppbVar14 = (byte *******)0x0;\n            local_d4 = pppppppbVar20;\n          }\n        }\n        goto LAB_00082da0;\n      }\n      if ((byte *******)0x5 < local_d4) {\n        local_d4 = (byte *******)0x6;\n      }\n      local_dc = (byte *******)((uint)local_d4 & ~((int)local_d4 >> 0x1f));\n      __s = (byte ********)PTR_s__null__00083784;\nLAB_00083012:\n      local_a1 = '\\0';\n      pppppppbVar14 = (byte *******)0x0;\n      goto LAB_00082dba;\n    case 0x75:\n      if (!bVar1) goto LAB_00082f7c;\nLAB_00082e62:\n      ppiVar16 = (int **)((int)local_c8 + 7U & 0xfffffff8);\n      local_c8 = ppiVar16 + 2;\n      piVar23 = *ppiVar16;\n      piVar27 = ppiVar16[1];\n      iVar11 = 1;\n      break;\n    case 0x78:\n      local_c0 = PTR_s_0123456789abcdef_000833c4;\n      if (bVar1 != false) goto LAB_00082fb6;\nLAB_00083196:\n      if ((bVar2 == false) && (bVar29 != false)) {\n        piVar27 = (int *)0x0;\n        piVar23 = (int *)(uint)*(ushort *)local_c8;\n        local_c8 = local_c8 + 1;\n      }\n      else {\n        piVar23 = *local_c8;\n        local_c8 = local_c8 + 1;\n        piVar27 = (int *)0x0;\n      }\nLAB_00082fca:\n      if ((bVar3) && (((uint)piVar23 | (uint)piVar27) != 0)) {\n        bVar5 = true;\n        local_a0 = 0x30;\n        iVar11 = 2;\n        local_9f = (char)uVar18;\n      }\n      else {\n        iVar11 = 2;\n      }\n    }\n    local_a1 = '\\0';\n    cVar4 = '\\0';\nLAB_00082d6a:\n    if (-1 < (int)local_d4) {\n      uVar17 = uVar17 & 0xffffff7f;\n    }\n    uVar18 = (uint)piVar23 | (uint)piVar27;\njoined_r0x00082d78:\n    lVar30 = CONCAT44(piVar27,piVar23);\n    pppppppbVar14 = local_d4;\n    if ((uVar18 == 0) && (local_d4 == (byte *******)0x0)) {\n      __s = (byte ********)local_68;\n      if ((iVar11 != 0) || (!bVar3)) goto LAB_00082da0;\n      __s = (byte ********)(&cStack_6a + 1);\n      local_69 = '0';\n      goto LAB_00082d9a;\n    }\n    if (iVar11 == 1) {\n      if (piVar27 != (int *)0x0 || (int *)0x9 < piVar23) {\n        ppppppppbVar21 = (byte ********)(&cStack_6a + 1);\n        do {\n          __s = ppppppppbVar21;\n          uVar28 = (undefined4)((ulonglong)lVar30 >> 0x20);\n          cVar13 = '\\n';\n          __aeabi_uldivmod((int)lVar30,uVar28,10,0);\n          *(char *)__s = cVar13 + '0';\n          lVar30 = __aeabi_uldivmod((int)lVar30,uVar28,10,0);\n          ppppppppbVar21 = (byte ********)((int)__s + -1);\n        } while (lVar30 != 0);\n        local_d4 = (byte *******)((int)local_68 - (int)__s);\n        goto LAB_00082da0;\n      }\n      local_69 = (char)piVar23 + '0';\n      __s = (byte ********)(&cStack_6a + 1);\n      goto LAB_0008351e;\n    }\n    ppppppppbVar21 = (byte ********)(&cStack_6a + 1);\n    if (iVar11 != 2) goto LAB_0008337e;\n    do {\n      __s = ppppppppbVar21;\n      uVar18 = (uint)piVar23 & 0xf;\n      piVar23 = (int *)((uint)piVar23 >> 4 | (int)piVar27 << 0x1c);\n      piVar27 = (int *)((uint)piVar27 >> 4);\n      *(undefined *)__s = local_c0[uVar18];\n      ppppppppbVar21 = (byte ********)((int)__s + -1);\n    } while (((uint)piVar23 | (uint)piVar27) != 0);\n    local_d4 = (byte *******)((int)local_68 - (int)__s);\n    goto LAB_00082da0;\n  }\nLAB_000833d0:\n  if (local_94 != (byte *******)0x0) {\n    __sprint_r_part_0(param_1,param_2,&local_9c);\n  }\nLAB_000833de:\n  if ((int)((uint)*(ushort *)(param_2 + 0xc) << 0x19) < 0) {\n    return (byte *)0xffffffff;\n  }\n  return local_c4;\nLAB_0008337e:\n  do {\n    __s = ppppppppbVar21;\n    piVar10 = (int *)((uint)piVar23 >> 3 | (int)piVar27 << 0x1d);\n    piVar27 = (int *)((uint)piVar27 >> 3);\n    iVar11 = ((uint)piVar23 & 7) + 0x30;\n    *(char *)__s = (char)iVar11;\n    ppppppppbVar21 = (byte ********)((int)__s + -1);\n    piVar23 = piVar10;\n  } while (((uint)piVar10 | (uint)piVar27) != 0);\n  if (bVar3) {\n    if (iVar11 == 0x30) {\nLAB_00082d9a:\n      local_d4 = (byte *******)((int)local_68 - (int)__s);\n    }\n    else {\n      *(undefined *)((int)__s + -1) = 0x30;\n      __s = ppppppppbVar21;\n      local_d4 = (byte *******)((int)local_68 - (int)ppppppppbVar21);\n    }\n  }\n  else {\nLAB_0008351e:\n    local_d4 = (byte *******)((int)local_68 - (int)__s);\n  }\nLAB_00082da0:\n  local_dc = local_d4;\n  if ((int)local_d4 < (int)pppppppbVar14) {\n    local_dc = pppppppbVar14;\n  }\n  if (cVar4 != '\\0') {\n    local_dc = (byte *******)((int)local_dc + 1);\n  }\nLAB_00082dba:\n  pppppppbVar20 = (byte *******)PTR_blanks_6717_000830e8;\n  if (bVar5) {\n    local_dc = (byte *******)((int)local_dc + 2);\n  }\n  if ((uVar17 == 0) &&\n     (pppppppbVar22 = (byte *******)((int)pppppppbVar25 - (int)local_dc), 0 < (int)pppppppbVar22)) {\n    if ((int)pppppppbVar22 < 0x11) {\n      pppppppbVar19 = (byte *******)((int)local_98 + 1);\n      pppppppbVar20 = (byte *******)PTR_blanks_6717_00083710;\n    }\n    else {\n      do {\n        pppppppbVar24 = pppppppbVar22;\n        pppppppbVar22 = (byte *******)((int)local_98 + 1);\n        local_94 = local_94 + 4;\n        *ppppppppbVar9 = pppppppbVar20;\n        ppppppppbVar9[1] = (byte *******)0x10;\n        if ((int)pppppppbVar22 < 8) {\n          pppppppbVar19 = (byte *******)((int)local_98 + 2);\n          ppppppppbVar9 = ppppppppbVar9 + 2;\n          local_98 = pppppppbVar22;\n        }\n        else if (local_94 == (byte *******)0x0) {\n          pppppppbVar19 = (byte *******)0x1;\n          ppppppppbVar9 = (byte ********)local_68;\n          local_98 = local_94;\n        }\n        else {\n          local_98 = pppppppbVar22;\n          iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n          if (iVar11 != 0) goto LAB_000833de;\n          pppppppbVar19 = (byte *******)((int)local_98 + 1);\n          ppppppppbVar9 = (byte ********)local_68;\n        }\n        pppppppbVar22 = pppppppbVar24 + -4;\n      } while (0x10 < (int)pppppppbVar22);\n      pppppppbVar22 = pppppppbVar24 + -4;\n    }\n    local_94 = (byte *******)((int)local_94 + (int)pppppppbVar22);\n    *ppppppppbVar9 = pppppppbVar20;\n    ppppppppbVar9[1] = pppppppbVar22;\n    local_98 = pppppppbVar19;\n    if ((int)pppppppbVar19 < 8) {\n      pppppppbVar19 = (byte *******)((int)pppppppbVar19 + 1);\n      ppppppppbVar9 = ppppppppbVar9 + 2;\n    }\n    else if (local_94 == (byte *******)0x0) {\n      pppppppbVar19 = (byte *******)0x1;\n      local_98 = local_94;\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n    else {\n      iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n      if (iVar11 != 0) goto LAB_000833de;\n      pppppppbVar19 = (byte *******)((int)local_98 + 1);\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n  }\n  else {\n    pppppppbVar19 = (byte *******)((int)local_98 + 1);\n  }\n  pppppppbVar20 = pppppppbVar19;\n  if (local_a1 != '\\0') {\n    local_94 = (byte *******)((int)local_94 + 1);\n    pppppppbVar20 = (byte *******)0x1;\n    *ppppppppbVar9 = (byte *******)&local_a1;\n    ppppppppbVar9[1] = (byte *******)0x1;\n    if ((int)pppppppbVar19 < 8) {\n      pppppppbVar20 = (byte *******)((int)pppppppbVar19 + 1);\n      local_98 = pppppppbVar19;\n      ppppppppbVar9 = ppppppppbVar9 + 2;\n    }\n    else {\n      local_98 = local_94;\n      ppppppppbVar9 = (byte ********)local_68;\n      if (local_94 != (byte *******)0x0) {\n        local_98 = pppppppbVar19;\n        iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n        if (iVar11 != 0) goto LAB_000833de;\n        pppppppbVar20 = (byte *******)((int)local_98 + 1);\n      }\n    }\n  }\n  pppppppbVar22 = pppppppbVar20;\n  pppppppbVar19 = local_98;\n  if (bVar5) {\n    local_94 = (byte *******)((int)local_94 + 2);\n    *ppppppppbVar9 = (byte *******)&local_a0;\n    ppppppppbVar9[1] = (byte *******)0x2;\n    if ((int)pppppppbVar20 < 8) {\n      pppppppbVar22 = (byte *******)((int)pppppppbVar20 + 1);\n      pppppppbVar19 = pppppppbVar20;\n      ppppppppbVar9 = ppppppppbVar9 + 2;\n    }\n    else if (local_94 == (byte *******)0x0) {\n      pppppppbVar22 = (byte *******)0x1;\n      pppppppbVar19 = local_94;\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n    else {\n      local_98 = pppppppbVar20;\n      iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n      if (iVar11 != 0) goto LAB_000833de;\n      pppppppbVar22 = (byte *******)((int)local_98 + 1);\n      pppppppbVar19 = local_98;\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n  }\n  puVar6 = PTR_zeroes_6718_0008370c;\n  pppppppbVar20 = pppppppbVar22;\n  if ((uVar17 == 0x80) &&\n     (pppppppbVar24 = (byte *******)((int)pppppppbVar25 - (int)local_dc), 0 < (int)pppppppbVar24)) {\n    if (0x10 < (int)pppppppbVar24) {\n      do {\n        while( true ) {\n          pppppppbVar20 = pppppppbVar24;\n          local_98 = (byte *******)((int)pppppppbVar19 + 1);\n          local_94 = local_94 + 4;\n          *ppppppppbVar9 = (byte *******)puVar6;\n          ppppppppbVar9[1] = (byte *******)0x10;\n          if (7 < (int)local_98) break;\n          pppppppbVar22 = (byte *******)((int)pppppppbVar19 + 2);\n          ppppppppbVar9 = ppppppppbVar9 + 2;\nLAB_0008348e:\n          pppppppbVar19 = local_98;\n          pppppppbVar24 = pppppppbVar20 + -4;\n          if ((int)(pppppppbVar20 + -4) < 0x11) goto LAB_000834b4;\n        }\n        if (local_94 != (byte *******)0x0) {\n          iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n          if (iVar11 == 0) {\n            pppppppbVar22 = (byte *******)((int)local_98 + 1);\n            ppppppppbVar9 = (byte ********)local_68;\n            goto LAB_0008348e;\n          }\n          goto LAB_000833de;\n        }\n        pppppppbVar22 = (byte *******)0x1;\n        pppppppbVar19 = local_94;\n        pppppppbVar24 = pppppppbVar20 + -4;\n        ppppppppbVar9 = (byte ********)local_68;\n      } while (0x10 < (int)(pppppppbVar20 + -4));\nLAB_000834b4:\n      pppppppbVar24 = pppppppbVar20 + -4;\n    }\n    local_94 = (byte *******)((int)local_94 + (int)pppppppbVar24);\n    *ppppppppbVar9 = (byte *******)puVar6;\n    ppppppppbVar9[1] = pppppppbVar24;\n    if ((int)pppppppbVar22 < 8) {\n      pppppppbVar20 = (byte *******)((int)pppppppbVar22 + 1);\n      pppppppbVar19 = pppppppbVar22;\n      ppppppppbVar9 = ppppppppbVar9 + 2;\n    }\n    else if (local_94 == (byte *******)0x0) {\n      pppppppbVar20 = (byte *******)0x1;\n      pppppppbVar19 = local_94;\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n    else {\n      local_98 = pppppppbVar22;\n      iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n      if (iVar11 != 0) goto LAB_000833de;\n      pppppppbVar20 = (byte *******)((int)local_98 + 1);\n      pppppppbVar19 = local_98;\n      ppppppppbVar9 = (byte ********)local_68;\n    }\n  }\n  puVar6 = PTR_zeroes_6718_000833c8;\n  pppppppbVar14 = (byte *******)((int)pppppppbVar14 - (int)local_d4);\n  ppppppppbVar21 = (byte ********)local_68;\n  if ((int)pppppppbVar14 < 1) {\nLAB_000832c6:\n    local_94 = (byte *******)((int)local_94 + (int)local_d4);\n    *ppppppppbVar9 = (byte *******)__s;\n    ppppppppbVar9[1] = local_d4;\n    local_d4 = local_94;\n    local_98 = pppppppbVar20;\n    if ((int)pppppppbVar20 < 8) goto LAB_0008345a;\n    local_98 = local_94;\n    if ((local_94 != (byte *******)0x0) &&\n       (local_98 = pppppppbVar20, iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c), iVar11 != 0\n       )) goto LAB_000833de;\n  }\n  else {\n    if (0x10 < (int)pppppppbVar14) {\n      do {\n        while( true ) {\n          pppppppbVar22 = pppppppbVar14;\n          local_98 = (byte *******)((int)pppppppbVar19 + 1);\n          local_94 = local_94 + 4;\n          *ppppppppbVar9 = (byte *******)puVar6;\n          ppppppppbVar9[1] = (byte *******)0x10;\n          if (7 < (int)local_98) break;\n          pppppppbVar20 = (byte *******)((int)pppppppbVar19 + 2);\n          ppppppppbVar9 = ppppppppbVar9 + 2;\nLAB_00083282:\n          pppppppbVar19 = local_98;\n          pppppppbVar14 = pppppppbVar22 + -4;\n          if ((int)(pppppppbVar22 + -4) < 0x11) goto LAB_000832aa;\n        }\n        if (local_94 != (byte *******)0x0) {\n          iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n          if (iVar11 == 0) {\n            pppppppbVar20 = (byte *******)((int)local_98 + 1);\n            ppppppppbVar9 = (byte ********)local_68;\n            goto LAB_00083282;\n          }\n          goto LAB_000833de;\n        }\n        pppppppbVar20 = (byte *******)0x1;\n        ppppppppbVar9 = (byte ********)local_68;\n        pppppppbVar19 = local_94;\n        pppppppbVar14 = pppppppbVar22 + -4;\n      } while (0x10 < (int)(pppppppbVar22 + -4));\nLAB_000832aa:\n      pppppppbVar14 = pppppppbVar22 + -4;\n    }\n    local_94 = (byte *******)((int)local_94 + (int)pppppppbVar14);\n    *ppppppppbVar9 = (byte *******)puVar6;\n    ppppppppbVar9[1] = pppppppbVar14;\n    if ((int)pppppppbVar20 < 8) {\n      pppppppbVar20 = (byte *******)((int)pppppppbVar20 + 1);\n      ppppppppbVar9 = ppppppppbVar9 + 2;\n      goto LAB_000832c6;\n    }\n    if (local_94 != (byte *******)0x0) {\n      local_98 = pppppppbVar20;\n      iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n      if (iVar11 != 0) goto LAB_000833de;\n      pppppppbVar20 = (byte *******)((int)local_98 + 1);\n      ppppppppbVar9 = (byte ********)local_68;\n      goto LAB_000832c6;\n    }\n    local_64[0] = local_d4;\n    local_98 = (byte *******)0x1;\n    ppppppppbVar9 = (byte ********)local_68;\n    local_68 = (undefined  [4])__s;\nLAB_0008345a:\n    ppppppppbVar21 = ppppppppbVar9 + 2;\n    local_94 = local_d4;\n  }\n  pppppppbVar14 = (byte *******)PTR_blanks_6717_000833cc;\n  if (((uVar17 & 4) != 0) &&\n     (pppppppbVar20 = (byte *******)((int)pppppppbVar25 - (int)local_dc), 0 < (int)pppppppbVar20)) {\n    pppppppbVar22 = local_98;\n    if ((int)pppppppbVar20 < 0x11) {\n      pppppppbVar19 = (byte *******)((int)local_98 + 1);\n      pppppppbVar14 = (byte *******)PTR_blanks_6717_00083788;\n    }\n    else {\n      do {\n        while( true ) {\n          local_98 = (byte *******)((int)pppppppbVar22 + 1);\n          local_94 = local_94 + 4;\n          *ppppppppbVar21 = pppppppbVar14;\n          ppppppppbVar21[1] = (byte *******)0x10;\n          if (7 < (int)local_98) break;\n          pppppppbVar19 = (byte *******)((int)pppppppbVar22 + 2);\n          ppppppppbVar21 = ppppppppbVar21 + 2;\nLAB_00083316:\n          pppppppbVar20 = pppppppbVar20 + -4;\n          pppppppbVar22 = local_98;\n          if ((int)pppppppbVar20 < 0x11) goto LAB_0008333e;\n        }\n        if (local_94 != (byte *******)0x0) {\n          iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n          if (iVar11 == 0) {\n            pppppppbVar19 = (byte *******)((int)local_98 + 1);\n            ppppppppbVar21 = (byte ********)local_68;\n            goto LAB_00083316;\n          }\n          goto LAB_000833de;\n        }\n        pppppppbVar20 = pppppppbVar20 + -4;\n        pppppppbVar19 = (byte *******)0x1;\n        pppppppbVar22 = local_94;\n        ppppppppbVar21 = (byte ********)local_68;\n      } while (0x10 < (int)pppppppbVar20);\n    }\nLAB_0008333e:\n    local_94 = (byte *******)((int)local_94 + (int)pppppppbVar20);\n    *ppppppppbVar21 = pppppppbVar14;\n    ppppppppbVar21[1] = pppppppbVar20;\n    local_98 = pppppppbVar19;\n    if (7 < (int)pppppppbVar19) {\n      if (local_94 == (byte *******)0x0) {\n        if ((int)local_dc < (int)pppppppbVar25) {\n          local_dc = pppppppbVar25;\n        }\n        local_c4 = local_c4 + (int)local_dc;\n        goto LAB_00083422;\n      }\n      iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c);\n      if (iVar11 != 0) goto LAB_000833de;\n    }\n  }\n  if ((int)local_dc < (int)pppppppbVar25) {\n    local_dc = pppppppbVar25;\n  }\n  local_c4 = local_c4 + (int)local_dc;\n  if ((local_94 != (byte *******)0x0) &&\n     (iVar11 = __sprint_r_part_0(param_1,param_2,&local_9c), iVar11 != 0)) goto LAB_000833de;\nLAB_00083422:\n  local_98 = (byte *******)0x0;\n  ppppppppbVar9 = (byte ********)local_68;\n  goto LAB_00082b9e;\nswitchD_00082c20_caseD_31:\n  uVar15 = uVar18 - 0x30;\n  pppppppbVar25 = (byte *******)0x0;\n  pppppppbVar14 = param_3;\n  do {\n    param_3 = (byte *******)((int)pppppppbVar14 + 1);\n    uVar18 = (uint)*(byte *)pppppppbVar14;\n    pppppppbVar25 = (byte *******)(uVar15 + (int)pppppppbVar25 * 10);\n    uVar15 = uVar18 - 0x30;\n    pppppppbVar14 = param_3;\n  } while (uVar15 < 10);\n  goto LAB_00082c16;\nswitchD_00082c20_caseD_20:\n  uVar18 = (uint)*(byte *)param_3;\n  if (local_a1 == '\\0') {\n    local_a1 = ' ';\n  }\n  goto LAB_00082c12;\n}\n\n", 
            "called": [
                "strlen", 
                "__sprint_r.part.0", 
                "memchr", 
                "__sinit", 
                "__swsetup_r", 
                "__sbprintf", 
                "__aeabi_uldivmod"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082b38", 
            "calling": [
                "iprintf", 
                "__sbprintf"
            ], 
            "imported": false, 
            "current_name": "_vfiprintf_r"
        }, 
        "init": {
            "renaming": {}, 
            "code": "\nvoid __thiscall UARTClass::init(UARTClass *this,uint32_t dwBaudRate,uint32_t modeReg)\n\n{\n  undefined *puVar1;\n  RingBuffer *pRVar2;\n  Uart *pUVar3;\n  \n  pmc_enable_periph_clk(this->_dwId);\n  pUVar3 = this->_pUart;\n  pUVar3->UART_PTCR = 0x202;\n  pUVar3->UART_CR = 0xac;\n  puVar1 = PTR_SystemCoreClock_00081570;\n  pUVar3->UART_MR = modeReg;\n  pUVar3->UART_BRGR = *(uint *)puVar1 / dwBaudRate >> 4;\n  pUVar3->UART_IDR = 0xffffffff;\n  pUVar3->UART_IER = 0x61;\n  *(int *)(DAT_00081574 + ((uint)(int)this->_dwIrq >> 5) * 4) =\n       1 << (uint)(byte)(this->_dwIrq & 0x1f);\n  pRVar2 = this->_rx_buffer;\n  pRVar2->_iTail = 0;\n  pRVar2->_iHead = 0;\n  pRVar2 = this->_tx_buffer;\n  pRVar2->_iTail = 0;\n  pRVar2->_iHead = 0;\n  pUVar3->UART_CR = 0x50;\n  return;\n}\n\n", 
            "called": [
                "pmc_enable_periph_clk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081508", 
            "calling": [
                "begin", 
                "begin"
            ], 
            "imported": false, 
            "current_name": "init"
        }, 
        "__sfp_lock_release": {
            "renaming": {}, 
            "code": "\nvoid __sfp_lock_release(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083c0c", 
            "calling": [
                "_fclose_r"
            ], 
            "imported": false, 
            "current_name": "__sfp_lock_release"
        }, 
        "__udivdi3": {
            "renaming": {}, 
            "code": "\nundefined8 __udivdi3(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  bool bVar11;\n  \n  if (param_4 == 0) {\n    if (param_3 <= param_2) {\n      if (param_3 == 0) {\n        param_3 = 1 / 0;\n      }\n      uVar9 = count_leading_zeroes(param_3);\n      if (uVar9 == 0) {\n        param_2 = param_2 - param_3;\n        uVar2 = param_3 >> 0x10;\n        uVar4 = param_3 & 0xffff;\n        uVar7 = 1;\n      }\n      else {\n        param_3 = param_3 << (uVar9 & 0xff);\n        uVar3 = param_2 >> (0x20 - uVar9 & 0xff);\n        uVar2 = param_3 >> 0x10;\n        uVar8 = uVar3 / uVar2;\n        uVar4 = param_3 & 0xffff;\n        uVar7 = uVar4 * uVar8;\n        uVar5 = param_1 >> (0x20 - uVar9 & 0xff) | param_2 << (uVar9 & 0xff);\n        uVar3 = uVar5 >> 0x10 | (uVar3 - uVar2 * uVar8) * 0x10000;\n        param_1 = param_1 << (uVar9 & 0xff);\n        uVar9 = uVar8;\n        if (uVar3 <= uVar7 && uVar7 - uVar3 != 0) {\n          bVar11 = CARRY4(uVar3,param_3);\n          uVar3 = uVar3 + param_3;\n          uVar9 = uVar8 - 1;\n          if ((bVar11 == false) && (uVar3 <= uVar7 && uVar7 - uVar3 != 0)) {\n            uVar9 = uVar8 - 2;\n            uVar3 = uVar3 + param_3;\n          }\n        }\n        uVar6 = (uVar3 - uVar7) / uVar2;\n        uVar8 = uVar4 * uVar6;\n        param_2 = uVar5 & 0xffff | ((uVar3 - uVar7) - uVar2 * uVar6) * 0x10000;\n        uVar7 = uVar6;\n        if (param_2 <= uVar8 && uVar8 - param_2 != 0) {\n          bVar11 = CARRY4(param_2,param_3);\n          param_2 = param_2 + param_3;\n          uVar7 = uVar6 - 1;\n          if ((bVar11 == false) && (param_2 <= uVar8 && uVar8 - param_2 != 0)) {\n            uVar7 = uVar6 - 2;\n            param_2 = param_2 + param_3;\n          }\n        }\n        param_2 = param_2 - uVar8;\n        uVar7 = uVar7 | uVar9 << 0x10;\n      }\n      uVar8 = param_2 / uVar2;\n      uVar3 = uVar4 * uVar8;\n      uVar5 = param_1 >> 0x10 | (param_2 - uVar2 * uVar8) * 0x10000;\n      uVar9 = uVar8;\n      if (uVar5 <= uVar3 && uVar3 - uVar5 != 0) {\n        bVar11 = CARRY4(uVar5,param_3);\n        uVar5 = uVar5 + param_3;\n        uVar9 = uVar8 - 1;\n        if ((bVar11 == false) && (uVar5 <= uVar3 && uVar3 - uVar5 != 0)) {\n          uVar9 = uVar8 - 2;\n          uVar5 = uVar5 + param_3;\n        }\n      }\n      uVar8 = (uVar5 - uVar3) / uVar2;\n      uVar4 = uVar4 * uVar8;\n      uVar5 = param_1 & 0xffff | ((uVar5 - uVar3) - uVar2 * uVar8) * 0x10000;\n      uVar2 = uVar8;\n      if (uVar5 <= uVar4 && uVar4 - uVar5 != 0) {\n        uVar2 = uVar8 - 1;\n        if ((CARRY4(uVar5,param_3) == false) &&\n           (uVar5 + param_3 <= uVar4 && uVar4 - (uVar5 + param_3) != 0)) {\n          uVar2 = uVar8 - 2;\n        }\n      }\n      return CONCAT44(uVar7,uVar2 | uVar9 << 0x10);\n    }\n    uVar9 = count_leading_zeroes(param_3);\n    if (uVar9 != 0) {\n      uVar7 = param_1 >> (0x20 - uVar9 & 0xff);\n      param_3 = param_3 << (uVar9 & 0xff);\n      param_1 = param_1 << (uVar9 & 0xff);\n      param_2 = uVar7 | param_2 << (uVar9 & 0xff);\n    }\n    uVar7 = param_3 >> 0x10;\n    uVar2 = param_2 / uVar7;\n    uVar4 = (param_3 & 0xffff) * uVar2;\n    uVar8 = param_1 >> 0x10 | (param_2 - uVar7 * uVar2) * 0x10000;\n    uVar9 = uVar2;\n    if (uVar8 <= uVar4 && uVar4 - uVar8 != 0) {\n      bVar11 = CARRY4(uVar8,param_3);\n      uVar8 = uVar8 + param_3;\n      uVar9 = uVar2 - 1;\n      if ((bVar11 == false) && (uVar8 <= uVar4 && uVar4 - uVar8 != 0)) {\n        uVar9 = uVar2 - 2;\n        uVar8 = uVar8 + param_3;\n      }\n    }\n    uVar5 = (uVar8 - uVar4) / uVar7;\n    uVar2 = (param_3 & 0xffff) * uVar5;\n    uVar4 = param_1 & 0xffff | ((uVar8 - uVar4) - uVar7 * uVar5) * 0x10000;\n    uVar7 = uVar5;\n    if (uVar4 <= uVar2 && uVar2 - uVar4 != 0) {\n      uVar7 = uVar5 - 1;\n      if ((CARRY4(uVar4,param_3) == false) &&\n         (uVar4 + param_3 <= uVar2 && uVar2 - (uVar4 + param_3) != 0)) {\n        uVar7 = uVar5 - 2;\n      }\n    }\n    uVar9 = uVar7 | uVar9 << 0x10;\n    uVar7 = 0;\n  }\n  else {\n    if (param_2 < param_4) {\n      return 0;\n    }\n    uVar9 = count_leading_zeroes(param_4);\n    if (uVar9 == 0) {\n      if ((param_4 < param_2) || (uVar7 = uVar9, param_3 <= param_1)) {\n        return 1;\n      }\n    }\n    else {\n      uVar2 = 0x20 - uVar9;\n      uVar7 = param_2 >> (uVar2 & 0xff);\n      uVar4 = param_4 << (uVar9 & 0xff) | param_3 >> (uVar2 & 0xff);\n      uVar8 = uVar4 >> 0x10;\n      uVar6 = uVar7 / uVar8;\n      uVar5 = (uVar4 & 0xffff) * uVar6;\n      uVar3 = param_1 >> (uVar2 & 0xff) | param_2 << (uVar9 & 0xff);\n      uVar2 = uVar3 >> 0x10 | (uVar7 - uVar8 * uVar6) * 0x10000;\n      uVar7 = uVar6;\n      if (uVar2 <= uVar5 && uVar5 - uVar2 != 0) {\n        bVar11 = CARRY4(uVar2,uVar4);\n        uVar2 = uVar2 + uVar4;\n        uVar7 = uVar6 - 1;\n        if ((bVar11 == false) && (uVar2 <= uVar5 && uVar5 - uVar2 != 0)) {\n          uVar7 = uVar6 - 2;\n          uVar2 = uVar2 + uVar4;\n        }\n      }\n      uVar6 = (uVar2 - uVar5) / uVar8;\n      uVar10 = (uVar4 & 0xffff) * uVar6;\n      uVar8 = uVar3 & 0xffff | ((uVar2 - uVar5) - uVar8 * uVar6) * 0x10000;\n      uVar2 = uVar6;\n      if (uVar8 <= uVar10 && uVar10 - uVar8 != 0) {\n        bVar11 = CARRY4(uVar8,uVar4);\n        uVar8 = uVar8 + uVar4;\n        uVar2 = uVar6 - 1;\n        if ((bVar11 == false) && (uVar8 <= uVar10 && uVar10 - uVar8 != 0)) {\n          uVar2 = uVar6 - 2;\n          uVar8 = uVar8 + uVar4;\n        }\n      }\n      uVar2 = uVar2 | uVar7 << 0x10;\n      lVar1 = (ulonglong)uVar2 * (ulonglong)(param_3 << (uVar9 & 0xff));\n      uVar7 = (uint)((ulonglong)lVar1 >> 0x20);\n      if ((uVar8 - uVar10 < uVar7) ||\n         ((uVar8 - uVar10 == uVar7 && (param_1 << (uVar9 & 0xff) < (uint)lVar1)))) {\n        uVar9 = uVar2 - 1;\n        uVar7 = 0;\n      }\n      else {\n        uVar9 = uVar2;\n        uVar7 = 0;\n      }\n    }\n  }\n  return CONCAT44(uVar7,uVar9);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084a80", 
            "calling": [
                "__gnu_uldivmod_helper"
            ], 
            "imported": false, 
            "current_name": "__udivdi3"
        }, 
        "USARTClass": {
            "renaming": {}, 
            "code": "\nUSARTClass * __thiscall\nUSARTClass::USARTClass\n          (USARTClass *this,Usart *pUsart,IRQn_Type dwIrq,uint32_t dwId,RingBuffer *pRx_buffer,\n          RingBuffer *pTx_buffer)\n\n{\n  UARTClass::UARTClass(&this->super_UARTClass,(Uart *)pUsart,dwIrq,dwId,pRx_buffer,pTx_buffer);\n  *(undefined **)&this->super_UARTClass = PTR_PTR_write_1_000815f4;\n  this->_pUsart = pUsart;\n  return this;\n}\n\n", 
            "called": [
                "UARTClass"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000815d4", 
            "calling": [
                "_GLOBAL__sub_I_g_APinDescription"
            ], 
            "imported": false, 
            "current_name": "USARTClass"
        }, 
        "pmc_enable_periph_clk": {
            "renaming": {}, 
            "code": "\nundefined4 pmc_enable_periph_clk(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 < 0x2d) {\n    if (param_1 < 0x20) {\n      uVar1 = 1 << (param_1 & 0xff);\n      if ((uVar1 & *(uint *)(DAT_00080e58 + 0x18)) != uVar1) {\n        *(uint *)(DAT_00080e58 + 0x10) = uVar1;\n      }\n    }\n    else {\n      uVar1 = 1 << (param_1 - 0x20 & 0xff);\n      if ((uVar1 & *(uint *)(DAT_00080e58 + 0x108)) != uVar1) {\n        *(uint *)(DAT_00080e58 + 0x100) = uVar1;\n      }\n    }\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080e18", 
            "calling": [
                "init", 
                "init", 
                "pinMode"
            ], 
            "imported": false, 
            "current_name": "pmc_enable_periph_clk"
        }, 
        "get_FC3": {
            "renaming": {}, 
            "code": "\nvoid __thiscall Modbus::get_FC3(Modbus *this)\n\n{\n  uint16_t uVar1;\n  uint uVar2;\n  byte bVar3;\n  uint uVar4;\n  uint16_t *puVar5;\n  \n  bVar3 = 0;\n  while( true ) {\n    uVar4 = (uint)bVar3;\n    bVar3 = bVar3 + 1;\n    uVar2 = uVar4 * 2 + 3 & 0xff;\n    if (this->au8Buffer[2] >> 1 <= uVar4) break;\n    puVar5 = this->au16regs;\n    uVar1 = makeWord(this->au8Buffer[uVar2],this->au8Buffer[uVar2 + 1]);\n    puVar5[uVar4] = uVar1;\n  }\n  return;\n}\n\n", 
            "called": [
                "makeWord"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080410", 
            "calling": [
                "poll"
            ], 
            "imported": false, 
            "current_name": "get_FC3"
        }, 
        "__smakebuf_r": {
            "renaming": {}, 
            "code": "\nvoid __smakebuf_r(int param_1,int *param_2)\n\n{\n  ushort uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  bool bVar5;\n  undefined auStack_54 [4];\n  uint local_50;\n  \n  uVar1 = *(ushort *)(param_2 + 3);\n  uVar4 = (uint)uVar1;\n  if ((int)(uVar4 << 0x1e) < 0) {\n    *param_2 = (int)param_2 + 0x43;\n    param_2[4] = (int)param_2 + 0x43;\n    param_2[5] = 1;\n    return;\n  }\n  if (-1 < *(short *)((int)param_2 + 0xe)) {\n    iVar2 = _fstat_r(param_1,(int)*(short *)((int)param_2 + 0xe),auStack_54);\n    if (-1 < iVar2) {\n      bVar5 = (local_50 & 0xf000) == 0x2000;\n      if (((local_50 & 0xf000) == 0x8000) && (param_2[10] == DAT_00084380)) {\n        iVar2 = 0x400;\n        *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x400;\n        param_2[0x13] = 0x400;\n      }\n      else {\n        iVar2 = 0x400;\n        *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x800;\n      }\n      goto LAB_00084300;\n    }\n    uVar1 = *(ushort *)(param_2 + 3);\n    uVar4 = (uint)uVar1;\n  }\n  *(ushort *)(param_2 + 3) = uVar1 | 0x800;\n  if ((uVar4 & 0x80) == 0) {\n    iVar2 = 0x400;\n  }\n  else {\n    iVar2 = 0x40;\n  }\n  bVar5 = false;\nLAB_00084300:\n  iVar3 = _malloc_r(param_1,iVar2);\n  uVar1 = *(ushort *)(param_2 + 3);\n  if (iVar3 == 0) {\n    if (-1 < (int)((uint)uVar1 << 0x16)) {\n      *(ushort *)(param_2 + 3) = uVar1 | 2;\n      *param_2 = (int)param_2 + 0x43;\n      param_2[4] = (int)param_2 + 0x43;\n      param_2[5] = 1;\n    }\n  }\n  else {\n    *(undefined4 *)(param_1 + 0x3c) = DAT_0008437c;\n    *(ushort *)(param_2 + 3) = uVar1 | 0x80;\n    *param_2 = iVar3;\n    param_2[4] = iVar3;\n    param_2[5] = iVar2;\n    if ((bVar5) && (iVar2 = _isatty_r(param_1,(int)*(short *)((int)param_2 + 0xe)), iVar2 != 0)) {\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 1;\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "_fstat_r", 
                "_isatty_r", 
                "_malloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000842a4", 
            "calling": [
                "__swsetup_r"
            ], 
            "imported": false, 
            "current_name": "__smakebuf_r"
        }, 
        "SysTick_Handler": {
            "renaming": {}, 
            "code": "\nvoid SysTick_Handler(void)\n\n{\n  int iVar1;\n  \n  iVar1 = __false();\n  if (iVar1 == 0) {\n    tickReset();\n    TimeTick_Increment();\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "tickReset", 
                "__false", 
                "TimeTick_Increment"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008116e", 
            "calling": [], 
            "imported": false, 
            "current_name": "SysTick_Handler"
        }, 
        "__fixunssfsi": {
            "renaming": {}, 
            "code": "\nuint __fixunssfsi(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 & 0x80000000) != 0) || (param_1 << 1 < 0x7f000000)) {\n    return 0;\n  }\n  uVar1 = 0x9e - ((param_1 << 1) >> 0x18);\n  if (-1 < (int)uVar1) {\n    return (param_1 << 8 | 0x80000000) >> (uVar1 & 0xff);\n  }\n  if ((uVar1 == 0xffffff9f) && ((param_1 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081d1c", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__fixunssfsi"
        }, 
        "__sfp_lock_acquire": {
            "renaming": {}, 
            "code": "\nvoid __sfp_lock_acquire(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083c08", 
            "calling": [
                "_fclose_r"
            ], 
            "imported": false, 
            "current_name": "__sfp_lock_acquire"
        }, 
        "startForkserver": {
            "renaming": {}, 
            "code": "\nint startForkserver(int ticks)\n\n{\n  uint32_t uVar1;\n  \n  if (*(int *)PTR_noHyperCall_00080160 == 0) {\n    uVar1 = aflCall(1,ticks,0);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
            "called": [
                "aflCall"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008014c", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "startForkserver"
        }, 
        "__sinit": {
            "renaming": {}, 
            "code": "\nvoid __sinit(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 *puVar5;\n  undefined4 *puVar6;\n  \n  if (*(int *)(param_1 + 0x38) == 0) {\n    puVar5 = *(undefined4 **)(param_1 + 4);\n    *(undefined4 *)(param_1 + 0x3c) = DAT_00083bf4;\n    *(undefined4 *)(param_1 + 0x2e4) = 3;\n    *(int *)(param_1 + 0x2e8) = param_1 + 0x2ec;\n    *(undefined4 *)(param_1 + 0x2e0) = 0;\n    *(undefined2 *)(puVar5 + 3) = 4;\n    *puVar5 = 0;\n    puVar5[1] = 0;\n    puVar5[2] = 0;\n    puVar5[0x19] = 0;\n    *(undefined2 *)((int)puVar5 + 0xe) = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0;\n    puVar5[6] = 0;\n    memset(puVar5 + 0x17,0,8);\n    uVar4 = DAT_00083c04;\n    uVar3 = DAT_00083c00;\n    uVar2 = DAT_00083bfc;\n    uVar1 = DAT_00083bf8;\n    puVar6 = *(undefined4 **)(param_1 + 8);\n    puVar5[7] = puVar5;\n    puVar5[8] = uVar1;\n    puVar5[9] = uVar2;\n    puVar5[10] = uVar3;\n    puVar5[0xb] = uVar4;\n    *(undefined2 *)((int)puVar6 + 0xe) = 1;\n    *(undefined2 *)(puVar6 + 3) = 9;\n    *puVar6 = 0;\n    puVar6[1] = 0;\n    puVar6[2] = 0;\n    puVar6[0x19] = 0;\n    puVar6[4] = 0;\n    puVar6[5] = 0;\n    puVar6[6] = 0;\n    memset(puVar6 + 0x17,0,8);\n    puVar5 = *(undefined4 **)(param_1 + 0xc);\n    puVar6[7] = puVar6;\n    puVar6[8] = uVar1;\n    puVar6[9] = uVar2;\n    puVar6[10] = uVar3;\n    puVar6[0xb] = uVar4;\n    *(undefined2 *)(puVar5 + 3) = 0x12;\n    *(undefined2 *)((int)puVar5 + 0xe) = 2;\n    *puVar5 = 0;\n    puVar5[1] = 0;\n    puVar5[2] = 0;\n    puVar5[0x19] = 0;\n    puVar5[4] = 0;\n    puVar5[5] = 0;\n    puVar5[6] = 0;\n    memset(puVar5 + 0x17,0,8);\n    puVar5[7] = puVar5;\n    puVar5[8] = uVar1;\n    puVar5[9] = uVar2;\n    puVar5[10] = uVar3;\n    puVar5[0xb] = uVar4;\n    *(undefined4 *)(param_1 + 0x38) = 1;\n  }\n  return;\n}\n\n", 
            "called": [
                "memset"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083b14", 
            "calling": [
                "__swbuf_r", 
                "_fclose_r", 
                "_vfiprintf_r", 
                "__swsetup_r", 
                "_fflush_r"
            ], 
            "imported": false, 
            "current_name": "__sinit"
        }, 
        "delay": {
            "renaming": {}, 
            "code": "\nvoid delay(uint32_t ms)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008120c", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "delay"
        }, 
        "_lseek_r": {
            "renaming": {}, 
            "code": "\nvoid _lseek_r(int *param_1,int param_2,int param_3,int param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_00084724;\n  *(undefined4 *)PTR_errno_00084724 = 0;\n  iVar2 = _lseek(param_2,param_3,param_4);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_lseek"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084700", 
            "calling": [
                "__swrite", 
                "__sseek"
            ], 
            "imported": false, 
            "current_name": "_lseek_r"
        }, 
        "__aeabi_fcmpgt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpgt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfrcmple();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081cbc", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmpgt"
        }, 
        "_close": {
            "renaming": {}, 
            "code": "\nint _close(int file_UNUSED)\n\n{\n  return -1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811ae", 
            "calling": [
                "_close_r"
            ], 
            "imported": false, 
            "current_name": "_close"
        }, 
        "begin": {
            "renaming": {}, 
            "code": "\nvoid __thiscall USARTClass::begin(USARTClass *this,uint32_t dwBaudRate)\n\n{\n  UARTClass::init(&this->super_UARTClass,dwBaudRate,0x8c0);\n  return;\n}\n\n", 
            "called": [
                "init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000815ca", 
            "calling": [], 
            "imported": false, 
            "current_name": "begin"
        }, 
        "__cmpsf2": {
            "renaming": {}, 
            "code": "\nuint __cmpsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081bf4", 
            "calling": [
                "__aeabi_cfcmpeq"
            ], 
            "imported": false, 
            "current_name": "__cmpsf2"
        }, 
        "validateAnswer": {
            "renaming": {}, 
            "code": "\nuint8_t __thiscall Modbus::validateAnswer(Modbus *this)\n\n{\n  int iVar1;\n  \n  if ((int)((uint)this->au8Buffer[1] << 0x18) < 0) {\n    this->u16errCnt = this->u16errCnt + 1;\n    return 0xfb;\n  }\n  iVar1 = 0;\n  do {\n    if (PTR_fctsupported_0008040c[iVar1] == this->au8Buffer[1]) {\n      return '\\0';\n    }\n    iVar1 = iVar1 + 1;\n  } while (iVar1 != 8);\n  this->u16errCnt = this->u16errCnt + 1;\n  return '\\x01';\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000803d4", 
            "calling": [
                "poll"
            ], 
            "imported": false, 
            "current_name": "validateAnswer"
        }, 
        "_write": {
            "renaming": {}, 
            "code": "\nint _write(int file_UNUSED,char *ptr,int len)\n\n{\n  int iVar1;\n  \n  for (iVar1 = 0; iVar1 < len; iVar1 = iVar1 + 1) {\n    do {\n    } while (-1 < *(int *)(DAT_000811ec + 0x14) << 0x1e);\n    *(uint *)(DAT_000811ec + 0x1c) = (uint)(byte)ptr[iVar1];\n  }\n  return len & ~(len >> 0x1f);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811cc", 
            "calling": [
                "_write_r"
            ], 
            "imported": false, 
            "current_name": "_write"
        }, 
        "__aeabi_fsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_0008186a:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_0008186a;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081730", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fsub"
        }, 
        "serialEvent3": {
            "renaming": {}, 
            "code": "\nvoid serialEvent3(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080abc", 
            "calling": [
                "serialEventRun"
            ], 
            "imported": false, 
            "current_name": "serialEvent3"
        }, 
        "serialEvent2": {
            "renaming": {}, 
            "code": "\nvoid serialEvent2(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080aba", 
            "calling": [
                "serialEventRun"
            ], 
            "imported": false, 
            "current_name": "serialEvent2"
        }, 
        "__aeabi_idiv0": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_idiv0(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000847dc", 
            "calling": [
                "__aeabi_uldivmod"
            ], 
            "imported": false, 
            "current_name": "__aeabi_idiv0"
        }, 
        "PIO_PullUp": {
            "renaming": {}, 
            "code": "\nvoid PIO_PullUp(int param_1,undefined4 param_2,int param_3)\n\n{\n  if (param_3 != 0) {\n    *(undefined4 *)(param_1 + 100) = param_2;\n    return;\n  }\n  *(undefined4 *)(param_1 + 0x60) = param_2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080d24", 
            "calling": [
                "digitalWrite"
            ], 
            "imported": false, 
            "current_name": "PIO_PullUp"
        }, 
        "__aeabi_fcmpge": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpge(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081ca8", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmpge"
        }, 
        "__gnu_uldivmod_helper": {
            "renaming": {}, 
            "code": "\nvoid __gnu_uldivmod_helper\n               (uint param_1,int param_2,undefined4 param_3,undefined4 param_4,int *param_5)\n\n{\n  uint uVar1;\n  longlong lVar2;\n  \n  lVar2 = __udivdi3();\n  lVar2 = lVar2 * CONCAT44(param_4,param_3);\n  uVar1 = (uint)lVar2;\n  *param_5 = param_1 - uVar1;\n  param_5[1] = (param_2 - (int)((ulonglong)lVar2 >> 0x20)) - (uint)(param_1 < uVar1);\n  return;\n}\n\n", 
            "called": [
                "__udivdi3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000847ac", 
            "calling": [
                "__aeabi_uldivmod"
            ], 
            "imported": false, 
            "current_name": "__gnu_uldivmod_helper"
        }, 
        "serialEvent1": {
            "renaming": {}, 
            "code": "\nvoid serialEvent1(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080ab8", 
            "calling": [
                "serialEventRun"
            ], 
            "imported": false, 
            "current_name": "serialEvent1"
        }, 
        "__aeabi_l2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_l2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar5 = param_2 & 0x80000000;\n  if ((int)uVar5 < 0) {\n    bVar8 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -param_2 - (uint)bVar8;\n  }\n  uVar2 = param_1;\n  uVar1 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar1 = param_1;\n  }\n  uVar5 = uVar5 | 0x5b000000;\n  if (param_2 == 0) {\n    uVar5 = uVar5 + 0xf0000000;\n  }\n  iVar3 = count_leading_zeroes(uVar1);\n  uVar4 = iVar3 - 8;\n  iVar6 = (uVar5 - 0x800000) + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar1 << (iVar3 + 0x18U & 0xff);\n    uVar5 = iVar6 + ((uVar1 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar2 | uVar4 << 1) == 0) {\n      uVar5 = uVar5 & ~(uVar4 >> 0x1f);\n    }\n    return uVar5;\n  }\n  uVar7 = uVar2 << (uVar4 & 0xff);\n  uVar5 = iVar6 + (uVar1 << (uVar4 & 0xff)) +\n          (uVar2 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar7);\n  if (uVar7 == 0x80000000) {\n    uVar5 = uVar5 & 0xfffffffe;\n  }\n  return uVar5;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000818c8", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_l2f"
        }, 
        "__aeabi_fdiv": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fdiv(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_00081aa2:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_00081a58:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_00081aa2;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_00081ac4;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_00081a58;\n        goto LAB_00081aa2;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_00081ac4:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081aac", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fdiv"
        }, 
        "_cleanup_r": {
            "renaming": {}, 
            "code": "\nvoid _cleanup_r(undefined4 param_1)\n\n{\n  _fwalk(param_1,DAT_00083b10);\n  return;\n}\n\n", 
            "called": [
                "_fwalk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083b08", 
            "calling": [], 
            "imported": false, 
            "current_name": "_cleanup_r"
        }, 
        "_kill": {
            "renaming": {}, 
            "code": "\nvoid _kill(int pid_UNUSED,int sig_UNUSED)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081200", 
            "calling": [
                "_kill_r"
            ], 
            "imported": false, 
            "current_name": "_kill"
        }, 
        "_fstat": {
            "renaming": {}, 
            "code": "\nint _fstat(int file_UNUSED,stat *st)\n\n{\n  st->st_mode = 0x2000;\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811b4", 
            "calling": [
                "_fstat_r"
            ], 
            "imported": false, 
            "current_name": "_fstat"
        }, 
        "adc_disable_channel": {
            "renaming": {}, 
            "code": "\nvoid adc_disable_channel(int param_1,uint param_2)\n\n{\n  *(int *)(param_1 + 0x14) = 1 << (param_2 & 0xff);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008105c", 
            "calling": [
                "pinMode"
            ], 
            "imported": false, 
            "current_name": "adc_disable_channel"
        }, 
        "_GLOBAL__sub_I_g_APinDescription": {
            "renaming": {}, 
            "code": "\nvoid _GLOBAL__sub_I_g_APinDescription(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *this;\n  undefined *this_00;\n  undefined *this_01;\n  undefined *this_02;\n  \n  puVar2 = PTR_tx_buffer1_00080ca4;\n  puVar1 = PTR_rx_buffer1_00080ca0;\n  RingBuffer::RingBuffer((RingBuffer *)PTR_rx_buffer1_00080ca0);\n  RingBuffer::RingBuffer((RingBuffer *)puVar2);\n  this_01 = PTR_rx_buffer2_00080cd8;\n  this = PTR_rx_buffer3_00080cac;\n  UARTClass::UARTClass\n            ((UARTClass *)PTR_Serial_00080cb0,DAT_00080ca8,UART_IRQn,8,(RingBuffer *)puVar1,\n             (RingBuffer *)puVar2);\n  puVar1 = PTR_rx_buffer4_00080cb4;\n  RingBuffer::RingBuffer((RingBuffer *)this_01);\n  this_02 = PTR_tx_buffer2_00080cdc;\n  RingBuffer::RingBuffer((RingBuffer *)this);\n  puVar2 = PTR_tx_buffer3_00080cb8;\n  RingBuffer::RingBuffer((RingBuffer *)puVar1);\n  this_00 = PTR_tx_buffer4_00080cbc;\n  RingBuffer::RingBuffer((RingBuffer *)this_02);\n  RingBuffer::RingBuffer((RingBuffer *)puVar2);\n  RingBuffer::RingBuffer((RingBuffer *)this_00);\n  USARTClass::USARTClass\n            ((USARTClass *)PTR_Serial1_00080cc4,DAT_00080cc0,USART0_IRQn,0x11,(RingBuffer *)this_01,\n             (RingBuffer *)this_02);\n  USARTClass::USARTClass\n            ((USARTClass *)PTR_Serial2_00080ccc,DAT_00080cc8,USART1_IRQn,0x12,(RingBuffer *)this,\n             (RingBuffer *)puVar2);\n  USARTClass::USARTClass\n            ((USARTClass *)PTR_Serial3_00080cd4,DAT_00080cd0,USART3_IRQn,0x14,(RingBuffer *)puVar1,\n             (RingBuffer *)this_00);\n  return;\n}\n\n", 
            "called": [
                "UARTClass", 
                "RingBuffer", 
                "USARTClass"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080c0c", 
            "calling": [], 
            "imported": false, 
            "current_name": "_GLOBAL__sub_I_g_APinDescription"
        }, 
        "_GLOBAL__sub_I__ZN6ModbusC2Ev": {
            "renaming": {}, 
            "code": "\nvoid _GLOBAL__sub_I__ZN6ModbusC2Ev(void)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR_RxString_00080a94;\n  String::String((String *)PTR_RxString_00080a94,PTR_s__00080a98);\n  __aeabi_atexit(puVar1,DAT_00080aa0,PTR___dso_handle_00080a9c);\n  puVar1 = PTR_master_00080aa4;\n  PTR_master_00080aa4[4] = 0;\n  puVar1[5] = 0;\n  puVar1[6] = 6;\n  *(undefined2 *)(puVar1 + 0x56) = 1000;\n  return;\n}\n\n", 
            "called": [
                "String", 
                "__aeabi_atexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080a68", 
            "calling": [], 
            "imported": false, 
            "current_name": "_GLOBAL__sub_I__ZN6ModbusC2Ev"
        }, 
        "copy": {
            "renaming": {}, 
            "code": "\nString * __thiscall String::copy(String *this,char *cstr,uint length)\n\n{\n  uchar uVar1;\n  \n  uVar1 = reserve(this,length);\n  if (uVar1 == '\\0') {\n    invalidate(this);\n  }\n  else {\n    this->len = length;\n    strcpy(this->buffer,cstr);\n  }\n  return this;\n}\n\n", 
            "called": [
                "reserve", 
                "invalidate", 
                "strcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008165c", 
            "calling": [
                "String"
            ], 
            "imported": false, 
            "current_name": "copy"
        }, 
        "__floatunsisf": {
            "renaming": {}, 
            "code": "\nuint __floatunsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar3 = uVar2 * -0x800000 + 0x4a800000;\n  if (7 < iVar1) {\n    uVar4 = 0 << (uVar2 & 0xff);\n    uVar2 = iVar3 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar4);\n    if (uVar4 == 0x80000000) {\n      uVar2 = uVar2 & 0xfffffffe;\n    }\n    return uVar2;\n  }\n  uVar4 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar2 = iVar3 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n  if ((uVar4 & 0x7fffffff) == 0) {\n    uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081894", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__floatunsisf"
        }, 
        "free": {
            "renaming": {}, 
            "code": "\nvoid free(void *__ptr)\n\n{\n  _free_r(*(undefined4 *)PTR__impure_ptr_00081e10,__ptr);\n  return;\n}\n\n", 
            "called": [
                "_free_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081e04", 
            "calling": [
                "invalidate", 
                "~String"
            ], 
            "imported": false, 
            "current_name": "free"
        }, 
        "__ascii_wctomb": {
            "renaming": {}, 
            "code": "\nundefined4 __ascii_wctomb(undefined4 *param_1,undefined *param_2,uint param_3)\n\n{\n  if (param_2 == (undefined *)0x0) {\n    return 0;\n  }\n  if (param_3 < 0x100) {\n    *param_2 = (char)param_3;\n    return 1;\n  }\n  *param_1 = 0x8a;\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000845bc", 
            "calling": [
                "_wcrtomb_r"
            ], 
            "imported": false, 
            "current_name": "__ascii_wctomb"
        }, 
        "_isatty": {
            "renaming": {}, 
            "code": "\nint _isatty(int file_UNUSED)\n\n{\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811be", 
            "calling": [
                "_isatty_r"
            ], 
            "imported": false, 
            "current_name": "_isatty"
        }, 
        "__divdi3": {
            "renaming": {}, 
            "code": "\nundefined8 __divdi3(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  \n  if ((int)param_2 < 0) {\n    bVar13 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -param_2 - (uint)bVar13;\n    uVar9 = 0xffffffff;\n  }\n  else {\n    uVar9 = 0;\n  }\n  if ((int)param_4 < 0) {\n    uVar9 = ~uVar9;\n    bVar13 = param_3 != 0;\n    param_3 = -param_3;\n    param_4 = -param_4 - (uint)bVar13;\n  }\n  if (param_4 == 0) {\n    if (param_2 < param_3) {\n      uVar5 = count_leading_zeroes(param_3);\n      if (uVar5 != 0) {\n        uVar2 = param_1 >> (0x20 - uVar5 & 0xff);\n        param_3 = param_3 << (uVar5 & 0xff);\n        param_1 = param_1 << (uVar5 & 0xff);\n        param_2 = param_2 << (uVar5 & 0xff) | uVar2;\n      }\n      uVar2 = param_3 >> 0x10;\n      uVar3 = param_2 / uVar2;\n      uVar6 = (param_3 & 0xffff) * uVar3;\n      uVar10 = param_1 >> 0x10 | (param_2 - uVar2 * uVar3) * 0x10000;\n      uVar5 = uVar3;\n      if (uVar10 <= uVar6 && uVar6 - uVar10 != 0) {\n        bVar13 = CARRY4(uVar10,param_3);\n        uVar10 = uVar10 + param_3;\n        uVar5 = uVar3 - 1;\n        if ((bVar13 == false) && (uVar10 <= uVar6 && uVar6 - uVar10 != 0)) {\n          uVar5 = uVar3 - 2;\n          uVar10 = uVar10 + param_3;\n        }\n      }\n      uVar7 = (uVar10 - uVar6) / uVar2;\n      uVar3 = (param_3 & 0xffff) * uVar7;\n      uVar6 = param_1 & 0xffff | ((uVar10 - uVar6) - uVar2 * uVar7) * 0x10000;\n      uVar2 = uVar7;\n      if (uVar6 <= uVar3 && uVar3 - uVar6 != 0) {\n        uVar2 = uVar7 - 1;\n        if ((CARRY4(uVar6,param_3) == false) &&\n           (uVar6 + param_3 <= uVar3 && uVar3 - (uVar6 + param_3) != 0)) {\n          uVar2 = uVar7 - 2;\n        }\n      }\n      uVar3 = uVar2 | uVar5 << 0x10;\n      uVar10 = 0;\n    }\n    else {\n      if (param_3 == 0) {\n        param_3 = 1 / 0;\n      }\n      uVar5 = count_leading_zeroes(param_3);\n      if (uVar5 == 0) {\n        param_2 = param_2 - param_3;\n        uVar2 = param_3 >> 0x10;\n        uVar12 = param_3 & 0xffff;\n        uVar10 = 1;\n      }\n      else {\n        param_3 = param_3 << (uVar5 & 0xff);\n        uVar3 = param_2 >> (0x20 - uVar5 & 0xff);\n        uVar2 = param_3 >> 0x10;\n        uVar10 = uVar3 / uVar2;\n        uVar12 = param_3 & 0xffff;\n        uVar6 = uVar12 * uVar10;\n        uVar7 = param_1 >> (0x20 - uVar5 & 0xff) | param_2 << (uVar5 & 0xff);\n        uVar3 = uVar7 >> 0x10 | (uVar3 - uVar2 * uVar10) * 0x10000;\n        param_1 = param_1 << (uVar5 & 0xff);\n        uVar5 = uVar10;\n        if (uVar3 <= uVar6 && uVar6 - uVar3 != 0) {\n          bVar13 = CARRY4(uVar3,param_3);\n          uVar3 = uVar3 + param_3;\n          uVar5 = uVar10 - 1;\n          if ((bVar13 == false) && (uVar3 <= uVar6 && uVar6 - uVar3 != 0)) {\n            uVar5 = uVar10 - 2;\n            uVar3 = uVar3 + param_3;\n          }\n        }\n        uVar8 = (uVar3 - uVar6) / uVar2;\n        uVar4 = uVar12 * uVar8;\n        param_2 = uVar7 & 0xffff | ((uVar3 - uVar6) - uVar2 * uVar8) * 0x10000;\n        uVar10 = uVar8;\n        if (param_2 <= uVar4 && uVar4 - param_2 != 0) {\n          bVar13 = CARRY4(param_2,param_3);\n          param_2 = param_2 + param_3;\n          uVar10 = uVar8 - 1;\n          if ((bVar13 == false) && (param_2 <= uVar4 && uVar4 - param_2 != 0)) {\n            uVar10 = uVar8 - 2;\n            param_2 = param_2 + param_3;\n          }\n        }\n        param_2 = param_2 - uVar4;\n        uVar10 = uVar10 | uVar5 << 0x10;\n      }\n      uVar3 = param_2 / uVar2;\n      uVar6 = uVar12 * uVar3;\n      uVar7 = param_1 >> 0x10 | (param_2 - uVar2 * uVar3) * 0x10000;\n      uVar5 = uVar3;\n      if (uVar7 <= uVar6 && uVar6 - uVar7 != 0) {\n        bVar13 = CARRY4(uVar7,param_3);\n        uVar7 = uVar7 + param_3;\n        uVar5 = uVar3 - 1;\n        if ((bVar13 == false) && (uVar7 <= uVar6 && uVar6 - uVar7 != 0)) {\n          uVar5 = uVar3 - 2;\n          uVar7 = uVar7 + param_3;\n        }\n      }\n      uVar4 = (uVar7 - uVar6) / uVar2;\n      uVar12 = uVar12 * uVar4;\n      uVar3 = param_1 & 0xffff | ((uVar7 - uVar6) - uVar2 * uVar4) * 0x10000;\n      uVar2 = uVar4;\n      if (uVar3 <= uVar12 && uVar12 - uVar3 != 0) {\n        uVar2 = uVar4 - 1;\n        if ((CARRY4(uVar3,param_3) == false) &&\n           (uVar3 + param_3 <= uVar12 && uVar12 - (uVar3 + param_3) != 0)) {\n          uVar2 = uVar4 - 2;\n        }\n      }\n      uVar3 = uVar2 | uVar5 << 0x10;\n    }\n  }\n  else if (param_2 < param_4) {\n    uVar3 = 0;\n    uVar10 = 0;\n  }\n  else {\n    uVar5 = count_leading_zeroes(param_4);\n    if (uVar5 == 0) {\n      if ((param_4 < param_2) || (uVar3 = uVar5, uVar10 = uVar5, param_3 <= param_1)) {\n        uVar3 = 1;\n        uVar10 = 0;\n      }\n    }\n    else {\n      uVar2 = 0x20 - uVar5;\n      uVar6 = param_2 >> (uVar2 & 0xff);\n      uVar4 = param_3 >> (uVar2 & 0xff) | param_4 << (uVar5 & 0xff);\n      uVar7 = uVar4 >> 0x10;\n      uVar3 = uVar6 / uVar7;\n      uVar12 = (uVar4 & 0xffff) * uVar3;\n      uVar10 = param_2 << (uVar5 & 0xff) | param_1 >> (uVar2 & 0xff);\n      uVar6 = uVar10 >> 0x10 | (uVar6 - uVar7 * uVar3) * 0x10000;\n      uVar2 = uVar3;\n      if (uVar6 <= uVar12 && uVar12 - uVar6 != 0) {\n        bVar13 = CARRY4(uVar6,uVar4);\n        uVar6 = uVar6 + uVar4;\n        uVar2 = uVar3 - 1;\n        if ((bVar13 == false) && (uVar6 <= uVar12 && uVar12 - uVar6 != 0)) {\n          uVar2 = uVar3 - 2;\n          uVar6 = uVar6 + uVar4;\n        }\n      }\n      uVar8 = (uVar6 - uVar12) / uVar7;\n      uVar11 = (uVar4 & 0xffff) * uVar8;\n      uVar6 = uVar10 & 0xffff | ((uVar6 - uVar12) - uVar7 * uVar8) * 0x10000;\n      uVar3 = uVar8;\n      if (uVar6 <= uVar11 && uVar11 - uVar6 != 0) {\n        bVar13 = CARRY4(uVar6,uVar4);\n        uVar6 = uVar6 + uVar4;\n        uVar3 = uVar8 - 1;\n        if ((bVar13 == false) && (uVar6 <= uVar11 && uVar11 - uVar6 != 0)) {\n          uVar3 = uVar8 - 2;\n          uVar6 = uVar6 + uVar4;\n        }\n      }\n      uVar3 = uVar3 | uVar2 << 0x10;\n      lVar1 = (ulonglong)uVar3 * (ulonglong)(param_3 << (uVar5 & 0xff));\n      uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n      if ((uVar6 - uVar11 < uVar2) ||\n         ((uVar10 = 0, uVar6 - uVar11 == uVar2 && (param_1 << (uVar5 & 0xff) < (uint)lVar1)))) {\n        uVar3 = uVar3 - 1;\n        uVar10 = 0;\n      }\n    }\n  }\n  if (uVar9 != 0) {\n    bVar13 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar10 = -uVar10 - (uint)bVar13;\n  }\n  return CONCAT44(uVar10,uVar3);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000847e0", 
            "calling": [
                "__gnu_ldivmod_helper"
            ], 
            "imported": false, 
            "current_name": "__divdi3"
        }, 
        "adc_disable_interrupt": {
            "renaming": {}, 
            "code": "\nvoid adc_disable_interrupt(int param_1,undefined4 param_2)\n\n{\n  *(undefined4 *)(param_1 + 0x28) = param_2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008106e", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "adc_disable_interrupt"
        }, 
        "malloc": {
            "renaming": {}, 
            "code": "\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)_malloc_r(*(undefined4 *)PTR__impure_ptr_00081e00,__size);\n  return pvVar1;\n}\n\n", 
            "called": [
                "_malloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081df4", 
            "calling": [
                "__register_exitproc"
            ], 
            "imported": false, 
            "current_name": "malloc"
        }, 
        "__ltsf2": {
            "renaming": {}, 
            "code": "\nuint __ltsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081bec", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ltsf2"
        }, 
        "PIO_SetOutput": {
            "renaming": {}, 
            "code": "\nvoid PIO_SetOutput(undefined4 *param_1,undefined4 param_2,int param_3,int param_4,int param_5)\n\n{\n  param_1[0x11] = param_2;\n  if (param_5 == 0) {\n    param_1[0x18] = param_2;\n  }\n  else {\n    param_1[0x19] = param_2;\n  }\n  if (param_4 == 0) {\n    param_1[0x15] = param_2;\n  }\n  else {\n    param_1[0x14] = param_2;\n  }\n  if (param_3 == 0) {\n    param_1[0xd] = param_2;\n  }\n  else {\n    param_1[0xc] = param_2;\n  }\n  param_1[4] = param_2;\n  *param_1 = param_2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080d7a", 
            "calling": [
                "PIO_Configure", 
                "digitalWrite"
            ], 
            "imported": false, 
            "current_name": "PIO_SetOutput"
        }, 
        "__gnu_ldivmod_helper": {
            "renaming": {}, 
            "code": "\nvoid __gnu_ldivmod_helper\n               (uint param_1,int param_2,undefined4 param_3,undefined4 param_4,int *param_5)\n\n{\n  uint uVar1;\n  longlong lVar2;\n  \n  lVar2 = __divdi3();\n  lVar2 = lVar2 * CONCAT44(param_4,param_3);\n  uVar1 = (uint)lVar2;\n  *param_5 = param_1 - uVar1;\n  param_5[1] = (param_2 - (int)((ulonglong)lVar2 >> 0x20)) - (uint)(param_1 < uVar1);\n  return;\n}\n\n", 
            "called": [
                "__divdi3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008477c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gnu_ldivmod_helper"
        }, 
        "PIOB_Handler": {
            "renaming": {}, 
            "code": "\nvoid PIOB_Handler(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(DAT_000810ec + 0x4c);\n  while( true ) {\n    uVar1 = count_leading_zeroes(uVar2);\n    if (0x1f < (uVar1 & 0xff)) break;\n    uVar1 = 0x1f - (uVar1 & 0xff) & 0xff;\n    if (*(code **)(PTR_callbacksPioB_000810f0 + uVar1 * 4) != (code *)0x0) {\n      (**(code **)(PTR_callbacksPioB_000810f0 + uVar1 * 4))();\n    }\n    uVar2 = uVar2 & ~(1 << uVar1);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000810bc", 
            "calling": [], 
            "imported": false, 
            "current_name": "PIOB_Handler"
        }, 
        "_getpid": {
            "renaming": {}, 
            "code": "\n__pid_t _getpid(void)\n\n{\n  return -1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081202", 
            "calling": [], 
            "imported": false, 
            "current_name": "_getpid"
        }, 
        "kill": {
            "renaming": {}, 
            "code": "\nint kill(__pid_t __pid,int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = _kill_r(*(undefined4 *)PTR__impure_ptr_00082abc,__pid,__sig);\n  return iVar1;\n}\n\n", 
            "called": [
                "_kill_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082ab0", 
            "calling": [], 
            "imported": false, 
            "current_name": "kill"
        }, 
        "__sfvwrite_r": {
            "renaming": {}, 
            "code": "\nundefined4 __sfvwrite_r(undefined4 *param_1,void **param_2,undefined4 *param_3)\n\n{\n  void **ppvVar1;\n  int iVar2;\n  void *pvVar3;\n  void *pvVar4;\n  ushort uVar5;\n  uint uVar6;\n  int iVar7;\n  void **ppvVar8;\n  void *pvVar9;\n  void *pvVar10;\n  void *pvVar11;\n  void *pvVar12;\n  void *__n;\n  size_t __n_00;\n  void *local_2c;\n  \n  if (param_3[2] != 0) {\n    uVar5 = *(ushort *)(param_2 + 3);\n    uVar6 = (uint)uVar5;\n    if (((int)(uVar6 << 0x1c) < 0) && (param_2[4] != (void *)0x0)) {\n      ppvVar8 = (void **)*param_3;\n      pvVar3 = DAT_00084244;\n    }\n    else {\n      iVar2 = __swsetup_r(param_1,param_2);\n      if (iVar2 != 0) {\n        return 0xffffffff;\n      }\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar6 = (uint)uVar5;\n      ppvVar8 = (void **)*param_3;\n      pvVar3 = DAT_00084244;\n    }\n    DAT_00084244 = pvVar3;\n    if ((uVar5 & 2) == 0) {\n      pvVar3 = (void *)(uVar6 & 2);\n      pvVar11 = (void *)(uVar6 & 1);\n      pvVar9 = pvVar3;\n      pvVar10 = pvVar3;\n      local_2c = pvVar3;\n      pvVar12 = pvVar11;\n      if (pvVar11 == (void *)0x0) {\n        while( true ) {\n          while (pvVar11 == (void *)0x0) {\n            pvVar12 = *ppvVar8;\n            ppvVar1 = ppvVar8 + 1;\n            ppvVar8 = ppvVar8 + 2;\n            pvVar11 = *ppvVar1;\n          }\n          pvVar3 = param_2[2];\n          if ((int)(uVar6 << 0x16) < 0) {\n            if (pvVar11 < pvVar3) {\n              pvVar9 = *param_2;\n              pvVar3 = pvVar11;\n            }\n            else if ((uVar6 & 0x480) == 0) {\n              pvVar9 = *param_2;\n            }\n            else {\n              __n_00 = (int)*param_2 - (int)param_2[4];\n              pvVar3 = (void *)(__n_00 + 1 + (int)pvVar11);\n              pvVar9 = (void *)(((int)param_2[5] * 3) / 2);\n              if (pvVar3 <= pvVar9) {\n                pvVar3 = pvVar9;\n              }\n              if ((int)(uVar6 << 0x15) < 0) {\n                pvVar10 = (void *)_malloc_r(param_1,pvVar3);\n                if (pvVar10 == (void *)0x0) {\n                  *param_1 = 0xc;\n                  uVar5 = *(ushort *)(param_2 + 3);\n                  goto LAB_00084030;\n                }\n                memcpy(pvVar10,param_2[4],__n_00);\n                *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xfb7f | 0x80;\n              }\n              else {\n                pvVar10 = (void *)_realloc_r(param_1);\n                if (pvVar10 == (void *)0x0) {\n                  _free_r(param_1,param_2[4]);\n                  uVar5 = *(ushort *)(param_2 + 3) & 0xff7f;\n                  *param_1 = 0xc;\n                  goto LAB_00084030;\n                }\n              }\n              pvVar9 = (void *)((int)pvVar10 + __n_00);\n              param_2[4] = pvVar10;\n              param_2[5] = pvVar3;\n              *param_2 = pvVar9;\n              param_2[2] = (void *)((int)pvVar3 - __n_00);\n              pvVar3 = pvVar11;\n            }\n            memmove(pvVar9,pvVar12,(size_t)pvVar3);\n            param_2[2] = (void *)((int)param_2[2] - (int)pvVar3);\n            *param_2 = (void *)((int)*param_2 + (int)pvVar3);\n            pvVar3 = pvVar11;\n          }\n          else if ((param_2[4] < *param_2) || (pvVar9 = param_2[5], pvVar11 < pvVar9)) {\n            if (pvVar11 < pvVar3) {\n              pvVar3 = pvVar11;\n            }\n            memmove(*param_2,pvVar12,(size_t)pvVar3);\n            pvVar9 = param_2[2];\n            param_2[2] = (void *)((int)pvVar9 - (int)pvVar3);\n            *param_2 = (void *)((int)*param_2 + (int)pvVar3);\n            if (((void *)((int)pvVar9 - (int)pvVar3) == (void *)0x0) &&\n               (iVar2 = _fflush_r(param_1,param_2), iVar2 != 0)) goto LAB_0008402e;\n          }\n          else {\n            pvVar3 = (void *)0x7fffffff;\n            if (pvVar11 < (void *)0x7fffffff) {\n              pvVar3 = pvVar11;\n            }\n            pvVar3 = (void *)(*(code *)param_2[9])\n                                       (param_1,param_2[7],pvVar12,\n                                        ((uint)pvVar3 / (uint)pvVar9) * (int)pvVar9);\n            if ((int)pvVar3 < 1) goto LAB_0008402e;\n          }\n          iVar2 = param_3[2];\n          pvVar11 = (void *)((int)pvVar11 - (int)pvVar3);\n          param_3[2] = iVar2 - (int)pvVar3;\n          if (iVar2 - (int)pvVar3 == 0) break;\n          uVar6 = (uint)*(ushort *)(param_2 + 3);\n          pvVar12 = (void *)((int)pvVar12 + (int)pvVar3);\n        }\n      }\n      else {\n        do {\n          while (pvVar3 == (void *)0x0) {\n            pvVar10 = *ppvVar8;\n            pvVar3 = ppvVar8[1];\n            local_2c = (void *)0x0;\n            ppvVar8 = ppvVar8 + 2;\n          }\n          if (local_2c == (void *)0x0) {\n            pvVar9 = memchr(pvVar10,10,(size_t)pvVar3);\n            if (pvVar9 == (void *)0x0) {\n              pvVar9 = (void *)((int)pvVar3 + 1);\n              local_2c = (void *)0x1;\n            }\n            else {\n              pvVar9 = (void *)((int)pvVar9 + (1 - (int)pvVar10));\n              local_2c = (void *)0x1;\n            }\n          }\n          pvVar12 = *param_2;\n          pvVar11 = pvVar9;\n          if (pvVar3 <= pvVar9) {\n            pvVar11 = pvVar3;\n          }\n          pvVar4 = param_2[5];\n          if ((param_2[4] < pvVar12) &&\n             (__n = (void *)((int)param_2[2] + (int)pvVar4), (int)__n < (int)pvVar11)) {\n            memmove(pvVar12,pvVar10,(size_t)__n);\n            *param_2 = (void *)((int)*param_2 + (int)__n);\n            iVar2 = _fflush_r(param_1,param_2);\n            if (iVar2 != 0) goto LAB_0008402e;\n          }\n          else if ((int)pvVar11 < (int)pvVar4) {\n            memmove(pvVar12,pvVar10,(size_t)pvVar11);\n            param_2[2] = (void *)((int)param_2[2] - (int)pvVar11);\n            *param_2 = (void *)((int)pvVar11 + (int)*param_2);\n            __n = pvVar11;\n          }\n          else {\n            __n = (void *)(*(code *)param_2[9])(param_1,param_2[7],pvVar10,pvVar4);\n            if ((int)__n < 1) goto LAB_0008402e;\n          }\n          pvVar9 = (void *)((int)pvVar9 - (int)__n);\n          if ((pvVar9 == (void *)0x0) &&\n             (iVar2 = _fflush_r(param_1,param_2), local_2c = pvVar9, iVar2 != 0)) goto LAB_0008402e;\n          iVar2 = param_3[2];\n          pvVar10 = (void *)((int)pvVar10 + (int)__n);\n          pvVar3 = (void *)((int)pvVar3 - (int)__n);\n          param_3[2] = iVar2 - (int)__n;\n        } while (iVar2 - (int)__n != 0);\n      }\n    }\n    else {\n      pvVar10 = (void *)0x0;\n      pvVar9 = (void *)0x0;\n      do {\n        while( true ) {\n          pvVar11 = pvVar9;\n          if (pvVar3 <= pvVar9) {\n            pvVar11 = pvVar3;\n          }\n          if (pvVar9 != (void *)0x0) break;\n          pvVar10 = *ppvVar8;\n          pvVar9 = ppvVar8[1];\n          ppvVar8 = ppvVar8 + 2;\n        }\n        iVar2 = (*(code *)param_2[9])(param_1,param_2[7],pvVar10,pvVar11);\n        if (iVar2 < 1) {\nLAB_0008402e:\n          uVar5 = *(ushort *)(param_2 + 3);\nLAB_00084030:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n          return 0xffffffff;\n        }\n        iVar7 = param_3[2];\n        pvVar10 = (void *)((int)pvVar10 + iVar2);\n        pvVar9 = (void *)((int)pvVar9 - iVar2);\n        param_3[2] = iVar7 - iVar2;\n      } while (iVar7 - iVar2 != 0);\n    }\n  }\n  return 0;\n}\n\n", 
            "called": [
                "memmove", 
                "_free_r", 
                "memchr", 
                "_realloc_r", 
                "memcpy", 
                "__swsetup_r", 
                "_fflush_r", 
                "_malloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083f34", 
            "calling": [
                "__sprint_r.part.0"
            ], 
            "imported": false, 
            "current_name": "__sfvwrite_r"
        }, 
        "peek": {
            "renaming": {}, 
            "code": "\nint __thiscall UARTClass::peek(UARTClass *this)\n\n{\n  uint uVar1;\n  RingBuffer *pRVar2;\n  \n  pRVar2 = this->_rx_buffer;\n  if (pRVar2->_iHead == pRVar2->_iTail) {\n    uVar1 = 0xffffffff;\n  }\n  else {\n    uVar1 = (uint)pRVar2->_aucBuffer[pRVar2->_iTail];\n  }\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000813f6", 
            "calling": [], 
            "imported": false, 
            "current_name": "peek"
        }, 
        "__aeabi_frsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_frsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_1 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = param_2;\n      if (iVar7 == -1) {\n        uVar4 = uVar2;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        param_2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == param_2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        uVar2 = param_2;\n      }\n      return uVar2;\n    }\n    if (uVar2 != param_2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      param_1 = param_1 << 1;\n      if ((uVar2 & 0x80000000) != 0) {\n        param_1 = param_1 | 0x80000000;\n      }\n      return param_1;\n    }\n    if (uVar4 < 0xfe000000) {\n      return uVar2 + 0x800000;\n    }\n    uVar2 = uVar2 & 0x80000000;\nLAB_0008186a:\n    return uVar2 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return uVar2;\n  }\n  uVar4 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  uVar2 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar6 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar6 != 0);\n    uVar6 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar5 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar5 & 0xff);\n      if ((int)uVar6 < (int)uVar5) {\n        uVar4 = uVar4 >> (-(uVar6 - uVar5) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | uVar2;\n    }\n  }\n  else {\n    uVar6 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar6 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar6 != 0) << 0x1f | uVar3 >> 1;\n      uVar6 = uVar5;\n      if (0xfd < uVar5) goto LAB_0008186a;\n    }\n  }\n  uVar4 = uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | uVar2;\n}\n\n", 
            "called": [
                "__addsf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081728", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_frsub"
        }, 
        "makeWord": {
            "renaming": {}, 
            "code": "\nuint16_t makeWord(uint8_t h,uint8_t l)\n\n{\n  return CONCAT11(h,l);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000815f8", 
            "calling": [
                "get_FC3"
            ], 
            "imported": false, 
            "current_name": "makeWord"
        }, 
        "__aeabi_uldivmod": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_uldivmod(int param_1,int param_2,int param_3,int param_4)\n\n{\n  if ((param_4 == 0) && (param_3 == 0)) {\n    if (param_2 != 0 || param_1 != 0) {\n      param_1 = -1;\n    }\n    __aeabi_idiv0(param_1);\n    return;\n  }\n  __gnu_uldivmod_helper();\n  return;\n}\n\n", 
            "called": [
                "__aeabi_idiv0", 
                "__gnu_uldivmod_helper"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084750", 
            "calling": [
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "__aeabi_uldivmod"
        }, 
        "memcpy": {
            "renaming": {}, 
            "code": "\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined *puVar4;\n  undefined4 *puVar5;\n  undefined *puVar6;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  \n  puVar3 = (undefined4 *)__dest;\n  if ((((uint)__src | (uint)__dest) & 3) != 0) {\n    if (__n < 8) {\n      uVar8 = __n - 4;\n      puVar1 = (undefined *)__dest;\n      if (3 < __n) {\n        do {\n          puVar6 = (undefined *)__src;\n          puVar4 = puVar1;\n          bVar9 = uVar8 != 0;\n          uVar8 = uVar8 - 1;\n          *puVar4 = *puVar6;\n          puVar1 = puVar4 + 1;\n          __src = puVar6 + 1;\n        } while (bVar9);\n        puVar4[1] = puVar6[1];\n        puVar4[2] = puVar6[2];\n        puVar4[3] = puVar6[3];\n        return __dest;\n      }\n      goto LAB_000823d0;\n    }\n    if ((((uint)__src & 3) != 0) && (((uint)__dest & 3) != 0)) {\n      uVar8 = 4 - ((uint)__dest & 3);\n      __n = __n - uVar8;\n      puVar2 = (undefined4 *)__dest;\n      puVar5 = (undefined4 *)__src;\n                    /* WARNING: Load size is inaccurate */\n      if (((uint)__dest & 1) != 0) {\n        puVar5 = (undefined4 *)((int)__src + 1);\n        puVar2 = (undefined4 *)((int)__dest + 1);\n        *(undefined *)__dest = *__src;\n      }\n      puVar3 = puVar2;\n      __src = puVar5;\n      if ((uVar8 & 2) != 0) {\n        __src = (void *)((int)puVar5 + 2);\n        puVar3 = (undefined4 *)((int)puVar2 + 2);\n        *(undefined2 *)puVar2 = *(undefined2 *)puVar5;\n      }\n    }\n  }\n  while (0x3f < __n) {\n                    /* WARNING: Load size is inaccurate */\n    *puVar3 = *__src;\n    puVar3[1] = *(undefined4 *)((int)__src + 4);\n    puVar3[2] = *(undefined4 *)((int)__src + 8);\n    puVar3[3] = *(undefined4 *)((int)__src + 0xc);\n    puVar3[4] = *(undefined4 *)((int)__src + 0x10);\n    puVar3[5] = *(undefined4 *)((int)__src + 0x14);\n    puVar3[6] = *(undefined4 *)((int)__src + 0x18);\n    puVar3[7] = *(undefined4 *)((int)__src + 0x1c);\n    puVar3[8] = *(undefined4 *)((int)__src + 0x20);\n    puVar3[9] = *(undefined4 *)((int)__src + 0x24);\n    puVar3[10] = *(undefined4 *)((int)__src + 0x28);\n    puVar3[0xb] = *(undefined4 *)((int)__src + 0x2c);\n    puVar3[0xc] = *(undefined4 *)((int)__src + 0x30);\n    puVar3[0xd] = *(undefined4 *)((int)__src + 0x34);\n    puVar3[0xe] = *(undefined4 *)((int)__src + 0x38);\n    puVar3[0xf] = *(undefined4 *)((int)__src + 0x3c);\n    puVar3 = puVar3 + 0x10;\n    __src = (undefined4 *)((int)__src + 0x40);\n    __n = __n - 0x40;\n  }\n  uVar7 = __n - 0x10;\n  if (0xffffffcf < __n - 0x40) {\n    do {\n                    /* WARNING: Load size is inaccurate */\n      *puVar3 = *__src;\n      puVar3[1] = *(undefined4 *)((int)__src + 4);\n      puVar3[2] = *(undefined4 *)((int)__src + 8);\n      puVar3[3] = *(undefined4 *)((int)__src + 0xc);\n      puVar3 = puVar3 + 4;\n      __src = (void *)((int)__src + 0x10);\n      bVar9 = 0xf < uVar7;\n      uVar7 = uVar7 - 0x10;\n    } while (bVar9);\n  }\n  uVar8 = uVar7 + 0xc;\n  puVar5 = puVar3;\n  puVar2 = (undefined4 *)__src;\n  if (0xfffffff3 < uVar7) {\n    do {\n      __src = puVar2 + 1;\n      *puVar5 = *puVar2;\n      bVar9 = 3 < uVar8;\n      uVar8 = uVar8 - 4;\n      puVar3 = puVar5 + 1;\n      puVar5 = puVar5 + 1;\n      puVar2 = (undefined4 *)__src;\n    } while (bVar9);\n  }\nLAB_000823d0:\n  if (uVar8 + 4 != 0) {\n    puVar2 = puVar3;\n    puVar5 = (undefined4 *)__src;\n                    /* WARNING: Load size is inaccurate */\n    if ((uVar8 & 1) != 0) {\n      puVar5 = (undefined4 *)((int)__src + 1);\n      puVar2 = (undefined4 *)((int)puVar3 + 1);\n      *(undefined *)puVar3 = *__src;\n    }\n    if ((uVar8 + 4 & 2) != 0) {\n      *(undefined2 *)puVar2 = *(undefined2 *)puVar5;\n    }\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008234c", 
            "calling": [
                "__sfvwrite_r"
            ], 
            "imported": false, 
            "current_name": "memcpy"
        }, 
        "banzai": {
            "renaming": {}, 
            "code": "\nvoid banzai(void)\n\n{\n  disableIRQinterrupts();\n  do {\n  } while (-1 < *(int *)(DAT_2007001c + 8) << 0x1f);\n  *(undefined4 *)(DAT_2007001c + 4) = DAT_20070020;\n  do {\n  } while (-1 < *(int *)(DAT_2007001c + 8) << 0x1f);\n  *DAT_20070028 = DAT_20070024;\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x20070000", 
            "calling": [
                "Reset_Handler", 
                "tickReset"
            ], 
            "imported": false, 
            "current_name": "banzai"
        }, 
        "__aeabi_ul2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_ul2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar1 = param_1;\n  uVar2 = param_2;\n  if (param_2 == 0) {\n    uVar1 = 0;\n    uVar2 = param_1;\n  }\n  iVar5 = 0x5b000000;\n  if (param_2 == 0) {\n    iVar5 = 0x4b000000;\n  }\n  iVar3 = count_leading_zeroes(uVar2);\n  uVar4 = iVar3 - 8;\n  iVar5 = iVar5 + -0x800000 + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar2 << (iVar3 + 0x18U & 0xff);\n    uVar2 = iVar5 + ((uVar2 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar1 | uVar4 << 1) == 0) {\n      uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n    }\n    return uVar2;\n  }\n  uVar6 = uVar1 << (uVar4 & 0xff);\n  uVar2 = iVar5 + (uVar2 << (uVar4 & 0xff)) +\n          (uVar1 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar6);\n  if (uVar6 == 0x80000000) {\n    uVar2 = uVar2 & 0xfffffffe;\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000818b8", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_ul2f"
        }, 
        "__aeabi_fcmpeq": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpeq(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cfcmpeq();\n  return in_ZR != '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081c6c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmpeq"
        }, 
        "memchr": {
            "renaming": {}, 
            "code": "\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  uVar3 = __c & 0xff;\n  if (((uint)__s & 3) == 0) {\nLAB_000843b4:\n    puVar2 = (uint *)__s;\n    puVar1 = (uint *)__n;\n    if ((uint *)0x3 < __n) {\n      uVar7 = uVar3 | uVar3 << 8;\n      do {\n                    /* WARNING: Load size is inaccurate */\n        uVar4 = *__s ^ (uVar7 | uVar7 << 0x10);\n        puVar2 = (uint *)__s;\n        puVar1 = (uint *)__n;\n        if ((uVar4 + 0xfefefeff & ~uVar4 & 0x80808080) != 0) break;\n        __n = __n + -4;\n        puVar2 = (uint *)((int)__s + 4);\n        __s = (uint *)((int)__s + 4);\n        puVar1 = (uint *)__n;\n      } while ((uint *)0x3 < __n);\n    }\n    __s = puVar1;\n    pbVar6 = (byte *)((int)__s + -1);\n    if (((uint *)__s != (uint *)0x0) && (__s = puVar2, *(byte *)puVar2 != uVar3)) {\n      pbVar5 = (byte *)0x0;\n      do {\n        __s = (void *)((int)__s + 1);\n        bVar8 = pbVar5 == pbVar6;\n        pbVar5 = pbVar5 + 1;\n        if (bVar8) goto LAB_000843dc;\n                    /* WARNING: Load size is inaccurate */\n      } while (*__s != uVar3);\n    }\n  }\n  else if (__n == 0) {\nLAB_000843dc:\n    __s = (uint *)0x0;\n  }\n  else {\n                    /* WARNING: Load size is inaccurate */\n    if (*__s != uVar3) {\n      puVar2 = (uint *)((int)__s + 1);\n      __n = (size_t)(__n - 1);\n      do {\n        __s = puVar2;\n        if (((uint)__s & 3) == 0) goto LAB_000843b4;\n        if ((uint *)__n == (uint *)0x0) goto LAB_000843dc;\n                    /* WARNING: Load size is inaccurate */\n        puVar2 = (uint *)((int)__s + 1);\n        __n = (size_t)(__n + -1);\n      } while (*__s != uVar3);\n    }\n  }\n  return __s;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084384", 
            "calling": [
                "__sfvwrite_r", 
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "memchr"
        }, 
        "__sflush_r": {
            "renaming": {}, 
            "code": "\nundefined4 __sflush_r(int *param_1,int *param_2)\n\n{\n  int *piVar1;\n  int iVar2;\n  ushort uVar3;\n  uint uVar4;\n  int iVar5;\n  code *pcVar6;\n  int iVar7;\n  \n  uVar3 = *(ushort *)(param_2 + 3);\n  if ((int)((uint)uVar3 << 0x1c) < 0) {\n    iVar7 = param_2[4];\n    if (iVar7 == 0) {\n      return 0;\n    }\n    iVar2 = *param_2;\n    if ((uVar3 & 3) == 0) {\n      iVar5 = param_2[5];\n    }\n    else {\n      iVar5 = 0;\n    }\n    *param_2 = iVar7;\n    iVar2 = iVar2 - iVar7;\n    param_2[2] = iVar5;\n    do {\n      if (iVar2 < 1) {\n        return 0;\n      }\n      iVar5 = (*(code *)param_2[9])(param_1,param_2[7],iVar7,iVar2);\n      iVar2 = iVar2 - iVar5;\n      iVar7 = iVar7 + iVar5;\n    } while (0 < iVar5);\nLAB_00083a54:\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n    return 0xffffffff;\n  }\n  *(ushort *)(param_2 + 3) = uVar3 | 0x800;\n  if ((param_2[1] < 1) && (param_2[0xf] < 1)) {\n    return 0;\n  }\n  pcVar6 = (code *)param_2[10];\n  if (pcVar6 == (code *)0x0) {\n    return 0;\n  }\n  uVar4 = (uint)(uVar3 | 0x800);\n  iVar7 = *param_1;\n  *param_1 = 0;\n  if ((uVar3 & 0x1000) == 0) {\n    iVar2 = (*pcVar6)(param_1,param_2[7],uVar4 & 0x1000,1);\n    if ((iVar2 == -1) && (iVar5 = *param_1, iVar5 != 0)) {\n      if ((iVar5 == 0x1d) || (iVar5 == 0x16)) {\n        *param_1 = iVar7;\n        return 0;\n      }\n      goto LAB_00083a54;\n    }\n    uVar4 = (uint)*(ushort *)(param_2 + 3);\n    pcVar6 = (code *)param_2[10];\n  }\n  else {\n    iVar2 = param_2[0x14];\n  }\n  if (((int)(uVar4 << 0x1d) < 0) && (iVar2 = iVar2 - param_2[1], param_2[0xc] != 0)) {\n    iVar2 = iVar2 - param_2[0xf];\n  }\n  iVar2 = (*pcVar6)(param_1,param_2[7],iVar2,0);\n  if (iVar2 == -1) {\n    iVar5 = *param_1;\n    if (iVar5 != 0) {\n      if ((iVar5 != 0x1d) && (iVar5 != 0x16)) {\n        *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n        return 0xffffffff;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xf7ff;\n      *param_2 = param_2[4];\n      param_2[1] = 0;\n      goto LAB_00083a00;\n    }\n    uVar3 = *(ushort *)(param_2 + 3) & 0xf7ff;\n    param_2[1] = 0;\n    *(ushort *)(param_2 + 3) = uVar3;\n    *param_2 = param_2[4];\n  }\n  else {\n    uVar3 = *(ushort *)(param_2 + 3) & 0xf7ff;\n    *param_2 = param_2[4];\n    *(ushort *)(param_2 + 3) = uVar3;\n    param_2[1] = 0;\n  }\n  if ((int)((uint)uVar3 << 0x13) < 0) {\n    param_2[0x14] = iVar2;\n  }\nLAB_00083a00:\n  piVar1 = (int *)param_2[0xc];\n  *param_1 = iVar7;\n  if (piVar1 == (int *)0x0) {\n    return 0;\n  }\n  if (piVar1 != param_2 + 0x10) {\n    _free_r(param_1);\n  }\n  param_2[0xc] = 0;\n  return 0;\n}\n\n", 
            "called": [
                "_free_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083994", 
            "calling": [
                "_fflush_r"
            ], 
            "imported": false, 
            "current_name": "__sflush_r"
        }, 
        "__aeabi_cfrcmple": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_cfrcmple(undefined4 param_1,undefined4 param_2)\n\n{\n  __aeabi_cfcmpeq(param_2,param_1);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081c54", 
            "calling": [
                "__aeabi_fcmpge", 
                "__aeabi_fcmpgt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfrcmple"
        }, 
        "__libc_fini_array": {
            "renaming": {}, 
            "code": "\nvoid __libc_fini_array(void)\n\n{\n  int iVar1;\n  code **ppcVar2;\n  \n  iVar1 = (int)PTR___fini_array_end_00083c3c -\n          (int)PTR___do_global_dtors_aux_fini_array_entry_00083c38 >> 2;\n  if (iVar1 != 0) {\n    ppcVar2 = (code **)(PTR___do_global_dtors_aux_fini_array_entry_00083c38 + iVar1 * 4);\n    do {\n      iVar1 = iVar1 + -1;\n      ppcVar2 = ppcVar2 + -1;\n      (**ppcVar2)();\n    } while (iVar1 != 0);\n  }\n  _fini();\n  return;\n}\n\n", 
            "called": [
                "_fini", 
                "__do_global_dtors_aux"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083c10", 
            "calling": [], 
            "imported": false, 
            "current_name": "__libc_fini_array"
        }, 
        "_init": {
            "renaming": {}, 
            "code": "\nvoid _init(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00085858", 
            "calling": [
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "_init"
        }, 
        "__swsetup_r": {
            "renaming": {}, 
            "code": "\nundefined4 __swsetup_r(undefined4 *param_1,int *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  ushort uVar4;\n  \n  if ((*(int *)PTR__impure_ptr_000838c8 != 0) &&\n     (*(int *)(*(int *)PTR__impure_ptr_000838c8 + 0x38) == 0)) {\n    __sinit();\n  }\n  uVar4 = *(ushort *)(param_2 + 3);\n  uVar3 = (uint)uVar4;\n  if ((int)(uVar3 << 0x1c) < 0) {\n    iVar2 = param_2[4];\n  }\n  else {\n    if (-1 < (int)(uVar3 << 0x1b)) {\n      *param_1 = 9;\n      *(ushort *)(param_2 + 3) = uVar4 | 0x40;\n      return 0xffffffff;\n    }\n    if ((int)(uVar3 << 0x1d) < 0) {\n      if ((int *)param_2[0xc] != (int *)0x0) {\n        if ((int *)param_2[0xc] != param_2 + 0x10) {\n          _free_r(param_1);\n          uVar4 = *(ushort *)(param_2 + 3);\n        }\n        param_2[0xc] = 0;\n      }\n      iVar2 = param_2[4];\n      uVar4 = uVar4 & 0xffdb;\n      *param_2 = iVar2;\n      param_2[1] = 0;\n    }\n    else {\n      iVar2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = uVar4 | 8;\n    uVar3 = (uint)(uVar4 | 8);\n  }\n  if ((iVar2 == 0) && ((uVar3 & 0x280) != 0x200)) {\n    __smakebuf_r(param_1,param_2);\n    uVar3 = (uint)*(ushort *)(param_2 + 3);\n    iVar2 = param_2[4];\n  }\n  uVar1 = uVar3 & 1;\n  if (uVar1 == 0) {\n    if (-1 < (int)(uVar3 << 0x1e)) {\n      uVar1 = param_2[5];\n    }\n    param_2[2] = uVar1;\n  }\n  else {\n    param_2[6] = -param_2[5];\n    param_2[2] = 0;\n  }\n  if ((iVar2 == 0) && ((int)((uint)*(ushort *)(param_2 + 3) << 0x18) < 0)) {\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n    return 0xffffffff;\n  }\n  return 0;\n}\n\n", 
            "called": [
                "_free_r", 
                "__sinit", 
                "__smakebuf_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083808", 
            "calling": [
                "__swbuf_r", 
                "__sfvwrite_r", 
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "__swsetup_r"
        }, 
        "_wcrtomb_r": {
            "renaming": {}, 
            "code": "\nvoid _wcrtomb_r(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 *param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  code *pcVar3;\n  undefined auStack_24 [12];\n  \n  if (param_2 == 0) {\n    pcVar3 = *(code **)PTR___wctomb_000845b8;\n    uVar1 = __locale_charset();\n    iVar2 = (*pcVar3)(param_1,auStack_24,0,uVar1,param_4);\n  }\n  else {\n    pcVar3 = *(code **)PTR___wctomb_000845b8;\n    uVar1 = __locale_charset();\n    iVar2 = (*pcVar3)(param_1,param_2,param_3,uVar1,param_4);\n  }\n  if (iVar2 == -1) {\n    *param_4 = 0;\n    *param_1 = 0x8a;\n  }\n  return;\n}\n\n", 
            "called": [
                "__ascii_wctomb", 
                "__locale_charset"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008456c", 
            "calling": [
                "_fputwc_r"
            ], 
            "imported": false, 
            "current_name": "_wcrtomb_r"
        }, 
        "available": {
            "renaming": {}, 
            "code": "\nint __thiscall UARTClass::available(UARTClass *this)\n\n{\n  return this->_rx_buffer->_iHead - this->_rx_buffer->_iTail & 0x7f;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000813e4", 
            "calling": [
                "serialEventRun"
            ], 
            "imported": false, 
            "current_name": "available"
        }, 
        "main": {
            "renaming": {}, 
            "code": "\nint main(void)\n\n{\n  EVP_PKEY_CTX *in_r0;\n  \n  _watchdogDefaultSetup();\n  init(in_r0);\n  initVariant();\n  delay(1);\n  setup();\n  do {\n    do {\n      loop();\n    } while (DAT_000816d0 == 0);\n    serialEventRun();\n  } while( true );\n}\n\n", 
            "called": [
                "serialEventRun", 
                "delay", 
                "initVariant", 
                "_watchdogDefaultSetup", 
                "init", 
                "loop", 
                "setup"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000816a8", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "main"
        }, 
        "_free_r": {
            "renaming": {}, 
            "code": "\nvoid _free_r(undefined4 param_1,int param_2)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined *puVar8;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  __malloc_lock();\n  puVar8 = PTR___malloc_av__00083f24;\n  uVar2 = *(uint *)(param_2 + -4);\n  iVar6 = param_2 + -8;\n  uVar5 = uVar2 & 0xfffffffe;\n  iVar4 = iVar6 + uVar5;\n  uVar7 = *(uint *)(iVar4 + 4) & 0xfffffffc;\n  if (*(int *)(PTR___malloc_av__00083f24 + 8) == iVar4) {\n    uVar7 = uVar7 + uVar5;\n    if (-1 < (int)(uVar2 << 0x1f)) {\n      iVar6 = iVar6 - *(int *)(param_2 + -8);\n      iVar3 = *(int *)(iVar6 + 0xc);\n      iVar4 = *(int *)(iVar6 + 8);\n      uVar7 = uVar7 + *(int *)(param_2 + -8);\n      *(int *)(iVar4 + 0xc) = iVar3;\n      *(int *)(iVar3 + 8) = iVar4;\n    }\n    uVar2 = *(uint *)PTR___malloc_trim_threshold_00083f2c;\n    *(uint *)(iVar6 + 4) = uVar7 | 1;\n    *(int *)(puVar8 + 8) = iVar6;\n    if (uVar2 <= uVar7) {\n      _malloc_trim_r(param_1,*(undefined4 *)PTR___malloc_top_pad_00083f30);\n    }\n  }\n  else {\n    uVar2 = uVar2 & 1;\n    *(uint *)(iVar4 + 4) = uVar7;\n    if (uVar2 == 0) {\n      iVar6 = iVar6 - *(int *)(param_2 + -8);\n      puVar1 = *(undefined **)(iVar6 + 8);\n      uVar5 = uVar5 + *(int *)(param_2 + -8);\n      if (puVar1 == puVar8 + 8) {\n        uVar2 = 1;\n      }\n      else {\n        iVar3 = *(int *)(iVar6 + 0xc);\n        *(int *)(puVar1 + 0xc) = iVar3;\n        *(undefined **)(iVar3 + 8) = puVar1;\n      }\n    }\n    else {\n      uVar2 = 0;\n    }\n    if (-1 < *(int *)(iVar4 + uVar7 + 4) << 0x1f) {\n      uVar5 = uVar5 + uVar7;\n      puVar1 = *(undefined **)(iVar4 + 8);\n      if ((uVar2 == 0) && (puVar1 == PTR_PTR___malloc_av__00083f28)) {\n        *(int *)(puVar8 + 0x14) = iVar6;\n        *(int *)(puVar8 + 0x10) = iVar6;\n        *(undefined **)(iVar6 + 0xc) = puVar1;\n        *(undefined **)(iVar6 + 8) = puVar1;\n        *(uint *)(iVar6 + 4) = uVar5 | 1;\n        *(uint *)(iVar6 + uVar5) = uVar5;\n        goto LAB_00083e30;\n      }\n      iVar4 = *(int *)(iVar4 + 0xc);\n      *(int *)(puVar1 + 0xc) = iVar4;\n      *(undefined **)(iVar4 + 8) = puVar1;\n    }\n    *(uint *)(iVar6 + 4) = uVar5 | 1;\n    *(uint *)(iVar6 + uVar5) = uVar5;\n    if (uVar2 == 0) {\n      if (uVar5 < 0x200) {\n        uVar2 = *(uint *)(puVar8 + 4);\n        puVar1 = puVar8 + (uVar5 & 0xfffffff8);\n        iVar4 = *(int *)(puVar1 + 8);\n        *(int *)(iVar6 + 8) = iVar4;\n        *(undefined **)(iVar6 + 0xc) = puVar1;\n        *(uint *)(puVar8 + 4) = uVar2 | 1 << ((int)(uVar5 >> 3) >> 2 & 0xffU);\n        *(int *)(puVar1 + 8) = iVar6;\n        *(int *)(iVar4 + 0xc) = iVar6;\n        __malloc_unlock(param_1);\n        return;\n      }\n      uVar2 = uVar5 >> 9;\n      if (uVar2 < 5) {\n        iVar4 = (uVar5 >> 6) + 0x38;\n        iVar3 = iVar4 * 2;\n      }\n      else if (uVar2 < 0x15) {\n        iVar4 = uVar2 + 0x5b;\n        iVar3 = iVar4 * 2;\n      }\n      else if (uVar2 < 0x55) {\n        iVar4 = (uVar5 >> 0xc) + 0x6e;\n        iVar3 = iVar4 * 2;\n      }\n      else if (uVar2 < 0x155) {\n        iVar4 = (uVar5 >> 0xf) + 0x77;\n        iVar3 = iVar4 * 2;\n      }\n      else if (uVar2 < 0x555) {\n        iVar4 = (uVar5 >> 0x12) + 0x7c;\n        iVar3 = iVar4 * 2;\n      }\n      else {\n        iVar3 = 0xfc;\n        iVar4 = 0x7e;\n      }\n      puVar8 = puVar8 + iVar3 * 4;\n      puVar1 = *(undefined **)(puVar8 + 8);\n      if (puVar1 == puVar8) {\n        *(uint *)(PTR___malloc_av__00083f24 + 4) =\n             *(uint *)(PTR___malloc_av__00083f24 + 4) | 1 << (iVar4 >> 2 & 0xffU);\n        puVar8 = puVar1;\n      }\n      else {\n        do {\n          if ((*(uint *)(puVar1 + 4) & 0xfffffffc) <= uVar5) break;\n          puVar1 = *(undefined **)(puVar1 + 8);\n        } while (puVar8 != puVar1);\n        puVar8 = *(undefined **)(puVar1 + 0xc);\n      }\n      *(undefined **)(iVar6 + 0xc) = puVar8;\n      *(undefined **)(iVar6 + 8) = puVar1;\n      *(int *)(puVar8 + 8) = iVar6;\n      *(int *)(puVar1 + 0xc) = iVar6;\n    }\n  }\nLAB_00083e30:\n  __malloc_unlock(param_1);\n  return;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_malloc_trim_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083d9c", 
            "calling": [
                "__sfvwrite_r", 
                "__sflush_r", 
                "_fclose_r", 
                "_realloc_r", 
                "__swsetup_r", 
                "free", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "_free_r"
        }, 
        "RingBuffer": {
            "renaming": {}, 
            "code": "\nRingBuffer * __thiscall RingBuffer::RingBuffer(RingBuffer *this)\n\n{\n  memset(this,0,0x80);\n  this->_iHead = 0;\n  this->_iTail = 0;\n  return this;\n}\n\n", 
            "called": [
                "memset"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000813a8", 
            "calling": [
                "_GLOBAL__sub_I_g_APinDescription"
            ], 
            "imported": false, 
            "current_name": "RingBuffer"
        }, 
        "poll": {
            "renaming": {}, 
            "code": "\nint __thiscall Modbus::poll(Modbus *this,pollfd *__fds,nfds_t __nfds,int __timeout)\n\n{\n  byte bVar1;\n  uint8_t uVar2;\n  uint32_t uVar3;\n  uint unaff_r6;\n  \n  if (this->u8serno < 4) {\n    bVar1 = (**(code **)(*(int *)this->port + 8))();\n    unaff_r6 = (uint)bVar1;\n  }\n  uVar3 = millis();\n  if (this->u32timeOut < uVar3) {\n    this->u8lastError = 0xff;\n    this->u8state = '\\0';\n    this->u16errCnt = this->u16errCnt + 1;\n  }\n  else if (7 < unaff_r6) {\n    getRxBuffer(this);\n    uVar2 = validateAnswer(this);\n    if (uVar2 == '\\0') {\n      if (this->au8Buffer[1] - 3 < 2) {\n        get_FC3(this);\n      }\n      this->u8state = '\\0';\n      uVar2 = this->u8BufferSize;\n    }\n    else {\n      this->u8state = '\\0';\n    }\n    goto LAB_000804a2;\n  }\n  uVar2 = '\\0';\nLAB_000804a2:\n  return (int)(char)uVar2;\n}\n\n", 
            "called": [
                "validateAnswer", 
                "getRxBuffer", 
                "get_FC3", 
                "millis"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008043e", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "poll"
        }, 
        "realloc": {
            "renaming": {}, 
            "code": "\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)_realloc_r(*(undefined4 *)PTR__impure_ptr_000825ac,__ptr,__size);\n  return pvVar1;\n}\n\n", 
            "called": [
                "_realloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000825a0", 
            "calling": [
                "changeBuffer"
            ], 
            "imported": false, 
            "current_name": "realloc"
        }, 
        "__malloc_lock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_lock(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082598", 
            "calling": [
                "_malloc_trim_r", 
                "_free_r", 
                "_realloc_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_lock"
        }, 
        "calcCRC": {
            "renaming": {}, 
            "code": "\nuint16_t __thiscall Modbus::calcCRC(Modbus *this,uint8_t u8length)\n\n{\n  Modbus *pMVar1;\n  uint uVar2;\n  char cVar3;\n  uint uVar4;\n  \n  uVar2 = 0xffff;\n  for (pMVar1 = this; ((int)pMVar1 - (int)this & 0xffU) < (uint)u8length;\n      pMVar1 = (Modbus *)((int)&pMVar1->port + 1)) {\n    uVar2 = uVar2 ^ pMVar1->au8Buffer[0];\n    cVar3 = '\\b';\n    do {\n      uVar4 = uVar2 & 1;\n      uVar2 = uVar2 >> 1;\n      if (uVar4 != 0) {\n        uVar2 = uVar2 ^ 0xa001;\n      }\n      cVar3 = cVar3 + -1;\n    } while (cVar3 != '\\0');\n  }\n  return (ushort)(uVar2 << 8) | (ushort)(uVar2 >> 8);\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008021c", 
            "calling": [
                "sendTxBuffer"
            ], 
            "imported": false, 
            "current_name": "calcCRC"
        }, 
        "__aeabi_f2iz": {
            "renaming": {}, 
            "code": "\nuint __aeabi_f2iz(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 << 1 < 0x7f000000) {\n    return 0;\n  }\n  uVar1 = (param_1 << 1) >> 0x18;\n  uVar2 = 0x9e - uVar1;\n  if (uVar1 < 0x9f && uVar2 != 0) {\n    uVar1 = (param_1 << 8 | 0x80000000) >> (uVar2 & 0xff);\n    if ((param_1 & 0x80000000) != 0) {\n      uVar1 = -uVar1;\n    }\n    return uVar1;\n  }\n  if ((uVar2 == 0xffffff9f) && ((param_1 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  param_1 = param_1 & 0x80000000;\n  if (param_1 == 0) {\n    param_1 = 0x7fffffff;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081cd0", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__aeabi_f2iz"
        }, 
        "strlen": {
            "renaming": {}, 
            "code": "\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  uint *puVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  puVar2 = (uint *)((uint)__s & 0xfffffffc);\n  sVar1 = -((uint)__s & 3);\n  uVar3 = *puVar2;\n  if (((uint)__s & 3) != 0) {\n    uVar3 = uVar3 | 0xffffffffU >> ((sVar1 + 4 & 0x1f) << 3);\n  }\n  while (puVar2 = puVar2 + 1, (uVar3 + 0xfefefeff & ~uVar3 & 0x80808080) == 0) {\n    sVar1 = sVar1 + 4;\n    uVar3 = *puVar2;\n  }\n  bVar4 = (uVar3 & 0xff) == 0;\n  if (!bVar4) {\n    sVar1 = sVar1 + 1;\n    bVar4 = (uVar3 & 0xff00) == 0;\n  }\n  if (!bVar4) {\n    sVar1 = sVar1 + 1;\n    bVar4 = (uVar3 & 0xff0000) == 0;\n  }\n  if (!bVar4) {\n    sVar1 = sVar1 + 1;\n  }\n  return sVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082a50", 
            "calling": [
                "String", 
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "strlen"
        }, 
        "USART3_Handler": {
            "renaming": {}, 
            "code": "\nvoid USART3_Handler(void)\n\n{\n  UARTClass::IrqHandler((UARTClass *)PTR_Serial3_00080ae0);\n  return;\n}\n\n", 
            "called": [
                "IrqHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080ad8", 
            "calling": [], 
            "imported": false, 
            "current_name": "USART3_Handler"
        }, 
        "UARTClass": {
            "renaming": {}, 
            "code": "\nUARTClass * __thiscall\nUARTClass::UARTClass\n          (UARTClass *this,Uart *pUart,IRQn_Type dwIrq,uint32_t dwId,RingBuffer *pRx_buffer,\n          RingBuffer *pTx_buffer)\n\n{\n  undefined *puVar1;\n  \n  *(undefined4 *)&this->field_0x4 = 0;\n  *(undefined4 *)&this->field_0x8 = 1000;\n  puVar1 = PTR_PTR_write_1_00081504;\n  this->_pUart = pUart;\n  *(undefined **)this = puVar1;\n  this->_dwIrq = dwIrq;\n  this->_rx_buffer = pRx_buffer;\n  this->_dwId = dwId;\n  this->_tx_buffer = pTx_buffer;\n  return this;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000814e4", 
            "calling": [
                "_GLOBAL__sub_I_g_APinDescription", 
                "USARTClass"
            ], 
            "imported": false, 
            "current_name": "UARTClass"
        }, 
        "PendSV_Handler": {
            "renaming": {}, 
            "code": "\nvoid PendSV_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__halt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008116a", 
            "calling": [], 
            "imported": false, 
            "current_name": "PendSV_Handler"
        }, 
        "loop": {
            "renaming": {}, 
            "code": "\nvoid loop(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  undefined *puVar9;\n  undefined2 uVar10;\n  uint uVar11;\n  uint32_t uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  int iVar16;\n  int iVar17;\n  int *piVar18;\n  undefined4 uVar19;\n  int iVar20;\n  \n  puVar7 = PTR_estado_0008089c;\n  puVar9 = PTR_segundos_00080898;\n  puVar8 = PTR_minutos_00080894;\n  puVar3 = PTR_mmt_0008087c;\n  puVar5 = PTR_ssres_00080878;\n  puVar4 = PTR_mmres_00080874;\n  puVar2 = PTR_duty1_00080834;\n  puVar1 = PTR_au16data_00080830;\n  if ((byte)*PTR_u8state_0008082c < 10) {\n                    /* WARNING: Could not recover jumptable at 0x000805f0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)(&switchD_000805f0::switchdataD_000805f4 +\n              (uint)(&switchD_000805f0::switchdataD_000805f4)[(byte)*PTR_u8state_0008082c] * 2))();\n    return;\n  }\n  iVar17 = *(int *)PTR_minutos_00080894;\n  iVar16 = iVar17 - *(int *)PTR_mmres_00080874;\n  if (iVar16 < 0) {\n    iVar16 = iVar16 + 0x3c;\n  }\n  *(int *)PTR_mmt_0008087c = iVar16;\n  puVar6 = PTR_sst_00080880;\n  uVar11 = *(uint *)puVar9;\n  iVar16 = uVar11 - *(int *)puVar5;\n  *(int *)PTR_sst_00080880 = iVar16;\n  if (iVar16 < 0) {\n    *(int *)puVar3 = *(int *)puVar3 + -1;\n    *(int *)puVar6 = iVar16 + 0x3c;\n  }\n  iVar16 = *(int *)puVar3;\n  iVar20 = *(int *)puVar6;\n  *(short *)(puVar1 + 0x36) = (short)iVar16;\n  *(short *)(puVar1 + 0x38) = (short)iVar20;\n  if ((iVar16 == 0) && (iVar20 == 0)) {\n    *(undefined4 *)PTR_terminar_ciclo_00080868 = 1;\n    *(undefined4 *)puVar4 = 0;\n    *(undefined4 *)puVar5 = 0;\n  }\n  puVar6 = PTR_segundosp_00080888;\n  puVar3 = PTR_minutosp_00080884;\n  if (*(int *)PTR_minutosp_00080884 == iVar17) {\n    iVar16 = 1 - uVar11;\n    if (1 < uVar11) {\n      iVar16 = 0;\n    }\n    *(int *)PTR_segundosp_00080888 = iVar16;\n    if (iVar16 != 0) goto LAB_00080a08;\n  }\n  else {\nLAB_00080a08:\n    *(int *)puVar3 = iVar17;\n    puVar3 = PTR_espera_plancha_00080a50;\n    *(uint *)puVar6 = uVar11;\n    *(undefined4 *)puVar4 = 0;\n    *(undefined4 *)puVar5 = 0;\n    *(undefined4 *)puVar3 = 0;\n  }\n  puVar6 = PTR_espera_plancha_0008088c;\n  puVar3 = PTR_tiempo_espera_00080860;\n  iVar16 = *(int *)puVar7;\n  if (iVar16 == 0) {\n    *(undefined4 *)puVar4 = 0;\n    *(undefined4 *)puVar5 = 0;\n    piVar18 = (int *)PTR_espera_plancha_0008088c;\nLAB_000808f2:\n    *piVar18 = iVar16;\n  }\n  else {\n    if (iVar16 != 1) goto LAB_000808f4;\n    if (*(int *)PTR_espera_plancha_0008088c < *(int *)PTR_tiempo_espera_00080860) {\n      uVar12 = millis();\n      puVar7 = PTR_reloj_00080890;\n      if (*(uint *)PTR_reloj_00080890 < uVar12) {\n        *(int *)puVar6 = *(int *)puVar6 + 1;\n        uVar12 = millis();\n        *(uint32_t *)puVar7 = uVar12 + 1000;\n      }\n    }\n    if (*(int *)puVar6 < *(int *)puVar3) goto LAB_000808f4;\n    *(int *)PTR_espera_plancha_0008088c = *(int *)puVar3 + 1;\n    piVar18 = (int *)PTR_mmres_00080a20;\n    puVar3 = PTR_ssres_00080a1c;\n    if (*(int *)puVar4 < *(int *)puVar8) {\n      uVar12 = millis();\n      puVar3 = PTR_reloj_00080890;\n      if (*(uint *)PTR_reloj_00080890 < uVar12) {\n        *(int *)puVar5 = *(int *)puVar5 + 1;\n        uVar12 = millis();\n        *(uint32_t *)puVar3 = uVar12 + 1000;\n      }\n    }\n    else {\n      if (*(int *)puVar4 != *(int *)puVar8) goto LAB_000808f4;\n      if (*(int *)puVar9 < *(int *)puVar5) {\n        iVar16 = 0;\n        *(undefined4 *)PTR_ssres_00080a1c = 0;\n        goto LAB_000808f2;\n      }\n      uVar12 = millis();\n      puVar8 = PTR_reloj_00080a54;\n      if (*(uint *)PTR_reloj_00080a54 < uVar12) {\n        *(int *)puVar3 = *(int *)puVar3 + 1;\n        uVar12 = millis();\n        *(uint32_t *)puVar8 = uVar12 + 1000;\n      }\n    }\n    if (0x3b < *(int *)puVar5) {\n      *(undefined4 *)PTR_ssres_00080a1c = 0;\n      *(int *)puVar4 = *(int *)puVar4 + 1;\n    }\n  }\nLAB_000808f4:\n  uVar12 = millis();\n  puVar8 = PTR_kia1_00080a60;\n  puVar3 = PTR_incre_00080a5c;\n  puVar5 = PTR_tiempopid1_00080a58;\n  puVar4 = PTR_YN_00080a24;\n  if (*(uint *)PTR_tiempopid1_00080a58 < uVar12) {\n    uVar13 = __floatsisf(*(undefined4 *)PTR_tempe_z1_00080a28);\n    uVar13 = __aeabi_fsub(uVar13,*(undefined4 *)PTR_temperatura1_00080a2c);\n    *(undefined4 *)PTR_e1_00080a30 = uVar13;\n    puVar9 = PTR_ep1_00080a34;\n    uVar19 = *(undefined4 *)PTR_ep1_00080a34;\n    uVar14 = __addsf3(uVar13,uVar19);\n    uVar14 = __aeabi_fmul(uVar14,*(undefined4 *)puVar8);\n    puVar7 = PTR_kip1_00080a64;\n    uVar14 = __addsf3(uVar14,*(undefined4 *)PTR_kip1_00080a64);\n    *(undefined4 *)puVar8 = uVar14;\n    uVar19 = __aeabi_fsub(uVar13,uVar19);\n    uVar19 = __aeabi_fmul(uVar19,*(undefined4 *)PTR_kda1_00080a38);\n    puVar8 = PTR_kdp1_00080a3c;\n    uVar19 = __aeabi_fsub(uVar19,*(undefined4 *)PTR_kdp1_00080a3c);\n    *(undefined4 *)PTR_kda1_00080a38 = uVar19;\n    uVar15 = __aeabi_fmul(uVar13,*(undefined4 *)PTR_kpa1_00080a40);\n    uVar15 = __addsf3(uVar15,uVar14);\n    __addsf3(uVar15,uVar19);\n    uVar15 = __aeabi_f2iz();\n    *(undefined4 *)PTR_pid1_00080a44 = uVar15;\n    uVar15 = __floatsisf();\n    *(undefined4 *)puVar9 = uVar13;\n    *(undefined4 *)puVar4 = uVar15;\n    *(undefined4 *)puVar3 = 0;\n    *(undefined4 *)puVar7 = uVar14;\n    *(undefined4 *)puVar8 = uVar19;\n    uVar12 = millis();\n    *(uint32_t *)puVar5 = uVar12 + *(int *)puVar2;\n  }\n  uVar13 = __floatsisf(*(undefined4 *)puVar2);\n  iVar16 = __aeabi_fcmpge(*(undefined4 *)puVar4,uVar13);\n  if (iVar16 != 0) {\n    *(undefined4 *)PTR_YN_00080a24 = uVar13;\n  }\n  iVar16 = __aeabi_fcmple(*(undefined4 *)puVar4,0);\n  if (iVar16 != 0) {\n    *(undefined4 *)PTR_YN_00080a24 = 0;\n  }\n  uVar10 = __fixunssfsi(*(undefined4 *)puVar4);\n  iVar16 = *(int *)puVar3;\n  *(undefined2 *)(puVar1 + 0x2a) = uVar10;\n  *(int *)puVar3 = iVar16 + 1;\n  *(uint *)PTR_in1_00080a4c = *(ushort *)PTR_data8024_00080a48 & 1 ^ 1;\n  return;\n}\n\n", 
            "called": [
                "__floatunsisf", 
                "__aeabi_fmul", 
                "__floatsisf", 
                "__aeabi_fsub", 
                "__aeabi_f2iz", 
                "__addsf3", 
                "__aeabi_fcmpge", 
                "__aeabi_fcmple", 
                "query", 
                "__fixunssfsi", 
                "millis", 
                "poll"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000805d0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "loop"
        }, 
        "changeBuffer": {
            "renaming": {}, 
            "code": "\nuchar __thiscall String::changeBuffer(String *this,uint maxStrLen)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)realloc(this->buffer,maxStrLen + 1);\n  if (pcVar1 != (char *)0x0) {\n    this->buffer = pcVar1;\n    this->capacity = maxStrLen;\n    pcVar1 = (char *)0x1;\n  }\n  return (uchar)pcVar1;\n}\n\n", 
            "called": [
                "realloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081622", 
            "calling": [
                "reserve"
            ], 
            "imported": false, 
            "current_name": "changeBuffer"
        }, 
        "_exit": {
            "renaming": {}, 
            "code": "\nvoid _exit(int status)\n\n{\n  iprintf(PTR_s_Exiting_with_status__d__000811fc,status);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "iprintf"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811f0", 
            "calling": [], 
            "imported": false, 
            "current_name": "_exit"
        }, 
        "operator_bool": {
            "renaming": {}, 
            "code": "\n/* Original name: operator bool */\n\nbool __thiscall UARTClass::operator_bool(UARTClass *this)\n\n{\n  return true;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000813e0", 
            "calling": [], 
            "imported": false, 
            "current_name": "operator_bool"
        }, 
        "_close_r": {
            "renaming": {}, 
            "code": "\nvoid _close_r(int *param_1,int param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_00084620;\n  *(undefined4 *)PTR_errno_00084620 = 0;\n  iVar2 = _close(param_2);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_close"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084600", 
            "calling": [
                "__sclose"
            ], 
            "imported": false, 
            "current_name": "_close_r"
        }, 
        "PIO_SetInput": {
            "renaming": {}, 
            "code": "\nvoid PIO_SetInput(undefined4 *param_1,undefined4 param_2,uint param_3)\n\n{\n  bool bVar1;\n  \n  bVar1 = (int)(param_3 << 0x1f) < 0;\n  param_1[0x11] = param_2;\n  if (bVar1) {\n    param_1[0x19] = param_2;\n  }\n  if (!bVar1) {\n    param_1[0x18] = param_2;\n  }\n  bVar1 = (param_3 & 10) != 0;\n  if (bVar1) {\n    param_1[8] = param_2;\n  }\n  if (!bVar1) {\n    param_1[9] = param_2;\n  }\n  if (((int)(param_3 << 0x1e) < 0) || ((int)(param_3 << 0x1c) < 0)) {\n    param_1[0x20] = param_2;\n  }\n  param_1[5] = param_2;\n  *param_1 = param_2;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080d54", 
            "calling": [
                "PIO_Configure"
            ], 
            "imported": false, 
            "current_name": "PIO_SetInput"
        }, 
        "_sbrk_r": {
            "renaming": {}, 
            "code": "\nvoid _sbrk_r(int *param_1,int param_2)\n\n{\n  undefined *puVar1;\n  caddr_t pcVar2;\n  \n  puVar1 = PTR_errno_00082990;\n  *(undefined4 *)PTR_errno_00082990 = 0;\n  pcVar2 = _sbrk(param_2);\n  if ((pcVar2 == (caddr_t)0xffffffff) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_sbrk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082970", 
            "calling": [
                "_malloc_trim_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk_r"
        }, 
        "__sseek": {
            "renaming": {}, 
            "code": "\nvoid __sseek(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  ushort uVar2;\n  \n  iVar1 = _lseek_r(param_1,(int)*(short *)(param_2 + 0xe));\n  if (iVar1 == -1) {\n    uVar2 = *(ushort *)(param_2 + 0xc) & 0xefff;\n  }\n  else {\n    uVar2 = *(ushort *)(param_2 + 0xc) | 0x1000;\n  }\n  if (iVar1 != -1) {\n    *(int *)(param_2 + 0x50) = iVar1;\n  }\n  *(ushort *)(param_2 + 0xc) = uVar2;\n  return;\n}\n\n", 
            "called": [
                "_lseek_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008449c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__sseek"
        }, 
        "_read_r": {
            "renaming": {}, 
            "code": "\nvoid _read_r(int *param_1,int param_2,char *param_3,int param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_0008474c;\n  *(undefined4 *)PTR_errno_0008474c = 0;\n  iVar2 = _read(param_2,param_3,param_4);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_read"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084728", 
            "calling": [
                "__sread"
            ], 
            "imported": false, 
            "current_name": "_read_r"
        }, 
        "initVariant": {
            "renaming": {}, 
            "code": "\nvoid initVariant(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000816a6", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "initVariant"
        }, 
        "__aeabi_fcmplt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmplt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfcmpeq();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081c80", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmplt"
        }, 
        "_fputwc_r": {
            "renaming": {}, 
            "code": "\nuint _fputwc_r(undefined4 param_1,uint param_2,byte **param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  byte *pbVar4;\n  uint uVar5;\n  byte local_1c;\n  byte abStack_1b [3];\n  \n  if (-1 < (int)((uint)*(ushort *)(param_3 + 3) << 0x12)) {\n    *(ushort *)(param_3 + 3) = *(ushort *)(param_3 + 3) | 0x2000;\n    param_3[0x19] = (byte *)((uint)param_3[0x19] | 0x2000);\n  }\n  uVar1 = __locale_mb_cur_max();\n  if ((uVar1 == 1) && (param_2 - 1 < 0xff)) {\n    uVar3 = param_2 & 0xff;\n    local_1c = (byte)uVar3;\n  }\n  else {\n    uVar1 = _wcrtomb_r(param_1,&local_1c,param_2,param_3 + 0x17);\n    if (uVar1 == 0xffffffff) {\n      *(ushort *)(param_3 + 3) = *(ushort *)(param_3 + 3) | 0x40;\n      return 0xffffffff;\n    }\n    if (uVar1 == 0) {\n      return param_2;\n    }\n    uVar3 = (uint)local_1c;\n  }\n  uVar5 = 0;\n  do {\n    pbVar4 = param_3[2] + -1;\n    param_3[2] = pbVar4;\n    if ((int)pbVar4 < 0) {\n      if ((int)param_3[6] <= (int)pbVar4) {\n        **param_3 = (byte)uVar3;\n        pbVar4 = *param_3;\n        uVar3 = (uint)*pbVar4;\n        if (uVar3 != 10) goto LAB_00083c90;\n      }\n      iVar2 = __swbuf_r(param_1,uVar3,param_3);\n      if (iVar2 == -1) {\n        return 0xffffffff;\n      }\n    }\n    else {\n      **param_3 = (byte)uVar3;\n      pbVar4 = *param_3;\nLAB_00083c90:\n      *param_3 = pbVar4 + 1;\n    }\n    if (uVar1 <= uVar5 + 1) {\n      return param_2;\n    }\n    uVar3 = (uint)abStack_1b[uVar5];\n    uVar5 = uVar5 + 1;\n  } while( true );\n}\n\n", 
            "called": [
                "__swbuf_r", 
                "__locale_mb_cur_max", 
                "_wcrtomb_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083c40", 
            "calling": [
                "__sprint_r.part.0"
            ], 
            "imported": false, 
            "current_name": "_fputwc_r"
        }, 
        "__libc_init_array": {
            "renaming": {}, 
            "code": "\nvoid __libc_init_array(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  code **ppcVar4;\n  int iVar5;\n  \n  iVar5 = (int)PTR___preinit_array_end_00081dbc - (int)PTR___preinit_array_end_00081dc0 >> 2;\n  if (iVar5 != 0) {\n    ppcVar4 = (code **)(PTR___preinit_array_end_00081dc0 + -4);\n    iVar3 = 0;\n    do {\n      iVar3 = iVar3 + 1;\n      ppcVar4 = ppcVar4 + 1;\n      (**ppcVar4)();\n    } while (iVar5 != iVar3);\n  }\n  puVar2 = PTR___preinit_array_end_00081dc8;\n  puVar1 = PTR__fini_00081dc4;\n  _init();\n  iVar5 = (int)puVar1 - (int)puVar2 >> 2;\n  if (iVar5 != 0) {\n    ppcVar4 = (code **)(puVar2 + -4);\n    iVar3 = 0;\n    do {\n      iVar3 = iVar3 + 1;\n      ppcVar4 = ppcVar4 + 1;\n      (**ppcVar4)();\n    } while (iVar5 != iVar3);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_init", 
                "register_fini", 
                "frame_dummy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081d7c", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "__libc_init_array"
        }, 
        "_lseek": {
            "renaming": {}, 
            "code": "\nint _lseek(int file_UNUSED,int ptr_UNUSED,int dir_UNUSED)\n\n{\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811c2", 
            "calling": [
                "_lseek_r"
            ], 
            "imported": false, 
            "current_name": "_lseek"
        }, 
        "UART_Handler": {
            "renaming": {}, 
            "code": "\nvoid UART_Handler(void)\n\n{\n  UARTClass::IrqHandler((UARTClass *)PTR_Serial_00080ab4);\n  return;\n}\n\n", 
            "called": [
                "IrqHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080aac", 
            "calling": [], 
            "imported": false, 
            "current_name": "UART_Handler"
        }, 
        "read": {
            "renaming": {}, 
            "code": "\nssize_t __thiscall UARTClass::read(UARTClass *this,int __fd,void *__buf,size_t __nbytes)\n\n{\n  byte bVar1;\n  RingBuffer *pRVar2;\n  \n  pRVar2 = this->_rx_buffer;\n  if (pRVar2->_iHead != pRVar2->_iTail) {\n    bVar1 = pRVar2->_aucBuffer[pRVar2->_iTail];\n    pRVar2->_iTail = pRVar2->_iTail + 1U & 0x7f;\n    return (uint)bVar1;\n  }\n  return -1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081412", 
            "calling": [], 
            "imported": false, 
            "current_name": "read"
        }, 
        "~String": {
            "renaming": {}, 
            "code": "\nvoid * String::_String(String *this,int __in_chrg)\n\n{\n  free(this->buffer);\n  return this;\n}\n\n", 
            "called": [
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000815fe", 
            "calling": [], 
            "imported": false, 
            "current_name": "~String"
        }, 
        "WDT_Disable": {
            "renaming": {}, 
            "code": "\nvoid WDT_Disable(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 4) = 0x8000;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081720", 
            "calling": [
                "_watchdogDefaultSetup"
            ], 
            "imported": false, 
            "current_name": "WDT_Disable"
        }, 
        "__halt": {
            "renaming": {}, 
            "code": "\nvoid __halt(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__halt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081188", 
            "calling": [
                "SVC_Handler", 
                "PendSV_Handler", 
                "__halt"
            ], 
            "imported": false, 
            "current_name": "__halt"
        }, 
        "__gesf2": {
            "renaming": {}, 
            "code": "\nuint __gesf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 0xffffffff;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081be4", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gesf2"
        }, 
        "__locale_charset": {
            "renaming": {}, 
            "code": "\nundefined * __locale_charset(void)\n\n{\n  return PTR_lc_ctype_charset_00084294;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084290", 
            "calling": [
                "_wcrtomb_r"
            ], 
            "imported": false, 
            "current_name": "__locale_charset"
        }, 
        "query": {
            "renaming": {}, 
            "code": "\nint8_t __thiscall Modbus::query(Modbus *this,modbus_t telegram)\n\n{\n  uchar uVar1;\n  ushort in_r1;\n  byte bVar3;\n  ushort *in_r2;\n  ushort *puVar4;\n  uint8_t uVar5;\n  ushort uVar6;\n  uint uVar7;\n  ushort *puVar8;\n  uchar local_1c;\n  uchar local_1b;\n  ushort local_1a;\n  uchar uVar2;\n  \n  uVar7 = (uint)in_r1;\n  if (this->u8id != '\\0') {\n    return -2;\n  }\n  if (this->u8state != '\\0') {\n    return -1;\n  }\n  if (0xf6 < (byte)(local_1c - 1)) {\n    return -3;\n  }\n  this->au8Buffer[0] = local_1c;\n  this->au8Buffer[1] = local_1b;\n  this->au16regs = in_r2;\n  this->au8Buffer[2] = (uchar)((uint)local_1a >> 8);\n  this->au8Buffer[3] = (uchar)local_1a;\n  uVar1 = (uchar)in_r1;\n  uVar2 = (uchar)(uVar7 >> 8);\n  switch(local_1b) {\n  case '\\x01':\n  case '\\x02':\n  case '\\x03':\n  case '\\x04':\n    this->au8Buffer[4] = uVar2;\n    break;\n  case '\\x05':\n    uVar6 = *in_r2;\n    if (uVar6 != 0) {\n      uVar6 = 1;\n    }\n    this->au8Buffer[4] = -(char)uVar6;\n    uVar7 = 0;\n    break;\n  case '\\x06':\n    this->au8Buffer[4] = (uchar)((uint)*in_r2 >> 8);\n    uVar7 = (uint)*in_r2;\n    break;\n  default:\n    goto switchD_0008031e_caseD_7;\n  case '\\x0f':\n    bVar3 = (byte)(in_r1 >> 3) & 0xfe;\n    if ((in_r1 & 0xf) != 0) {\n      bVar3 = bVar3 + 1;\n    }\n    this->au8Buffer[5] = uVar1;\n    this->au8Buffer[4] = uVar2;\n    this->au8Buffer[6] = bVar3;\n    uVar5 = '\\a';\n    goto LAB_0008034a;\n  case '\\x10':\n    this->au8Buffer[4] = uVar2;\n    this->au8Buffer[5] = uVar1;\n    puVar4 = in_r2 + -1;\n    this->au8Buffer[6] = uVar1 * '\\x02';\n    this->u8BufferSize = '\\a';\n    puVar8 = puVar4 + uVar7;\n    while (puVar4 != puVar8) {\n      bVar3 = this->u8BufferSize;\n      this->au8Buffer[bVar3] = (uchar)((uint)puVar4[1] >> 8);\n      uVar7 = bVar3 + 1 & 0xff;\n      this->u8BufferSize = (uint8_t)uVar7;\n      puVar4 = puVar4 + 1;\n      this->au8Buffer[uVar7] = (uchar)*puVar4;\n      this->u8BufferSize = bVar3 + 2;\n    }\n    goto switchD_0008031e_caseD_7;\n  }\n  this->au8Buffer[5] = (uchar)uVar7;\n  uVar5 = '\\x06';\nLAB_0008034a:\n  this->u8BufferSize = uVar5;\nswitchD_0008031e_caseD_7:\n  sendTxBuffer(this);\n  this->u8state = '\\x01';\n  return '\\0';\n}\n\n", 
            "called": [
                "sendTxBuffer"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000802da", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "query"
        }, 
        "TimeTick_Increment": {
            "renaming": {}, 
            "code": "\nvoid TimeTick_Increment(void)\n\n{\n  *(int *)PTR__dwTickCount_00081710 = *(int *)PTR__dwTickCount_00081710 + 1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081704", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "TimeTick_Increment"
        }, 
        "__sclose": {
            "renaming": {}, 
            "code": "\nvoid __sclose(undefined4 param_1,int param_2)\n\n{\n  _close_r(param_1,(int)*(short *)(param_2 + 0xe));\n  return;\n}\n\n", 
            "called": [
                "_close_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000844bc", 
            "calling": [], 
            "imported": false, 
            "current_name": "__sclose"
        }, 
        "PIO_GetOutputDataStatus": {
            "renaming": {}, 
            "code": "\nuint PIO_GetOutputDataStatus(int param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 8) & param_2;\n  if (uVar1 != 0) {\n    if ((param_2 & *(uint *)(param_1 + 0x18)) == 0) {\n      uVar1 = 0;\n    }\n    else {\n      uVar1 = 1;\n    }\n  }\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080e04", 
            "calling": [
                "digitalWrite"
            ], 
            "imported": false, 
            "current_name": "PIO_GetOutputDataStatus"
        }, 
        "__aeabi_fcmple": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmple(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081c94", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmple"
        }, 
        "USART0_Handler": {
            "renaming": {}, 
            "code": "\nvoid USART0_Handler(void)\n\n{\n  UARTClass::IrqHandler((UARTClass *)PTR_Serial1_00080ac8);\n  return;\n}\n\n", 
            "called": [
                "IrqHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080ac0", 
            "calling": [], 
            "imported": false, 
            "current_name": "USART0_Handler"
        }, 
        "__sprint_r.part.0": {
            "renaming": {}, 
            "code": "\nint __sprint_r_part_0(undefined4 param_1,int param_2,int **param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  if (-1 < *(int *)(param_2 + 100) << 0x12) {\n    iVar2 = __sfvwrite_r();\n    param_3[2] = (int *)0x0;\n    param_3[1] = (int *)0x0;\n    return iVar2;\n  }\n  piVar3 = param_3[2];\n  piVar1 = *param_3;\n  while (piVar3 != (int *)0x0) {\n    uVar6 = piVar1[1];\n    uVar7 = uVar6 >> 2;\n    if (uVar7 != 0) {\n      puVar5 = (undefined4 *)(*piVar1 + -4);\n      uVar4 = 0;\n      do {\n        puVar5 = puVar5 + 1;\n        iVar2 = _fputwc_r(param_1,*puVar5,param_2);\n        uVar4 = uVar4 + 1;\n        if (iVar2 == -1) goto LAB_00082b00;\n      } while (uVar7 != uVar4);\n      piVar3 = param_3[2];\n    }\n    piVar3 = (int *)((int)piVar3 - (uVar6 & 0xfffffffc));\n    param_3[2] = piVar3;\n    piVar1 = piVar1 + 2;\n  }\n  iVar2 = 0;\nLAB_00082b00:\n  param_3[2] = (int *)0x0;\n  param_3[1] = (int *)0x0;\n  return iVar2;\n}\n\n", 
            "called": [
                "__sfvwrite_r", 
                "_fputwc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082ac0", 
            "calling": [
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "__sprint_r.part.0"
        }, 
        "PIOA_Handler": {
            "renaming": {}, 
            "code": "\nvoid PIOA_Handler(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(DAT_000810b4 + 0x4c);\n  while( true ) {\n    uVar1 = count_leading_zeroes(uVar2);\n    if (0x1f < (uVar1 & 0xff)) break;\n    uVar1 = 0x1f - (uVar1 & 0xff) & 0xff;\n    if (*(code **)(PTR_callbacksPioA_000810b8 + uVar1 * 4) != (code *)0x0) {\n      (**(code **)(PTR_callbacksPioA_000810b8 + uVar1 * 4))();\n    }\n    uVar2 = uVar2 & ~(1 << uVar1);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081084", 
            "calling": [], 
            "imported": false, 
            "current_name": "PIOA_Handler"
        }, 
        "memset": {
            "renaming": {}, 
            "code": "\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  puVar2 = (uint *)__s;\n  if (((uint)__s & 3) != 0) {\n    bVar6 = __n == 0;\n    puVar1 = (uint *)__s;\n    __n = __n - 1;\n    if (bVar6) {\n      return __s;\n    }\n    while( true ) {\n      puVar2 = (uint *)((int)puVar1 + 1);\n      *(char *)puVar1 = (char)__c;\n      if (((uint)puVar2 & 3) == 0) break;\n      bVar6 = __n == 0;\n      puVar1 = puVar2;\n      __n = __n - 1;\n      if (bVar6) {\n        return __s;\n      }\n    }\n  }\n  if (3 < __n) {\n    uVar4 = __c & 0xffU | (__c & 0xffU) << 8;\n    uVar4 = uVar4 | uVar4 << 0x10;\n    uVar5 = __n;\n    puVar1 = puVar2;\n    if (0xf < __n) {\n      uVar5 = __n - 0x10;\n      do {\n        *puVar1 = uVar4;\n        puVar1[1] = uVar4;\n        puVar1[2] = uVar4;\n        puVar1[3] = uVar4;\n        puVar1 = puVar1 + 4;\n      } while (puVar1 != (uint *)((int)puVar2 + (uVar5 & 0xfffffff0) + 0x10));\n      __n = __n & 0xf;\n      puVar2 = puVar2 + ((uVar5 >> 4) + 1) * 4;\n      uVar5 = __n;\n      puVar1 = puVar2;\n      if (__n < 4) goto LAB_00082580;\n    }\n    do {\n      __n = __n - 4;\n      *puVar2 = uVar4;\n      puVar2 = puVar2 + 1;\n    } while (3 < __n);\n    puVar2 = (uint *)((int)puVar1 + (uVar5 - 4 & 0xfffffffc) + 4);\n    __n = uVar5 & 3;\n  }\nLAB_00082580:\n  if (__n != 0) {\n    puVar1 = puVar2;\n    do {\n      puVar3 = (uint *)((int)puVar1 + 1);\n      *(char *)puVar1 = (char)__c;\n      puVar1 = puVar3;\n    } while (puVar3 != (uint *)(__n + (int)puVar2));\n  }\n  return __s;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082504", 
            "calling": [
                "RingBuffer", 
                "__sinit"
            ], 
            "imported": false, 
            "current_name": "memset"
        }, 
        "IrqHandler": {
            "renaming": {}, 
            "code": "\nvoid __thiscall UARTClass::IrqHandler(UARTClass *this)\n\n{\n  RingBuffer *pRVar1;\n  RoReg RVar2;\n  \n  RVar2 = this->_pUart->UART_SR;\n  if ((int)(RVar2 << 0x1f) < 0) {\n    RingBuffer::store_char(this->_rx_buffer,(uint8_t)this->_pUart->UART_RHR);\n  }\n  if ((int)(RVar2 << 0x1e) < 0) {\n    pRVar1 = this->_tx_buffer;\n    if (pRVar1->_iTail != pRVar1->_iHead) {\n      this->_pUart->UART_THR = (uint)pRVar1->_aucBuffer[pRVar1->_iTail];\n      pRVar1->_iTail = pRVar1->_iTail + 1U & 0x7f;\n      return;\n    }\n    this->_pUart->UART_IDR = 2;\n  }\n  return;\n}\n\n", 
            "called": [
                "store_char"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081580", 
            "calling": [
                "USART0_Handler", 
                "USART3_Handler", 
                "UART_Handler", 
                "USART1_Handler"
            ], 
            "imported": false, 
            "current_name": "IrqHandler"
        }, 
        "__aeabi_fmul": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fmul(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_00081a94;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_00081a94:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081944", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fmul"
        }, 
        "__register_exitproc": {
            "renaming": {}, 
            "code": "\nundefined4 __register_exitproc(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  iVar3 = *(int *)PTR__global_impure_ptr_0008396c;\n  puVar1 = *(undefined4 **)(iVar3 + 0x148);\n  if (puVar1 == (undefined4 *)0x0) {\n    puVar1 = (undefined4 *)(iVar3 + 0x14c);\n    *(undefined4 **)(iVar3 + 0x148) = puVar1;\n  }\n  uVar2 = puVar1[1];\n  if (0x1f < (int)uVar2) {\n    if (DAT_00083970 != 0) {\n      puVar1 = (undefined4 *)malloc(400);\n      if (puVar1 != (undefined4 *)0x0) {\n        *puVar1 = *(undefined4 *)(iVar3 + 0x148);\n        puVar1[1] = 0;\n        uVar2 = 0;\n        *(undefined4 **)(iVar3 + 0x148) = puVar1;\n        puVar1[0x62] = 0;\n        puVar1[99] = 0;\n        goto LAB_00083922;\n      }\n    }\n    return 0xffffffff;\n  }\nLAB_00083922:\n  if (param_1 != 0) {\n    uVar4 = 1 << (uVar2 & 0xff);\n    puVar1[uVar2 + 0x22] = param_3;\n    puVar1[0x62] = puVar1[0x62] | uVar4;\n    puVar1[uVar2 + 0x42] = param_4;\n    if (param_1 == 2) {\n      puVar1[99] = uVar4 | puVar1[99];\n    }\n  }\n  puVar1[1] = uVar2 + 1;\n  puVar1[uVar2 + 2] = param_2;\n  return 0;\n}\n\n", 
            "called": [
                "malloc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000838cc", 
            "calling": [
                "__cxa_atexit", 
                "atexit"
            ], 
            "imported": false, 
            "current_name": "__register_exitproc"
        }, 
        "memmove": {
            "renaming": {}, 
            "code": "\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined *puVar5;\n  uint uVar6;\n  undefined *puVar7;\n  uint uVar8;\n  \n  if ((__src < __dest) && (puVar5 = (undefined *)((int)__src + __n), __dest < puVar5)) {\n    puVar7 = (undefined *)((int)__dest + __n);\n    iVar1 = __n - 1;\n    if (__n != 0) {\n      do {\n        puVar5 = puVar5 + -1;\n        iVar1 = iVar1 + -1;\n        puVar7 = puVar7 + -1;\n        *puVar7 = *puVar5;\n      } while (iVar1 != -1);\n    }\n    return __dest;\n  }\n  puVar2 = (undefined4 *)__dest;\n  if (__n < 0x10) {\n    if (__n == 0) {\n      return __dest;\n    }\n  }\n  else if ((((uint)__dest | (uint)__src) & 3) == 0) {\n    puVar3 = (undefined4 *)__src;\n    do {\n      puVar4 = puVar2 + 4;\n      *puVar2 = *puVar3;\n      puVar2[1] = puVar3[1];\n      puVar2[2] = puVar3[2];\n      puVar2[3] = puVar3[3];\n      puVar2 = puVar4;\n      puVar3 = puVar3 + 4;\n    } while (puVar4 != (undefined4 *)((int)__dest + (__n - 0x10 & 0xfffffff0) + 0x10));\n    uVar8 = __n & 0xf;\n    iVar1 = ((__n - 0x10 >> 4) + 1) * 0x10;\n    __src = (void *)((int)__src + iVar1);\n    puVar2 = (undefined4 *)(iVar1 + (int)__dest);\n    uVar6 = uVar8;\n    puVar3 = puVar2;\n    puVar4 = (undefined4 *)__src;\n    if (3 < uVar8) {\n      do {\n        uVar6 = uVar6 - 4;\n        *puVar3 = *puVar4;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n      } while (3 < uVar6);\n      iVar1 = (uVar8 - 4 & 0xfffffffc) + 4;\n      puVar2 = (undefined4 *)((int)puVar2 + iVar1);\n      __src = (void *)((int)__src + iVar1);\n      uVar8 = __n & 3;\n    }\n    __n = uVar8;\n    if (__n == 0) {\n      return __dest;\n    }\n  }\n  puVar3 = puVar2;\n  do {\n                    /* WARNING: Load size is inaccurate */\n    puVar4 = (undefined4 *)((int)puVar3 + 1);\n    *(undefined *)puVar3 = *__src;\n    __src = (undefined4 *)((int)__src + 1);\n    puVar3 = puVar4;\n  } while (puVar4 != (undefined4 *)(__n + (int)puVar2));\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00082438", 
            "calling": [
                "__sfvwrite_r", 
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "memmove"
        }, 
        "_malloc_trim_r": {
            "renaming": {}, 
            "code": "\nundefined4 _malloc_trim_r(undefined4 param_1,int param_2)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  \n  puVar1 = PTR___malloc_av__00083d90;\n  __malloc_lock();\n  uVar4 = *(uint *)(*(int *)(puVar1 + 8) + 4) & 0xfffffffc;\n  iVar5 = ((uVar4 - param_2) + 0xfef & 0xfffff000) - 0x1000;\n  if (0xfff < iVar5) {\n    iVar3 = _sbrk_r(param_1,0);\n    if (iVar3 == *(int *)(puVar1 + 8) + uVar4) {\n      iVar3 = _sbrk_r(param_1,-iVar5);\n      puVar2 = PTR___malloc_current_mallinfo_00083d94;\n      if (iVar3 != -1) {\n        iVar3 = *(int *)PTR___malloc_current_mallinfo_00083d94;\n        *(uint *)(*(int *)(puVar1 + 8) + 4) = uVar4 - iVar5 | 1;\n        *(int *)puVar2 = iVar3 - iVar5;\n        __malloc_unlock(param_1);\n        return 1;\n      }\n      iVar5 = _sbrk_r(param_1,0);\n      puVar2 = PTR___malloc_current_mallinfo_00083d94;\n      uVar4 = iVar5 - *(int *)(puVar1 + 8);\n      if (0xf < (int)uVar4) {\n        iVar3 = *(int *)PTR___malloc_sbrk_base_00083d98;\n        *(uint *)(*(int *)(puVar1 + 8) + 4) = uVar4 | 1;\n        *(int *)puVar2 = iVar5 - iVar3;\n      }\n    }\n  }\n  __malloc_unlock(param_1);\n  return 0;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_sbrk_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083d00", 
            "calling": [
                "_free_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_trim_r"
        }, 
        "_isatty_r": {
            "renaming": {}, 
            "code": "\nvoid _isatty_r(int *param_1,int param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_000846fc;\n  *(undefined4 *)PTR_errno_000846fc = 0;\n  iVar2 = _isatty(param_2);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_isatty"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000846dc", 
            "calling": [
                "__smakebuf_r"
            ], 
            "imported": false, 
            "current_name": "_isatty_r"
        }, 
        "aflCall": {
            "renaming": {}, 
            "code": "\nuint32_t aflCall(uint32_t a0,uint32_t a1,int32_t a2)\n\n{\n  software_interrupt(0x3f);\n  return a0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080148", 
            "calling": [
                "startForkserver"
            ], 
            "imported": false, 
            "current_name": "aflCall"
        }, 
        "millis": {
            "renaming": {}, 
            "code": "\nuint32_t millis(void)\n\n{\n  return *(uint32_t *)PTR__dwTickCount_0008171c;\n}\n\n", 
            "called": [
                "GetTickCount"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081208", 
            "calling": [
                "sendTxBuffer", 
                "setup", 
                "loop", 
                "poll"
            ], 
            "imported": false, 
            "current_name": "millis"
        }, 
        "__sread": {
            "renaming": {}, 
            "code": "\nvoid __sread(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = _read_r(param_1,(int)*(short *)(param_2 + 0xe));\n  if (-1 < iVar1) {\n    *(int *)(param_2 + 0x50) = *(int *)(param_2 + 0x50) + iVar1;\n    return;\n  }\n  *(ushort *)(param_2 + 0xc) = *(ushort *)(param_2 + 0xc) & 0xefff;\n  return;\n}\n\n", 
            "called": [
                "_read_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084440", 
            "calling": [], 
            "imported": false, 
            "current_name": "__sread"
        }, 
        "Reset_Handler": {
            "renaming": {}, 
            "code": "\nvoid Reset_Handler(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  \n  puVar1 = PTR_banzai_00080f80;\n  puVar2 = PTR__etext_00080f7c;\n  puVar4 = (undefined4 *)PTR_completed_7857_00080f84;\n  if (PTR__etext_00080f7c != PTR_banzai_00080f80) {\n    for (iVar3 = 0; puVar4 = (undefined4 *)PTR_completed_7857_00080f84,\n        puVar1 + iVar3 < PTR_completed_7857_00080f88; iVar3 = iVar3 + 4) {\n      *(undefined4 *)(puVar1 + iVar3) = *(undefined4 *)(puVar2 + iVar3);\n    }\n  }\n  for (; iVar3 = DAT_00080f94, puVar4 < PTR__ebss_00080f8c; puVar4 = puVar4 + 1) {\n    *puVar4 = 0;\n  }\n  puVar2 = PTR_exception_table_00080f90 + -0x20000000;\n  *(uint *)(DAT_00080f94 + 8) = (uint)PTR_exception_table_00080f90 & 0x1fffff80;\n  if (puVar2 < (undefined *)0x100000) {\n    *(uint *)(iVar3 + 8) = *(uint *)(iVar3 + 8) | 0x20000000;\n  }\n  (*DAT_00080f98)();\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "main", 
                "banzai"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080f24", 
            "calling": [], 
            "imported": false, 
            "current_name": "Reset_Handler"
        }, 
        "pinMode": {
            "renaming": {}, 
            "code": "\nvoid pinMode(uint32_t ulPin,uint32_t ulMode)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  byte bVar4;\n  byte bVar5;\n  int iVar6;\n  int iVar7;\n  \n  puVar2 = PTR_g_pinStatus_00081310;\n  puVar1 = PTR_g_APinDescription_0008130c;\n  if (PTR_g_APinDescription_0008130c[ulPin * 0x1c + 0xc] != '\\0') {\n    if ((PTR_g_pinStatus_00081310[ulPin] & 0xf) == 4) {\n      adc_disable_channel(DAT_00081314,PTR_g_APinDescription_0008130c[ulPin * 0x1c + 0x19]);\n    }\n    bVar5 = puVar2[ulPin];\n    bVar4 = bVar5 & 0xf;\n    if ((bVar4 < 3) && (bVar5 != 0)) {\n      if (bVar4 == 2) {\n        if (ulMode == 0) {\n          return;\n        }\n      }\n      else if (bVar4 == 1) {\n        if (ulMode == 2) {\n          return;\n        }\n      }\n      else if (bVar4 == 3) {\n        if (ulMode == 1) {\n          return;\n        }\n        goto LAB_0008126c;\n      }\n    }\n    if (ulMode != 1) {\nLAB_0008126c:\n      if (ulMode == 0) {\n        iVar7 = ulPin * 0x1c;\n        pmc_enable_periph_clk(*(undefined4 *)(puVar1 + iVar7 + 8));\n        PIO_Configure(*(undefined4 *)(puVar1 + iVar7),3,*(undefined4 *)(puVar1 + iVar7 + 4),0);\n        bVar5 = puVar2[ulPin] & 0xf0 | 2;\n      }\n      else {\n        if (ulMode != 2) {\n          return;\n        }\n        iVar7 = ulPin * 0x1c;\n        pmc_enable_periph_clk(*(undefined4 *)(puVar1 + iVar7 + 8));\n        PIO_Configure(*(undefined4 *)(puVar1 + iVar7),3,*(undefined4 *)(puVar1 + iVar7 + 4),1);\n        bVar5 = puVar2[ulPin] & 0xf0 | 1;\n      }\n      puVar2[ulPin] = bVar5;\n      return;\n    }\n    iVar7 = ulPin * 0x1c;\n    iVar6 = *(int *)(puVar1 + iVar7);\n    if (bVar5 >> 4 == 0) {\n      uVar3 = 4;\n    }\n    else {\n      uVar3 = 5;\n    }\n    PIO_Configure(iVar6,uVar3,*(undefined4 *)(puVar1 + iVar7 + 4),\n                  *(undefined4 *)(puVar1 + iVar7 + 0x10));\n    puVar2[ulPin] = puVar2[ulPin] & 0xf0 | 3;\n    if (*(int *)(iVar6 + 0x18) == -1) {\n      pmc_disable_periph_clk(*(undefined4 *)(puVar1 + iVar7 + 8));\n      return;\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "PIO_Configure", 
                "pmc_disable_periph_clk", 
                "adc_disable_channel", 
                "pmc_enable_periph_clk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081210", 
            "calling": [
                "begin", 
                "digitalWrite", 
                "setup"
            ], 
            "imported": false, 
            "current_name": "pinMode"
        }, 
        "_fwalk": {
            "renaming": {}, 
            "code": "\nuint _fwalk(int param_1,code *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  int *piVar5;\n  \n  piVar5 = (int *)(param_1 + 0x2e0);\n  if (piVar5 != (int *)0x0) {\n    uVar4 = 0;\n    do {\n      iVar2 = piVar5[2];\n      iVar3 = piVar5[1] + -1;\n      if (-1 < iVar3) {\n        do {\n          iVar3 = iVar3 + -1;\n          if ((1 < *(ushort *)(iVar2 + 0xc)) && (*(short *)(iVar2 + 0xe) != -1)) {\n            uVar1 = (*param_2)(iVar2);\n            uVar4 = uVar4 | uVar1;\n          }\n          iVar2 = iVar2 + 0x68;\n        } while (iVar3 != -1);\n      }\n      piVar5 = (int *)*piVar5;\n    } while (piVar5 != (int *)0x0);\n    return uVar4;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084248", 
            "calling": [
                "_cleanup_r"
            ], 
            "imported": false, 
            "current_name": "_fwalk"
        }, 
        "_watchdogDefaultSetup": {
            "renaming": {}, 
            "code": "\nvoid _watchdogDefaultSetup(void)\n\n{\n  WDT_Disable(DAT_000816dc);\n  return;\n}\n\n", 
            "called": [
                "WDT_Disable"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000816d4", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "_watchdogDefaultSetup"
        }, 
        "GetTickCount": {
            "renaming": {}, 
            "code": "\nundefined4 GetTickCount(void)\n\n{\n  return *(undefined4 *)PTR__dwTickCount_0008171c;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081714", 
            "calling": [
                "millis"
            ], 
            "imported": false, 
            "current_name": "GetTickCount"
        }, 
        "PIO_SetPeripheral": {
            "renaming": {}, 
            "code": "\nvoid PIO_SetPeripheral(int param_1,undefined4 param_2,uint param_3)\n\n{\n  uint uVar1;\n  \n  *(uint *)(param_1 + 0x44) = param_3;\n  switch(param_2) {\n  case 0:\n  case 3:\n  case 4:\n  case 5:\n    return;\n  case 1:\n    uVar1 = *(uint *)(param_1 + 0x70) & *(uint *)(param_1 + 0x70) & ~param_3;\n    break;\n  case 2:\n    uVar1 = *(uint *)(param_1 + 0x70) | param_3;\n    break;\n  default:\n    goto switchD_00080d34_caseD_6;\n  }\n  *(uint *)(param_1 + 0x70) = uVar1;\nswitchD_00080d34_caseD_6:\n  *(uint *)(param_1 + 4) = param_3;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080d2e", 
            "calling": [
                "PIO_Configure"
            ], 
            "imported": false, 
            "current_name": "PIO_SetPeripheral"
        }, 
        "link": {
            "renaming": {}, 
            "code": "\nint link(char *cOld_UNUSED,char *cNew_UNUSED)\n\n{\n  return -1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000811a8", 
            "calling": [], 
            "imported": false, 
            "current_name": "link"
        }, 
        "_write_r": {
            "renaming": {}, 
            "code": "\nvoid _write_r(int *param_1,int param_2,char *param_3,int param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_000845fc;\n  *(undefined4 *)PTR_errno_000845fc = 0;\n  iVar2 = _write(param_2,param_3,param_4);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_write"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000845d8", 
            "calling": [
                "__swrite"
            ], 
            "imported": false, 
            "current_name": "_write_r"
        }, 
        "_malloc_r": {
            "renaming": {}, 
            "code": "\nint * _malloc_r(undefined4 *param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 *puVar10;\n  undefined *puVar11;\n  undefined *puVar12;\n  undefined *puVar13;\n  undefined4 *puVar14;\n  uint uVar15;\n  undefined4 *puVar16;\n  undefined *puVar17;\n  \n  if (param_2 + 0xb < 0x17) {\n    uVar15 = 0x10;\n    if (0x10 < param_2) goto LAB_00081e7a;\n  }\n  else {\n    uVar15 = param_2 + 0xb & 0xfffffff8;\n    if (((int)uVar15 < 0) || (uVar15 < param_2)) {\nLAB_00081e7a:\n      *param_1 = 0xc;\n      return (int *)0x0;\n    }\n  }\n  __malloc_lock(param_1);\n  puVar1 = PTR___malloc_av__00082140;\n  if (uVar15 < 0x1f8) {\n    puVar13 = *(undefined **)(PTR___malloc_av__00082140 + uVar15 + 0xc);\n    if ((puVar13 != PTR___malloc_av__00082140 + uVar15) ||\n       (puVar12 = puVar13 + 8, puVar13 = *(undefined **)(puVar13 + 0x14), puVar12 != puVar13)) {\n      uVar9 = *(uint *)(puVar13 + 4);\n      iVar6 = *(int *)(puVar13 + 0xc);\n      uVar15 = *(uint *)(puVar13 + (uVar9 & 0xfffffffc) + 4);\n      iVar2 = *(int *)(puVar13 + 8);\n      *(int *)(iVar2 + 0xc) = iVar6;\n      *(int *)(iVar6 + 8) = iVar2;\n      *(uint *)(puVar13 + (uVar9 & 0xfffffffc) + 4) = uVar15 | 1;\n      __malloc_unlock(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    uVar9 = (uVar15 >> 3) + 2;\n  }\n  else {\n    uVar9 = uVar15 >> 9;\n    if (uVar9 == 0) {\n      iVar6 = 0x7e;\n      iVar2 = 0x3f;\n    }\n    else if (uVar9 < 5) {\n      iVar2 = (uVar15 >> 6) + 0x38;\n      iVar6 = iVar2 * 2;\n    }\n    else if (uVar9 < 0x15) {\n      iVar2 = uVar9 + 0x5b;\n      iVar6 = iVar2 * 2;\n    }\n    else if (uVar9 < 0x55) {\n      iVar2 = (uVar15 >> 0xc) + 0x6e;\n      iVar6 = iVar2 * 2;\n    }\n    else if (uVar9 < 0x155) {\n      iVar2 = (uVar15 >> 0xf) + 0x77;\n      iVar6 = iVar2 * 2;\n    }\n    else if (uVar9 < 0x555) {\n      iVar2 = (uVar15 >> 0x12) + 0x7c;\n      iVar6 = iVar2 * 2;\n    }\n    else {\n      iVar6 = 0xfc;\n      iVar2 = 0x7e;\n    }\n    for (puVar13 = *(undefined **)(PTR___malloc_av__00082140 + iVar6 * 4 + 0xc);\n        PTR___malloc_av__00082140 + iVar6 * 4 != puVar13; puVar13 = *(undefined **)(puVar13 + 0xc))\n    {\n      uVar9 = *(uint *)(puVar13 + 4) & 0xfffffffc;\n      if (0xf < (int)(uVar9 - uVar15)) {\n        iVar2 = iVar2 + -1;\n        break;\n      }\n      if (-1 < (int)(uVar9 - uVar15)) {\n        uVar15 = *(uint *)(puVar13 + uVar9 + 4);\n        iVar6 = *(int *)(puVar13 + 0xc);\n        iVar2 = *(int *)(puVar13 + 8);\n        *(int *)(iVar2 + 0xc) = iVar6;\n        *(int *)(iVar6 + 8) = iVar2;\n        *(uint *)(puVar13 + uVar9 + 4) = uVar15 | 1;\n        __malloc_unlock(param_1);\n        return (int *)(puVar13 + 8);\n      }\n    }\n    uVar9 = iVar2 + 1;\n  }\n  puVar13 = *(undefined **)(PTR___malloc_av__00082140 + 0x10);\n  puVar12 = PTR___malloc_av__00082140 + 8;\n  if (puVar13 == puVar12) {\n    uVar3 = *(uint *)(PTR___malloc_av__00082140 + 4);\n  }\n  else {\n    uVar3 = *(uint *)(puVar13 + 4);\n    uVar4 = uVar3 & 0xfffffffc;\n    uVar7 = uVar4 - uVar15;\n    if (0xf < (int)uVar7) {\n      puVar5 = puVar13 + uVar15;\n      *(uint *)(puVar13 + 4) = uVar15 | 1;\n      *(undefined **)(puVar1 + 0x14) = puVar5;\n      *(undefined **)(puVar1 + 0x10) = puVar5;\n      *(undefined **)(puVar5 + 0xc) = puVar12;\n      *(undefined **)(puVar5 + 8) = puVar12;\n      *(uint *)(puVar5 + 4) = uVar7 | 1;\n      *(uint *)(puVar5 + uVar7) = uVar7;\n      __malloc_unlock(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    *(undefined **)(PTR___malloc_av__00082140 + 0x14) = puVar12;\n    *(undefined **)(puVar1 + 0x10) = puVar12;\n    if (-1 < (int)uVar7) {\n      *(uint *)(puVar13 + uVar4 + 4) = *(uint *)(puVar13 + uVar4 + 4) | 1;\n      __malloc_unlock(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    if (uVar4 < 0x200) {\n      puVar5 = puVar1 + (uVar3 & 0xfffffff8);\n      iVar2 = *(int *)(puVar5 + 8);\n      uVar3 = 1 << ((int)(uVar3 >> 3) >> 2 & 0xffU) | *(uint *)(puVar1 + 4);\n      *(int *)(puVar13 + 8) = iVar2;\n      *(undefined **)(puVar13 + 0xc) = puVar5;\n      *(uint *)(puVar1 + 4) = uVar3;\n      *(undefined **)(puVar5 + 8) = puVar13;\n      *(undefined **)(iVar2 + 0xc) = puVar13;\n    }\n    else {\n      uVar7 = uVar3 >> 9;\n      if (uVar7 < 5) {\n        iVar6 = (uVar3 >> 6) + 0x38;\n        iVar2 = iVar6 * 2;\n      }\n      else if (uVar7 < 0x15) {\n        iVar6 = uVar7 + 0x5b;\n        iVar2 = iVar6 * 2;\n      }\n      else if (uVar7 < 0x55) {\n        iVar6 = (uVar3 >> 0xc) + 0x6e;\n        iVar2 = iVar6 * 2;\n      }\n      else if (uVar7 < 0x155) {\n        iVar6 = (uVar3 >> 0xf) + 0x77;\n        iVar2 = iVar6 * 2;\n      }\n      else if (uVar7 < 0x555) {\n        iVar6 = (uVar3 >> 0x12) + 0x7c;\n        iVar2 = iVar6 * 2;\n      }\n      else {\n        iVar2 = 0xfc;\n        iVar6 = 0x7e;\n      }\n      puVar5 = puVar1 + iVar2 * 4;\n      puVar17 = *(undefined **)(puVar5 + 8);\n      if (puVar17 == puVar5) {\n        uVar3 = *(uint *)(PTR___malloc_av__00082348 + 4) | 1 << (iVar6 >> 2 & 0xffU);\n        *(uint *)(PTR___malloc_av__00082348 + 4) = uVar3;\n        puVar11 = puVar17;\n      }\n      else {\n        do {\n          puVar11 = puVar17;\n          if ((*(uint *)(puVar17 + 4) & 0xfffffffc) <= uVar4) break;\n          puVar17 = *(undefined **)(puVar17 + 8);\n          puVar11 = puVar17;\n        } while (puVar5 != puVar17);\n        puVar17 = *(undefined **)(puVar11 + 0xc);\n        uVar3 = *(uint *)(puVar1 + 4);\n      }\n      *(undefined **)(puVar13 + 0xc) = puVar17;\n      *(undefined **)(puVar13 + 8) = puVar11;\n      *(undefined **)(puVar17 + 8) = puVar13;\n      *(undefined **)(puVar11 + 0xc) = puVar13;\n    }\n  }\n  uVar4 = 1 << ((int)uVar9 >> 2 & 0xffU);\n  if (uVar4 <= uVar3) {\n    if ((uVar3 & uVar4) == 0) {\n      uVar9 = uVar9 & 0xfffffffc;\n      do {\n        uVar4 = uVar4 << 1;\n        uVar9 = uVar9 + 4;\n      } while ((uVar3 & uVar4) == 0);\n    }\n    do {\n      puVar16 = (undefined4 *)(puVar1 + uVar9 * 8);\n      puVar14 = puVar16;\n      uVar3 = uVar9;\n      do {\n        for (puVar10 = (undefined4 *)puVar14[3]; puVar14 != puVar10;\n            puVar10 = (undefined4 *)puVar10[3]) {\n          uVar7 = puVar10[1] & 0xfffffffc;\n          uVar8 = uVar7 - uVar15;\n          if (0xf < (int)uVar8) {\n            iVar6 = puVar10[2];\n            iVar2 = puVar10[3];\n            puVar13 = (undefined *)(uVar15 + (int)puVar10);\n            puVar10[1] = uVar15 | 1;\n            *(int *)(iVar6 + 0xc) = iVar2;\n            *(int *)(iVar2 + 8) = iVar6;\n            *(undefined **)(puVar1 + 0x14) = puVar13;\n            *(undefined **)(puVar1 + 0x10) = puVar13;\n            *(undefined **)(puVar13 + 0xc) = puVar12;\n            *(undefined **)(puVar13 + 8) = puVar12;\n            *(uint *)(puVar13 + 4) = uVar8 | 1;\n            *(uint *)(puVar13 + uVar8) = uVar8;\n            __malloc_unlock(param_1);\n            return puVar10 + 2;\n          }\n          if (-1 < (int)uVar8) {\n            iVar2 = puVar10[2];\n            iVar6 = puVar10[3];\n            *(uint *)((int)puVar10 + uVar7 + 4) = *(uint *)((int)puVar10 + uVar7 + 4) | 1;\n            *(int *)(iVar2 + 0xc) = iVar6;\n            *(int *)(iVar6 + 8) = iVar2;\n            __malloc_unlock(param_1);\n            return puVar10 + 2;\n          }\n        }\n        uVar3 = uVar3 + 1;\n        puVar14 = puVar14 + 2;\n      } while ((uVar3 & 3) != 0);\n      do {\n        uVar7 = uVar9 & 3;\n        puVar14 = puVar16 + -2;\n        uVar9 = uVar9 - 1;\n        if (uVar7 == 0) {\n          uVar7 = *(uint *)(puVar1 + 4) & ~uVar4;\n          *(uint *)(puVar1 + 4) = uVar7;\n          goto LAB_00082262;\n        }\n        puVar16 = (undefined4 *)*puVar16;\n      } while (puVar16 == puVar14);\n      uVar7 = *(uint *)(puVar1 + 4);\nLAB_00082262:\n      uVar4 = uVar4 * 2;\n      if ((uVar7 <= uVar4 && uVar4 - uVar7 != 0) || (uVar9 = uVar3, uVar4 == 0)) break;\n      for (; (uVar7 & uVar4) == 0; uVar4 = uVar4 << 1) {\n        uVar9 = uVar9 + 4;\n      }\n    } while( true );\n  }\n  puVar13 = PTR___malloc_sbrk_base_00082148;\n  puVar12 = *(undefined **)(puVar1 + 8);\n  uVar9 = *(uint *)(puVar12 + 4) & 0xfffffffc;\n  if ((uVar15 <= uVar9) && (uVar3 = uVar9 - uVar15, puVar5 = puVar12, 0xf < (int)uVar3))\n  goto LAB_0008211e;\n  puVar17 = puVar12 + uVar9;\n  if (*(int *)PTR___malloc_sbrk_base_00082148 == -1) {\n    uVar3 = uVar15 + *(int *)PTR___malloc_top_pad_00082144 + 0x10;\n  }\n  else {\n    uVar3 = uVar15 + *(int *)PTR___malloc_top_pad_00082144 + 0x100f & 0xfffff000;\n  }\n  puVar5 = (undefined *)_sbrk_r(param_1,uVar3);\n  puVar11 = PTR___malloc_current_mallinfo_00082154;\n  if ((puVar5 == (undefined *)0xffffffff) || ((puVar5 < puVar17 && (puVar12 != puVar1)))) {\n    puVar5 = *(undefined **)(puVar1 + 8);\n    uVar9 = *(uint *)(puVar5 + 4) & 0xfffffffc;\n  }\n  else {\n    uVar4 = *(int *)PTR___malloc_current_mallinfo_00082154 + uVar3;\n    *(uint *)PTR___malloc_current_mallinfo_00082154 = uVar4;\n    if ((puVar17 == puVar5) && (((uint)puVar17 & 0xfff) == 0)) {\n      *(uint *)(*(int *)(puVar1 + 8) + 4) = uVar3 + uVar9 | 1;\n    }\n    else {\n      if (*(int *)puVar13 == -1) {\n        *(undefined **)PTR___malloc_sbrk_base_00082148 = puVar5;\n      }\n      else {\n        *(undefined **)puVar11 = puVar5 + (uVar4 - (int)puVar17);\n      }\n      uVar4 = (uint)puVar5 & 7;\n      if (uVar4 == 0) {\n        iVar2 = 0x1000;\n      }\n      else {\n        puVar5 = puVar5 + (8 - uVar4);\n        iVar2 = 0x1008 - uVar4;\n      }\n      iVar2 = iVar2 - ((uint)(puVar5 + uVar3) & 0xfff);\n      iVar6 = _sbrk_r(param_1,iVar2);\n      if (iVar6 == -1) {\n        uVar3 = 1;\n        iVar2 = 0;\n      }\n      else {\n        uVar3 = (iVar6 - (int)puVar5) + iVar2 | 1;\n      }\n      uVar4 = *(int *)puVar11 + iVar2;\n      *(undefined **)(puVar1 + 8) = puVar5;\n      *(uint *)puVar11 = uVar4;\n      *(uint *)(puVar5 + 4) = uVar3;\n      puVar13 = PTR___malloc_current_mallinfo_00082154;\n      if (puVar12 != puVar1) {\n        if (uVar9 < 0x10) {\n          *(undefined4 *)(puVar5 + 4) = 1;\n          uVar9 = 0;\n          goto LAB_00082108;\n        }\n        uVar9 = uVar9 - 0xc & 0xfffffff8;\n        *(uint *)(puVar12 + 4) = uVar9 | *(uint *)(puVar12 + 4) & 1;\n        *(undefined4 *)(puVar12 + uVar9 + 4) = 5;\n        *(undefined4 *)(puVar12 + uVar9 + 8) = 5;\n        if (0xf < uVar9) {\n          _free_r(param_1,puVar12 + 8);\n          uVar4 = *(uint *)puVar13;\n        }\n      }\n    }\n    puVar5 = *(undefined **)(puVar1 + 8);\n    if (*(uint *)PTR___malloc_max_sbrked_mem_0008214c < uVar4) {\n      *(uint *)PTR___malloc_max_sbrked_mem_0008214c = uVar4;\n    }\n    if (*(uint *)PTR___malloc_max_total_mem_00082150 < uVar4) {\n      *(uint *)PTR___malloc_max_total_mem_00082150 = uVar4;\n    }\n    uVar9 = *(uint *)(puVar5 + 4) & 0xfffffffc;\n  }\nLAB_00082108:\n  uVar3 = uVar9 - uVar15;\n  if ((uVar9 < uVar15) || ((int)uVar3 < 0x10)) {\n    __malloc_unlock(param_1);\n    return (int *)0x0;\n  }\nLAB_0008211e:\n  *(uint *)(puVar5 + 4) = uVar15 | 1;\n  *(undefined **)(puVar1 + 8) = puVar5 + uVar15;\n  *(uint *)(puVar5 + uVar15 + 4) = uVar3 | 1;\n  __malloc_unlock(param_1);\n  return (int *)(puVar5 + 8);\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_free_r", 
                "_sbrk_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081e14", 
            "calling": [
                "__sfvwrite_r", 
                "_realloc_r", 
                "malloc", 
                "__smakebuf_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_r"
        }, 
        "atexit": {
            "renaming": {}, 
            "code": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __register_exitproc(0,__func,0,0);\n  return iVar1;\n}\n\n", 
            "called": [
                "__register_exitproc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083988", 
            "calling": [
                "register_fini"
            ], 
            "imported": false, 
            "current_name": "atexit"
        }, 
        "__sbprintf": {
            "renaming": {}, 
            "code": "\nint __sbprintf(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined *local_488 [2];\n  undefined4 local_480;\n  ushort local_47c;\n  undefined2 local_47a;\n  undefined *local_478;\n  undefined4 local_474;\n  undefined4 local_470;\n  undefined4 local_46c;\n  undefined4 local_464;\n  undefined4 local_424;\n  undefined auStack_420 [1024];\n  \n  local_424 = *(undefined4 *)(param_2 + 100);\n  local_46c = *(undefined4 *)(param_2 + 0x1c);\n  local_47a = *(undefined2 *)(param_2 + 0xe);\n  local_464 = *(undefined4 *)(param_2 + 0x24);\n  local_488[0] = auStack_420;\n  local_47c = *(ushort *)(param_2 + 0xc) & 0xfffd;\n  local_480 = 0x400;\n  local_474 = 0x400;\n  local_470 = 0;\n  local_478 = local_488[0];\n  iVar1 = _vfiprintf_r(param_1,local_488);\n  if ((-1 < iVar1) && (iVar2 = _fflush_r(param_1,local_488), iVar2 != 0)) {\n    iVar1 = -1;\n  }\n  if ((int)((uint)local_47c << 0x19) < 0) {\n    *(ushort *)(param_2 + 0xc) = *(ushort *)(param_2 + 0xc) | 0x40;\n  }\n  return iVar1;\n}\n\n", 
            "called": [
                "_vfiprintf_r", 
                "_fflush_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008378c", 
            "calling": [
                "_vfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "__sbprintf"
        }, 
        "getRxBuffer": {
            "renaming": {}, 
            "code": "\nint8_t __thiscall Modbus::getRxBuffer(Modbus *this)\n\n{\n  bool bVar1;\n  uchar uVar2;\n  uint8_t uVar3;\n  int iVar4;\n  byte bVar5;\n  \n  if (1 < this->u8txenpin) {\n    digitalWrite((uint)this->u8txenpin,0);\n  }\n  bVar1 = false;\n  this->u8BufferSize = '\\0';\n  if (this->u8serno < 4) {\n    while (iVar4 = (**(code **)(*(int *)this->port + 8))(), iVar4 != 0) {\n      bVar5 = this->u8BufferSize;\n      uVar2 = (**(code **)(*(int *)this->port + 0xc))();\n      uVar3 = this->u8BufferSize;\n      this->au8Buffer[bVar5] = uVar2;\n      bVar5 = uVar3 + 1;\n      this->u8BufferSize = bVar5;\n      if (0x3f < bVar5) {\n        bVar1 = true;\n      }\n    }\n  }\n  this->u16InCnt = this->u16InCnt + 1;\n  if (bVar1) {\n    uVar3 = 0xfd;\n    this->u16errCnt = this->u16errCnt + 1;\n  }\n  else {\n    uVar3 = this->u8BufferSize;\n  }\n  return uVar3;\n}\n\n", 
            "called": [
                "digitalWrite"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000801b0", 
            "calling": [
                "poll"
            ], 
            "imported": false, 
            "current_name": "getRxBuffer"
        }, 
        "PIO_Configure": {
            "renaming": {}, 
            "code": "\nundefined4 PIO_Configure(int param_1,int param_2,undefined4 param_3,uint param_4)\n\n{\n  bool bVar1;\n  \n  switch(param_2) {\n  case 1:\n  case 2:\n    (*DAT_00080df8)(param_1,param_2,param_3);\n    bVar1 = (int)(param_4 << 0x1f) < 0;\n    *(undefined4 *)(param_1 + 0x44) = param_3;\n    if (bVar1) {\n      *(undefined4 *)(param_1 + 100) = param_3;\n    }\n    if (!bVar1) {\n      *(undefined4 *)(param_1 + 0x60) = param_3;\n    }\n    break;\n  case 3:\n    (*DAT_00080dfc)(param_1,param_3,param_4,DAT_00080dfc,param_1);\n    break;\n  case 4:\n  case 5:\n    (*DAT_00080e00)(param_1,param_3,param_2 == 5,(param_4 << 0x1d) >> 0x1f,param_4 & 1,param_2,\n                    param_3);\n    break;\n  default:\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [
                "PIO_SetPeripheral", 
                "PIO_SetInput", 
                "PIO_SetOutput"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080da0", 
            "calling": [
                "init", 
                "pinMode"
            ], 
            "imported": false, 
            "current_name": "PIO_Configure"
        }, 
        "adc_init": {
            "renaming": {}, 
            "code": "\nundefined4 adc_init(undefined4 *param_1,uint param_2,int param_3,int param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint local_58 [16];\n  \n  local_58[0] = *(uint *)PTR_DAT_0008102c;\n  local_58[1] = *(undefined4 *)(PTR_DAT_0008102c + 4);\n  local_58[2] = *(undefined4 *)(PTR_DAT_0008102c + 8);\n  local_58[3] = *(undefined4 *)(PTR_DAT_0008102c + 0xc);\n  local_58[4] = *(undefined4 *)(PTR_DAT_0008102c + 0x10);\n  local_58[5] = *(undefined4 *)(PTR_DAT_0008102c + 0x14);\n  local_58[6] = *(undefined4 *)(PTR_DAT_0008102c + 0x18);\n  local_58[7] = *(undefined4 *)(PTR_DAT_0008102c + 0x1c);\n  local_58[8] = *(undefined4 *)(PTR_DAT_0008102c + 0x20);\n  local_58[9] = *(undefined4 *)(PTR_DAT_0008102c + 0x24);\n  local_58[10] = *(undefined4 *)(PTR_DAT_0008102c + 0x28);\n  local_58[11] = *(undefined4 *)(PTR_DAT_0008102c + 0x2c);\n  local_58[12] = *(undefined4 *)(PTR_DAT_0008102c + 0x30);\n  local_58[13] = *(undefined4 *)(PTR_DAT_0008102c + 0x34);\n  local_58[14] = *(undefined4 *)(PTR_DAT_0008102c + 0x38);\n  local_58[15] = *(undefined4 *)(PTR_DAT_0008102c + 0x3c);\n  *param_1 = 1;\n  param_1[1] = 0;\n  param_1[0x48] = 0x202;\n  param_1[0x41] = 0;\n  param_1[0x45] = 0;\n  uVar1 = param_2 / (uint)(param_3 * 2);\n  if (param_2 == param_3 * 2 * uVar1) {\n    uVar1 = uVar1 - 1;\n  }\n  uVar2 = 0;\n  do {\n    if ((uint)(param_4 *\n              (int)(((ulonglong)param_2 / (ulonglong)((uVar1 + 1) * 2)) / (ulonglong)DAT_00081030))\n        <= local_58[uVar2]) {\n      param_1[1] = (uVar2 & 0xf) << 0x10 | (uVar1 & 0xff) << 8 | param_1[1];\n      return 0;\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 0x10);\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080f9c", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "adc_init"
        }, 
        "__swrite": {
            "renaming": {}, 
            "code": "\nvoid __swrite(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  ushort uVar1;\n  \n  uVar1 = *(ushort *)(param_2 + 0xc);\n  if ((int)((uint)uVar1 << 0x17) < 0) {\n    _lseek_r(param_1,(int)*(short *)(param_2 + 0xe),0,2);\n    uVar1 = *(ushort *)(param_2 + 0xc);\n  }\n  *(ushort *)(param_2 + 0xc) = uVar1 & 0xefff;\n  _write_r(param_1,(int)*(short *)(param_2 + 0xe),param_3,param_4);\n  return;\n}\n\n", 
            "called": [
                "_write_r", 
                "_lseek_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084464", 
            "calling": [], 
            "imported": false, 
            "current_name": "__swrite"
        }, 
        "flush": {
            "renaming": {}, 
            "code": "\nvoid __thiscall UARTClass::flush(UARTClass *this)\n\n{\n  do {\n  } while (this->_tx_buffer->_iHead != this->_tx_buffer->_iTail);\n  do {\n  } while (-1 < (int)(this->_pUart->UART_SR << 0x16));\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008143c", 
            "calling": [], 
            "imported": false, 
            "current_name": "flush"
        }, 
        "_sbrk": {
            "renaming": {}, 
            "code": "\ncaddr_t _sbrk(int incr)\n\n{\n  undefined *puVar1;\n  caddr_t pcVar2;\n  \n  puVar1 = PTR_heap_000811a0;\n  if (*(int *)PTR_heap_000811a0 == 0) {\n    *(undefined **)PTR_heap_000811a0 = PTR__ebss_000811a4;\n  }\n  pcVar2 = *(caddr_t *)puVar1;\n  *(caddr_t *)puVar1 = pcVar2 + incr;\n  return pcVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008118c", 
            "calling": [
                "_sbrk_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk"
        }, 
        "reserve": {
            "renaming": {}, 
            "code": "\nuchar __thiscall String::reserve(String *this,uint size)\n\n{\n  uchar uVar1;\n  \n  if ((this->buffer == (char *)0x0) || (this->capacity < size)) {\n    uVar1 = changeBuffer(this,size);\n    if (uVar1 == '\\0') {\n      return '\\0';\n    }\n    if (this->len == 0) {\n      *this->buffer = '\\0';\n    }\n  }\n  return '\\x01';\n}\n\n", 
            "called": [
                "changeBuffer"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008163a", 
            "calling": [
                "copy"
            ], 
            "imported": false, 
            "current_name": "reserve"
        }, 
        "end": {
            "renaming": {}, 
            "code": "\nvoid __thiscall UARTClass::end(UARTClass *this)\n\n{\n  this->_rx_buffer->_iHead = this->_rx_buffer->_iTail;\n  (**(code **)(*(int *)this + 0x14))();\n  *(int *)(DAT_000814e0 + (((uint)(int)this->_dwIrq >> 5) + 0x20) * 4) =\n       1 << (uint)(byte)(this->_dwIrq & 0x1f);\n  pmc_disable_periph_clk(this->_dwId);\n  return;\n}\n\n", 
            "called": [
                "pmc_disable_periph_clk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000814a8", 
            "calling": [], 
            "imported": false, 
            "current_name": "end"
        }, 
        "__cxa_atexit": {
            "renaming": {}, 
            "code": "\nvoid __cxa_atexit(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  __register_exitproc(2,param_1,param_2,param_3);\n  return;\n}\n\n", 
            "called": [
                "__register_exitproc"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081d68", 
            "calling": [
                "__aeabi_atexit"
            ], 
            "imported": false, 
            "current_name": "__cxa_atexit"
        }, 
        "PIOD_Handler": {
            "renaming": {}, 
            "code": "\nvoid PIOD_Handler(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(DAT_0008115c + 0x4c);\n  while( true ) {\n    uVar1 = count_leading_zeroes(uVar2);\n    if (0x1f < (uVar1 & 0xff)) break;\n    uVar1 = 0x1f - (uVar1 & 0xff) & 0xff;\n    if (*(code **)(PTR_callbacksPioD_00081160 + uVar1 * 4) != (code *)0x0) {\n      (**(code **)(PTR_callbacksPioD_00081160 + uVar1 * 4))();\n    }\n    uVar2 = uVar2 & ~(1 << uVar1);\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008112c", 
            "calling": [], 
            "imported": false, 
            "current_name": "PIOD_Handler"
        }, 
        "SystemInit": {
            "renaming": {}, 
            "code": "\nvoid SystemInit(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = DAT_00080f08;\n  *DAT_00080f08 = 0x400;\n  puVar1[0x80] = 0x400;\n  iVar2 = DAT_00080f0c;\n  if (-1 < *(int *)(DAT_00080f0c + 0x20) << 7) {\n    *(undefined4 *)(DAT_00080f0c + 0x20) = DAT_00080f14;\n    do {\n    } while (-1 < *(int *)(iVar2 + 0x68) << 0x1f);\n  }\n  *(undefined4 *)(iVar2 + 0x20) = DAT_00080f10;\n  do {\n  } while (-1 < *(int *)(iVar2 + 0x68) << 0xf);\n  *(uint *)(DAT_00080f0c + 0x30) = *(uint *)(DAT_00080f0c + 0x30) & 0xfffffffc | 1;\n  do {\n  } while (-1 < *(int *)(iVar2 + 0x68) << 0x1c);\n  *(undefined4 *)(DAT_00080f0c + 0x28) = DAT_00080f18;\n  do {\n  } while (-1 < *(int *)(iVar2 + 0x68) << 0x1e);\n  *(undefined4 *)(DAT_00080f0c + 0x30) = 0x11;\n  do {\n  } while (-1 < *(int *)(iVar2 + 0x68) << 0x1c);\n  *(undefined4 *)(DAT_00080f0c + 0x30) = 0x12;\n  do {\n  } while (-1 < *(int *)(iVar2 + 0x68) << 0x1c);\n  *(undefined4 *)PTR_SystemCoreClock_00080f20 = DAT_00080f1c;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080e9c", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "SystemInit"
        }, 
        "SVC_Handler": {
            "renaming": {}, 
            "code": "\nvoid SVC_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "__halt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081166", 
            "calling": [], 
            "imported": false, 
            "current_name": "SVC_Handler"
        }, 
        "fclose": {
            "renaming": {}, 
            "code": "\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = _fclose_r(*(undefined4 *)PTR__impure_ptr_000846b0,__stream);\n  return iVar1;\n}\n\n", 
            "called": [
                "_fclose_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000846a4", 
            "calling": [], 
            "imported": false, 
            "current_name": "fclose"
        }, 
        "_fclose_r": {
            "renaming": {}, 
            "code": "\nundefined4 _fclose_r(int param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  if (param_2 != 0) {\n    if ((param_1 != 0) && (*(int *)(param_1 + 0x38) == 0)) {\n      __sinit();\n    }\n    if (*(short *)(param_2 + 0xc) != 0) {\n      uVar1 = _fflush_r(param_1,param_2);\n      if ((*(code **)(param_2 + 0x2c) != (code *)0x0) &&\n         (iVar2 = (**(code **)(param_2 + 0x2c))(param_1,*(undefined4 *)(param_2 + 0x1c)), iVar2 < 0)\n         ) {\n        uVar1 = 0xffffffff;\n      }\n      if ((int)((uint)*(ushort *)(param_2 + 0xc) << 0x18) < 0) {\n        _free_r(param_1,*(undefined4 *)(param_2 + 0x10));\n      }\n      if (*(int *)(param_2 + 0x30) != 0) {\n        if (*(int *)(param_2 + 0x30) != param_2 + 0x40) {\n          _free_r(param_1);\n        }\n        *(undefined4 *)(param_2 + 0x30) = 0;\n      }\n      if (*(int *)(param_2 + 0x44) != 0) {\n        _free_r(param_1);\n        *(undefined4 *)(param_2 + 0x44) = 0;\n      }\n      __sfp_lock_acquire();\n      *(undefined2 *)(param_2 + 0xc) = 0;\n      __sfp_lock_release();\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n", 
            "called": [
                "__sfp_lock_acquire", 
                "__sinit", 
                "_free_r", 
                "_fflush_r", 
                "__sfp_lock_release"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084624", 
            "calling": [
                "fclose"
            ], 
            "imported": false, 
            "current_name": "_fclose_r"
        }, 
        "_realloc_r": {
            "renaming": {}, 
            "code": "\nint * _realloc_r(undefined4 *param_1,int *param_2,uint param_3)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  size_t sVar5;\n  uint uVar6;\n  int *piVar7;\n  uint uVar8;\n  uint uVar9;\n  int *piVar10;\n  int iVar11;\n  \n  if (param_2 == (int *)0x0) {\n    piVar3 = (int *)_malloc_r(param_1,param_3);\n    return piVar3;\n  }\n  __malloc_lock();\n  puVar1 = PTR___malloc_av__0008296c;\n  uVar6 = param_2[-1];\n  uVar8 = uVar6 & 0xfffffffc;\n  piVar3 = param_2 + -2;\n  if (param_3 + 0xb < 0x17) {\n    uVar9 = 0x10;\n  }\n  else {\n    uVar9 = param_3 + 0xb & 0xfffffff8;\n    if ((int)uVar9 < 0) goto LAB_0008267c;\n  }\n  if (uVar9 < param_3) {\nLAB_0008267c:\n    *param_1 = 0xc;\n    return (int *)0x0;\n  }\n  if ((int)uVar8 < (int)uVar9) {\n    iVar2 = (int)piVar3 + uVar8;\n    iVar11 = *(int *)(PTR___malloc_av__0008296c + 8);\n    if (iVar11 == iVar2) {\n      uVar4 = *(uint *)(iVar11 + 4) & 0xfffffffc;\n      iVar2 = iVar11;\n      if ((int)(uVar9 + 0x10) <= (int)(uVar4 + uVar8)) {\n        *(uint *)(PTR___malloc_av__0008296c + 8) = (int)piVar3 + uVar9;\n        *(uint *)((int)piVar3 + uVar9 + 4) = (uVar4 + uVar8) - uVar9 | 1;\n        param_2[-1] = uVar9 | param_2[-1] & 1U;\n        __malloc_unlock(param_1);\n        return param_2;\n      }\n    }\n    else if ((*(uint *)((*(uint *)(iVar2 + 4) & 0xfffffffe) + iVar2 + 4) & 1) == 0) {\n      uVar4 = *(uint *)(iVar2 + 4) & 0xfffffffc;\n      if ((int)uVar9 <= (int)(uVar4 + uVar8)) {\n        iVar11 = *(int *)(iVar2 + 0xc);\n        iVar2 = *(int *)(iVar2 + 8);\n        *(int *)(iVar2 + 0xc) = iVar11;\n        *(int *)(iVar11 + 8) = iVar2;\n        uVar8 = uVar4 + uVar8;\n        goto LAB_0008268c;\n      }\n    }\n    else {\n      uVar4 = 0;\n      iVar2 = 0;\n    }\n    if (-1 < (int)(uVar6 << 0x1f)) {\n      piVar10 = (int *)((int)piVar3 - param_2[-2]);\n      uVar6 = (piVar10[1] & 0xfffffffcU) + uVar8;\n      if (iVar2 != 0) {\n        if (iVar2 == iVar11) {\n          if ((int)(uVar9 + 0x10) <= (int)(uVar4 + uVar6)) {\n            piVar3 = piVar10 + 2;\n            iVar2 = *piVar3;\n            iVar11 = piVar10[3];\n            sVar5 = uVar8 - 4;\n            *(int *)(iVar2 + 0xc) = iVar11;\n            *(int *)(iVar11 + 8) = iVar2;\n            if (sVar5 < 0x25) {\n              piVar7 = piVar3;\n              if (0x13 < sVar5) {\n                piVar10[2] = *param_2;\n                piVar10[3] = param_2[1];\n                if (sVar5 < 0x1c) {\n                  param_2 = param_2 + 2;\n                  piVar7 = piVar10 + 4;\n                }\n                else {\n                  piVar10[4] = param_2[2];\n                  piVar10[5] = param_2[3];\n                  if (sVar5 == 0x24) {\n                    piVar10[6] = param_2[4];\n                    piVar7 = param_2 + 5;\n                    param_2 = param_2 + 6;\n                    piVar10[7] = *piVar7;\n                    piVar7 = piVar10 + 8;\n                  }\n                  else {\n                    param_2 = param_2 + 4;\n                    piVar7 = piVar10 + 6;\n                  }\n                }\n              }\n              *piVar7 = *param_2;\n              piVar7[1] = param_2[1];\n              piVar7[2] = param_2[2];\n            }\n            else {\n              memmove(piVar3,param_2,sVar5);\n            }\n            *(uint *)(puVar1 + 8) = (int)piVar10 + uVar9;\n            *(uint *)((int)piVar10 + uVar9 + 4) = (uVar4 + uVar6) - uVar9 | 1;\n            piVar10[1] = uVar9 | piVar10[1] & 1U;\n            __malloc_unlock(param_1);\n            return piVar3;\n          }\n        }\n        else {\n          uVar4 = uVar4 + uVar6;\n          if ((int)uVar9 <= (int)uVar4) {\n            iVar11 = *(int *)(iVar2 + 0xc);\n            iVar2 = *(int *)(iVar2 + 8);\n            *(int *)(iVar2 + 0xc) = iVar11;\n            *(int *)(iVar11 + 8) = iVar2;\n            piVar7 = piVar10 + 2;\n            iVar2 = *piVar7;\n            iVar11 = piVar10[3];\n            sVar5 = uVar8 - 4;\n            *(int *)(iVar2 + 0xc) = iVar11;\n            *(int *)(iVar11 + 8) = iVar2;\n            uVar8 = uVar4;\n            if (sVar5 < 0x25) {\n              piVar3 = piVar7;\n              if (0x13 < sVar5) {\n                piVar10[2] = *param_2;\n                piVar10[3] = param_2[1];\n                if (sVar5 < 0x1c) {\n                  param_2 = param_2 + 2;\n                  piVar3 = piVar10 + 4;\n                }\n                else {\n                  piVar10[4] = param_2[2];\n                  piVar10[5] = param_2[3];\n                  if (sVar5 == 0x24) {\n                    piVar10[6] = param_2[4];\n                    piVar3 = param_2 + 5;\n                    param_2 = param_2 + 6;\n                    piVar10[7] = *piVar3;\n                    piVar3 = piVar10 + 8;\n                  }\n                  else {\n                    param_2 = param_2 + 4;\n                    piVar3 = piVar10 + 6;\n                  }\n                }\n              }\n              *piVar3 = *param_2;\n              piVar3[1] = param_2[1];\n              piVar3[2] = param_2[2];\n              uVar6 = piVar10[1];\n              piVar3 = piVar10;\n              param_2 = piVar7;\n            }\n            else {\n              memmove(piVar7,param_2,sVar5);\n              uVar6 = piVar10[1];\n              piVar3 = piVar10;\n              param_2 = piVar7;\n            }\n            goto LAB_0008268c;\n          }\n        }\n      }\n      if ((int)uVar9 <= (int)uVar6) {\n        piVar7 = piVar10 + 2;\n        iVar2 = *piVar7;\n        iVar11 = piVar10[3];\n        sVar5 = uVar8 - 4;\n        *(int *)(iVar2 + 0xc) = iVar11;\n        *(int *)(iVar11 + 8) = iVar2;\n        uVar8 = uVar6;\n        if (sVar5 < 0x25) {\n          piVar3 = piVar7;\n          if (0x13 < sVar5) {\n            piVar10[2] = *param_2;\n            piVar10[3] = param_2[1];\n            if (sVar5 < 0x1c) {\n              param_2 = param_2 + 2;\n              piVar3 = piVar10 + 4;\n            }\n            else {\n              piVar10[4] = param_2[2];\n              piVar10[5] = param_2[3];\n              if (sVar5 == 0x24) {\n                piVar10[6] = param_2[4];\n                piVar3 = param_2 + 5;\n                param_2 = param_2 + 6;\n                piVar10[7] = *piVar3;\n                piVar3 = piVar10 + 8;\n              }\n              else {\n                param_2 = param_2 + 4;\n                piVar3 = piVar10 + 6;\n              }\n            }\n          }\n          *piVar3 = *param_2;\n          piVar3[1] = param_2[1];\n          piVar3[2] = param_2[2];\n          uVar6 = piVar10[1];\n          piVar3 = piVar10;\n          param_2 = piVar7;\n        }\n        else {\n          memmove(piVar7,param_2,sVar5);\n          uVar6 = piVar10[1];\n          piVar3 = piVar10;\n          param_2 = piVar7;\n        }\n        goto LAB_0008268c;\n      }\n    }\n    piVar10 = (int *)_malloc_r(param_1,param_3);\n    if (piVar10 == (int *)0x0) goto LAB_000826a4;\n    uVar6 = param_2[-1];\n    if (piVar10 + -2 != (int *)((uVar6 & 0xfffffffe) + (int)piVar3)) {\n      sVar5 = uVar8 - 4;\n      if (sVar5 < 0x25) {\n        piVar3 = param_2;\n        piVar7 = piVar10;\n        if (0x13 < sVar5) {\n          *piVar10 = *param_2;\n          piVar10[1] = param_2[1];\n          if (sVar5 < 0x1c) {\n            piVar3 = param_2 + 2;\n            piVar7 = piVar10 + 2;\n          }\n          else {\n            piVar10[2] = param_2[2];\n            piVar10[3] = param_2[3];\n            if (sVar5 == 0x24) {\n              piVar10[4] = param_2[4];\n              piVar10[5] = param_2[5];\n              piVar3 = param_2 + 6;\n              piVar7 = piVar10 + 6;\n            }\n            else {\n              piVar3 = param_2 + 4;\n              piVar7 = piVar10 + 4;\n            }\n          }\n        }\n        *piVar7 = *piVar3;\n        piVar7[1] = piVar3[1];\n        piVar7[2] = piVar3[2];\n      }\n      else {\n        memmove(piVar10,param_2,sVar5);\n      }\n      _free_r(param_1,param_2);\n      goto LAB_000826a4;\n    }\n    uVar8 = uVar8 + (piVar10[-1] & 0xfffffffcU);\n  }\nLAB_0008268c:\n  uVar4 = uVar8 - uVar9;\n  piVar10 = param_2;\n  if (uVar4 < 0x10) {\n    piVar3[1] = uVar6 & 1 | uVar8;\n    *(uint *)((int)piVar3 + uVar8 + 4) = *(uint *)((int)piVar3 + uVar8 + 4) | 1;\n  }\n  else {\n    piVar3[1] = uVar6 & 1 | uVar9;\n    *(uint *)((int)piVar3 + uVar9 + 4) = uVar4 | 1;\n    *(uint *)((int)piVar3 + uVar4 + uVar9 + 4) = *(uint *)((int)piVar3 + uVar4 + uVar9 + 4) | 1;\n    _free_r(param_1,(int)piVar3 + uVar9 + 8);\n  }\nLAB_000826a4:\n  __malloc_unlock(param_1);\n  return piVar10;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "memmove", 
                "_free_r", 
                "_malloc_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000825b0", 
            "calling": [
                "realloc", 
                "__sfvwrite_r"
            ], 
            "imported": false, 
            "current_name": "_realloc_r"
        }, 
        "__addsf3": {
            "renaming": {}, 
            "code": "\nuint __addsf3(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_0008186a:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_0008186a;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081734", 
            "calling": [
                "loop", 
                "__aeabi_frsub"
            ], 
            "imported": false, 
            "current_name": "__addsf3"
        }, 
        "invalidate": {
            "renaming": {}, 
            "code": "\nvoid __thiscall String::invalidate(String *this)\n\n{\n  if (this->buffer != (char *)0x0) {\n    free(this->buffer);\n  }\n  this->buffer = (char *)0x0;\n  this->len = 0;\n  this->capacity = 0;\n  return;\n}\n\n", 
            "called": [
                "free"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008160c", 
            "calling": [
                "copy"
            ], 
            "imported": false, 
            "current_name": "invalidate"
        }, 
        "sendTxBuffer": {
            "renaming": {}, 
            "code": "\nvoid __thiscall Modbus::sendTxBuffer(Modbus *this)\n\n{\n  byte u8length;\n  uint16_t uVar1;\n  uint32_t uVar2;\n  int iVar3;\n  \n  u8length = this->u8BufferSize;\n  uVar1 = calcCRC(this,u8length);\n  this->au8Buffer[u8length] = (uchar)((uint)uVar1 >> 8);\n  this->au8Buffer[u8length + 1 & 0xff] = (uchar)uVar1;\n  this->u8BufferSize = u8length + 2;\n  if (1 < this->u8txenpin) {\n    digitalWrite((uint)this->u8txenpin,1);\n  }\n  if (this->u8serno < 4) {\n    (**(code **)(*(int *)this->port + 4))(this->port,this->au8Buffer,this->u8BufferSize);\n  }\n  if (1 < this->u8txenpin) {\n    digitalWrite((uint)this->u8txenpin,0);\n  }\n  if (this->u8serno < 4) {\n    do {\n      iVar3 = (**(code **)(*(int *)this->port + 0xc))();\n    } while (-1 < iVar3);\n  }\n  this->u8BufferSize = '\\0';\n  uVar2 = millis();\n  this->u32timeOut = uVar2 + this->u16timeOut;\n  this->u16OutCnt = this->u16OutCnt + 1;\n  return;\n}\n\n", 
            "called": [
                "calcCRC", 
                "digitalWrite", 
                "millis"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080258", 
            "calling": [
                "query"
            ], 
            "imported": false, 
            "current_name": "sendTxBuffer"
        }, 
        "__aeabi_atexit": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_atexit(undefined4 param_1,undefined4 param_2)\n\n{\n  __cxa_atexit(param_2,param_1);\n  return;\n}\n\n", 
            "called": [
                "__cxa_atexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081d5c", 
            "calling": [
                "_GLOBAL__sub_I__ZN6ModbusC2Ev"
            ], 
            "imported": false, 
            "current_name": "__aeabi_atexit"
        }, 
        "adc_disable_all_channel": {
            "renaming": {}, 
            "code": "\nvoid adc_disable_all_channel(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x14) = 0xffff;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081066", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "adc_disable_all_channel"
        }, 
        "__locale_mb_cur_max": {
            "renaming": {}, 
            "code": "\nundefined4 __locale_mb_cur_max(void)\n\n{\n  return *(undefined4 *)PTR___mb_cur_max_000842a0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084298", 
            "calling": [
                "_fputwc_r"
            ], 
            "imported": false, 
            "current_name": "__locale_mb_cur_max"
        }, 
        "__swbuf_r": {
            "renaming": {}, 
            "code": "\nuint __swbuf_r(int param_1,uint param_2,undefined4 *param_3,undefined4 param_4)\n\n{\n  ushort uVar1;\n  uint uVar2;\n  undefined *puVar3;\n  int iVar4;\n  \n  if ((param_1 != 0) && (*(int *)(param_1 + 0x38) == 0)) {\n    __sinit();\n  }\n  uVar1 = *(ushort *)(param_3 + 3);\n  uVar2 = (uint)uVar1;\n  param_3[2] = param_3[6];\n  if ((-1 < (int)(uVar2 << 0x1c)) || (iVar4 = param_3[4], iVar4 == 0)) {\n    iVar4 = __swsetup_r(param_1,param_3,uVar1,uVar2,param_4);\n    if (iVar4 != 0) {\n      return 0xffffffff;\n    }\n    uVar1 = *(ushort *)(param_3 + 3);\n    iVar4 = param_3[4];\n    uVar2 = (uint)uVar1;\n  }\n  param_2 = param_2 & 0xff;\n  if ((int)(uVar2 << 0x12) < 0) {\n    puVar3 = (undefined *)*param_3;\n    iVar4 = (int)puVar3 - iVar4;\n    if (iVar4 < (int)param_3[5]) {\nLAB_000844f6:\n      iVar4 = iVar4 + 1;\n      goto LAB_000844f8;\n    }\n  }\n  else {\n    param_3[0x19] = param_3[0x19] & 0xffffdfff;\n    puVar3 = (undefined *)*param_3;\n    *(ushort *)(param_3 + 3) = uVar1 | 0x2000;\n    iVar4 = (int)puVar3 - iVar4;\n    if (iVar4 < (int)param_3[5]) goto LAB_000844f6;\n  }\n  iVar4 = _fflush_r(param_1,param_3);\n  if (iVar4 != 0) {\n    return 0xffffffff;\n  }\n  puVar3 = (undefined *)*param_3;\n  iVar4 = 1;\nLAB_000844f8:\n  param_3[2] = param_3[2] + -1;\n  *param_3 = puVar3 + 1;\n  *puVar3 = (char)param_2;\n  if (((param_3[5] == iVar4) ||\n      (((int)((uint)*(ushort *)(param_3 + 3) << 0x1f) < 0 && (param_2 == 10)))) &&\n     (iVar4 = _fflush_r(param_1,param_3), iVar4 != 0)) {\n    return 0xffffffff;\n  }\n  return param_2;\n}\n\n", 
            "called": [
                "__sinit", 
                "__swsetup_r", 
                "_fflush_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000844c4", 
            "calling": [
                "_fputwc_r"
            ], 
            "imported": false, 
            "current_name": "__swbuf_r"
        }, 
        "_kill_r": {
            "renaming": {}, 
            "code": "\nvoid _kill_r(int *param_1,int param_2,int param_3)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR_errno_0008443c;\n  *(undefined4 *)PTR_errno_0008443c = 0;\n  _kill(param_2,param_3);\n  if ((param_2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_kill"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00084418", 
            "calling": [
                "kill"
            ], 
            "imported": false, 
            "current_name": "_kill_r"
        }, 
        "__floatsisf": {
            "renaming": {}, 
            "code": "\nuint __floatsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  \n  uVar3 = param_1 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    param_1 = -param_1;\n  }\n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar4 = ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 < iVar1) {\n    uVar5 = 0 << (uVar2 & 0xff);\n    uVar3 = iVar4 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar5);\n    if (uVar5 == 0x80000000) {\n      uVar3 = uVar3 & 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar3 = iVar4 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar2 >> 0x1f));\n  if ((uVar2 & 0x7fffffff) == 0) {\n    uVar3 = uVar3 & ~(uVar2 >> 0x1f);\n  }\n  return uVar3;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008189c", 
            "calling": [
                "loop"
            ], 
            "imported": false, 
            "current_name": "__floatsisf"
        }, 
        "UOTGHS_Handler": {
            "renaming": {}, 
            "code": "\nvoid UOTGHS_Handler(void)\n\n{\n  if (*(code **)PTR_gpf_isr_00081080 != (code *)0x0) {\n    (**(code **)PTR_gpf_isr_00081080)();\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081074", 
            "calling": [], 
            "imported": false, 
            "current_name": "UOTGHS_Handler"
        }, 
        "__do_global_dtors_aux": {
            "renaming": {}, 
            "code": "\nundefined * __do_global_dtors_aux(undefined *param_1)\n\n{\n  if (*PTR_completed_7857_0008010c == '\\0') {\n    if (DAT_00080110 != 0) {\n      param_1 = PTR__etext_00080114;\n    }\n    *PTR_completed_7857_0008010c = 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000800f4", 
            "calling": [
                "__libc_fini_array"
            ], 
            "imported": false, 
            "current_name": "__do_global_dtors_aux"
        }, 
        "_fstat_r": {
            "renaming": {}, 
            "code": "\nvoid _fstat_r(int *param_1,int param_2,stat *param_3)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  \n  puVar1 = PTR_errno_000846d8;\n  *(undefined4 *)PTR_errno_000846d8 = 0;\n  iVar2 = _fstat(param_2,param_3);\n  if ((iVar2 == -1) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_fstat"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000846b4", 
            "calling": [
                "__smakebuf_r"
            ], 
            "imported": false, 
            "current_name": "_fstat_r"
        }, 
        "_fini": {
            "renaming": {}, 
            "code": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00085874", 
            "calling": [
                "__libc_fini_array"
            ], 
            "imported": false, 
            "current_name": "_fini"
        }, 
        "digitalWrite": {
            "renaming": {}, 
            "code": "\nvoid digitalWrite(uint32_t ulPin,uint32_t ulVal)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  uint32_t uVar6;\n  \n  puVar2 = PTR_g_pinStatus_00081384;\n  puVar1 = PTR_g_APinDescription_00081380;\n  if (PTR_g_APinDescription_00081380[ulPin * 0x1c + 0xc] != '\\0') {\n    uVar6 = ulVal;\n    if ((PTR_g_pinStatus_00081384[ulPin] & 0xf) == 5) {\n      pinMode(ulPin,1);\n    }\n    puVar2[ulPin] = puVar2[ulPin] & 0xf | (byte)(ulVal << 4);\n    uVar5 = *(undefined4 *)(puVar1 + ulPin * 0x1c);\n    uVar4 = *(undefined4 *)(puVar1 + ulPin * 0x1c + 4);\n    iVar3 = PIO_GetOutputDataStatus(uVar5,uVar4);\n    if (iVar3 == 0) {\n      PIO_PullUp(uVar5,uVar4,ulVal);\n      return;\n    }\n    PIO_SetOutput(uVar5,uVar4,ulVal,0,1,uVar6);\n  }\n  return;\n}\n\n", 
            "called": [
                "PIO_SetOutput", 
                "PIO_PullUp", 
                "PIO_GetOutputDataStatus", 
                "pinMode"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081318", 
            "calling": [
                "begin", 
                "sendTxBuffer", 
                "init", 
                "setup", 
                "getRxBuffer"
            ], 
            "imported": false, 
            "current_name": "digitalWrite"
        }, 
        "__malloc_unlock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_unlock(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0008259c", 
            "calling": [
                "_malloc_trim_r", 
                "_free_r", 
                "_realloc_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_unlock"
        }, 
        "setup": {
            "renaming": {}, 
            "code": "\nvoid setup(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *this;\n  uint32_t uVar4;\n  \n  pinMode(1,0);\n  pinMode(6,1);\n  pinMode(0,1);\n  pinMode(1,1);\n  digitalWrite(0,0);\n  digitalWrite(1,0);\n  puVar2 = PTR_au16data_000805ac;\n  puVar1 = PTR_telegram_000805a8;\n  *(undefined2 *)(PTR_telegram_000805a8 + 0xe) = 0x13;\n  *(undefined2 *)(puVar1 + 0x10) = 10;\n  *(undefined **)(puVar1 + 0x14) = puVar2 + 0x26;\n  puVar1[1] = 3;\n  puVar1[0x19] = 3;\n  *(undefined2 *)(puVar1 + 0x1a) = 0x14;\n  *(undefined2 *)(puVar1 + 0x28) = 3;\n  *(undefined2 *)(puVar1 + 4) = 0x10;\n  *(undefined **)(puVar1 + 8) = puVar2;\n  puVar1[0xd] = 0x10;\n  *(undefined2 *)(puVar1 + 0x1c) = 0xc;\n  puVar1[0x25] = 0x10;\n  *(undefined2 *)(puVar1 + 0x34) = 8;\n  puVar3 = PTR_data8024_000805b0;\n  *(undefined2 *)(puVar1 + 0x26) = 0x1c;\n  *(undefined **)(puVar1 + 0x2c) = puVar2 + 0x38;\n  this = PTR_master_000805b4;\n  puVar1[0x30] = 2;\n  puVar1[0x31] = 2;\n  *(undefined **)(puVar1 + 0x38) = puVar3;\n  puVar1[0x3c] = 2;\n  *puVar1 = 1;\n  puVar1[0xc] = 1;\n  puVar1[0x18] = 1;\n  puVar1[0x24] = 1;\n  *(undefined2 *)(puVar1 + 0x3e) = 1;\n  *(undefined2 *)(puVar1 + 0x40) = 1;\n  *(undefined2 *)(puVar1 + 2) = 0;\n  *(undefined **)(puVar1 + 0x20) = puVar2 + 0x28;\n  *(undefined2 *)(puVar1 + 0x32) = 0;\n  puVar1[0x3d] = 5;\n  *(undefined **)(puVar1 + 0x44) = puVar3 + 2;\n  Modbus::begin((Modbus *)this,0x4b00);\n  *(undefined2 *)(this + 0x56) = 2000;\n  uVar4 = millis();\n  *(uint32_t *)PTR_u32wait_000805b8 = uVar4;\n  uVar4 = millis();\n  *(uint32_t *)PTR_tiempopid1_000805bc = uVar4 + 1000;\n  uVar4 = millis();\n  *(uint32_t *)PTR_dutyalto1_000805c0 = uVar4 + 1000;\n  uVar4 = millis();\n  *(uint32_t *)PTR_dutybajo1_000805c4 = uVar4 + 1000;\n  uVar4 = millis();\n  *(uint32_t *)PTR_reloj_000805c8 = uVar4 + 1000;\n  *PTR_u8state_000805cc = 0;\n  startForkserver(0);\n  return;\n}\n\n", 
            "called": [
                "begin", 
                "digitalWrite", 
                "pinMode", 
                "millis", 
                "startForkserver"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x000804a8", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "setup"
        }, 
        "serialEventRun": {
            "renaming": {}, 
            "code": "\nvoid serialEventRun(void)\n\n{\n  int iVar1;\n  \n  iVar1 = UARTClass::available((UARTClass *)PTR_Serial_00080d14);\n  if (iVar1 != 0) {\n    serialEvent();\n  }\n  iVar1 = UARTClass::available((UARTClass *)PTR_Serial1_00080d18);\n  if (iVar1 != 0) {\n    serialEvent1();\n  }\n  iVar1 = UARTClass::available((UARTClass *)PTR_Serial2_00080d1c);\n  if (iVar1 != 0) {\n    serialEvent2();\n  }\n  iVar1 = UARTClass::available((UARTClass *)PTR_Serial3_00080d20);\n  if (iVar1 != 0) {\n    serialEvent3();\n  }\n  return;\n}\n\n", 
            "called": [
                "available", 
                "serialEvent1", 
                "serialEvent3", 
                "serialEvent", 
                "serialEvent2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00080ce0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "serialEventRun"
        }, 
        "_fflush_r": {
            "renaming": {}, 
            "code": "\nvoid _fflush_r(int param_1,int param_2)\n\n{\n  if ((param_1 != 0) && (*(int *)(param_1 + 0x38) == 0)) {\n    __sinit();\n  }\n  if (*(short *)(param_2 + 0xc) == 0) {\n    return;\n  }\n  __sflush_r(param_1);\n  return;\n}\n\n", 
            "called": [
                "__sflush_r", 
                "__sinit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083adc", 
            "calling": [
                "__swbuf_r", 
                "__sfvwrite_r", 
                "_fclose_r", 
                "__sbprintf"
            ], 
            "imported": false, 
            "current_name": "_fflush_r"
        }, 
        "register_fini": {
            "renaming": {}, 
            "code": "\nvoid register_fini(void)\n\n{\n  if (DAT_00083980 != 0) {\n    atexit(DAT_00083984);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "atexit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00083974", 
            "calling": [
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "register_fini"
        }, 
        "adc_configure_timing": {
            "renaming": {}, 
            "code": "\nvoid adc_configure_timing(int param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  *(uint *)(param_1 + 4) =\n       param_3 | *(uint *)(param_1 + 4) | (param_2 & 0xf) << 0x18 | (param_4 & 3) << 0x1c;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x00081042", 
            "calling": [
                "init"
            ], 
            "imported": false, 
            "current_name": "adc_configure_timing"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}